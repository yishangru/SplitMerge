Function CFG Generate Pass: 
dm_sample_cond_loop
	while.cond --- [   %loop.0 = phi i32 [ 0, %entry ], [ %loop.1, %cleanup.cont ] ]

		Original CFG
			if.else-0 -> if.end-0
			if.end4-0 -> cleanup-0
			cleanup.cont-0 -> while.cond-0
			cleanup-0 -> while.end-0
			cleanup-0 -> unreachable-0
			cleanup-0 -> cleanup.cont-0
			while.cond-0 -> while.body-0
			entry-0 -> while.cond-0
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.then-0 -> if.end-0
			if.then3-0 -> cleanup-0
			if.end-0 -> if.end4-0
			if.end-0 -> if.then3-0

		Split CFG
			if.else-1 -> if.end-1
			cleanup.cont-1 -> while.cond-1
			while.cond-1 -> while.body-1
			if.end4-1 -> cleanup-1
			entry-0 -> while.cond-1
			if.then3-1 -> cleanup-1
			while.body-1 -> if.else-1
			while.body-1 -> if.then-1
			if.end-1 -> if.end4-1
			if.end-1 -> if.then3-1
			cleanup-1 -> while.end-0
			cleanup-1 -> unreachable-0
			cleanup-1 -> cleanup.cont-1
			if.then-1 -> if.end-1

	while.cond --- [   %a.0 = phi i32 [ 0, %entry ], [ %a.1, %cleanup.cont ] ]

		Original CFG
			if.else-0 -> if.end-0
			if.end4-0 -> cleanup-0
			cleanup.cont-0 -> while.cond-0
			cleanup-0 -> while.end-0
			cleanup-0 -> unreachable-0
			cleanup-0 -> cleanup.cont-0
			while.cond-0 -> while.body-0
			entry-0 -> while.cond-0
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.then-0 -> if.end-0
			if.then3-0 -> cleanup-0
			if.end-0 -> if.end4-0
			if.end-0 -> if.then3-0

		Split CFG
			if.else-1 -> if.end-1
			cleanup.cont-1 -> while.cond-1
			while.cond-1 -> while.body-1
			if.end4-1 -> cleanup-1
			entry-0 -> while.cond-1
			if.then3-1 -> cleanup-1
			while.body-1 -> if.else-1
			while.body-1 -> if.then-1
			if.end-1 -> if.end4-1
			if.end-1 -> if.then3-1
			cleanup-1 -> while.end-1
			cleanup-1 -> unreachable-1
			cleanup-1 -> cleanup.cont-1
			if.then-1 -> if.end-1

	if.end --- [   %a.1 = phi i32 [ 1, %if.then ], [ 2, %if.else ] ]

		Original CFG
			if.else-0 -> if.end-0
			if.end4-0 -> cleanup-0
			cleanup.cont-0 -> while.cond-0
			cleanup-0 -> while.end-0
			cleanup-0 -> unreachable-0
			cleanup-0 -> cleanup.cont-0
			while.cond-0 -> while.body-0
			entry-0 -> while.cond-0
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.then-0 -> if.end-0
			if.then3-0 -> cleanup-0
			if.end-0 -> if.end4-0
			if.end-0 -> if.then3-0

		Split CFG
			if.end4-2 -> cleanup-2
			while.cond-2 -> while.body-0
			cleanup.cont-2 -> while.cond-2
			if.end-1 -> if.end4-1
			if.end-1 -> if.then3-1
			if.then3-2 -> cleanup-2
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.then3-1 -> cleanup-1
			entry-0 -> while.cond-0
			while.cond-0 -> while.body-0
			if.end4-1 -> cleanup-1
			cleanup-1 -> while.end-1
			cleanup-1 -> unreachable-0
			cleanup-1 -> cleanup.cont-1
			cleanup.cont-1 -> while.cond-1
			while.cond-1 -> while.body-0
			if.then-0 -> if.end-1
			if.else-0 -> if.end-2
			if.end-2 -> if.end4-2
			if.end-2 -> if.then3-2
			cleanup-2 -> unreachable-0
			cleanup-2 -> while.end-2
			cleanup-2 -> cleanup.cont-2

	cleanup --- [   %cleanup.dest.slot.0 = phi i32 [ 3, %if.then3 ], [ 0, %if.end4 ] ]

		Original CFG
			if.else-0 -> if.end-0
			if.end4-0 -> cleanup-0
			cleanup.cont-0 -> while.cond-0
			cleanup-0 -> while.end-0
			cleanup-0 -> unreachable-0
			cleanup-0 -> cleanup.cont-0
			while.cond-0 -> while.body-0
			entry-0 -> while.cond-0
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.then-0 -> if.end-0
			if.then3-0 -> cleanup-0
			if.end-0 -> if.end4-0
			if.end-0 -> if.then3-0

		Split CFG
			if.else-2 -> if.end-2
			if.end4-2 -> cleanup-2
			if.then3-2 -> cleanup-1
			if.end-2 -> if.end4-2
			if.end-2 -> if.then3-2
			if.then-2 -> if.end-2
			while.body-2 -> if.else-2
			while.body-2 -> if.then-2
			while.cond-2 -> while.body-2
			if.end-0 -> if.end4-0
			if.end-0 -> if.then3-0
			if.then3-0 -> cleanup-1
			while.cond-1 -> while.body-1
			if.then-0 -> if.end-0
			while.body-0 -> if.else-0
			while.body-0 -> if.then-0
			if.else-1 -> if.end-1
			entry-0 -> while.cond-0
			if.end4-0 -> cleanup-2
			while.cond-0 -> while.body-0
			if.end4-1 -> cleanup-2
			cleanup-1 -> while.end-1
			cleanup-1 -> unreachable-1
			cleanup-1 -> cleanup.cont-1
			if.else-0 -> if.end-0
			if.then-1 -> if.end-1
			if.then3-1 -> cleanup-1
			cleanup.cont-1 -> while.cond-1
			cleanup.cont-2 -> while.cond-2
			while.body-1 -> if.else-1
			while.body-1 -> if.then-1
			if.end-1 -> if.end4-1
			if.end-1 -> if.then3-1
			cleanup-2 -> unreachable-2
			cleanup-2 -> while.end-2
			cleanup-2 -> cleanup.cont-2

llvm.lifetime.start.p0i8
printf
llvm.lifetime.end.p0i8
