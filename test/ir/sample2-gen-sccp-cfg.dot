digraph "CFG for 'dm_sample_cond_loop' function" {
	label="CFG for 'dm_sample_cond_loop' function";

	Node0x55915d874aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{entry.dup0:\l  br label %while.cond.dup1\l}"];
	Node0x55915d874aa0 -> Node0x55915d874af0;
	Node0x55915d874af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.cond.dup1:                                  \l  br label %while.body.dup1\l}"];
	Node0x55915d874af0 -> Node0x55915d874c10;
	Node0x55915d874c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.body.dup1:                                  \l  %cmp.dup1 = icmp sgt i32 %condition, 10\l  br i1 %cmp.dup1, label %if.then.dup1, label %if.else.dup1\l|{<s0>T|<s1>F}}"];
	Node0x55915d874c10:s0 -> Node0x55915d8753d0;
	Node0x55915d874c10:s1 -> Node0x55915d875450;
	Node0x55915d875450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else.dup1:                                     \l  br label %if.end.dup0\l}"];
	Node0x55915d875450 -> Node0x55915d875530;
	Node0x55915d875530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end.dup0:                                      \l  %loop.1.dup0 = phi i32 [ %add1.dup0, %if.else.dup0 ], [ 2, %if.else.dup1 ],\l... [ 1, %if.then.dup1 ], [ %add.dup0, %if.then.dup0 ]\l  %a.1.dup0 = phi i32 [ 2, %if.else.dup0 ], [ 2, %if.else.dup1 ], [ 1,\l... %if.then.dup1 ], [ 1, %if.then.dup0 ]\l  %add1.dup09 = phi i32 [ undef, %if.then.dup1 ], [ %add1.dup0, %if.else.dup0\l... ], [ 2, %if.else.dup1 ], [ %add1.dup055, %if.then.dup0 ]\l  %add.dup010 = phi i32 [ 1, %if.then.dup1 ], [ %add.dup060, %if.else.dup0 ],\l... [ undef, %if.else.dup1 ], [ %add.dup0, %if.then.dup0 ]\l  %loop.0.dup031 = phi i32 [ 0, %if.then.dup1 ], [ %loop.0.dup056,\l... %if.else.dup0 ], [ 0, %if.else.dup1 ], [ %loop.0.dup051, %if.then.dup0 ]\l  %a.0.dup032 = phi i32 [ 0, %if.then.dup1 ], [ %a.0.dup058, %if.else.dup0 ],\l... [ 0, %if.else.dup1 ], [ %a.0.dup053, %if.then.dup0 ]\l  %call.dup0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x\l... i8], [9 x i8]* @.str, i64 0, i64 0), i32 %a.0.dup032)\l  %cmp2.dup0 = icmp sgt i32 %loop.1.dup0, 10\l  br i1 %cmp2.dup0, label %if.then3.dup0, label %if.end4.dup0\l|{<s0>T|<s1>F}}"];
	Node0x55915d875530:s0 -> Node0x55915d88f0d0;
	Node0x55915d875530:s1 -> Node0x55915d88f1b0;
	Node0x55915d8753d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.dup1:                                     \l  br label %if.end.dup0\l}"];
	Node0x55915d8753d0 -> Node0x55915d875530;
	Node0x55915d88d680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else.dup0:                                     \l  %loop.0.dup056 = phi i32 [ %loop.0.dup046, %while.body.dup0 ]\l  %a.1.dup057 = phi i32 [ %a.1.dup047, %while.body.dup0 ]\l  %a.0.dup058 = phi i32 [ %a.0.dup045, %while.body.dup0 ]\l  %loop.1.dup059 = phi i32 [ %loop.1.dup048, %while.body.dup0 ]\l  %add.dup060 = phi i32 [ %add.dup049, %while.body.dup0 ]\l  %add1.dup0 = add nsw i32 %loop.0.dup056, 2\l  br label %if.end.dup0\l}"];
	Node0x55915d88d680 -> Node0x55915d875530;
	Node0x55915d88f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.body.dup0:                                  \l  %a.0.dup045 = phi i32 [ %a.0.dup0, %while.cond.dup0 ]\l  %loop.0.dup046 = phi i32 [ %loop.0.dup0, %while.cond.dup0 ]\l  %a.1.dup047 = phi i32 [ %a.1.dup019, %while.cond.dup0 ]\l  %loop.1.dup048 = phi i32 [ %loop.1.dup020, %while.cond.dup0 ]\l  %add.dup049 = phi i32 [ %add.dup022, %while.cond.dup0 ]\l  %add1.dup050 = phi i32 [ %add1.dup021, %while.cond.dup0 ]\l  %cmp.dup0 = icmp sgt i32 %condition, 10\l  br i1 %cmp.dup0, label %if.then.dup0, label %if.else.dup0\l|{<s0>T|<s1>F}}"];
	Node0x55915d88f410:s0 -> Node0x55915d88d880;
	Node0x55915d88f410:s1 -> Node0x55915d88d680;
	Node0x55915d88fd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.cond.dup0:                                  \l  %loop.0.dup0 = phi i32 [ %loop.1.dup07, %cleanup.cont.dup0 ]\l  %a.0.dup0 = phi i32 [ %a.1.dup08, %cleanup.cont.dup0 ]\l  %a.1.dup019 = phi i32 [ %a.1.dup08, %cleanup.cont.dup0 ]\l  %loop.1.dup020 = phi i32 [ %loop.1.dup07, %cleanup.cont.dup0 ]\l  %add1.dup021 = phi i32 [ %add1.dup016, %cleanup.cont.dup0 ]\l  %add.dup022 = phi i32 [ %add.dup015, %cleanup.cont.dup0 ]\l  br label %while.body.dup0\l}"];
	Node0x55915d88fd70 -> Node0x55915d88f410;
	Node0x55915d890c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{cleanup.cont.dup0:                                \l  %loop.1.dup07 = phi i32 [ %loop.1.dup05, %cleanup.dup0 ]\l  %a.1.dup08 = phi i32 [ %a.1.dup06, %cleanup.dup0 ]\l  %add.dup015 = phi i32 [ %add.dup014, %cleanup.dup0 ]\l  %add1.dup016 = phi i32 [ %add1.dup013, %cleanup.dup0 ]\l  %loop.0.dup037 = phi i32 [ %loop.0.dup035, %cleanup.dup0 ]\l  %a.0.dup038 = phi i32 [ %a.0.dup036, %cleanup.dup0 ]\l  br label %while.cond.dup0\l}"];
	Node0x55915d890c20 -> Node0x55915d88fd70;
	Node0x55915d891070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup.dup0:                                     \l  %cleanup.dest.slot.0.dup0 = phi i32 [ 0, %if.end4.dup0 ], [ 3,\l... %if.then3.dup0 ]\l  %loop.1.dup05 = phi i32 [ %loop.1.dup01, %if.then3.dup0 ], [ %loop.1.dup03,\l... %if.end4.dup0 ]\l  %a.1.dup06 = phi i32 [ %a.1.dup02, %if.then3.dup0 ], [ %a.1.dup04,\l... %if.end4.dup0 ]\l  %add1.dup013 = phi i32 [ %add1.dup012, %if.then3.dup0 ], [ %add1.dup018,\l... %if.end4.dup0 ]\l  %add.dup014 = phi i32 [ %add.dup011, %if.then3.dup0 ], [ %add.dup017,\l... %if.end4.dup0 ]\l  %loop.0.dup035 = phi i32 [ %loop.0.dup033, %if.then3.dup0 ], [\l... %loop.0.dup039, %if.end4.dup0 ]\l  %a.0.dup036 = phi i32 [ %a.0.dup034, %if.then3.dup0 ], [ %a.0.dup040,\l... %if.end4.dup0 ]\l  switch i32 %cleanup.dest.slot.0.dup0, label %unreachable.dup0 [\l    i32 0, label %cleanup.cont.dup0\l    i32 3, label %while.end.dup0\l  ]\l|{<s0>def|<s1>0|<s2>3}}"];
	Node0x55915d891070:s0 -> Node0x55915d8926a0;
	Node0x55915d891070:s1 -> Node0x55915d890c20;
	Node0x55915d891070:s2 -> Node0x55915d892720;
	Node0x55915d88f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.then3.dup0:                                    \l  %loop.1.dup01 = phi i32 [ %loop.1.dup0, %if.end.dup0 ]\l  %a.1.dup02 = phi i32 [ %a.1.dup0, %if.end.dup0 ]\l  %add.dup011 = phi i32 [ %add.dup010, %if.end.dup0 ]\l  %add1.dup012 = phi i32 [ %add1.dup09, %if.end.dup0 ]\l  %loop.0.dup033 = phi i32 [ %loop.0.dup031, %if.end.dup0 ]\l  %a.0.dup034 = phi i32 [ %a.0.dup032, %if.end.dup0 ]\l  br label %cleanup.dup0\l}"];
	Node0x55915d88f0d0 -> Node0x55915d891070;
	Node0x55915d88f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end4.dup0:                                     \l  %loop.1.dup03 = phi i32 [ %loop.1.dup0, %if.end.dup0 ]\l  %a.1.dup04 = phi i32 [ %a.1.dup0, %if.end.dup0 ]\l  %add.dup017 = phi i32 [ %add.dup010, %if.end.dup0 ]\l  %add1.dup018 = phi i32 [ %add1.dup09, %if.end.dup0 ]\l  %loop.0.dup039 = phi i32 [ %loop.0.dup031, %if.end.dup0 ]\l  %a.0.dup040 = phi i32 [ %a.0.dup032, %if.end.dup0 ]\l  br label %cleanup.dup0\l}"];
	Node0x55915d88f1b0 -> Node0x55915d891070;
	Node0x55915d892720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.end.dup0:                                   \l  %a.1.dup023 = phi i32 [ %a.1.dup06, %cleanup.dup0 ]\l  %loop.1.dup024 = phi i32 [ %loop.1.dup05, %cleanup.dup0 ]\l  %add.dup025 = phi i32 [ %add.dup014, %cleanup.dup0 ]\l  %add1.dup026 = phi i32 [ %add1.dup013, %cleanup.dup0 ]\l  %loop.0.dup043 = phi i32 [ %loop.0.dup035, %cleanup.dup0 ]\l  %a.0.dup044 = phi i32 [ %a.0.dup036, %cleanup.dup0 ]\l  %add6.dup0 = add nsw i32 %a.1.dup023, %loop.1.dup024\l  %call7.dup0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %add6.dup0)\l  ret i32 %add6.dup0\l}"];
	Node0x55915d8926a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{unreachable.dup0:                                 \l  %a.1.dup061 = phi i32 [ %a.1.dup06, %cleanup.dup0 ]\l  %loop.0.dup062 = phi i32 [ %loop.0.dup035, %cleanup.dup0 ]\l  %loop.1.dup063 = phi i32 [ %loop.1.dup05, %cleanup.dup0 ]\l  %a.0.dup064 = phi i32 [ %a.0.dup036, %cleanup.dup0 ]\l  %add1.dup065 = phi i32 [ %add1.dup013, %cleanup.dup0 ]\l  %add.dup066 = phi i32 [ %add.dup014, %cleanup.dup0 ]\l  unreachable\l}"];
	Node0x55915d88d880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.dup0:                                     \l  %loop.0.dup051 = phi i32 [ %loop.0.dup046, %while.body.dup0 ]\l  %a.1.dup052 = phi i32 [ %a.1.dup047, %while.body.dup0 ]\l  %a.0.dup053 = phi i32 [ %a.0.dup045, %while.body.dup0 ]\l  %loop.1.dup054 = phi i32 [ %loop.1.dup048, %while.body.dup0 ]\l  %add1.dup055 = phi i32 [ %add1.dup050, %while.body.dup0 ]\l  %add.dup0 = add nsw i32 %loop.0.dup051, 1\l  br label %if.end.dup0\l}"];
	Node0x55915d88d880 -> Node0x55915d875530;
}
