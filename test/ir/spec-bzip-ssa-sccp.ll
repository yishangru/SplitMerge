; ModuleID = '../llvm/lib/Transforms/SplitMerge/test/ir/spec-bzip-ssa.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.spec_fd_t = type { i32, i32, i32, i8* }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.zzzz = type { i8*, %struct.zzzz* }
%struct.UInt64 = type { [8 x i8] }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { %struct._IO_FILE*, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.3 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@zSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.12, i32 0, i32 0)], align 16
@.str.9 = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str.1.10 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str.2.11 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@unzSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.14, i32 0, i32 0)], align 16
@.str.4.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5.14 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@outputHandleJustInCase = dso_local global %struct._IO_FILE* null, align 8
@smallMode = dso_local global i8 0, align 1
@keepInputFiles = dso_local global i8 0, align 1
@forceOverwrite = dso_local global i8 0, align 1
@noisy = dso_local global i8 0, align 1
@verbosity = dso_local global i32 0, align 4
@blockSize100k = dso_local global i32 0, align 4
@testFailsExist = dso_local global i8 0, align 1
@unzFailsExist = dso_local global i8 0, align 1
@numFileNames = dso_local global i32 0, align 4
@numFilesProcessed = dso_local global i32 0, align 4
@workFactor = dso_local global i32 0, align 4
@deleteOutputOnInterrupt = dso_local global i8 0, align 1
@exitValue = dso_local global i32 0, align 4
@inName = dso_local global [1034 x i8] zeroinitializer, align 16
@outName = dso_local global [1034 x i8] zeroinitializer, align 16
@progNameReally = dso_local global [1034 x i8] zeroinitializer, align 16
@progName = dso_local global i8* null, align 8
@longestFileName = dso_local global i32 0, align 4
@srcMode = dso_local global i32 0, align 4
@opMode = dso_local global i32 0, align 4
@tmpName = dso_local global [1034 x i8] zeroinitializer, align 16
@.str.6.15 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.7.16 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str.8.17 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@.str.9.18 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str.35 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"%s: There are no files matching `%s'.\0A\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.82 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str.100 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str.101 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str.102 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str.42 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str.44 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str.45 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.78 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.77 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.72 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.71 = private unnamed_addr constant [109 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@bzip.org\0A\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.67 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str.88 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.90 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.91 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.93 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.46 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str.58 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str.64 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.75 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str.51 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str.50 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [529 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2005 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str.47 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str.36 = private unnamed_addr constant [869 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [996 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.105 = private unnamed_addr constant [443 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@bzip.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 15 February 2005.\0A\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [19 x i8] c"1.0.3, 15-Feb-2005\00", align 1
@.str.2.108 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4.110 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.6.126 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7.127 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8.128 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.9.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.131, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.134, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.136, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.139, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0)], align 16
@.str.10.130 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.131 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.132 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.133 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.134 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.135 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.136 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.137 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.138 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.139 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.140 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.143 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.145 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.146 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.147 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.148 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.6.149 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.150 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.151 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.152 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.153 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@BZ2_crc32Table = dso_local global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@.str.158 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.159 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@BZ2_rNums = dso_local global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16
@dbglvl = dso_local global i32 4, align 4
@seedi = dso_local global i64 0, align 8
@spec_fd = dso_local global [3 x %struct.spec_fd_t] zeroinitializer, align 16
@.str.168 = private unnamed_addr constant [11 x i8] c"spec_init\0A\00", align 1
@.str.1.169 = private unnamed_addr constant [36 x i8] c"spec_init: Error mallocing memory!\0A\00", align 1
@.str.2.170 = private unnamed_addr constant [17 x i8] c"Creating Chunks\0A\00", align 1
@.str.3.171 = private unnamed_addr constant [19 x i8] c"Creating Chunk %d\0A\00", align 1
@.str.4.172 = private unnamed_addr constant [20 x i8] c"Filling input file\0A\00", align 1
@.str.5.173 = private unnamed_addr constant [24 x i8] c"Can't open file %s: %s\0A\00", align 1
@.str.6.174 = private unnamed_addr constant [27 x i8] c"Error reading from %s: %s\0A\00", align 1
@.str.7.175 = private unnamed_addr constant [22 x i8] c"Duplicating %d bytes\0A\00", align 1
@.str.8.176 = private unnamed_addr constant [25 x i8] c"spec_read: %d, %p, %d = \00", align 1
@.str.9.177 = private unnamed_addr constant [34 x i8] c"spec_read: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.10.178 = private unnamed_addr constant [5 x i8] c"EOF\0A\00", align 1
@.str.11.179 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.12.180 = private unnamed_addr constant [34 x i8] c"spec_fread: %p, (%d x %d) fd %d =\00", align 1
@.str.13.181 = private unnamed_addr constant [35 x i8] c"spec_fread: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.14.182 = private unnamed_addr constant [17 x i8] c"spec_getc: %d = \00", align 1
@.str.15.183 = private unnamed_addr constant [19 x i8] c"spec_ungetc: %d = \00", align 1
@.str.16.184 = private unnamed_addr constant [26 x i8] c"spec_ungetc: pos %d <= 0\0A\00", align 1
@.str.17.185 = private unnamed_addr constant [72 x i8] c"spec_ungetc: can't unget something that wasn't what was in the buffer!\0A\00", align 1
@.str.18.186 = private unnamed_addr constant [26 x i8] c"spec_write: %d, %p, %d = \00", align 1
@.str.19.187 = private unnamed_addr constant [35 x i8] c"spec_write: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.20.188 = private unnamed_addr constant [31 x i8] c"spec_fwrite: %p, %d, %d, %d = \00", align 1
@.str.21.189 = private unnamed_addr constant [36 x i8] c"spec_fwrite: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.22.190 = private unnamed_addr constant [21 x i8] c"spec_putc: %d, %d = \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_blockSort(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %ptr = alloca i32*, align 8
  %block = alloca i8*, align 8
  %ftab = alloca i32*, align 8
  %nblock = alloca i32, align 4
  %verb = alloca i32, align 4
  %wfact = alloca i32, align 4
  %quadrant = alloca i16*, align 8
  %budget = alloca i32, align 4
  %budgetInit = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %1 = load i32*, i32** %ptr1, align 8
  store i32* %1, i32** %ptr, align 8
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 9
  %3 = load i8*, i8** %block2, align 8
  store i8* %3, i8** %block, align 8
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %ftab3 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 6
  %5 = load i32*, i32** %ftab3, align 8
  store i32* %5, i32** %ftab, align 8
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock4 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 17
  %7 = load i32, i32* %nblock4, align 4
  store i32 %7, i32* %nblock, align 4
  %8 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 28
  %9 = load i32, i32* %verbosity, align 8
  store i32 %9, i32* %verb, align 4
  %10 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %workFactor = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 12
  %11 = load i32, i32* %workFactor, align 8
  store i32 %11, i32* %wfact, align 4
  %12 = load i32, i32* %nblock, align 4
  %cmp = icmp slt i32 %12, 10000
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %13 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 4
  %14 = load i32*, i32** %arr1, align 8
  %15 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %15, i32 0, i32 5
  %16 = load i32*, i32** %arr2, align 8
  %17 = load i32*, i32** %ftab, align 8
  %18 = load i32, i32* %nblock, align 4
  %19 = load i32, i32* %verb, align 4
  call void @fallbackSort(i32* %14, i32* %16, i32* %17, i32 %18, i32 %19)
  br label %if.end33

if.else:                                          ; preds = %entry
  %20 = load i32, i32* %nblock, align 4
  %add = add nsw i32 %20, 34
  store i32 %add, i32* %i, align 4
  %21 = load i32, i32* %i, align 4
  %and = and i32 %21, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %22 = load i32, i32* %i, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  %23 = load i8*, i8** %block, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom = sext i32 %24 to i64
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 %idxprom
  %25 = bitcast i8* %arrayidx to i16*
  store i16* %25, i16** %quadrant, align 8
  %26 = load i32, i32* %wfact, align 4
  %cmp6 = icmp slt i32 %26, 1
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  store i32 1, i32* %wfact, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %27 = load i32, i32* %wfact, align 4
  %cmp9 = icmp sgt i32 %27, 100
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  store i32 100, i32* %wfact, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %28 = load i32, i32* %nblock, align 4
  %29 = load i32, i32* %wfact, align 4
  %sub = sub nsw i32 %29, 1
  %div = sdiv i32 %sub, 3
  %mul = mul nsw i32 %28, %div
  store i32 %mul, i32* %budgetInit, align 4
  %30 = load i32, i32* %budgetInit, align 4
  store i32 %30, i32* %budget, align 4
  %31 = load i32*, i32** %ptr, align 8
  %32 = load i8*, i8** %block, align 8
  %33 = load i16*, i16** %quadrant, align 8
  %34 = load i32*, i32** %ftab, align 8
  %35 = load i32, i32* %nblock, align 4
  %36 = load i32, i32* %verb, align 4
  call void @mainSort(i32* %31, i8* %32, i16* %33, i32* %34, i32 %35, i32 %36, i32* %budget)
  %37 = load i32, i32* %verb, align 4
  %cmp12 = icmp sge i32 %37, 3
  br i1 %cmp12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %if.end11
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = load i32, i32* %budgetInit, align 4
  %40 = load i32, i32* %budget, align 4
  %sub14 = sub nsw i32 %39, %40
  %41 = load i32, i32* %nblock, align 4
  %42 = load i32, i32* %budgetInit, align 4
  %43 = load i32, i32* %budget, align 4
  %sub15 = sub nsw i32 %42, %43
  %conv = sitofp i32 %sub15 to float
  %44 = load i32, i32* %nblock, align 4
  %cmp16 = icmp eq i32 %44, 0
  br i1 %cmp16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then13
  br label %cond.end

cond.false:                                       ; preds = %if.then13
  %45 = load i32, i32* %nblock, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %45, %cond.false ]
  %conv18 = sitofp i32 %cond to float
  %div19 = fdiv float %conv, %conv18
  %conv20 = fpext float %div19 to double
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %sub14, i32 %41, double %conv20)
  br label %if.end21

if.end21:                                         ; preds = %cond.end, %if.end11
  %46 = load i32, i32* %budget, align 4
  %cmp22 = icmp slt i32 %46, 0
  br i1 %cmp22, label %if.then24, label %if.end32

if.then24:                                        ; preds = %if.end21
  %47 = load i32, i32* %verb, align 4
  %cmp25 = icmp sge i32 %47, 2
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then24
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then24
  %49 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %arr130 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 4
  %50 = load i32*, i32** %arr130, align 8
  %51 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %arr231 = getelementptr inbounds %struct.EState, %struct.EState* %51, i32 0, i32 5
  %52 = load i32*, i32** %arr231, align 8
  %53 = load i32*, i32** %ftab, align 8
  %54 = load i32, i32* %nblock, align 4
  %55 = load i32, i32* %verb, align 4
  call void @fallbackSort(i32* %50, i32* %52, i32* %53, i32 %54, i32 %55)
  br label %if.end32

if.end32:                                         ; preds = %if.end29, %if.end21
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then
  %56 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 7
  store i32 -1, i32* %origPtr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end33
  %57 = load i32, i32* %i, align 4
  %58 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock34 = getelementptr inbounds %struct.EState, %struct.EState* %58, i32 0, i32 17
  %59 = load i32, i32* %nblock34, align 4
  %cmp35 = icmp slt i32 %57, %59
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %60 = load i32*, i32** %ptr, align 8
  %61 = load i32, i32* %i, align 4
  %idxprom37 = sext i32 %61 to i64
  %arrayidx38 = getelementptr inbounds i32, i32* %60, i64 %idxprom37
  %62 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %62, 0
  br i1 %cmp39, label %if.then41, label %if.end43

if.then41:                                        ; preds = %for.body
  %63 = load i32, i32* %i, align 4
  %64 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %origPtr42 = getelementptr inbounds %struct.EState, %struct.EState* %64, i32 0, i32 7
  store i32 %63, i32* %origPtr42, align 8
  br label %for.end

if.end43:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end43
  %65 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %65, 1
  store i32 %inc44, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then41, %for.cond
  %66 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %origPtr45 = getelementptr inbounds %struct.EState, %struct.EState* %66, i32 0, i32 7
  %67 = load i32, i32* %origPtr45, align 8
  %cmp46 = icmp ne i32 %67, -1
  br i1 %cmp46, label %if.end49, label %if.then48

if.then48:                                        ; preds = %for.end
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %for.end
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackSort(i32* %fmap, i32* %eclass, i32* %bhtab, i32 %nblock, i32 %verb) #0 {
entry:
  %fmap.addr = alloca i32*, align 8
  %eclass.addr = alloca i32*, align 8
  %bhtab.addr = alloca i32*, align 8
  %nblock.addr = alloca i32, align 4
  %verb.addr = alloca i32, align 4
  %ftab = alloca [257 x i32], align 16
  %ftabCopy = alloca [256 x i32], align 16
  %H = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %cc = alloca i32, align 4
  %cc1 = alloca i32, align 4
  %nNotDone = alloca i32, align 4
  %nBhtab = alloca i32, align 4
  %eclass8 = alloca i8*, align 8
  store i32* %fmap, i32** %fmap.addr, align 8
  store i32* %eclass, i32** %eclass.addr, align 8
  store i32* %bhtab, i32** %bhtab.addr, align 8
  store i32 %nblock, i32* %nblock.addr, align 4
  store i32 %verb, i32* %verb.addr, align 4
  %0 = load i32*, i32** %eclass.addr, align 8
  %1 = bitcast i32* %0 to i8*
  store i8* %1, i8** %eclass8, align 8
  %2 = load i32, i32* %verb.addr, align 4
  %cmp = icmp sge i32 %2, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %4, 257
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc10, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %nblock.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %for.body4, label %for.end12

for.body4:                                        ; preds = %for.cond2
  %9 = load i8*, i8** %eclass8, align 8
  %10 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %10 to i64
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 %idxprom5
  %11 = load i8, i8* %arrayidx6, align 1
  %idxprom7 = zext i8 %11 to i64
  %arrayidx8 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7
  %12 = load i32, i32* %arrayidx8, align 4
  %inc9 = add nsw i32 %12, 1
  store i32 %inc9, i32* %arrayidx8, align 4
  br label %for.inc10

for.inc10:                                        ; preds = %for.body4
  %13 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %13, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond2

for.end12:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc20, %for.end12
  %14 = load i32, i32* %i, align 4
  %cmp14 = icmp slt i32 %14, 256
  br i1 %cmp14, label %for.body15, label %for.end22

for.body15:                                       ; preds = %for.cond13
  %15 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %15 to i64
  %arrayidx17 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom16
  %16 = load i32, i32* %arrayidx17, align 4
  %17 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %17 to i64
  %arrayidx19 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom18
  store i32 %16, i32* %arrayidx19, align 4
  br label %for.inc20

for.inc20:                                        ; preds = %for.body15
  %18 = load i32, i32* %i, align 4
  %inc21 = add nsw i32 %18, 1
  store i32 %inc21, i32* %i, align 4
  br label %for.cond13

for.end22:                                        ; preds = %for.cond13
  store i32 1, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc30, %for.end22
  %19 = load i32, i32* %i, align 4
  %cmp24 = icmp slt i32 %19, 257
  br i1 %cmp24, label %for.body25, label %for.end32

for.body25:                                       ; preds = %for.cond23
  %20 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %20, 1
  %idxprom26 = sext i32 %sub to i64
  %arrayidx27 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom26
  %21 = load i32, i32* %arrayidx27, align 4
  %22 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %22 to i64
  %arrayidx29 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom28
  %23 = load i32, i32* %arrayidx29, align 4
  %add = add nsw i32 %23, %21
  store i32 %add, i32* %arrayidx29, align 4
  br label %for.inc30

for.inc30:                                        ; preds = %for.body25
  %24 = load i32, i32* %i, align 4
  %inc31 = add nsw i32 %24, 1
  store i32 %inc31, i32* %i, align 4
  br label %for.cond23

for.end32:                                        ; preds = %for.cond23
  store i32 0, i32* %i, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc45, %for.end32
  %25 = load i32, i32* %i, align 4
  %26 = load i32, i32* %nblock.addr, align 4
  %cmp34 = icmp slt i32 %25, %26
  br i1 %cmp34, label %for.body35, label %for.end47

for.body35:                                       ; preds = %for.cond33
  %27 = load i8*, i8** %eclass8, align 8
  %28 = load i32, i32* %i, align 4
  %idxprom36 = sext i32 %28 to i64
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 %idxprom36
  %29 = load i8, i8* %arrayidx37, align 1
  %conv = zext i8 %29 to i32
  store i32 %conv, i32* %j, align 4
  %30 = load i32, i32* %j, align 4
  %idxprom38 = sext i32 %30 to i64
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38
  %31 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub nsw i32 %31, 1
  store i32 %sub40, i32* %k, align 4
  %32 = load i32, i32* %k, align 4
  %33 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %33 to i64
  %arrayidx42 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom41
  store i32 %32, i32* %arrayidx42, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32*, i32** %fmap.addr, align 8
  %36 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %36 to i64
  %arrayidx44 = getelementptr inbounds i32, i32* %35, i64 %idxprom43
  store i32 %34, i32* %arrayidx44, align 4
  br label %for.inc45

for.inc45:                                        ; preds = %for.body35
  %37 = load i32, i32* %i, align 4
  %inc46 = add nsw i32 %37, 1
  store i32 %inc46, i32* %i, align 4
  br label %for.cond33

for.end47:                                        ; preds = %for.cond33
  %38 = load i32, i32* %nblock.addr, align 4
  %div = sdiv i32 %38, 32
  %add48 = add nsw i32 2, %div
  store i32 %add48, i32* %nBhtab, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc55, %for.end47
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* %nBhtab, align 4
  %cmp50 = icmp slt i32 %39, %40
  br i1 %cmp50, label %for.body52, label %for.end57

for.body52:                                       ; preds = %for.cond49
  %41 = load i32*, i32** %bhtab.addr, align 8
  %42 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %42 to i64
  %arrayidx54 = getelementptr inbounds i32, i32* %41, i64 %idxprom53
  store i32 0, i32* %arrayidx54, align 4
  br label %for.inc55

for.inc55:                                        ; preds = %for.body52
  %43 = load i32, i32* %i, align 4
  %inc56 = add nsw i32 %43, 1
  store i32 %inc56, i32* %i, align 4
  br label %for.cond49

for.end57:                                        ; preds = %for.cond49
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc68, %for.end57
  %44 = load i32, i32* %i, align 4
  %cmp59 = icmp slt i32 %44, 256
  br i1 %cmp59, label %for.body61, label %for.end70

for.body61:                                       ; preds = %for.cond58
  %45 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %45 to i64
  %arrayidx63 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom62
  %46 = load i32, i32* %arrayidx63, align 4
  %and = and i32 %46, 31
  %shl = shl i32 1, %and
  %47 = load i32*, i32** %bhtab.addr, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom64
  %49 = load i32, i32* %arrayidx65, align 4
  %shr = ashr i32 %49, 5
  %idxprom66 = sext i32 %shr to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %47, i64 %idxprom66
  %50 = load i32, i32* %arrayidx67, align 4
  %or = or i32 %50, %shl
  store i32 %or, i32* %arrayidx67, align 4
  br label %for.inc68

for.inc68:                                        ; preds = %for.body61
  %51 = load i32, i32* %i, align 4
  %inc69 = add nsw i32 %51, 1
  store i32 %inc69, i32* %i, align 4
  br label %for.cond58

for.end70:                                        ; preds = %for.cond58
  store i32 0, i32* %i, align 4
  br label %for.cond71

for.cond71:                                       ; preds = %for.inc96, %for.end70
  %52 = load i32, i32* %i, align 4
  %cmp72 = icmp slt i32 %52, 32
  br i1 %cmp72, label %for.body74, label %for.end98

for.body74:                                       ; preds = %for.cond71
  %53 = load i32, i32* %nblock.addr, align 4
  %54 = load i32, i32* %i, align 4
  %mul = mul nsw i32 2, %54
  %add75 = add nsw i32 %53, %mul
  %and76 = and i32 %add75, 31
  %shl77 = shl i32 1, %and76
  %55 = load i32*, i32** %bhtab.addr, align 8
  %56 = load i32, i32* %nblock.addr, align 4
  %57 = load i32, i32* %i, align 4
  %mul78 = mul nsw i32 2, %57
  %add79 = add nsw i32 %56, %mul78
  %shr80 = ashr i32 %add79, 5
  %idxprom81 = sext i32 %shr80 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %55, i64 %idxprom81
  %58 = load i32, i32* %arrayidx82, align 4
  %or83 = or i32 %58, %shl77
  store i32 %or83, i32* %arrayidx82, align 4
  %59 = load i32, i32* %nblock.addr, align 4
  %60 = load i32, i32* %i, align 4
  %mul84 = mul nsw i32 2, %60
  %add85 = add nsw i32 %59, %mul84
  %add86 = add nsw i32 %add85, 1
  %and87 = and i32 %add86, 31
  %shl88 = shl i32 1, %and87
  %neg = xor i32 %shl88, -1
  %61 = load i32*, i32** %bhtab.addr, align 8
  %62 = load i32, i32* %nblock.addr, align 4
  %63 = load i32, i32* %i, align 4
  %mul89 = mul nsw i32 2, %63
  %add90 = add nsw i32 %62, %mul89
  %add91 = add nsw i32 %add90, 1
  %shr92 = ashr i32 %add91, 5
  %idxprom93 = sext i32 %shr92 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %61, i64 %idxprom93
  %64 = load i32, i32* %arrayidx94, align 4
  %and95 = and i32 %64, %neg
  store i32 %and95, i32* %arrayidx94, align 4
  br label %for.inc96

for.inc96:                                        ; preds = %for.body74
  %65 = load i32, i32* %i, align 4
  %inc97 = add nsw i32 %65, 1
  store i32 %inc97, i32* %i, align 4
  br label %for.cond71

for.end98:                                        ; preds = %for.cond71
  store i32 1, i32* %H, align 4
  br label %while.body

while.body:                                       ; preds = %if.end267, %for.end98
  %66 = load i32, i32* %verb.addr, align 4
  %cmp99 = icmp sge i32 %66, 4
  br i1 %cmp99, label %if.then101, label %if.end103

if.then101:                                       ; preds = %while.body
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %68 = load i32, i32* %H, align 4
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 %68)
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %while.body
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc126, %if.end103
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %nblock.addr, align 4
  %cmp105 = icmp slt i32 %69, %70
  br i1 %cmp105, label %for.body107, label %for.end128

for.body107:                                      ; preds = %for.cond104
  %71 = load i32*, i32** %bhtab.addr, align 8
  %72 = load i32, i32* %i, align 4
  %shr108 = ashr i32 %72, 5
  %idxprom109 = sext i32 %shr108 to i64
  %arrayidx110 = getelementptr inbounds i32, i32* %71, i64 %idxprom109
  %73 = load i32, i32* %arrayidx110, align 4
  %74 = load i32, i32* %i, align 4
  %and111 = and i32 %74, 31
  %shl112 = shl i32 1, %and111
  %and113 = and i32 %73, %shl112
  %tobool = icmp ne i32 %and113, 0
  br i1 %tobool, label %if.then114, label %if.end115

if.then114:                                       ; preds = %for.body107
  %75 = load i32, i32* %i, align 4
  store i32 %75, i32* %j, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.then114, %for.body107
  %76 = load i32*, i32** %fmap.addr, align 8
  %77 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %77 to i64
  %arrayidx117 = getelementptr inbounds i32, i32* %76, i64 %idxprom116
  %78 = load i32, i32* %arrayidx117, align 4
  %79 = load i32, i32* %H, align 4
  %sub118 = sub i32 %78, %79
  store i32 %sub118, i32* %k, align 4
  %80 = load i32, i32* %k, align 4
  %cmp119 = icmp slt i32 %80, 0
  br i1 %cmp119, label %if.then121, label %if.end123

if.then121:                                       ; preds = %if.end115
  %81 = load i32, i32* %nblock.addr, align 4
  %82 = load i32, i32* %k, align 4
  %add122 = add nsw i32 %82, %81
  store i32 %add122, i32* %k, align 4
  br label %if.end123

if.end123:                                        ; preds = %if.then121, %if.end115
  %83 = load i32, i32* %j, align 4
  %84 = load i32*, i32** %eclass.addr, align 8
  %85 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %85 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %84, i64 %idxprom124
  store i32 %83, i32* %arrayidx125, align 4
  br label %for.inc126

for.inc126:                                       ; preds = %if.end123
  %86 = load i32, i32* %i, align 4
  %inc127 = add nsw i32 %86, 1
  store i32 %inc127, i32* %i, align 4
  br label %for.cond104

for.end128:                                       ; preds = %for.cond104
  store i32 0, i32* %nNotDone, align 4
  store i32 -1, i32* %r, align 4
  br label %while.body130

while.body130:                                    ; preds = %if.end254, %for.end128
  %87 = load i32, i32* %r, align 4
  %add131 = add nsw i32 %87, 1
  store i32 %add131, i32* %k, align 4
  br label %while.cond132

while.cond132:                                    ; preds = %while.body142, %while.body130
  %88 = load i32*, i32** %bhtab.addr, align 8
  %89 = load i32, i32* %k, align 4
  %shr133 = ashr i32 %89, 5
  %idxprom134 = sext i32 %shr133 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %88, i64 %idxprom134
  %90 = load i32, i32* %arrayidx135, align 4
  %91 = load i32, i32* %k, align 4
  %and136 = and i32 %91, 31
  %shl137 = shl i32 1, %and136
  %and138 = and i32 %90, %shl137
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond132
  %92 = load i32, i32* %k, align 4
  %and140 = and i32 %92, 31
  %tobool141 = icmp ne i32 %and140, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond132
  %93 = phi i1 [ false, %while.cond132 ], [ %tobool141, %land.rhs ]
  br i1 %93, label %while.body142, label %while.end

while.body142:                                    ; preds = %land.end
  %94 = load i32, i32* %k, align 4
  %inc143 = add nsw i32 %94, 1
  store i32 %inc143, i32* %k, align 4
  br label %while.cond132

while.end:                                        ; preds = %land.end
  %95 = load i32*, i32** %bhtab.addr, align 8
  %96 = load i32, i32* %k, align 4
  %shr144 = ashr i32 %96, 5
  %idxprom145 = sext i32 %shr144 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %95, i64 %idxprom145
  %97 = load i32, i32* %arrayidx146, align 4
  %98 = load i32, i32* %k, align 4
  %and147 = and i32 %98, 31
  %shl148 = shl i32 1, %and147
  %and149 = and i32 %97, %shl148
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %if.then151, label %if.end172

if.then151:                                       ; preds = %while.end
  br label %while.cond152

while.cond152:                                    ; preds = %while.body158, %if.then151
  %99 = load i32*, i32** %bhtab.addr, align 8
  %100 = load i32, i32* %k, align 4
  %shr153 = ashr i32 %100, 5
  %idxprom154 = sext i32 %shr153 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %99, i64 %idxprom154
  %101 = load i32, i32* %arrayidx155, align 4
  %cmp156 = icmp eq i32 %101, -1
  br i1 %cmp156, label %while.body158, label %while.end160

while.body158:                                    ; preds = %while.cond152
  %102 = load i32, i32* %k, align 4
  %add159 = add nsw i32 %102, 32
  store i32 %add159, i32* %k, align 4
  br label %while.cond152

while.end160:                                     ; preds = %while.cond152
  br label %while.cond161

while.cond161:                                    ; preds = %while.body169, %while.end160
  %103 = load i32*, i32** %bhtab.addr, align 8
  %104 = load i32, i32* %k, align 4
  %shr162 = ashr i32 %104, 5
  %idxprom163 = sext i32 %shr162 to i64
  %arrayidx164 = getelementptr inbounds i32, i32* %103, i64 %idxprom163
  %105 = load i32, i32* %arrayidx164, align 4
  %106 = load i32, i32* %k, align 4
  %and165 = and i32 %106, 31
  %shl166 = shl i32 1, %and165
  %and167 = and i32 %105, %shl166
  %tobool168 = icmp ne i32 %and167, 0
  br i1 %tobool168, label %while.body169, label %while.end171

while.body169:                                    ; preds = %while.cond161
  %107 = load i32, i32* %k, align 4
  %inc170 = add nsw i32 %107, 1
  store i32 %inc170, i32* %k, align 4
  br label %while.cond161

while.end171:                                     ; preds = %while.cond161
  br label %if.end172

if.end172:                                        ; preds = %while.end171, %while.end
  %108 = load i32, i32* %k, align 4
  %sub173 = sub nsw i32 %108, 1
  store i32 %sub173, i32* %l, align 4
  %109 = load i32, i32* %l, align 4
  %110 = load i32, i32* %nblock.addr, align 4
  %cmp174 = icmp sge i32 %109, %110
  br i1 %cmp174, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.end172
  br label %while.end255

if.end177:                                        ; preds = %if.end172
  br label %while.cond178

while.cond178:                                    ; preds = %while.body190, %if.end177
  %111 = load i32*, i32** %bhtab.addr, align 8
  %112 = load i32, i32* %k, align 4
  %shr179 = ashr i32 %112, 5
  %idxprom180 = sext i32 %shr179 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %111, i64 %idxprom180
  %113 = load i32, i32* %arrayidx181, align 4
  %114 = load i32, i32* %k, align 4
  %and182 = and i32 %114, 31
  %shl183 = shl i32 1, %and182
  %and184 = and i32 %113, %shl183
  %tobool185 = icmp ne i32 %and184, 0
  br i1 %tobool185, label %land.end189, label %land.rhs186

land.rhs186:                                      ; preds = %while.cond178
  %115 = load i32, i32* %k, align 4
  %and187 = and i32 %115, 31
  %tobool188 = icmp ne i32 %and187, 0
  br label %land.end189

land.end189:                                      ; preds = %land.rhs186, %while.cond178
  %116 = phi i1 [ false, %while.cond178 ], [ %tobool188, %land.rhs186 ]
  br i1 %116, label %while.body190, label %while.end192

while.body190:                                    ; preds = %land.end189
  %117 = load i32, i32* %k, align 4
  %inc191 = add nsw i32 %117, 1
  store i32 %inc191, i32* %k, align 4
  br label %while.cond178

while.end192:                                     ; preds = %land.end189
  %118 = load i32*, i32** %bhtab.addr, align 8
  %119 = load i32, i32* %k, align 4
  %shr193 = ashr i32 %119, 5
  %idxprom194 = sext i32 %shr193 to i64
  %arrayidx195 = getelementptr inbounds i32, i32* %118, i64 %idxprom194
  %120 = load i32, i32* %arrayidx195, align 4
  %121 = load i32, i32* %k, align 4
  %and196 = and i32 %121, 31
  %shl197 = shl i32 1, %and196
  %and198 = and i32 %120, %shl197
  %tobool199 = icmp ne i32 %and198, 0
  br i1 %tobool199, label %if.end221, label %if.then200

if.then200:                                       ; preds = %while.end192
  br label %while.cond201

while.cond201:                                    ; preds = %while.body207, %if.then200
  %122 = load i32*, i32** %bhtab.addr, align 8
  %123 = load i32, i32* %k, align 4
  %shr202 = ashr i32 %123, 5
  %idxprom203 = sext i32 %shr202 to i64
  %arrayidx204 = getelementptr inbounds i32, i32* %122, i64 %idxprom203
  %124 = load i32, i32* %arrayidx204, align 4
  %cmp205 = icmp eq i32 %124, 0
  br i1 %cmp205, label %while.body207, label %while.end209

while.body207:                                    ; preds = %while.cond201
  %125 = load i32, i32* %k, align 4
  %add208 = add nsw i32 %125, 32
  store i32 %add208, i32* %k, align 4
  br label %while.cond201

while.end209:                                     ; preds = %while.cond201
  br label %while.cond210

while.cond210:                                    ; preds = %while.body218, %while.end209
  %126 = load i32*, i32** %bhtab.addr, align 8
  %127 = load i32, i32* %k, align 4
  %shr211 = ashr i32 %127, 5
  %idxprom212 = sext i32 %shr211 to i64
  %arrayidx213 = getelementptr inbounds i32, i32* %126, i64 %idxprom212
  %128 = load i32, i32* %arrayidx213, align 4
  %129 = load i32, i32* %k, align 4
  %and214 = and i32 %129, 31
  %shl215 = shl i32 1, %and214
  %and216 = and i32 %128, %shl215
  %tobool217 = icmp ne i32 %and216, 0
  %lnot = xor i1 %tobool217, true
  br i1 %lnot, label %while.body218, label %while.end220

while.body218:                                    ; preds = %while.cond210
  %130 = load i32, i32* %k, align 4
  %inc219 = add nsw i32 %130, 1
  store i32 %inc219, i32* %k, align 4
  br label %while.cond210

while.end220:                                     ; preds = %while.cond210
  br label %if.end221

if.end221:                                        ; preds = %while.end220, %while.end192
  %131 = load i32, i32* %k, align 4
  %sub222 = sub nsw i32 %131, 1
  store i32 %sub222, i32* %r, align 4
  %132 = load i32, i32* %r, align 4
  %133 = load i32, i32* %nblock.addr, align 4
  %cmp223 = icmp sge i32 %132, %133
  br i1 %cmp223, label %if.then225, label %if.end226

if.then225:                                       ; preds = %if.end221
  br label %while.end255

if.end226:                                        ; preds = %if.end221
  %134 = load i32, i32* %r, align 4
  %135 = load i32, i32* %l, align 4
  %cmp227 = icmp sgt i32 %134, %135
  br i1 %cmp227, label %if.then229, label %if.end254

if.then229:                                       ; preds = %if.end226
  %136 = load i32, i32* %r, align 4
  %137 = load i32, i32* %l, align 4
  %sub230 = sub nsw i32 %136, %137
  %add231 = add nsw i32 %sub230, 1
  %138 = load i32, i32* %nNotDone, align 4
  %add232 = add nsw i32 %138, %add231
  store i32 %add232, i32* %nNotDone, align 4
  %139 = load i32*, i32** %fmap.addr, align 8
  %140 = load i32*, i32** %eclass.addr, align 8
  %141 = load i32, i32* %l, align 4
  %142 = load i32, i32* %r, align 4
  call void @fallbackQSort3(i32* %139, i32* %140, i32 %141, i32 %142)
  store i32 -1, i32* %cc, align 4
  %143 = load i32, i32* %l, align 4
  store i32 %143, i32* %i, align 4
  br label %for.cond233

for.cond233:                                      ; preds = %for.inc251, %if.then229
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %r, align 4
  %cmp234 = icmp sle i32 %144, %145
  br i1 %cmp234, label %for.body236, label %for.end253

for.body236:                                      ; preds = %for.cond233
  %146 = load i32*, i32** %eclass.addr, align 8
  %147 = load i32*, i32** %fmap.addr, align 8
  %148 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %148 to i64
  %arrayidx238 = getelementptr inbounds i32, i32* %147, i64 %idxprom237
  %149 = load i32, i32* %arrayidx238, align 4
  %idxprom239 = zext i32 %149 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %146, i64 %idxprom239
  %150 = load i32, i32* %arrayidx240, align 4
  store i32 %150, i32* %cc1, align 4
  %151 = load i32, i32* %cc, align 4
  %152 = load i32, i32* %cc1, align 4
  %cmp241 = icmp ne i32 %151, %152
  br i1 %cmp241, label %if.then243, label %if.end250

if.then243:                                       ; preds = %for.body236
  %153 = load i32, i32* %i, align 4
  %and244 = and i32 %153, 31
  %shl245 = shl i32 1, %and244
  %154 = load i32*, i32** %bhtab.addr, align 8
  %155 = load i32, i32* %i, align 4
  %shr246 = ashr i32 %155, 5
  %idxprom247 = sext i32 %shr246 to i64
  %arrayidx248 = getelementptr inbounds i32, i32* %154, i64 %idxprom247
  %156 = load i32, i32* %arrayidx248, align 4
  %or249 = or i32 %156, %shl245
  store i32 %or249, i32* %arrayidx248, align 4
  %157 = load i32, i32* %cc1, align 4
  store i32 %157, i32* %cc, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then243, %for.body236
  br label %for.inc251

for.inc251:                                       ; preds = %if.end250
  %158 = load i32, i32* %i, align 4
  %inc252 = add nsw i32 %158, 1
  store i32 %inc252, i32* %i, align 4
  br label %for.cond233

for.end253:                                       ; preds = %for.cond233
  br label %if.end254

if.end254:                                        ; preds = %for.end253, %if.end226
  br label %while.body130

while.end255:                                     ; preds = %if.then225, %if.then176
  %159 = load i32, i32* %verb.addr, align 4
  %cmp256 = icmp sge i32 %159, 4
  br i1 %cmp256, label %if.then258, label %if.end260

if.then258:                                       ; preds = %while.end255
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %161 = load i32, i32* %nNotDone, align 4
  %call259 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %160, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i32 %161)
  br label %if.end260

if.end260:                                        ; preds = %if.then258, %while.end255
  %162 = load i32, i32* %H, align 4
  %mul261 = mul nsw i32 %162, 2
  store i32 %mul261, i32* %H, align 4
  %163 = load i32, i32* %H, align 4
  %164 = load i32, i32* %nblock.addr, align 4
  %cmp262 = icmp sgt i32 %163, %164
  br i1 %cmp262, label %if.then266, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end260
  %165 = load i32, i32* %nNotDone, align 4
  %cmp264 = icmp eq i32 %165, 0
  br i1 %cmp264, label %if.then266, label %if.end267

if.then266:                                       ; preds = %lor.lhs.false, %if.end260
  br label %while.end268

if.end267:                                        ; preds = %lor.lhs.false
  br label %while.body

while.end268:                                     ; preds = %if.then266
  %166 = load i32, i32* %verb.addr, align 4
  %cmp269 = icmp sge i32 %166, 4
  br i1 %cmp269, label %if.then271, label %if.end273

if.then271:                                       ; preds = %while.end268
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call272 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0))
  br label %if.end273

if.end273:                                        ; preds = %if.then271, %while.end268
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond274

for.cond274:                                      ; preds = %for.inc292, %if.end273
  %168 = load i32, i32* %i, align 4
  %169 = load i32, i32* %nblock.addr, align 4
  %cmp275 = icmp slt i32 %168, %169
  br i1 %cmp275, label %for.body277, label %for.end294

for.body277:                                      ; preds = %for.cond274
  br label %while.cond

while.cond:                                       ; preds = %while.body282, %for.body277
  %170 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %170 to i64
  %arrayidx279 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom278
  %171 = load i32, i32* %arrayidx279, align 4
  %cmp280 = icmp eq i32 %171, 0
  br i1 %cmp280, label %while.body282, label %while.end284

while.body282:                                    ; preds = %while.cond
  %172 = load i32, i32* %j, align 4
  %inc283 = add nsw i32 %172, 1
  store i32 %inc283, i32* %j, align 4
  br label %while.cond

while.end284:                                     ; preds = %while.cond
  %173 = load i32, i32* %j, align 4
  %idxprom285 = sext i32 %173 to i64
  %arrayidx286 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom285
  %174 = load i32, i32* %arrayidx286, align 4
  %dec = add nsw i32 %174, -1
  store i32 %dec, i32* %arrayidx286, align 4
  %175 = load i32, i32* %j, align 4
  %conv287 = trunc i32 %175 to i8
  %176 = load i8*, i8** %eclass8, align 8
  %177 = load i32*, i32** %fmap.addr, align 8
  %178 = load i32, i32* %i, align 4
  %idxprom288 = sext i32 %178 to i64
  %arrayidx289 = getelementptr inbounds i32, i32* %177, i64 %idxprom288
  %179 = load i32, i32* %arrayidx289, align 4
  %idxprom290 = zext i32 %179 to i64
  %arrayidx291 = getelementptr inbounds i8, i8* %176, i64 %idxprom290
  store i8 %conv287, i8* %arrayidx291, align 1
  br label %for.inc292

for.inc292:                                       ; preds = %while.end284
  %180 = load i32, i32* %i, align 4
  %inc293 = add nsw i32 %180, 1
  store i32 %inc293, i32* %i, align 4
  br label %for.cond274

for.end294:                                       ; preds = %for.cond274
  %181 = load i32, i32* %j, align 4
  %cmp295 = icmp slt i32 %181, 256
  br i1 %cmp295, label %if.end298, label %if.then297

if.then297:                                       ; preds = %for.end294
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %if.end298

if.end298:                                        ; preds = %if.then297, %for.end294
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainSort(i32* %ptr, i8* %block, i16* %quadrant, i32* %ftab, i32 %nblock, i32 %verb, i32* %budget) #0 {
entry:
  %ptr.addr = alloca i32*, align 8
  %block.addr = alloca i8*, align 8
  %quadrant.addr = alloca i16*, align 8
  %ftab.addr = alloca i32*, align 8
  %nblock.addr = alloca i32, align 4
  %verb.addr = alloca i32, align 4
  %budget.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ss = alloca i32, align 4
  %sb = alloca i32, align 4
  %runningOrder = alloca [256 x i32], align 16
  %bigDone = alloca [256 x i8], align 16
  %copyStart = alloca [256 x i32], align 16
  %copyEnd = alloca [256 x i32], align 16
  %c1 = alloca i8, align 1
  %numQSorted = alloca i32, align 4
  %s = alloca i16, align 2
  %vv = alloca i32, align 4
  %h = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %bbStart = alloca i32, align 4
  %bbSize = alloca i32, align 4
  %shifts = alloca i32, align 4
  %a2update = alloca i32, align 4
  %qVal = alloca i16, align 2
  store i32* %ptr, i32** %ptr.addr, align 8
  store i8* %block, i8** %block.addr, align 8
  store i16* %quadrant, i16** %quadrant.addr, align 8
  store i32* %ftab, i32** %ftab.addr, align 8
  store i32 %nblock, i32* %nblock.addr, align 4
  store i32 %verb, i32* %verb.addr, align 4
  store i32* %budget, i32** %budget.addr, align 8
  %0 = load i32, i32* %verb.addr, align 4
  %cmp = icmp sge i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 65536, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp sge i32 %2, 0
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %ftab.addr, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load i8*, i8** %block.addr, align 8
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i64 0
  %7 = load i8, i8* %arrayidx2, align 1
  %conv = zext i8 %7 to i32
  %shl = shl i32 %conv, 8
  store i32 %shl, i32* %j, align 4
  %8 = load i32, i32* %nblock.addr, align 4
  %sub = sub nsw i32 %8, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc58, %for.end
  %9 = load i32, i32* %i, align 4
  %cmp4 = icmp sge i32 %9, 3
  br i1 %cmp4, label %for.body6, label %for.end60

for.body6:                                        ; preds = %for.cond3
  %10 = load i16*, i16** %quadrant.addr, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %11 to i64
  %arrayidx8 = getelementptr inbounds i16, i16* %10, i64 %idxprom7
  store i16 0, i16* %arrayidx8, align 2
  %12 = load i32, i32* %j, align 4
  %shr = ashr i32 %12, 8
  %13 = load i8*, i8** %block.addr, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %14 to i64
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i64 %idxprom9
  %15 = load i8, i8* %arrayidx10, align 1
  %conv11 = zext i8 %15 to i16
  %conv12 = zext i16 %conv11 to i32
  %shl13 = shl i32 %conv12, 8
  %or = or i32 %shr, %shl13
  store i32 %or, i32* %j, align 4
  %16 = load i32*, i32** %ftab.addr, align 8
  %17 = load i32, i32* %j, align 4
  %idxprom14 = sext i32 %17 to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %16, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %inc = add i32 %18, 1
  store i32 %inc, i32* %arrayidx15, align 4
  %19 = load i16*, i16** %quadrant.addr, align 8
  %20 = load i32, i32* %i, align 4
  %sub16 = sub nsw i32 %20, 1
  %idxprom17 = sext i32 %sub16 to i64
  %arrayidx18 = getelementptr inbounds i16, i16* %19, i64 %idxprom17
  store i16 0, i16* %arrayidx18, align 2
  %21 = load i32, i32* %j, align 4
  %shr19 = ashr i32 %21, 8
  %22 = load i8*, i8** %block.addr, align 8
  %23 = load i32, i32* %i, align 4
  %sub20 = sub nsw i32 %23, 1
  %idxprom21 = sext i32 %sub20 to i64
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %idxprom21
  %24 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %24 to i16
  %conv24 = zext i16 %conv23 to i32
  %shl25 = shl i32 %conv24, 8
  %or26 = or i32 %shr19, %shl25
  store i32 %or26, i32* %j, align 4
  %25 = load i32*, i32** %ftab.addr, align 8
  %26 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %25, i64 %idxprom27
  %27 = load i32, i32* %arrayidx28, align 4
  %inc29 = add i32 %27, 1
  store i32 %inc29, i32* %arrayidx28, align 4
  %28 = load i16*, i16** %quadrant.addr, align 8
  %29 = load i32, i32* %i, align 4
  %sub30 = sub nsw i32 %29, 2
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds i16, i16* %28, i64 %idxprom31
  store i16 0, i16* %arrayidx32, align 2
  %30 = load i32, i32* %j, align 4
  %shr33 = ashr i32 %30, 8
  %31 = load i8*, i8** %block.addr, align 8
  %32 = load i32, i32* %i, align 4
  %sub34 = sub nsw i32 %32, 2
  %idxprom35 = sext i32 %sub34 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 %idxprom35
  %33 = load i8, i8* %arrayidx36, align 1
  %conv37 = zext i8 %33 to i16
  %conv38 = zext i16 %conv37 to i32
  %shl39 = shl i32 %conv38, 8
  %or40 = or i32 %shr33, %shl39
  store i32 %or40, i32* %j, align 4
  %34 = load i32*, i32** %ftab.addr, align 8
  %35 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %35 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %34, i64 %idxprom41
  %36 = load i32, i32* %arrayidx42, align 4
  %inc43 = add i32 %36, 1
  store i32 %inc43, i32* %arrayidx42, align 4
  %37 = load i16*, i16** %quadrant.addr, align 8
  %38 = load i32, i32* %i, align 4
  %sub44 = sub nsw i32 %38, 3
  %idxprom45 = sext i32 %sub44 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %37, i64 %idxprom45
  store i16 0, i16* %arrayidx46, align 2
  %39 = load i32, i32* %j, align 4
  %shr47 = ashr i32 %39, 8
  %40 = load i8*, i8** %block.addr, align 8
  %41 = load i32, i32* %i, align 4
  %sub48 = sub nsw i32 %41, 3
  %idxprom49 = sext i32 %sub48 to i64
  %arrayidx50 = getelementptr inbounds i8, i8* %40, i64 %idxprom49
  %42 = load i8, i8* %arrayidx50, align 1
  %conv51 = zext i8 %42 to i16
  %conv52 = zext i16 %conv51 to i32
  %shl53 = shl i32 %conv52, 8
  %or54 = or i32 %shr47, %shl53
  store i32 %or54, i32* %j, align 4
  %43 = load i32*, i32** %ftab.addr, align 8
  %44 = load i32, i32* %j, align 4
  %idxprom55 = sext i32 %44 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %43, i64 %idxprom55
  %45 = load i32, i32* %arrayidx56, align 4
  %inc57 = add i32 %45, 1
  store i32 %inc57, i32* %arrayidx56, align 4
  br label %for.inc58

for.inc58:                                        ; preds = %for.body6
  %46 = load i32, i32* %i, align 4
  %sub59 = sub nsw i32 %46, 4
  store i32 %sub59, i32* %i, align 4
  br label %for.cond3

for.end60:                                        ; preds = %for.cond3
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc77, %for.end60
  %47 = load i32, i32* %i, align 4
  %cmp62 = icmp sge i32 %47, 0
  br i1 %cmp62, label %for.body64, label %for.end79

for.body64:                                       ; preds = %for.cond61
  %48 = load i16*, i16** %quadrant.addr, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %49 to i64
  %arrayidx66 = getelementptr inbounds i16, i16* %48, i64 %idxprom65
  store i16 0, i16* %arrayidx66, align 2
  %50 = load i32, i32* %j, align 4
  %shr67 = ashr i32 %50, 8
  %51 = load i8*, i8** %block.addr, align 8
  %52 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %52 to i64
  %arrayidx69 = getelementptr inbounds i8, i8* %51, i64 %idxprom68
  %53 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %53 to i16
  %conv71 = zext i16 %conv70 to i32
  %shl72 = shl i32 %conv71, 8
  %or73 = or i32 %shr67, %shl72
  store i32 %or73, i32* %j, align 4
  %54 = load i32*, i32** %ftab.addr, align 8
  %55 = load i32, i32* %j, align 4
  %idxprom74 = sext i32 %55 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %54, i64 %idxprom74
  %56 = load i32, i32* %arrayidx75, align 4
  %inc76 = add i32 %56, 1
  store i32 %inc76, i32* %arrayidx75, align 4
  br label %for.inc77

for.inc77:                                        ; preds = %for.body64
  %57 = load i32, i32* %i, align 4
  %dec78 = add nsw i32 %57, -1
  store i32 %dec78, i32* %i, align 4
  br label %for.cond61

for.end79:                                        ; preds = %for.cond61
  store i32 0, i32* %i, align 4
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc91, %for.end79
  %58 = load i32, i32* %i, align 4
  %cmp81 = icmp slt i32 %58, 34
  br i1 %cmp81, label %for.body83, label %for.end93

for.body83:                                       ; preds = %for.cond80
  %59 = load i8*, i8** %block.addr, align 8
  %60 = load i32, i32* %i, align 4
  %idxprom84 = sext i32 %60 to i64
  %arrayidx85 = getelementptr inbounds i8, i8* %59, i64 %idxprom84
  %61 = load i8, i8* %arrayidx85, align 1
  %62 = load i8*, i8** %block.addr, align 8
  %63 = load i32, i32* %nblock.addr, align 4
  %64 = load i32, i32* %i, align 4
  %add = add nsw i32 %63, %64
  %idxprom86 = sext i32 %add to i64
  %arrayidx87 = getelementptr inbounds i8, i8* %62, i64 %idxprom86
  store i8 %61, i8* %arrayidx87, align 1
  %65 = load i16*, i16** %quadrant.addr, align 8
  %66 = load i32, i32* %nblock.addr, align 4
  %67 = load i32, i32* %i, align 4
  %add88 = add nsw i32 %66, %67
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds i16, i16* %65, i64 %idxprom89
  store i16 0, i16* %arrayidx90, align 2
  br label %for.inc91

for.inc91:                                        ; preds = %for.body83
  %68 = load i32, i32* %i, align 4
  %inc92 = add nsw i32 %68, 1
  store i32 %inc92, i32* %i, align 4
  br label %for.cond80

for.end93:                                        ; preds = %for.cond80
  %69 = load i32, i32* %verb.addr, align 4
  %cmp94 = icmp sge i32 %69, 4
  br i1 %cmp94, label %if.then96, label %if.end98

if.then96:                                        ; preds = %for.end93
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end98

if.end98:                                         ; preds = %if.then96, %for.end93
  store i32 1, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc109, %if.end98
  %71 = load i32, i32* %i, align 4
  %cmp100 = icmp sle i32 %71, 65536
  br i1 %cmp100, label %for.body102, label %for.end111

for.body102:                                      ; preds = %for.cond99
  %72 = load i32*, i32** %ftab.addr, align 8
  %73 = load i32, i32* %i, align 4
  %sub103 = sub nsw i32 %73, 1
  %idxprom104 = sext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds i32, i32* %72, i64 %idxprom104
  %74 = load i32, i32* %arrayidx105, align 4
  %75 = load i32*, i32** %ftab.addr, align 8
  %76 = load i32, i32* %i, align 4
  %idxprom106 = sext i32 %76 to i64
  %arrayidx107 = getelementptr inbounds i32, i32* %75, i64 %idxprom106
  %77 = load i32, i32* %arrayidx107, align 4
  %add108 = add i32 %77, %74
  store i32 %add108, i32* %arrayidx107, align 4
  br label %for.inc109

for.inc109:                                       ; preds = %for.body102
  %78 = load i32, i32* %i, align 4
  %inc110 = add nsw i32 %78, 1
  store i32 %inc110, i32* %i, align 4
  br label %for.cond99

for.end111:                                       ; preds = %for.cond99
  %79 = load i8*, i8** %block.addr, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %79, i64 0
  %80 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %80 to i32
  %shl114 = shl i32 %conv113, 8
  %conv115 = trunc i32 %shl114 to i16
  store i16 %conv115, i16* %s, align 2
  %81 = load i32, i32* %nblock.addr, align 4
  %sub116 = sub nsw i32 %81, 1
  store i32 %sub116, i32* %i, align 4
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc187, %for.end111
  %82 = load i32, i32* %i, align 4
  %cmp118 = icmp sge i32 %82, 3
  br i1 %cmp118, label %for.body120, label %for.end189

for.body120:                                      ; preds = %for.cond117
  %83 = load i16, i16* %s, align 2
  %conv121 = zext i16 %83 to i32
  %shr122 = ashr i32 %conv121, 8
  %84 = load i8*, i8** %block.addr, align 8
  %85 = load i32, i32* %i, align 4
  %idxprom123 = sext i32 %85 to i64
  %arrayidx124 = getelementptr inbounds i8, i8* %84, i64 %idxprom123
  %86 = load i8, i8* %arrayidx124, align 1
  %conv125 = zext i8 %86 to i32
  %shl126 = shl i32 %conv125, 8
  %or127 = or i32 %shr122, %shl126
  %conv128 = trunc i32 %or127 to i16
  store i16 %conv128, i16* %s, align 2
  %87 = load i32*, i32** %ftab.addr, align 8
  %88 = load i16, i16* %s, align 2
  %idxprom129 = zext i16 %88 to i64
  %arrayidx130 = getelementptr inbounds i32, i32* %87, i64 %idxprom129
  %89 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub i32 %89, 1
  store i32 %sub131, i32* %j, align 4
  %90 = load i32, i32* %j, align 4
  %91 = load i32*, i32** %ftab.addr, align 8
  %92 = load i16, i16* %s, align 2
  %idxprom132 = zext i16 %92 to i64
  %arrayidx133 = getelementptr inbounds i32, i32* %91, i64 %idxprom132
  store i32 %90, i32* %arrayidx133, align 4
  %93 = load i32, i32* %i, align 4
  %94 = load i32*, i32** %ptr.addr, align 8
  %95 = load i32, i32* %j, align 4
  %idxprom134 = sext i32 %95 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %94, i64 %idxprom134
  store i32 %93, i32* %arrayidx135, align 4
  %96 = load i16, i16* %s, align 2
  %conv136 = zext i16 %96 to i32
  %shr137 = ashr i32 %conv136, 8
  %97 = load i8*, i8** %block.addr, align 8
  %98 = load i32, i32* %i, align 4
  %sub138 = sub nsw i32 %98, 1
  %idxprom139 = sext i32 %sub138 to i64
  %arrayidx140 = getelementptr inbounds i8, i8* %97, i64 %idxprom139
  %99 = load i8, i8* %arrayidx140, align 1
  %conv141 = zext i8 %99 to i32
  %shl142 = shl i32 %conv141, 8
  %or143 = or i32 %shr137, %shl142
  %conv144 = trunc i32 %or143 to i16
  store i16 %conv144, i16* %s, align 2
  %100 = load i32*, i32** %ftab.addr, align 8
  %101 = load i16, i16* %s, align 2
  %idxprom145 = zext i16 %101 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %100, i64 %idxprom145
  %102 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub i32 %102, 1
  store i32 %sub147, i32* %j, align 4
  %103 = load i32, i32* %j, align 4
  %104 = load i32*, i32** %ftab.addr, align 8
  %105 = load i16, i16* %s, align 2
  %idxprom148 = zext i16 %105 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %104, i64 %idxprom148
  store i32 %103, i32* %arrayidx149, align 4
  %106 = load i32, i32* %i, align 4
  %sub150 = sub nsw i32 %106, 1
  %107 = load i32*, i32** %ptr.addr, align 8
  %108 = load i32, i32* %j, align 4
  %idxprom151 = sext i32 %108 to i64
  %arrayidx152 = getelementptr inbounds i32, i32* %107, i64 %idxprom151
  store i32 %sub150, i32* %arrayidx152, align 4
  %109 = load i16, i16* %s, align 2
  %conv153 = zext i16 %109 to i32
  %shr154 = ashr i32 %conv153, 8
  %110 = load i8*, i8** %block.addr, align 8
  %111 = load i32, i32* %i, align 4
  %sub155 = sub nsw i32 %111, 2
  %idxprom156 = sext i32 %sub155 to i64
  %arrayidx157 = getelementptr inbounds i8, i8* %110, i64 %idxprom156
  %112 = load i8, i8* %arrayidx157, align 1
  %conv158 = zext i8 %112 to i32
  %shl159 = shl i32 %conv158, 8
  %or160 = or i32 %shr154, %shl159
  %conv161 = trunc i32 %or160 to i16
  store i16 %conv161, i16* %s, align 2
  %113 = load i32*, i32** %ftab.addr, align 8
  %114 = load i16, i16* %s, align 2
  %idxprom162 = zext i16 %114 to i64
  %arrayidx163 = getelementptr inbounds i32, i32* %113, i64 %idxprom162
  %115 = load i32, i32* %arrayidx163, align 4
  %sub164 = sub i32 %115, 1
  store i32 %sub164, i32* %j, align 4
  %116 = load i32, i32* %j, align 4
  %117 = load i32*, i32** %ftab.addr, align 8
  %118 = load i16, i16* %s, align 2
  %idxprom165 = zext i16 %118 to i64
  %arrayidx166 = getelementptr inbounds i32, i32* %117, i64 %idxprom165
  store i32 %116, i32* %arrayidx166, align 4
  %119 = load i32, i32* %i, align 4
  %sub167 = sub nsw i32 %119, 2
  %120 = load i32*, i32** %ptr.addr, align 8
  %121 = load i32, i32* %j, align 4
  %idxprom168 = sext i32 %121 to i64
  %arrayidx169 = getelementptr inbounds i32, i32* %120, i64 %idxprom168
  store i32 %sub167, i32* %arrayidx169, align 4
  %122 = load i16, i16* %s, align 2
  %conv170 = zext i16 %122 to i32
  %shr171 = ashr i32 %conv170, 8
  %123 = load i8*, i8** %block.addr, align 8
  %124 = load i32, i32* %i, align 4
  %sub172 = sub nsw i32 %124, 3
  %idxprom173 = sext i32 %sub172 to i64
  %arrayidx174 = getelementptr inbounds i8, i8* %123, i64 %idxprom173
  %125 = load i8, i8* %arrayidx174, align 1
  %conv175 = zext i8 %125 to i32
  %shl176 = shl i32 %conv175, 8
  %or177 = or i32 %shr171, %shl176
  %conv178 = trunc i32 %or177 to i16
  store i16 %conv178, i16* %s, align 2
  %126 = load i32*, i32** %ftab.addr, align 8
  %127 = load i16, i16* %s, align 2
  %idxprom179 = zext i16 %127 to i64
  %arrayidx180 = getelementptr inbounds i32, i32* %126, i64 %idxprom179
  %128 = load i32, i32* %arrayidx180, align 4
  %sub181 = sub i32 %128, 1
  store i32 %sub181, i32* %j, align 4
  %129 = load i32, i32* %j, align 4
  %130 = load i32*, i32** %ftab.addr, align 8
  %131 = load i16, i16* %s, align 2
  %idxprom182 = zext i16 %131 to i64
  %arrayidx183 = getelementptr inbounds i32, i32* %130, i64 %idxprom182
  store i32 %129, i32* %arrayidx183, align 4
  %132 = load i32, i32* %i, align 4
  %sub184 = sub nsw i32 %132, 3
  %133 = load i32*, i32** %ptr.addr, align 8
  %134 = load i32, i32* %j, align 4
  %idxprom185 = sext i32 %134 to i64
  %arrayidx186 = getelementptr inbounds i32, i32* %133, i64 %idxprom185
  store i32 %sub184, i32* %arrayidx186, align 4
  br label %for.inc187

for.inc187:                                       ; preds = %for.body120
  %135 = load i32, i32* %i, align 4
  %sub188 = sub nsw i32 %135, 4
  store i32 %sub188, i32* %i, align 4
  br label %for.cond117

for.end189:                                       ; preds = %for.cond117
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc209, %for.end189
  %136 = load i32, i32* %i, align 4
  %cmp191 = icmp sge i32 %136, 0
  br i1 %cmp191, label %for.body193, label %for.end211

for.body193:                                      ; preds = %for.cond190
  %137 = load i16, i16* %s, align 2
  %conv194 = zext i16 %137 to i32
  %shr195 = ashr i32 %conv194, 8
  %138 = load i8*, i8** %block.addr, align 8
  %139 = load i32, i32* %i, align 4
  %idxprom196 = sext i32 %139 to i64
  %arrayidx197 = getelementptr inbounds i8, i8* %138, i64 %idxprom196
  %140 = load i8, i8* %arrayidx197, align 1
  %conv198 = zext i8 %140 to i32
  %shl199 = shl i32 %conv198, 8
  %or200 = or i32 %shr195, %shl199
  %conv201 = trunc i32 %or200 to i16
  store i16 %conv201, i16* %s, align 2
  %141 = load i32*, i32** %ftab.addr, align 8
  %142 = load i16, i16* %s, align 2
  %idxprom202 = zext i16 %142 to i64
  %arrayidx203 = getelementptr inbounds i32, i32* %141, i64 %idxprom202
  %143 = load i32, i32* %arrayidx203, align 4
  %sub204 = sub i32 %143, 1
  store i32 %sub204, i32* %j, align 4
  %144 = load i32, i32* %j, align 4
  %145 = load i32*, i32** %ftab.addr, align 8
  %146 = load i16, i16* %s, align 2
  %idxprom205 = zext i16 %146 to i64
  %arrayidx206 = getelementptr inbounds i32, i32* %145, i64 %idxprom205
  store i32 %144, i32* %arrayidx206, align 4
  %147 = load i32, i32* %i, align 4
  %148 = load i32*, i32** %ptr.addr, align 8
  %149 = load i32, i32* %j, align 4
  %idxprom207 = sext i32 %149 to i64
  %arrayidx208 = getelementptr inbounds i32, i32* %148, i64 %idxprom207
  store i32 %147, i32* %arrayidx208, align 4
  br label %for.inc209

for.inc209:                                       ; preds = %for.body193
  %150 = load i32, i32* %i, align 4
  %dec210 = add nsw i32 %150, -1
  store i32 %dec210, i32* %i, align 4
  br label %for.cond190

for.end211:                                       ; preds = %for.cond190
  store i32 0, i32* %i, align 4
  br label %for.cond212

for.cond212:                                      ; preds = %for.inc220, %for.end211
  %151 = load i32, i32* %i, align 4
  %cmp213 = icmp sle i32 %151, 255
  br i1 %cmp213, label %for.body215, label %for.end222

for.body215:                                      ; preds = %for.cond212
  %152 = load i32, i32* %i, align 4
  %idxprom216 = sext i32 %152 to i64
  %arrayidx217 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom216
  store i8 0, i8* %arrayidx217, align 1
  %153 = load i32, i32* %i, align 4
  %154 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %154 to i64
  %arrayidx219 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom218
  store i32 %153, i32* %arrayidx219, align 4
  br label %for.inc220

for.inc220:                                       ; preds = %for.body215
  %155 = load i32, i32* %i, align 4
  %inc221 = add nsw i32 %155, 1
  store i32 %inc221, i32* %i, align 4
  br label %for.cond212

for.end222:                                       ; preds = %for.cond212
  store i32 1, i32* %h, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.end222
  %156 = load i32, i32* %h, align 4
  %mul = mul nsw i32 3, %156
  %add223 = add nsw i32 %mul, 1
  store i32 %add223, i32* %h, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %157 = load i32, i32* %h, align 4
  %cmp224 = icmp sle i32 %157, 256
  br i1 %cmp224, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body226

do.body226:                                       ; preds = %do.cond273, %do.end
  %158 = load i32, i32* %h, align 4
  %div = sdiv i32 %158, 3
  store i32 %div, i32* %h, align 4
  %159 = load i32, i32* %h, align 4
  store i32 %159, i32* %i, align 4
  br label %for.cond227

for.cond227:                                      ; preds = %for.inc270, %do.body226
  %160 = load i32, i32* %i, align 4
  %cmp228 = icmp sle i32 %160, 255
  br i1 %cmp228, label %for.body230, label %for.end272

for.body230:                                      ; preds = %for.cond227
  %161 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %161 to i64
  %arrayidx232 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom231
  %162 = load i32, i32* %arrayidx232, align 4
  store i32 %162, i32* %vv, align 4
  %163 = load i32, i32* %i, align 4
  store i32 %163, i32* %j, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end267, %for.body230
  %164 = load i32*, i32** %ftab.addr, align 8
  %165 = load i32, i32* %j, align 4
  %166 = load i32, i32* %h, align 4
  %sub233 = sub nsw i32 %165, %166
  %idxprom234 = sext i32 %sub233 to i64
  %arrayidx235 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom234
  %167 = load i32, i32* %arrayidx235, align 4
  %add236 = add nsw i32 %167, 1
  %shl237 = shl i32 %add236, 8
  %idxprom238 = sext i32 %shl237 to i64
  %arrayidx239 = getelementptr inbounds i32, i32* %164, i64 %idxprom238
  %168 = load i32, i32* %arrayidx239, align 4
  %169 = load i32*, i32** %ftab.addr, align 8
  %170 = load i32, i32* %j, align 4
  %171 = load i32, i32* %h, align 4
  %sub240 = sub nsw i32 %170, %171
  %idxprom241 = sext i32 %sub240 to i64
  %arrayidx242 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom241
  %172 = load i32, i32* %arrayidx242, align 4
  %shl243 = shl i32 %172, 8
  %idxprom244 = sext i32 %shl243 to i64
  %arrayidx245 = getelementptr inbounds i32, i32* %169, i64 %idxprom244
  %173 = load i32, i32* %arrayidx245, align 4
  %sub246 = sub i32 %168, %173
  %174 = load i32*, i32** %ftab.addr, align 8
  %175 = load i32, i32* %vv, align 4
  %add247 = add nsw i32 %175, 1
  %shl248 = shl i32 %add247, 8
  %idxprom249 = sext i32 %shl248 to i64
  %arrayidx250 = getelementptr inbounds i32, i32* %174, i64 %idxprom249
  %176 = load i32, i32* %arrayidx250, align 4
  %177 = load i32*, i32** %ftab.addr, align 8
  %178 = load i32, i32* %vv, align 4
  %shl251 = shl i32 %178, 8
  %idxprom252 = sext i32 %shl251 to i64
  %arrayidx253 = getelementptr inbounds i32, i32* %177, i64 %idxprom252
  %179 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub i32 %176, %179
  %cmp255 = icmp ugt i32 %sub246, %sub254
  br i1 %cmp255, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %180 = load i32, i32* %j, align 4
  %181 = load i32, i32* %h, align 4
  %sub257 = sub nsw i32 %180, %181
  %idxprom258 = sext i32 %sub257 to i64
  %arrayidx259 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom258
  %182 = load i32, i32* %arrayidx259, align 4
  %183 = load i32, i32* %j, align 4
  %idxprom260 = sext i32 %183 to i64
  %arrayidx261 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom260
  store i32 %182, i32* %arrayidx261, align 4
  %184 = load i32, i32* %j, align 4
  %185 = load i32, i32* %h, align 4
  %sub262 = sub nsw i32 %184, %185
  store i32 %sub262, i32* %j, align 4
  %186 = load i32, i32* %j, align 4
  %187 = load i32, i32* %h, align 4
  %sub263 = sub nsw i32 %187, 1
  %cmp264 = icmp sle i32 %186, %sub263
  br i1 %cmp264, label %if.then266, label %if.end267

if.then266:                                       ; preds = %while.body
  br label %zero

if.end267:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %zero

zero:                                             ; preds = %while.end, %if.then266
  %188 = load i32, i32* %vv, align 4
  %189 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %189 to i64
  %arrayidx269 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom268
  store i32 %188, i32* %arrayidx269, align 4
  br label %for.inc270

for.inc270:                                       ; preds = %zero
  %190 = load i32, i32* %i, align 4
  %inc271 = add nsw i32 %190, 1
  store i32 %inc271, i32* %i, align 4
  br label %for.cond227

for.end272:                                       ; preds = %for.cond227
  br label %do.cond273

do.cond273:                                       ; preds = %for.end272
  %191 = load i32, i32* %h, align 4
  %cmp274 = icmp ne i32 %191, 1
  br i1 %cmp274, label %do.body226, label %do.end276

do.end276:                                        ; preds = %do.cond273
  store i32 0, i32* %numQSorted, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond277

for.cond277:                                      ; preds = %for.inc506, %do.end276
  %192 = load i32, i32* %i, align 4
  %cmp278 = icmp sle i32 %192, 255
  br i1 %cmp278, label %for.body280, label %for.end508

for.body280:                                      ; preds = %for.cond277
  %193 = load i32, i32* %i, align 4
  %idxprom281 = sext i32 %193 to i64
  %arrayidx282 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom281
  %194 = load i32, i32* %arrayidx282, align 4
  store i32 %194, i32* %ss, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond283

for.cond283:                                      ; preds = %for.inc326, %for.body280
  %195 = load i32, i32* %j, align 4
  %cmp284 = icmp sle i32 %195, 255
  br i1 %cmp284, label %for.body286, label %for.end328

for.body286:                                      ; preds = %for.cond283
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %ss, align 4
  %cmp287 = icmp ne i32 %196, %197
  br i1 %cmp287, label %if.then289, label %if.end325

if.then289:                                       ; preds = %for.body286
  %198 = load i32, i32* %ss, align 4
  %shl290 = shl i32 %198, 8
  %199 = load i32, i32* %j, align 4
  %add291 = add nsw i32 %shl290, %199
  store i32 %add291, i32* %sb, align 4
  %200 = load i32*, i32** %ftab.addr, align 8
  %201 = load i32, i32* %sb, align 4
  %idxprom292 = sext i32 %201 to i64
  %arrayidx293 = getelementptr inbounds i32, i32* %200, i64 %idxprom292
  %202 = load i32, i32* %arrayidx293, align 4
  %and = and i32 %202, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end321, label %if.then294

if.then294:                                       ; preds = %if.then289
  %203 = load i32*, i32** %ftab.addr, align 8
  %204 = load i32, i32* %sb, align 4
  %idxprom295 = sext i32 %204 to i64
  %arrayidx296 = getelementptr inbounds i32, i32* %203, i64 %idxprom295
  %205 = load i32, i32* %arrayidx296, align 4
  %and297 = and i32 %205, -2097153
  store i32 %and297, i32* %lo, align 4
  %206 = load i32*, i32** %ftab.addr, align 8
  %207 = load i32, i32* %sb, align 4
  %add298 = add nsw i32 %207, 1
  %idxprom299 = sext i32 %add298 to i64
  %arrayidx300 = getelementptr inbounds i32, i32* %206, i64 %idxprom299
  %208 = load i32, i32* %arrayidx300, align 4
  %and301 = and i32 %208, -2097153
  %sub302 = sub i32 %and301, 1
  store i32 %sub302, i32* %hi, align 4
  %209 = load i32, i32* %hi, align 4
  %210 = load i32, i32* %lo, align 4
  %cmp303 = icmp sgt i32 %209, %210
  br i1 %cmp303, label %if.then305, label %if.end320

if.then305:                                       ; preds = %if.then294
  %211 = load i32, i32* %verb.addr, align 4
  %cmp306 = icmp sge i32 %211, 4
  br i1 %cmp306, label %if.then308, label %if.end312

if.then308:                                       ; preds = %if.then305
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %213 = load i32, i32* %ss, align 4
  %214 = load i32, i32* %j, align 4
  %215 = load i32, i32* %numQSorted, align 4
  %216 = load i32, i32* %hi, align 4
  %217 = load i32, i32* %lo, align 4
  %sub309 = sub nsw i32 %216, %217
  %add310 = add nsw i32 %sub309, 1
  %call311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %212, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i32 %213, i32 %214, i32 %215, i32 %add310)
  br label %if.end312

if.end312:                                        ; preds = %if.then308, %if.then305
  %218 = load i32*, i32** %ptr.addr, align 8
  %219 = load i8*, i8** %block.addr, align 8
  %220 = load i16*, i16** %quadrant.addr, align 8
  %221 = load i32, i32* %nblock.addr, align 4
  %222 = load i32, i32* %lo, align 4
  %223 = load i32, i32* %hi, align 4
  %224 = load i32*, i32** %budget.addr, align 8
  call void @mainQSort3(i32* %218, i8* %219, i16* %220, i32 %221, i32 %222, i32 %223, i32 2, i32* %224)
  %225 = load i32, i32* %hi, align 4
  %226 = load i32, i32* %lo, align 4
  %sub313 = sub nsw i32 %225, %226
  %add314 = add nsw i32 %sub313, 1
  %227 = load i32, i32* %numQSorted, align 4
  %add315 = add nsw i32 %227, %add314
  store i32 %add315, i32* %numQSorted, align 4
  %228 = load i32*, i32** %budget.addr, align 8
  %229 = load i32, i32* %228, align 4
  %cmp316 = icmp slt i32 %229, 0
  br i1 %cmp316, label %if.then318, label %if.end319

if.then318:                                       ; preds = %if.end312
  br label %if.end514

if.end319:                                        ; preds = %if.end312
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then294
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then289
  %230 = load i32*, i32** %ftab.addr, align 8
  %231 = load i32, i32* %sb, align 4
  %idxprom322 = sext i32 %231 to i64
  %arrayidx323 = getelementptr inbounds i32, i32* %230, i64 %idxprom322
  %232 = load i32, i32* %arrayidx323, align 4
  %or324 = or i32 %232, 2097152
  store i32 %or324, i32* %arrayidx323, align 4
  br label %if.end325

if.end325:                                        ; preds = %if.end321, %for.body286
  br label %for.inc326

for.inc326:                                       ; preds = %if.end325
  %233 = load i32, i32* %j, align 4
  %inc327 = add nsw i32 %233, 1
  store i32 %inc327, i32* %j, align 4
  br label %for.cond283

for.end328:                                       ; preds = %for.cond283
  %234 = load i32, i32* %ss, align 4
  %idxprom329 = sext i32 %234 to i64
  %arrayidx330 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom329
  %235 = load i8, i8* %arrayidx330, align 1
  %tobool331 = icmp ne i8 %235, 0
  br i1 %tobool331, label %if.then332, label %if.end333

if.then332:                                       ; preds = %for.end328
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %if.end333

if.end333:                                        ; preds = %if.then332, %for.end328
  store i32 0, i32* %j, align 4
  br label %for.cond334

for.cond334:                                      ; preds = %for.inc354, %if.end333
  %236 = load i32, i32* %j, align 4
  %cmp335 = icmp sle i32 %236, 255
  br i1 %cmp335, label %for.body337, label %for.end356

for.body337:                                      ; preds = %for.cond334
  %237 = load i32*, i32** %ftab.addr, align 8
  %238 = load i32, i32* %j, align 4
  %shl338 = shl i32 %238, 8
  %239 = load i32, i32* %ss, align 4
  %add339 = add nsw i32 %shl338, %239
  %idxprom340 = sext i32 %add339 to i64
  %arrayidx341 = getelementptr inbounds i32, i32* %237, i64 %idxprom340
  %240 = load i32, i32* %arrayidx341, align 4
  %and342 = and i32 %240, -2097153
  %241 = load i32, i32* %j, align 4
  %idxprom343 = sext i32 %241 to i64
  %arrayidx344 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom343
  store i32 %and342, i32* %arrayidx344, align 4
  %242 = load i32*, i32** %ftab.addr, align 8
  %243 = load i32, i32* %j, align 4
  %shl345 = shl i32 %243, 8
  %244 = load i32, i32* %ss, align 4
  %add346 = add nsw i32 %shl345, %244
  %add347 = add nsw i32 %add346, 1
  %idxprom348 = sext i32 %add347 to i64
  %arrayidx349 = getelementptr inbounds i32, i32* %242, i64 %idxprom348
  %245 = load i32, i32* %arrayidx349, align 4
  %and350 = and i32 %245, -2097153
  %sub351 = sub i32 %and350, 1
  %246 = load i32, i32* %j, align 4
  %idxprom352 = sext i32 %246 to i64
  %arrayidx353 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom352
  store i32 %sub351, i32* %arrayidx353, align 4
  br label %for.inc354

for.inc354:                                       ; preds = %for.body337
  %247 = load i32, i32* %j, align 4
  %inc355 = add nsw i32 %247, 1
  store i32 %inc355, i32* %j, align 4
  br label %for.cond334

for.end356:                                       ; preds = %for.cond334
  %248 = load i32*, i32** %ftab.addr, align 8
  %249 = load i32, i32* %ss, align 4
  %shl357 = shl i32 %249, 8
  %idxprom358 = sext i32 %shl357 to i64
  %arrayidx359 = getelementptr inbounds i32, i32* %248, i64 %idxprom358
  %250 = load i32, i32* %arrayidx359, align 4
  %and360 = and i32 %250, -2097153
  store i32 %and360, i32* %j, align 4
  br label %for.cond361

for.cond361:                                      ; preds = %for.inc387, %for.end356
  %251 = load i32, i32* %j, align 4
  %252 = load i32, i32* %ss, align 4
  %idxprom362 = sext i32 %252 to i64
  %arrayidx363 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom362
  %253 = load i32, i32* %arrayidx363, align 4
  %cmp364 = icmp slt i32 %251, %253
  br i1 %cmp364, label %for.body366, label %for.end389

for.body366:                                      ; preds = %for.cond361
  %254 = load i32*, i32** %ptr.addr, align 8
  %255 = load i32, i32* %j, align 4
  %idxprom367 = sext i32 %255 to i64
  %arrayidx368 = getelementptr inbounds i32, i32* %254, i64 %idxprom367
  %256 = load i32, i32* %arrayidx368, align 4
  %sub369 = sub i32 %256, 1
  store i32 %sub369, i32* %k, align 4
  %257 = load i32, i32* %k, align 4
  %cmp370 = icmp slt i32 %257, 0
  br i1 %cmp370, label %if.then372, label %if.end374

if.then372:                                       ; preds = %for.body366
  %258 = load i32, i32* %nblock.addr, align 4
  %259 = load i32, i32* %k, align 4
  %add373 = add nsw i32 %259, %258
  store i32 %add373, i32* %k, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.then372, %for.body366
  %260 = load i8*, i8** %block.addr, align 8
  %261 = load i32, i32* %k, align 4
  %idxprom375 = sext i32 %261 to i64
  %arrayidx376 = getelementptr inbounds i8, i8* %260, i64 %idxprom375
  %262 = load i8, i8* %arrayidx376, align 1
  store i8 %262, i8* %c1, align 1
  %263 = load i8, i8* %c1, align 1
  %idxprom377 = zext i8 %263 to i64
  %arrayidx378 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom377
  %264 = load i8, i8* %arrayidx378, align 1
  %tobool379 = icmp ne i8 %264, 0
  br i1 %tobool379, label %if.end386, label %if.then380

if.then380:                                       ; preds = %if.end374
  %265 = load i32, i32* %k, align 4
  %266 = load i32*, i32** %ptr.addr, align 8
  %267 = load i8, i8* %c1, align 1
  %idxprom381 = zext i8 %267 to i64
  %arrayidx382 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom381
  %268 = load i32, i32* %arrayidx382, align 4
  %inc383 = add nsw i32 %268, 1
  store i32 %inc383, i32* %arrayidx382, align 4
  %idxprom384 = sext i32 %268 to i64
  %arrayidx385 = getelementptr inbounds i32, i32* %266, i64 %idxprom384
  store i32 %265, i32* %arrayidx385, align 4
  br label %if.end386

if.end386:                                        ; preds = %if.then380, %if.end374
  br label %for.inc387

for.inc387:                                       ; preds = %if.end386
  %269 = load i32, i32* %j, align 4
  %inc388 = add nsw i32 %269, 1
  store i32 %inc388, i32* %j, align 4
  br label %for.cond361

for.end389:                                       ; preds = %for.cond361
  %270 = load i32*, i32** %ftab.addr, align 8
  %271 = load i32, i32* %ss, align 4
  %add390 = add nsw i32 %271, 1
  %shl391 = shl i32 %add390, 8
  %idxprom392 = sext i32 %shl391 to i64
  %arrayidx393 = getelementptr inbounds i32, i32* %270, i64 %idxprom392
  %272 = load i32, i32* %arrayidx393, align 4
  %and394 = and i32 %272, -2097153
  %sub395 = sub i32 %and394, 1
  store i32 %sub395, i32* %j, align 4
  br label %for.cond396

for.cond396:                                      ; preds = %for.inc422, %for.end389
  %273 = load i32, i32* %j, align 4
  %274 = load i32, i32* %ss, align 4
  %idxprom397 = sext i32 %274 to i64
  %arrayidx398 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom397
  %275 = load i32, i32* %arrayidx398, align 4
  %cmp399 = icmp sgt i32 %273, %275
  br i1 %cmp399, label %for.body401, label %for.end424

for.body401:                                      ; preds = %for.cond396
  %276 = load i32*, i32** %ptr.addr, align 8
  %277 = load i32, i32* %j, align 4
  %idxprom402 = sext i32 %277 to i64
  %arrayidx403 = getelementptr inbounds i32, i32* %276, i64 %idxprom402
  %278 = load i32, i32* %arrayidx403, align 4
  %sub404 = sub i32 %278, 1
  store i32 %sub404, i32* %k, align 4
  %279 = load i32, i32* %k, align 4
  %cmp405 = icmp slt i32 %279, 0
  br i1 %cmp405, label %if.then407, label %if.end409

if.then407:                                       ; preds = %for.body401
  %280 = load i32, i32* %nblock.addr, align 4
  %281 = load i32, i32* %k, align 4
  %add408 = add nsw i32 %281, %280
  store i32 %add408, i32* %k, align 4
  br label %if.end409

if.end409:                                        ; preds = %if.then407, %for.body401
  %282 = load i8*, i8** %block.addr, align 8
  %283 = load i32, i32* %k, align 4
  %idxprom410 = sext i32 %283 to i64
  %arrayidx411 = getelementptr inbounds i8, i8* %282, i64 %idxprom410
  %284 = load i8, i8* %arrayidx411, align 1
  store i8 %284, i8* %c1, align 1
  %285 = load i8, i8* %c1, align 1
  %idxprom412 = zext i8 %285 to i64
  %arrayidx413 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom412
  %286 = load i8, i8* %arrayidx413, align 1
  %tobool414 = icmp ne i8 %286, 0
  br i1 %tobool414, label %if.end421, label %if.then415

if.then415:                                       ; preds = %if.end409
  %287 = load i32, i32* %k, align 4
  %288 = load i32*, i32** %ptr.addr, align 8
  %289 = load i8, i8* %c1, align 1
  %idxprom416 = zext i8 %289 to i64
  %arrayidx417 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom416
  %290 = load i32, i32* %arrayidx417, align 4
  %dec418 = add nsw i32 %290, -1
  store i32 %dec418, i32* %arrayidx417, align 4
  %idxprom419 = sext i32 %290 to i64
  %arrayidx420 = getelementptr inbounds i32, i32* %288, i64 %idxprom419
  store i32 %287, i32* %arrayidx420, align 4
  br label %if.end421

if.end421:                                        ; preds = %if.then415, %if.end409
  br label %for.inc422

for.inc422:                                       ; preds = %if.end421
  %291 = load i32, i32* %j, align 4
  %dec423 = add nsw i32 %291, -1
  store i32 %dec423, i32* %j, align 4
  br label %for.cond396

for.end424:                                       ; preds = %for.cond396
  %292 = load i32, i32* %ss, align 4
  %idxprom425 = sext i32 %292 to i64
  %arrayidx426 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom425
  %293 = load i32, i32* %arrayidx426, align 4
  %sub427 = sub nsw i32 %293, 1
  %294 = load i32, i32* %ss, align 4
  %idxprom428 = sext i32 %294 to i64
  %arrayidx429 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom428
  %295 = load i32, i32* %arrayidx429, align 4
  %cmp430 = icmp eq i32 %sub427, %295
  br i1 %cmp430, label %if.end442, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end424
  %296 = load i32, i32* %ss, align 4
  %idxprom432 = sext i32 %296 to i64
  %arrayidx433 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom432
  %297 = load i32, i32* %arrayidx433, align 4
  %cmp434 = icmp eq i32 %297, 0
  br i1 %cmp434, label %land.lhs.true, label %if.then441

land.lhs.true:                                    ; preds = %lor.lhs.false
  %298 = load i32, i32* %ss, align 4
  %idxprom436 = sext i32 %298 to i64
  %arrayidx437 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom436
  %299 = load i32, i32* %arrayidx437, align 4
  %300 = load i32, i32* %nblock.addr, align 4
  %sub438 = sub nsw i32 %300, 1
  %cmp439 = icmp eq i32 %299, %sub438
  br i1 %cmp439, label %if.end442, label %if.then441

if.then441:                                       ; preds = %land.lhs.true, %lor.lhs.false
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %if.end442

if.end442:                                        ; preds = %if.then441, %land.lhs.true, %for.end424
  store i32 0, i32* %j, align 4
  br label %for.cond443

for.cond443:                                      ; preds = %for.inc452, %if.end442
  %301 = load i32, i32* %j, align 4
  %cmp444 = icmp sle i32 %301, 255
  br i1 %cmp444, label %for.body446, label %for.end454

for.body446:                                      ; preds = %for.cond443
  %302 = load i32*, i32** %ftab.addr, align 8
  %303 = load i32, i32* %j, align 4
  %shl447 = shl i32 %303, 8
  %304 = load i32, i32* %ss, align 4
  %add448 = add nsw i32 %shl447, %304
  %idxprom449 = sext i32 %add448 to i64
  %arrayidx450 = getelementptr inbounds i32, i32* %302, i64 %idxprom449
  %305 = load i32, i32* %arrayidx450, align 4
  %or451 = or i32 %305, 2097152
  store i32 %or451, i32* %arrayidx450, align 4
  br label %for.inc452

for.inc452:                                       ; preds = %for.body446
  %306 = load i32, i32* %j, align 4
  %inc453 = add nsw i32 %306, 1
  store i32 %inc453, i32* %j, align 4
  br label %for.cond443

for.end454:                                       ; preds = %for.cond443
  %307 = load i32, i32* %ss, align 4
  %idxprom455 = sext i32 %307 to i64
  %arrayidx456 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom455
  store i8 1, i8* %arrayidx456, align 1
  %308 = load i32, i32* %i, align 4
  %cmp457 = icmp slt i32 %308, 255
  br i1 %cmp457, label %if.then459, label %if.end505

if.then459:                                       ; preds = %for.end454
  %309 = load i32*, i32** %ftab.addr, align 8
  %310 = load i32, i32* %ss, align 4
  %shl460 = shl i32 %310, 8
  %idxprom461 = sext i32 %shl460 to i64
  %arrayidx462 = getelementptr inbounds i32, i32* %309, i64 %idxprom461
  %311 = load i32, i32* %arrayidx462, align 4
  %and463 = and i32 %311, -2097153
  store i32 %and463, i32* %bbStart, align 4
  %312 = load i32*, i32** %ftab.addr, align 8
  %313 = load i32, i32* %ss, align 4
  %add464 = add nsw i32 %313, 1
  %shl465 = shl i32 %add464, 8
  %idxprom466 = sext i32 %shl465 to i64
  %arrayidx467 = getelementptr inbounds i32, i32* %312, i64 %idxprom466
  %314 = load i32, i32* %arrayidx467, align 4
  %and468 = and i32 %314, -2097153
  %315 = load i32, i32* %bbStart, align 4
  %sub469 = sub i32 %and468, %315
  store i32 %sub469, i32* %bbSize, align 4
  store i32 0, i32* %shifts, align 4
  br label %while.cond470

while.cond470:                                    ; preds = %while.body474, %if.then459
  %316 = load i32, i32* %bbSize, align 4
  %317 = load i32, i32* %shifts, align 4
  %shr471 = ashr i32 %316, %317
  %cmp472 = icmp sgt i32 %shr471, 65534
  br i1 %cmp472, label %while.body474, label %while.end476

while.body474:                                    ; preds = %while.cond470
  %318 = load i32, i32* %shifts, align 4
  %inc475 = add nsw i32 %318, 1
  store i32 %inc475, i32* %shifts, align 4
  br label %while.cond470

while.end476:                                     ; preds = %while.cond470
  %319 = load i32, i32* %bbSize, align 4
  %sub477 = sub nsw i32 %319, 1
  store i32 %sub477, i32* %j, align 4
  br label %for.cond478

for.cond478:                                      ; preds = %for.inc496, %while.end476
  %320 = load i32, i32* %j, align 4
  %cmp479 = icmp sge i32 %320, 0
  br i1 %cmp479, label %for.body481, label %for.end498

for.body481:                                      ; preds = %for.cond478
  %321 = load i32*, i32** %ptr.addr, align 8
  %322 = load i32, i32* %bbStart, align 4
  %323 = load i32, i32* %j, align 4
  %add482 = add nsw i32 %322, %323
  %idxprom483 = sext i32 %add482 to i64
  %arrayidx484 = getelementptr inbounds i32, i32* %321, i64 %idxprom483
  %324 = load i32, i32* %arrayidx484, align 4
  store i32 %324, i32* %a2update, align 4
  %325 = load i32, i32* %j, align 4
  %326 = load i32, i32* %shifts, align 4
  %shr485 = ashr i32 %325, %326
  %conv486 = trunc i32 %shr485 to i16
  store i16 %conv486, i16* %qVal, align 2
  %327 = load i16, i16* %qVal, align 2
  %328 = load i16*, i16** %quadrant.addr, align 8
  %329 = load i32, i32* %a2update, align 4
  %idxprom487 = sext i32 %329 to i64
  %arrayidx488 = getelementptr inbounds i16, i16* %328, i64 %idxprom487
  store i16 %327, i16* %arrayidx488, align 2
  %330 = load i32, i32* %a2update, align 4
  %cmp489 = icmp slt i32 %330, 34
  br i1 %cmp489, label %if.then491, label %if.end495

if.then491:                                       ; preds = %for.body481
  %331 = load i16, i16* %qVal, align 2
  %332 = load i16*, i16** %quadrant.addr, align 8
  %333 = load i32, i32* %a2update, align 4
  %334 = load i32, i32* %nblock.addr, align 4
  %add492 = add nsw i32 %333, %334
  %idxprom493 = sext i32 %add492 to i64
  %arrayidx494 = getelementptr inbounds i16, i16* %332, i64 %idxprom493
  store i16 %331, i16* %arrayidx494, align 2
  br label %if.end495

if.end495:                                        ; preds = %if.then491, %for.body481
  br label %for.inc496

for.inc496:                                       ; preds = %if.end495
  %335 = load i32, i32* %j, align 4
  %dec497 = add nsw i32 %335, -1
  store i32 %dec497, i32* %j, align 4
  br label %for.cond478

for.end498:                                       ; preds = %for.cond478
  %336 = load i32, i32* %bbSize, align 4
  %sub499 = sub nsw i32 %336, 1
  %337 = load i32, i32* %shifts, align 4
  %shr500 = ashr i32 %sub499, %337
  %cmp501 = icmp sle i32 %shr500, 65535
  br i1 %cmp501, label %if.end504, label %if.then503

if.then503:                                       ; preds = %for.end498
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %if.end504

if.end504:                                        ; preds = %if.then503, %for.end498
  br label %if.end505

if.end505:                                        ; preds = %if.end504, %for.end454
  br label %for.inc506

for.inc506:                                       ; preds = %if.end505
  %338 = load i32, i32* %i, align 4
  %inc507 = add nsw i32 %338, 1
  store i32 %inc507, i32* %i, align 4
  br label %for.cond277

for.end508:                                       ; preds = %for.cond277
  %339 = load i32, i32* %verb.addr, align 4
  %cmp509 = icmp sge i32 %339, 4
  br i1 %cmp509, label %if.then511, label %if.end514

if.then511:                                       ; preds = %for.end508
  %340 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %341 = load i32, i32* %nblock.addr, align 4
  %342 = load i32, i32* %numQSorted, align 4
  %343 = load i32, i32* %nblock.addr, align 4
  %344 = load i32, i32* %numQSorted, align 4
  %sub512 = sub nsw i32 %343, %344
  %call513 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %340, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i32 %341, i32 %342, i32 %sub512)
  br label %if.end514

if.end514:                                        ; preds = %if.then511, %for.end508, %if.then318
  ret void
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainQSort3(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %loSt, i32 %hiSt, i32 %dSt, i32* %budget) #0 {
entry:
  %ptr.addr = alloca i32*, align 8
  %block.addr = alloca i8*, align 8
  %quadrant.addr = alloca i16*, align 8
  %nblock.addr = alloca i32, align 4
  %loSt.addr = alloca i32, align 4
  %hiSt.addr = alloca i32, align 4
  %dSt.addr = alloca i32, align 4
  %budget.addr = alloca i32*, align 8
  %unLo = alloca i32, align 4
  %unHi = alloca i32, align 4
  %ltLo = alloca i32, align 4
  %gtHi = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %med = alloca i32, align 4
  %sp = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %d = alloca i32, align 4
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %stackD = alloca [100 x i32], align 16
  %nextLo = alloca [3 x i32], align 4
  %nextHi = alloca [3 x i32], align 4
  %nextD = alloca [3 x i32], align 4
  %zztmp = alloca i32, align 4
  %zztmp84 = alloca i32, align 4
  %zztmp106 = alloca i32, align 4
  %yyp1 = alloca i32, align 4
  %yyp2 = alloca i32, align 4
  %yyn = alloca i32, align 4
  %zztmp141 = alloca i32, align 4
  %yyp1164 = alloca i32, align 4
  %yyp2165 = alloca i32, align 4
  %yyn168 = alloca i32, align 4
  %zztmp173 = alloca i32, align 4
  %tz = alloca i32, align 4
  %tz235 = alloca i32, align 4
  %tz258 = alloca i32, align 4
  store i32* %ptr, i32** %ptr.addr, align 8
  store i8* %block, i8** %block.addr, align 8
  store i16* %quadrant, i16** %quadrant.addr, align 8
  store i32 %nblock, i32* %nblock.addr, align 4
  store i32 %loSt, i32* %loSt.addr, align 4
  store i32 %hiSt, i32* %hiSt.addr, align 4
  store i32 %dSt, i32* %dSt.addr, align 4
  store i32* %budget, i32** %budget.addr, align 8
  store i32 0, i32* %sp, align 4
  %0 = load i32, i32* %loSt.addr, align 4
  %1 = load i32, i32* %sp, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom
  store i32 %0, i32* %arrayidx, align 4
  %2 = load i32, i32* %hiSt.addr, align 4
  %3 = load i32, i32* %sp, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom1
  store i32 %2, i32* %arrayidx2, align 4
  %4 = load i32, i32* %dSt.addr, align 4
  %5 = load i32, i32* %sp, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom3
  store i32 %4, i32* %arrayidx4, align 4
  %6 = load i32, i32* %sp, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %sp, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end271, %if.then120, %if.end17, %entry
  %7 = load i32, i32* %sp, align 4
  %cmp = icmp sgt i32 %7, 0
  br i1 %cmp, label %while.body, label %while.end302

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %sp, align 4
  %cmp5 = icmp slt i32 %8, 100
  br i1 %cmp5, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %9 = load i32, i32* %sp, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %sp, align 4
  %10 = load i32, i32* %sp, align 4
  %idxprom6 = sext i32 %10 to i64
  %arrayidx7 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom6
  %11 = load i32, i32* %arrayidx7, align 4
  store i32 %11, i32* %lo, align 4
  %12 = load i32, i32* %sp, align 4
  %idxprom8 = sext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom8
  %13 = load i32, i32* %arrayidx9, align 4
  store i32 %13, i32* %hi, align 4
  %14 = load i32, i32* %sp, align 4
  %idxprom10 = sext i32 %14 to i64
  %arrayidx11 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom10
  %15 = load i32, i32* %arrayidx11, align 4
  store i32 %15, i32* %d, align 4
  %16 = load i32, i32* %hi, align 4
  %17 = load i32, i32* %lo, align 4
  %sub = sub nsw i32 %16, %17
  %cmp12 = icmp slt i32 %sub, 20
  br i1 %cmp12, label %if.then14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i32, i32* %d, align 4
  %cmp13 = icmp sgt i32 %18, 14
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  %19 = load i32*, i32** %ptr.addr, align 8
  %20 = load i8*, i8** %block.addr, align 8
  %21 = load i16*, i16** %quadrant.addr, align 8
  %22 = load i32, i32* %nblock.addr, align 4
  %23 = load i32, i32* %lo, align 4
  %24 = load i32, i32* %hi, align 4
  %25 = load i32, i32* %d, align 4
  %26 = load i32*, i32** %budget.addr, align 8
  call void @mainSimpleSort(i32* %19, i8* %20, i16* %21, i32 %22, i32 %23, i32 %24, i32 %25, i32* %26)
  %27 = load i32*, i32** %budget.addr, align 8
  %28 = load i32, i32* %27, align 4
  %cmp15 = icmp slt i32 %28, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then14
  br label %while.end302

if.end17:                                         ; preds = %if.then14
  br label %while.cond

if.end18:                                         ; preds = %lor.lhs.false
  %29 = load i8*, i8** %block.addr, align 8
  %30 = load i32*, i32** %ptr.addr, align 8
  %31 = load i32, i32* %lo, align 4
  %idxprom19 = sext i32 %31 to i64
  %arrayidx20 = getelementptr inbounds i32, i32* %30, i64 %idxprom19
  %32 = load i32, i32* %arrayidx20, align 4
  %33 = load i32, i32* %d, align 4
  %add = add i32 %32, %33
  %idxprom21 = zext i32 %add to i64
  %arrayidx22 = getelementptr inbounds i8, i8* %29, i64 %idxprom21
  %34 = load i8, i8* %arrayidx22, align 1
  %35 = load i8*, i8** %block.addr, align 8
  %36 = load i32*, i32** %ptr.addr, align 8
  %37 = load i32, i32* %hi, align 4
  %idxprom23 = sext i32 %37 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %36, i64 %idxprom23
  %38 = load i32, i32* %arrayidx24, align 4
  %39 = load i32, i32* %d, align 4
  %add25 = add i32 %38, %39
  %idxprom26 = zext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %35, i64 %idxprom26
  %40 = load i8, i8* %arrayidx27, align 1
  %41 = load i8*, i8** %block.addr, align 8
  %42 = load i32*, i32** %ptr.addr, align 8
  %43 = load i32, i32* %lo, align 4
  %44 = load i32, i32* %hi, align 4
  %add28 = add nsw i32 %43, %44
  %shr = ashr i32 %add28, 1
  %idxprom29 = sext i32 %shr to i64
  %arrayidx30 = getelementptr inbounds i32, i32* %42, i64 %idxprom29
  %45 = load i32, i32* %arrayidx30, align 4
  %46 = load i32, i32* %d, align 4
  %add31 = add i32 %45, %46
  %idxprom32 = zext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds i8, i8* %41, i64 %idxprom32
  %47 = load i8, i8* %arrayidx33, align 1
  %call = call zeroext i8 @mmed3(i8 zeroext %34, i8 zeroext %40, i8 zeroext %47)
  %conv = zext i8 %call to i32
  store i32 %conv, i32* %med, align 4
  %48 = load i32, i32* %lo, align 4
  store i32 %48, i32* %ltLo, align 4
  store i32 %48, i32* %unLo, align 4
  %49 = load i32, i32* %hi, align 4
  store i32 %49, i32* %gtHi, align 4
  store i32 %49, i32* %unHi, align 4
  br label %while.body35

while.body35:                                     ; preds = %if.end105, %if.end18
  br label %while.body37

while.body37:                                     ; preds = %if.end66, %if.then51, %while.body35
  %50 = load i32, i32* %unLo, align 4
  %51 = load i32, i32* %unHi, align 4
  %cmp38 = icmp sgt i32 %50, %51
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %while.body37
  br label %while.end

if.end41:                                         ; preds = %while.body37
  %52 = load i8*, i8** %block.addr, align 8
  %53 = load i32*, i32** %ptr.addr, align 8
  %54 = load i32, i32* %unLo, align 4
  %idxprom42 = sext i32 %54 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %53, i64 %idxprom42
  %55 = load i32, i32* %arrayidx43, align 4
  %56 = load i32, i32* %d, align 4
  %add44 = add i32 %55, %56
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %52, i64 %idxprom45
  %57 = load i8, i8* %arrayidx46, align 1
  %conv47 = zext i8 %57 to i32
  %58 = load i32, i32* %med, align 4
  %sub48 = sub nsw i32 %conv47, %58
  store i32 %sub48, i32* %n, align 4
  %59 = load i32, i32* %n, align 4
  %cmp49 = icmp eq i32 %59, 0
  br i1 %cmp49, label %if.then51, label %if.end62

if.then51:                                        ; preds = %if.end41
  %60 = load i32*, i32** %ptr.addr, align 8
  %61 = load i32, i32* %unLo, align 4
  %idxprom52 = sext i32 %61 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %60, i64 %idxprom52
  %62 = load i32, i32* %arrayidx53, align 4
  store i32 %62, i32* %zztmp, align 4
  %63 = load i32*, i32** %ptr.addr, align 8
  %64 = load i32, i32* %ltLo, align 4
  %idxprom54 = sext i32 %64 to i64
  %arrayidx55 = getelementptr inbounds i32, i32* %63, i64 %idxprom54
  %65 = load i32, i32* %arrayidx55, align 4
  %66 = load i32*, i32** %ptr.addr, align 8
  %67 = load i32, i32* %unLo, align 4
  %idxprom56 = sext i32 %67 to i64
  %arrayidx57 = getelementptr inbounds i32, i32* %66, i64 %idxprom56
  store i32 %65, i32* %arrayidx57, align 4
  %68 = load i32, i32* %zztmp, align 4
  %69 = load i32*, i32** %ptr.addr, align 8
  %70 = load i32, i32* %ltLo, align 4
  %idxprom58 = sext i32 %70 to i64
  %arrayidx59 = getelementptr inbounds i32, i32* %69, i64 %idxprom58
  store i32 %68, i32* %arrayidx59, align 4
  %71 = load i32, i32* %ltLo, align 4
  %inc60 = add nsw i32 %71, 1
  store i32 %inc60, i32* %ltLo, align 4
  %72 = load i32, i32* %unLo, align 4
  %inc61 = add nsw i32 %72, 1
  store i32 %inc61, i32* %unLo, align 4
  br label %while.body37

if.end62:                                         ; preds = %if.end41
  %73 = load i32, i32* %n, align 4
  %cmp63 = icmp sgt i32 %73, 0
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end62
  br label %while.end

if.end66:                                         ; preds = %if.end62
  %74 = load i32, i32* %unLo, align 4
  %inc67 = add nsw i32 %74, 1
  store i32 %inc67, i32* %unLo, align 4
  br label %while.body37

while.end:                                        ; preds = %if.then65, %if.then40
  br label %while.body69

while.body69:                                     ; preds = %if.end99, %if.then83, %while.end
  %75 = load i32, i32* %unLo, align 4
  %76 = load i32, i32* %unHi, align 4
  %cmp70 = icmp sgt i32 %75, %76
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %while.body69
  br label %while.end101

if.end73:                                         ; preds = %while.body69
  %77 = load i8*, i8** %block.addr, align 8
  %78 = load i32*, i32** %ptr.addr, align 8
  %79 = load i32, i32* %unHi, align 4
  %idxprom74 = sext i32 %79 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %78, i64 %idxprom74
  %80 = load i32, i32* %arrayidx75, align 4
  %81 = load i32, i32* %d, align 4
  %add76 = add i32 %80, %81
  %idxprom77 = zext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds i8, i8* %77, i64 %idxprom77
  %82 = load i8, i8* %arrayidx78, align 1
  %conv79 = zext i8 %82 to i32
  %83 = load i32, i32* %med, align 4
  %sub80 = sub nsw i32 %conv79, %83
  store i32 %sub80, i32* %n, align 4
  %84 = load i32, i32* %n, align 4
  %cmp81 = icmp eq i32 %84, 0
  br i1 %cmp81, label %if.then83, label %if.end95

if.then83:                                        ; preds = %if.end73
  %85 = load i32*, i32** %ptr.addr, align 8
  %86 = load i32, i32* %unHi, align 4
  %idxprom85 = sext i32 %86 to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %85, i64 %idxprom85
  %87 = load i32, i32* %arrayidx86, align 4
  store i32 %87, i32* %zztmp84, align 4
  %88 = load i32*, i32** %ptr.addr, align 8
  %89 = load i32, i32* %gtHi, align 4
  %idxprom87 = sext i32 %89 to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %88, i64 %idxprom87
  %90 = load i32, i32* %arrayidx88, align 4
  %91 = load i32*, i32** %ptr.addr, align 8
  %92 = load i32, i32* %unHi, align 4
  %idxprom89 = sext i32 %92 to i64
  %arrayidx90 = getelementptr inbounds i32, i32* %91, i64 %idxprom89
  store i32 %90, i32* %arrayidx90, align 4
  %93 = load i32, i32* %zztmp84, align 4
  %94 = load i32*, i32** %ptr.addr, align 8
  %95 = load i32, i32* %gtHi, align 4
  %idxprom91 = sext i32 %95 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %94, i64 %idxprom91
  store i32 %93, i32* %arrayidx92, align 4
  %96 = load i32, i32* %gtHi, align 4
  %dec93 = add nsw i32 %96, -1
  store i32 %dec93, i32* %gtHi, align 4
  %97 = load i32, i32* %unHi, align 4
  %dec94 = add nsw i32 %97, -1
  store i32 %dec94, i32* %unHi, align 4
  br label %while.body69

if.end95:                                         ; preds = %if.end73
  %98 = load i32, i32* %n, align 4
  %cmp96 = icmp slt i32 %98, 0
  br i1 %cmp96, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end95
  br label %while.end101

if.end99:                                         ; preds = %if.end95
  %99 = load i32, i32* %unHi, align 4
  %dec100 = add nsw i32 %99, -1
  store i32 %dec100, i32* %unHi, align 4
  br label %while.body69

while.end101:                                     ; preds = %if.then98, %if.then72
  %100 = load i32, i32* %unLo, align 4
  %101 = load i32, i32* %unHi, align 4
  %cmp102 = icmp sgt i32 %100, %101
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %while.end101
  br label %while.end117

if.end105:                                        ; preds = %while.end101
  %102 = load i32*, i32** %ptr.addr, align 8
  %103 = load i32, i32* %unLo, align 4
  %idxprom107 = sext i32 %103 to i64
  %arrayidx108 = getelementptr inbounds i32, i32* %102, i64 %idxprom107
  %104 = load i32, i32* %arrayidx108, align 4
  store i32 %104, i32* %zztmp106, align 4
  %105 = load i32*, i32** %ptr.addr, align 8
  %106 = load i32, i32* %unHi, align 4
  %idxprom109 = sext i32 %106 to i64
  %arrayidx110 = getelementptr inbounds i32, i32* %105, i64 %idxprom109
  %107 = load i32, i32* %arrayidx110, align 4
  %108 = load i32*, i32** %ptr.addr, align 8
  %109 = load i32, i32* %unLo, align 4
  %idxprom111 = sext i32 %109 to i64
  %arrayidx112 = getelementptr inbounds i32, i32* %108, i64 %idxprom111
  store i32 %107, i32* %arrayidx112, align 4
  %110 = load i32, i32* %zztmp106, align 4
  %111 = load i32*, i32** %ptr.addr, align 8
  %112 = load i32, i32* %unHi, align 4
  %idxprom113 = sext i32 %112 to i64
  %arrayidx114 = getelementptr inbounds i32, i32* %111, i64 %idxprom113
  store i32 %110, i32* %arrayidx114, align 4
  %113 = load i32, i32* %unLo, align 4
  %inc115 = add nsw i32 %113, 1
  store i32 %inc115, i32* %unLo, align 4
  %114 = load i32, i32* %unHi, align 4
  %dec116 = add nsw i32 %114, -1
  store i32 %dec116, i32* %unHi, align 4
  br label %while.body35

while.end117:                                     ; preds = %if.then104
  %115 = load i32, i32* %gtHi, align 4
  %116 = load i32, i32* %ltLo, align 4
  %cmp118 = icmp slt i32 %115, %116
  br i1 %cmp118, label %if.then120, label %if.end129

if.then120:                                       ; preds = %while.end117
  %117 = load i32, i32* %lo, align 4
  %118 = load i32, i32* %sp, align 4
  %idxprom121 = sext i32 %118 to i64
  %arrayidx122 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom121
  store i32 %117, i32* %arrayidx122, align 4
  %119 = load i32, i32* %hi, align 4
  %120 = load i32, i32* %sp, align 4
  %idxprom123 = sext i32 %120 to i64
  %arrayidx124 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom123
  store i32 %119, i32* %arrayidx124, align 4
  %121 = load i32, i32* %d, align 4
  %add125 = add nsw i32 %121, 1
  %122 = load i32, i32* %sp, align 4
  %idxprom126 = sext i32 %122 to i64
  %arrayidx127 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom126
  store i32 %add125, i32* %arrayidx127, align 4
  %123 = load i32, i32* %sp, align 4
  %inc128 = add nsw i32 %123, 1
  store i32 %inc128, i32* %sp, align 4
  br label %while.cond

if.end129:                                        ; preds = %while.end117
  %124 = load i32, i32* %ltLo, align 4
  %125 = load i32, i32* %lo, align 4
  %sub130 = sub nsw i32 %124, %125
  %126 = load i32, i32* %unLo, align 4
  %127 = load i32, i32* %ltLo, align 4
  %sub131 = sub nsw i32 %126, %127
  %cmp132 = icmp slt i32 %sub130, %sub131
  br i1 %cmp132, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end129
  %128 = load i32, i32* %ltLo, align 4
  %129 = load i32, i32* %lo, align 4
  %sub134 = sub nsw i32 %128, %129
  br label %cond.end

cond.false:                                       ; preds = %if.end129
  %130 = load i32, i32* %unLo, align 4
  %131 = load i32, i32* %ltLo, align 4
  %sub135 = sub nsw i32 %130, %131
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub134, %cond.true ], [ %sub135, %cond.false ]
  store i32 %cond, i32* %n, align 4
  %132 = load i32, i32* %lo, align 4
  store i32 %132, i32* %yyp1, align 4
  %133 = load i32, i32* %unLo, align 4
  %134 = load i32, i32* %n, align 4
  %sub136 = sub nsw i32 %133, %134
  store i32 %sub136, i32* %yyp2, align 4
  %135 = load i32, i32* %n, align 4
  store i32 %135, i32* %yyn, align 4
  br label %while.cond137

while.cond137:                                    ; preds = %while.body140, %cond.end
  %136 = load i32, i32* %yyn, align 4
  %cmp138 = icmp sgt i32 %136, 0
  br i1 %cmp138, label %while.body140, label %while.end153

while.body140:                                    ; preds = %while.cond137
  %137 = load i32*, i32** %ptr.addr, align 8
  %138 = load i32, i32* %yyp1, align 4
  %idxprom142 = sext i32 %138 to i64
  %arrayidx143 = getelementptr inbounds i32, i32* %137, i64 %idxprom142
  %139 = load i32, i32* %arrayidx143, align 4
  store i32 %139, i32* %zztmp141, align 4
  %140 = load i32*, i32** %ptr.addr, align 8
  %141 = load i32, i32* %yyp2, align 4
  %idxprom144 = sext i32 %141 to i64
  %arrayidx145 = getelementptr inbounds i32, i32* %140, i64 %idxprom144
  %142 = load i32, i32* %arrayidx145, align 4
  %143 = load i32*, i32** %ptr.addr, align 8
  %144 = load i32, i32* %yyp1, align 4
  %idxprom146 = sext i32 %144 to i64
  %arrayidx147 = getelementptr inbounds i32, i32* %143, i64 %idxprom146
  store i32 %142, i32* %arrayidx147, align 4
  %145 = load i32, i32* %zztmp141, align 4
  %146 = load i32*, i32** %ptr.addr, align 8
  %147 = load i32, i32* %yyp2, align 4
  %idxprom148 = sext i32 %147 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %146, i64 %idxprom148
  store i32 %145, i32* %arrayidx149, align 4
  %148 = load i32, i32* %yyp1, align 4
  %inc150 = add nsw i32 %148, 1
  store i32 %inc150, i32* %yyp1, align 4
  %149 = load i32, i32* %yyp2, align 4
  %inc151 = add nsw i32 %149, 1
  store i32 %inc151, i32* %yyp2, align 4
  %150 = load i32, i32* %yyn, align 4
  %dec152 = add nsw i32 %150, -1
  store i32 %dec152, i32* %yyn, align 4
  br label %while.cond137

while.end153:                                     ; preds = %while.cond137
  %151 = load i32, i32* %hi, align 4
  %152 = load i32, i32* %gtHi, align 4
  %sub154 = sub nsw i32 %151, %152
  %153 = load i32, i32* %gtHi, align 4
  %154 = load i32, i32* %unHi, align 4
  %sub155 = sub nsw i32 %153, %154
  %cmp156 = icmp slt i32 %sub154, %sub155
  br i1 %cmp156, label %cond.true158, label %cond.false160

cond.true158:                                     ; preds = %while.end153
  %155 = load i32, i32* %hi, align 4
  %156 = load i32, i32* %gtHi, align 4
  %sub159 = sub nsw i32 %155, %156
  br label %cond.end162

cond.false160:                                    ; preds = %while.end153
  %157 = load i32, i32* %gtHi, align 4
  %158 = load i32, i32* %unHi, align 4
  %sub161 = sub nsw i32 %157, %158
  br label %cond.end162

cond.end162:                                      ; preds = %cond.false160, %cond.true158
  %cond163 = phi i32 [ %sub159, %cond.true158 ], [ %sub161, %cond.false160 ]
  store i32 %cond163, i32* %m, align 4
  %159 = load i32, i32* %unLo, align 4
  store i32 %159, i32* %yyp1164, align 4
  %160 = load i32, i32* %hi, align 4
  %161 = load i32, i32* %m, align 4
  %sub166 = sub nsw i32 %160, %161
  %add167 = add nsw i32 %sub166, 1
  store i32 %add167, i32* %yyp2165, align 4
  %162 = load i32, i32* %m, align 4
  store i32 %162, i32* %yyn168, align 4
  br label %while.cond169

while.cond169:                                    ; preds = %while.body172, %cond.end162
  %163 = load i32, i32* %yyn168, align 4
  %cmp170 = icmp sgt i32 %163, 0
  br i1 %cmp170, label %while.body172, label %while.end185

while.body172:                                    ; preds = %while.cond169
  %164 = load i32*, i32** %ptr.addr, align 8
  %165 = load i32, i32* %yyp1164, align 4
  %idxprom174 = sext i32 %165 to i64
  %arrayidx175 = getelementptr inbounds i32, i32* %164, i64 %idxprom174
  %166 = load i32, i32* %arrayidx175, align 4
  store i32 %166, i32* %zztmp173, align 4
  %167 = load i32*, i32** %ptr.addr, align 8
  %168 = load i32, i32* %yyp2165, align 4
  %idxprom176 = sext i32 %168 to i64
  %arrayidx177 = getelementptr inbounds i32, i32* %167, i64 %idxprom176
  %169 = load i32, i32* %arrayidx177, align 4
  %170 = load i32*, i32** %ptr.addr, align 8
  %171 = load i32, i32* %yyp1164, align 4
  %idxprom178 = sext i32 %171 to i64
  %arrayidx179 = getelementptr inbounds i32, i32* %170, i64 %idxprom178
  store i32 %169, i32* %arrayidx179, align 4
  %172 = load i32, i32* %zztmp173, align 4
  %173 = load i32*, i32** %ptr.addr, align 8
  %174 = load i32, i32* %yyp2165, align 4
  %idxprom180 = sext i32 %174 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %173, i64 %idxprom180
  store i32 %172, i32* %arrayidx181, align 4
  %175 = load i32, i32* %yyp1164, align 4
  %inc182 = add nsw i32 %175, 1
  store i32 %inc182, i32* %yyp1164, align 4
  %176 = load i32, i32* %yyp2165, align 4
  %inc183 = add nsw i32 %176, 1
  store i32 %inc183, i32* %yyp2165, align 4
  %177 = load i32, i32* %yyn168, align 4
  %dec184 = add nsw i32 %177, -1
  store i32 %dec184, i32* %yyn168, align 4
  br label %while.cond169

while.end185:                                     ; preds = %while.cond169
  %178 = load i32, i32* %lo, align 4
  %179 = load i32, i32* %unLo, align 4
  %add186 = add nsw i32 %178, %179
  %180 = load i32, i32* %ltLo, align 4
  %sub187 = sub nsw i32 %add186, %180
  %sub188 = sub nsw i32 %sub187, 1
  store i32 %sub188, i32* %n, align 4
  %181 = load i32, i32* %hi, align 4
  %182 = load i32, i32* %gtHi, align 4
  %183 = load i32, i32* %unHi, align 4
  %sub189 = sub nsw i32 %182, %183
  %sub190 = sub nsw i32 %181, %sub189
  %add191 = add nsw i32 %sub190, 1
  store i32 %add191, i32* %m, align 4
  %184 = load i32, i32* %lo, align 4
  %arrayidx192 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %184, i32* %arrayidx192, align 4
  %185 = load i32, i32* %n, align 4
  %arrayidx193 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %185, i32* %arrayidx193, align 4
  %186 = load i32, i32* %d, align 4
  %arrayidx194 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %186, i32* %arrayidx194, align 4
  %187 = load i32, i32* %m, align 4
  %arrayidx195 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %187, i32* %arrayidx195, align 4
  %188 = load i32, i32* %hi, align 4
  %arrayidx196 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %188, i32* %arrayidx196, align 4
  %189 = load i32, i32* %d, align 4
  %arrayidx197 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %189, i32* %arrayidx197, align 4
  %190 = load i32, i32* %n, align 4
  %add198 = add nsw i32 %190, 1
  %arrayidx199 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  store i32 %add198, i32* %arrayidx199, align 4
  %191 = load i32, i32* %m, align 4
  %sub200 = sub nsw i32 %191, 1
  %arrayidx201 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  store i32 %sub200, i32* %arrayidx201, align 4
  %192 = load i32, i32* %d, align 4
  %add202 = add nsw i32 %192, 1
  %arrayidx203 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  store i32 %add202, i32* %arrayidx203, align 4
  %arrayidx204 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %193 = load i32, i32* %arrayidx204, align 4
  %arrayidx205 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %194 = load i32, i32* %arrayidx205, align 4
  %sub206 = sub nsw i32 %193, %194
  %arrayidx207 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %195 = load i32, i32* %arrayidx207, align 4
  %arrayidx208 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %196 = load i32, i32* %arrayidx208, align 4
  %sub209 = sub nsw i32 %195, %196
  %cmp210 = icmp slt i32 %sub206, %sub209
  br i1 %cmp210, label %if.then212, label %if.end225

if.then212:                                       ; preds = %while.end185
  %arrayidx213 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %197 = load i32, i32* %arrayidx213, align 4
  store i32 %197, i32* %tz, align 4
  %arrayidx214 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %198 = load i32, i32* %arrayidx214, align 4
  %arrayidx215 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %198, i32* %arrayidx215, align 4
  %199 = load i32, i32* %tz, align 4
  %arrayidx216 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %199, i32* %arrayidx216, align 4
  %arrayidx217 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %200 = load i32, i32* %arrayidx217, align 4
  store i32 %200, i32* %tz, align 4
  %arrayidx218 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %201 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %201, i32* %arrayidx219, align 4
  %202 = load i32, i32* %tz, align 4
  %arrayidx220 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %202, i32* %arrayidx220, align 4
  %arrayidx221 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %203 = load i32, i32* %arrayidx221, align 4
  store i32 %203, i32* %tz, align 4
  %arrayidx222 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %204 = load i32, i32* %arrayidx222, align 4
  %arrayidx223 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %204, i32* %arrayidx223, align 4
  %205 = load i32, i32* %tz, align 4
  %arrayidx224 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %205, i32* %arrayidx224, align 4
  br label %if.end225

if.end225:                                        ; preds = %if.then212, %while.end185
  %arrayidx226 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %206 = load i32, i32* %arrayidx226, align 4
  %arrayidx227 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %207 = load i32, i32* %arrayidx227, align 4
  %sub228 = sub nsw i32 %206, %207
  %arrayidx229 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %208 = load i32, i32* %arrayidx229, align 4
  %arrayidx230 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %209 = load i32, i32* %arrayidx230, align 4
  %sub231 = sub nsw i32 %208, %209
  %cmp232 = icmp slt i32 %sub228, %sub231
  br i1 %cmp232, label %if.then234, label %if.end248

if.then234:                                       ; preds = %if.end225
  %arrayidx236 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %210 = load i32, i32* %arrayidx236, align 4
  store i32 %210, i32* %tz235, align 4
  %arrayidx237 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %211 = load i32, i32* %arrayidx237, align 4
  %arrayidx238 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %211, i32* %arrayidx238, align 4
  %212 = load i32, i32* %tz235, align 4
  %arrayidx239 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  store i32 %212, i32* %arrayidx239, align 4
  %arrayidx240 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %213 = load i32, i32* %arrayidx240, align 4
  store i32 %213, i32* %tz235, align 4
  %arrayidx241 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %214 = load i32, i32* %arrayidx241, align 4
  %arrayidx242 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %214, i32* %arrayidx242, align 4
  %215 = load i32, i32* %tz235, align 4
  %arrayidx243 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  store i32 %215, i32* %arrayidx243, align 4
  %arrayidx244 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %216 = load i32, i32* %arrayidx244, align 4
  store i32 %216, i32* %tz235, align 4
  %arrayidx245 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  %217 = load i32, i32* %arrayidx245, align 4
  %arrayidx246 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %217, i32* %arrayidx246, align 4
  %218 = load i32, i32* %tz235, align 4
  %arrayidx247 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  store i32 %218, i32* %arrayidx247, align 4
  br label %if.end248

if.end248:                                        ; preds = %if.then234, %if.end225
  %arrayidx249 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %219 = load i32, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %220 = load i32, i32* %arrayidx250, align 4
  %sub251 = sub nsw i32 %219, %220
  %arrayidx252 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %221 = load i32, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %222 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %221, %222
  %cmp255 = icmp slt i32 %sub251, %sub254
  br i1 %cmp255, label %if.then257, label %if.end271

if.then257:                                       ; preds = %if.end248
  %arrayidx259 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %223 = load i32, i32* %arrayidx259, align 4
  store i32 %223, i32* %tz258, align 4
  %arrayidx260 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %224 = load i32, i32* %arrayidx260, align 4
  %arrayidx261 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %224, i32* %arrayidx261, align 4
  %225 = load i32, i32* %tz258, align 4
  %arrayidx262 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %225, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %226 = load i32, i32* %arrayidx263, align 4
  store i32 %226, i32* %tz258, align 4
  %arrayidx264 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %227 = load i32, i32* %arrayidx264, align 4
  %arrayidx265 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %227, i32* %arrayidx265, align 4
  %228 = load i32, i32* %tz258, align 4
  %arrayidx266 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %228, i32* %arrayidx266, align 4
  %arrayidx267 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %229 = load i32, i32* %arrayidx267, align 4
  store i32 %229, i32* %tz258, align 4
  %arrayidx268 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %230 = load i32, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %230, i32* %arrayidx269, align 4
  %231 = load i32, i32* %tz258, align 4
  %arrayidx270 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %231, i32* %arrayidx270, align 4
  br label %if.end271

if.end271:                                        ; preds = %if.then257, %if.end248
  %arrayidx272 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %232 = load i32, i32* %arrayidx272, align 4
  %233 = load i32, i32* %sp, align 4
  %idxprom273 = sext i32 %233 to i64
  %arrayidx274 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom273
  store i32 %232, i32* %arrayidx274, align 4
  %arrayidx275 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %234 = load i32, i32* %arrayidx275, align 4
  %235 = load i32, i32* %sp, align 4
  %idxprom276 = sext i32 %235 to i64
  %arrayidx277 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom276
  store i32 %234, i32* %arrayidx277, align 4
  %arrayidx278 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %236 = load i32, i32* %arrayidx278, align 4
  %237 = load i32, i32* %sp, align 4
  %idxprom279 = sext i32 %237 to i64
  %arrayidx280 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom279
  store i32 %236, i32* %arrayidx280, align 4
  %238 = load i32, i32* %sp, align 4
  %inc281 = add nsw i32 %238, 1
  store i32 %inc281, i32* %sp, align 4
  %arrayidx282 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %239 = load i32, i32* %arrayidx282, align 4
  %240 = load i32, i32* %sp, align 4
  %idxprom283 = sext i32 %240 to i64
  %arrayidx284 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom283
  store i32 %239, i32* %arrayidx284, align 4
  %arrayidx285 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %241 = load i32, i32* %arrayidx285, align 4
  %242 = load i32, i32* %sp, align 4
  %idxprom286 = sext i32 %242 to i64
  %arrayidx287 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom286
  store i32 %241, i32* %arrayidx287, align 4
  %arrayidx288 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %243 = load i32, i32* %arrayidx288, align 4
  %244 = load i32, i32* %sp, align 4
  %idxprom289 = sext i32 %244 to i64
  %arrayidx290 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom289
  store i32 %243, i32* %arrayidx290, align 4
  %245 = load i32, i32* %sp, align 4
  %inc291 = add nsw i32 %245, 1
  store i32 %inc291, i32* %sp, align 4
  %arrayidx292 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %246 = load i32, i32* %arrayidx292, align 4
  %247 = load i32, i32* %sp, align 4
  %idxprom293 = sext i32 %247 to i64
  %arrayidx294 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom293
  store i32 %246, i32* %arrayidx294, align 4
  %arrayidx295 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %248 = load i32, i32* %arrayidx295, align 4
  %249 = load i32, i32* %sp, align 4
  %idxprom296 = sext i32 %249 to i64
  %arrayidx297 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom296
  store i32 %248, i32* %arrayidx297, align 4
  %arrayidx298 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  %250 = load i32, i32* %arrayidx298, align 4
  %251 = load i32, i32* %sp, align 4
  %idxprom299 = sext i32 %251 to i64
  %arrayidx300 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom299
  store i32 %250, i32* %arrayidx300, align 4
  %252 = load i32, i32* %sp, align 4
  %inc301 = add nsw i32 %252, 1
  store i32 %inc301, i32* %sp, align 4
  br label %while.cond

while.end302:                                     ; preds = %if.then16, %while.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainSimpleSort(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %lo, i32 %hi, i32 %d, i32* %budget) #0 {
entry:
  %ptr.addr = alloca i32*, align 8
  %block.addr = alloca i8*, align 8
  %quadrant.addr = alloca i16*, align 8
  %nblock.addr = alloca i32, align 4
  %lo.addr = alloca i32, align 4
  %hi.addr = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %budget.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %h = alloca i32, align 4
  %bigN = alloca i32, align 4
  %hp = alloca i32, align 4
  %v = alloca i32, align 4
  store i32* %ptr, i32** %ptr.addr, align 8
  store i8* %block, i8** %block.addr, align 8
  store i16* %quadrant, i16** %quadrant.addr, align 8
  store i32 %nblock, i32* %nblock.addr, align 4
  store i32 %lo, i32* %lo.addr, align 4
  store i32 %hi, i32* %hi.addr, align 4
  store i32 %d, i32* %d.addr, align 4
  store i32* %budget, i32** %budget.addr, align 8
  %0 = load i32, i32* %hi.addr, align 4
  %1 = load i32, i32* %lo.addr, align 4
  %sub = sub nsw i32 %0, %1
  %add = add nsw i32 %sub, 1
  store i32 %add, i32* %bigN, align 4
  %2 = load i32, i32* %bigN, align 4
  %cmp = icmp slt i32 %2, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  store i32 0, i32* %hp, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i32, i32* %hp, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32, i32* %bigN, align 4
  %cmp1 = icmp slt i32 %4, %5
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %hp, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %hp, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %hp, align 4
  %dec = add nsw i32 %7, -1
  store i32 %dec, i32* %hp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %8 = load i32, i32* %hp, align 4
  %cmp2 = icmp sge i32 %8, 0
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %hp, align 4
  %idxprom3 = sext i32 %9 to i64
  %arrayidx4 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %idxprom3
  %10 = load i32, i32* %arrayidx4, align 4
  store i32 %10, i32* %h, align 4
  %11 = load i32, i32* %lo.addr, align 4
  %12 = load i32, i32* %h, align 4
  %add5 = add nsw i32 %11, %12
  store i32 %add5, i32* %i, align 4
  br label %while.body7

while.body7:                                      ; preds = %if.end95, %for.body
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* %hi.addr, align 4
  %cmp8 = icmp sgt i32 %13, %14
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %while.body7
  br label %while.end96

if.end10:                                         ; preds = %while.body7
  %15 = load i32*, i32** %ptr.addr, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %16 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 %idxprom11
  %17 = load i32, i32* %arrayidx12, align 4
  store i32 %17, i32* %v, align 4
  %18 = load i32, i32* %i, align 4
  store i32 %18, i32* %j, align 4
  br label %while.cond13

while.cond13:                                     ; preds = %if.end30, %if.end10
  %19 = load i32*, i32** %ptr.addr, align 8
  %20 = load i32, i32* %j, align 4
  %21 = load i32, i32* %h, align 4
  %sub14 = sub nsw i32 %20, %21
  %idxprom15 = sext i32 %sub14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15
  %22 = load i32, i32* %arrayidx16, align 4
  %23 = load i32, i32* %d.addr, align 4
  %add17 = add i32 %22, %23
  %24 = load i32, i32* %v, align 4
  %25 = load i32, i32* %d.addr, align 4
  %add18 = add i32 %24, %25
  %26 = load i8*, i8** %block.addr, align 8
  %27 = load i16*, i16** %quadrant.addr, align 8
  %28 = load i32, i32* %nblock.addr, align 4
  %29 = load i32*, i32** %budget.addr, align 8
  %call = call zeroext i8 @mainGtU(i32 %add17, i32 %add18, i8* %26, i16* %27, i32 %28, i32* %29)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %while.body19, label %while.end31

while.body19:                                     ; preds = %while.cond13
  %30 = load i32*, i32** %ptr.addr, align 8
  %31 = load i32, i32* %j, align 4
  %32 = load i32, i32* %h, align 4
  %sub20 = sub nsw i32 %31, %32
  %idxprom21 = sext i32 %sub20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 %idxprom21
  %33 = load i32, i32* %arrayidx22, align 4
  %34 = load i32*, i32** %ptr.addr, align 8
  %35 = load i32, i32* %j, align 4
  %idxprom23 = sext i32 %35 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i64 %idxprom23
  store i32 %33, i32* %arrayidx24, align 4
  %36 = load i32, i32* %j, align 4
  %37 = load i32, i32* %h, align 4
  %sub25 = sub nsw i32 %36, %37
  store i32 %sub25, i32* %j, align 4
  %38 = load i32, i32* %j, align 4
  %39 = load i32, i32* %lo.addr, align 4
  %40 = load i32, i32* %h, align 4
  %add26 = add nsw i32 %39, %40
  %sub27 = sub nsw i32 %add26, 1
  %cmp28 = icmp sle i32 %38, %sub27
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.body19
  br label %while.end31

if.end30:                                         ; preds = %while.body19
  br label %while.cond13

while.end31:                                      ; preds = %if.then29, %while.cond13
  %41 = load i32, i32* %v, align 4
  %42 = load i32*, i32** %ptr.addr, align 8
  %43 = load i32, i32* %j, align 4
  %idxprom32 = sext i32 %43 to i64
  %arrayidx33 = getelementptr inbounds i32, i32* %42, i64 %idxprom32
  store i32 %41, i32* %arrayidx33, align 4
  %44 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %44, 1
  store i32 %inc34, i32* %i, align 4
  %45 = load i32, i32* %i, align 4
  %46 = load i32, i32* %hi.addr, align 4
  %cmp35 = icmp sgt i32 %45, %46
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %while.end31
  br label %while.end96

if.end37:                                         ; preds = %while.end31
  %47 = load i32*, i32** %ptr.addr, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %48 to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %47, i64 %idxprom38
  %49 = load i32, i32* %arrayidx39, align 4
  store i32 %49, i32* %v, align 4
  %50 = load i32, i32* %i, align 4
  store i32 %50, i32* %j, align 4
  br label %while.cond40

while.cond40:                                     ; preds = %if.end59, %if.end37
  %51 = load i32*, i32** %ptr.addr, align 8
  %52 = load i32, i32* %j, align 4
  %53 = load i32, i32* %h, align 4
  %sub41 = sub nsw i32 %52, %53
  %idxprom42 = sext i32 %sub41 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %51, i64 %idxprom42
  %54 = load i32, i32* %arrayidx43, align 4
  %55 = load i32, i32* %d.addr, align 4
  %add44 = add i32 %54, %55
  %56 = load i32, i32* %v, align 4
  %57 = load i32, i32* %d.addr, align 4
  %add45 = add i32 %56, %57
  %58 = load i8*, i8** %block.addr, align 8
  %59 = load i16*, i16** %quadrant.addr, align 8
  %60 = load i32, i32* %nblock.addr, align 4
  %61 = load i32*, i32** %budget.addr, align 8
  %call46 = call zeroext i8 @mainGtU(i32 %add44, i32 %add45, i8* %58, i16* %59, i32 %60, i32* %61)
  %tobool47 = icmp ne i8 %call46, 0
  br i1 %tobool47, label %while.body48, label %while.end60

while.body48:                                     ; preds = %while.cond40
  %62 = load i32*, i32** %ptr.addr, align 8
  %63 = load i32, i32* %j, align 4
  %64 = load i32, i32* %h, align 4
  %sub49 = sub nsw i32 %63, %64
  %idxprom50 = sext i32 %sub49 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %62, i64 %idxprom50
  %65 = load i32, i32* %arrayidx51, align 4
  %66 = load i32*, i32** %ptr.addr, align 8
  %67 = load i32, i32* %j, align 4
  %idxprom52 = sext i32 %67 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %66, i64 %idxprom52
  store i32 %65, i32* %arrayidx53, align 4
  %68 = load i32, i32* %j, align 4
  %69 = load i32, i32* %h, align 4
  %sub54 = sub nsw i32 %68, %69
  store i32 %sub54, i32* %j, align 4
  %70 = load i32, i32* %j, align 4
  %71 = load i32, i32* %lo.addr, align 4
  %72 = load i32, i32* %h, align 4
  %add55 = add nsw i32 %71, %72
  %sub56 = sub nsw i32 %add55, 1
  %cmp57 = icmp sle i32 %70, %sub56
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %while.body48
  br label %while.end60

if.end59:                                         ; preds = %while.body48
  br label %while.cond40

while.end60:                                      ; preds = %if.then58, %while.cond40
  %73 = load i32, i32* %v, align 4
  %74 = load i32*, i32** %ptr.addr, align 8
  %75 = load i32, i32* %j, align 4
  %idxprom61 = sext i32 %75 to i64
  %arrayidx62 = getelementptr inbounds i32, i32* %74, i64 %idxprom61
  store i32 %73, i32* %arrayidx62, align 4
  %76 = load i32, i32* %i, align 4
  %inc63 = add nsw i32 %76, 1
  store i32 %inc63, i32* %i, align 4
  %77 = load i32, i32* %i, align 4
  %78 = load i32, i32* %hi.addr, align 4
  %cmp64 = icmp sgt i32 %77, %78
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %while.end60
  br label %while.end96

if.end66:                                         ; preds = %while.end60
  %79 = load i32*, i32** %ptr.addr, align 8
  %80 = load i32, i32* %i, align 4
  %idxprom67 = sext i32 %80 to i64
  %arrayidx68 = getelementptr inbounds i32, i32* %79, i64 %idxprom67
  %81 = load i32, i32* %arrayidx68, align 4
  store i32 %81, i32* %v, align 4
  %82 = load i32, i32* %i, align 4
  store i32 %82, i32* %j, align 4
  br label %while.cond69

while.cond69:                                     ; preds = %if.end88, %if.end66
  %83 = load i32*, i32** %ptr.addr, align 8
  %84 = load i32, i32* %j, align 4
  %85 = load i32, i32* %h, align 4
  %sub70 = sub nsw i32 %84, %85
  %idxprom71 = sext i32 %sub70 to i64
  %arrayidx72 = getelementptr inbounds i32, i32* %83, i64 %idxprom71
  %86 = load i32, i32* %arrayidx72, align 4
  %87 = load i32, i32* %d.addr, align 4
  %add73 = add i32 %86, %87
  %88 = load i32, i32* %v, align 4
  %89 = load i32, i32* %d.addr, align 4
  %add74 = add i32 %88, %89
  %90 = load i8*, i8** %block.addr, align 8
  %91 = load i16*, i16** %quadrant.addr, align 8
  %92 = load i32, i32* %nblock.addr, align 4
  %93 = load i32*, i32** %budget.addr, align 8
  %call75 = call zeroext i8 @mainGtU(i32 %add73, i32 %add74, i8* %90, i16* %91, i32 %92, i32* %93)
  %tobool76 = icmp ne i8 %call75, 0
  br i1 %tobool76, label %while.body77, label %while.end89

while.body77:                                     ; preds = %while.cond69
  %94 = load i32*, i32** %ptr.addr, align 8
  %95 = load i32, i32* %j, align 4
  %96 = load i32, i32* %h, align 4
  %sub78 = sub nsw i32 %95, %96
  %idxprom79 = sext i32 %sub78 to i64
  %arrayidx80 = getelementptr inbounds i32, i32* %94, i64 %idxprom79
  %97 = load i32, i32* %arrayidx80, align 4
  %98 = load i32*, i32** %ptr.addr, align 8
  %99 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %99 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %98, i64 %idxprom81
  store i32 %97, i32* %arrayidx82, align 4
  %100 = load i32, i32* %j, align 4
  %101 = load i32, i32* %h, align 4
  %sub83 = sub nsw i32 %100, %101
  store i32 %sub83, i32* %j, align 4
  %102 = load i32, i32* %j, align 4
  %103 = load i32, i32* %lo.addr, align 4
  %104 = load i32, i32* %h, align 4
  %add84 = add nsw i32 %103, %104
  %sub85 = sub nsw i32 %add84, 1
  %cmp86 = icmp sle i32 %102, %sub85
  br i1 %cmp86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %while.body77
  br label %while.end89

if.end88:                                         ; preds = %while.body77
  br label %while.cond69

while.end89:                                      ; preds = %if.then87, %while.cond69
  %105 = load i32, i32* %v, align 4
  %106 = load i32*, i32** %ptr.addr, align 8
  %107 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %107 to i64
  %arrayidx91 = getelementptr inbounds i32, i32* %106, i64 %idxprom90
  store i32 %105, i32* %arrayidx91, align 4
  %108 = load i32, i32* %i, align 4
  %inc92 = add nsw i32 %108, 1
  store i32 %inc92, i32* %i, align 4
  %109 = load i32*, i32** %budget.addr, align 8
  %110 = load i32, i32* %109, align 4
  %cmp93 = icmp slt i32 %110, 0
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %while.end89
  br label %for.end

if.end95:                                         ; preds = %while.end89
  br label %while.body7

while.end96:                                      ; preds = %if.then65, %if.then36, %if.then9
  br label %for.inc

for.inc:                                          ; preds = %while.end96
  %111 = load i32, i32* %hp, align 4
  %dec97 = add nsw i32 %111, -1
  store i32 %dec97, i32* %hp, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then94, %for.cond, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mmed3(i8 zeroext %a, i8 zeroext %b, i8 zeroext %c) #0 {
entry:
  %a.addr = alloca i8, align 1
  %b.addr = alloca i8, align 1
  %c.addr = alloca i8, align 1
  %t = alloca i8, align 1
  store i8 %a, i8* %a.addr, align 1
  store i8 %b, i8* %b.addr, align 1
  store i8 %c, i8* %c.addr, align 1
  %0 = load i8, i8* %a.addr, align 1
  %conv = zext i8 %0 to i32
  %1 = load i8, i8* %b.addr, align 1
  %conv1 = zext i8 %1 to i32
  %cmp = icmp sgt i32 %conv, %conv1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %a.addr, align 1
  store i8 %2, i8* %t, align 1
  %3 = load i8, i8* %b.addr, align 1
  store i8 %3, i8* %a.addr, align 1
  %4 = load i8, i8* %t, align 1
  store i8 %4, i8* %b.addr, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* %b.addr, align 1
  %conv3 = zext i8 %5 to i32
  %6 = load i8, i8* %c.addr, align 1
  %conv4 = zext i8 %6 to i32
  %cmp5 = icmp sgt i32 %conv3, %conv4
  br i1 %cmp5, label %if.then7, label %if.end14

if.then7:                                         ; preds = %if.end
  %7 = load i8, i8* %c.addr, align 1
  store i8 %7, i8* %b.addr, align 1
  %8 = load i8, i8* %a.addr, align 1
  %conv8 = zext i8 %8 to i32
  %9 = load i8, i8* %b.addr, align 1
  %conv9 = zext i8 %9 to i32
  %cmp10 = icmp sgt i32 %conv8, %conv9
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then7
  %10 = load i8, i8* %a.addr, align 1
  store i8 %10, i8* %b.addr, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then7
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  %11 = load i8, i8* %b.addr, align 1
  ret i8 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mainGtU(i32 %i1, i32 %i2, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget) #0 {
entry:
  %retval = alloca i8, align 1
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %block.addr = alloca i8*, align 8
  %quadrant.addr = alloca i16*, align 8
  %nblock.addr = alloca i32, align 4
  %budget.addr = alloca i32*, align 8
  %k = alloca i32, align 4
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  %s1 = alloca i16, align 2
  %s2 = alloca i16, align 2
  store i32 %i1, i32* %i1.addr, align 4
  store i32 %i2, i32* %i2.addr, align 4
  store i8* %block, i8** %block.addr, align 8
  store i16* %quadrant, i16** %quadrant.addr, align 8
  store i32 %nblock, i32* %nblock.addr, align 4
  store i32* %budget, i32** %budget.addr, align 8
  %0 = load i8*, i8** %block.addr, align 8
  %1 = load i32, i32* %i1.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  store i8 %2, i8* %c1, align 1
  %3 = load i8*, i8** %block.addr, align 8
  %4 = load i32, i32* %i2.addr, align 4
  %idxprom1 = zext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1
  %5 = load i8, i8* %arrayidx2, align 1
  store i8 %5, i8* %c2, align 1
  %6 = load i8, i8* %c1, align 1
  %conv = zext i8 %6 to i32
  %7 = load i8, i8* %c2, align 1
  %conv3 = zext i8 %7 to i32
  %cmp = icmp ne i32 %conv, %conv3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i8, i8* %c1, align 1
  %conv5 = zext i8 %8 to i32
  %9 = load i8, i8* %c2, align 1
  %conv6 = zext i8 %9 to i32
  %cmp7 = icmp sgt i32 %conv5, %conv6
  %conv8 = zext i1 %cmp7 to i32
  %conv9 = trunc i32 %conv8 to i8
  store i8 %conv9, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %i1.addr, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* %i1.addr, align 4
  %11 = load i32, i32* %i2.addr, align 4
  %inc10 = add i32 %11, 1
  store i32 %inc10, i32* %i2.addr, align 4
  %12 = load i8*, i8** %block.addr, align 8
  %13 = load i32, i32* %i1.addr, align 4
  %idxprom11 = zext i32 %13 to i64
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 %idxprom11
  %14 = load i8, i8* %arrayidx12, align 1
  store i8 %14, i8* %c1, align 1
  %15 = load i8*, i8** %block.addr, align 8
  %16 = load i32, i32* %i2.addr, align 4
  %idxprom13 = zext i32 %16 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 %idxprom13
  %17 = load i8, i8* %arrayidx14, align 1
  store i8 %17, i8* %c2, align 1
  %18 = load i8, i8* %c1, align 1
  %conv15 = zext i8 %18 to i32
  %19 = load i8, i8* %c2, align 1
  %conv16 = zext i8 %19 to i32
  %cmp17 = icmp ne i32 %conv15, %conv16
  br i1 %cmp17, label %if.then19, label %if.end25

if.then19:                                        ; preds = %if.end
  %20 = load i8, i8* %c1, align 1
  %conv20 = zext i8 %20 to i32
  %21 = load i8, i8* %c2, align 1
  %conv21 = zext i8 %21 to i32
  %cmp22 = icmp sgt i32 %conv20, %conv21
  %conv23 = zext i1 %cmp22 to i32
  %conv24 = trunc i32 %conv23 to i8
  store i8 %conv24, i8* %retval, align 1
  br label %return

if.end25:                                         ; preds = %if.end
  %22 = load i32, i32* %i1.addr, align 4
  %inc26 = add i32 %22, 1
  store i32 %inc26, i32* %i1.addr, align 4
  %23 = load i32, i32* %i2.addr, align 4
  %inc27 = add i32 %23, 1
  store i32 %inc27, i32* %i2.addr, align 4
  %24 = load i8*, i8** %block.addr, align 8
  %25 = load i32, i32* %i1.addr, align 4
  %idxprom28 = zext i32 %25 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %24, i64 %idxprom28
  %26 = load i8, i8* %arrayidx29, align 1
  store i8 %26, i8* %c1, align 1
  %27 = load i8*, i8** %block.addr, align 8
  %28 = load i32, i32* %i2.addr, align 4
  %idxprom30 = zext i32 %28 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 %idxprom30
  %29 = load i8, i8* %arrayidx31, align 1
  store i8 %29, i8* %c2, align 1
  %30 = load i8, i8* %c1, align 1
  %conv32 = zext i8 %30 to i32
  %31 = load i8, i8* %c2, align 1
  %conv33 = zext i8 %31 to i32
  %cmp34 = icmp ne i32 %conv32, %conv33
  br i1 %cmp34, label %if.then36, label %if.end42

if.then36:                                        ; preds = %if.end25
  %32 = load i8, i8* %c1, align 1
  %conv37 = zext i8 %32 to i32
  %33 = load i8, i8* %c2, align 1
  %conv38 = zext i8 %33 to i32
  %cmp39 = icmp sgt i32 %conv37, %conv38
  %conv40 = zext i1 %cmp39 to i32
  %conv41 = trunc i32 %conv40 to i8
  store i8 %conv41, i8* %retval, align 1
  br label %return

if.end42:                                         ; preds = %if.end25
  %34 = load i32, i32* %i1.addr, align 4
  %inc43 = add i32 %34, 1
  store i32 %inc43, i32* %i1.addr, align 4
  %35 = load i32, i32* %i2.addr, align 4
  %inc44 = add i32 %35, 1
  store i32 %inc44, i32* %i2.addr, align 4
  %36 = load i8*, i8** %block.addr, align 8
  %37 = load i32, i32* %i1.addr, align 4
  %idxprom45 = zext i32 %37 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %36, i64 %idxprom45
  %38 = load i8, i8* %arrayidx46, align 1
  store i8 %38, i8* %c1, align 1
  %39 = load i8*, i8** %block.addr, align 8
  %40 = load i32, i32* %i2.addr, align 4
  %idxprom47 = zext i32 %40 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 %idxprom47
  %41 = load i8, i8* %arrayidx48, align 1
  store i8 %41, i8* %c2, align 1
  %42 = load i8, i8* %c1, align 1
  %conv49 = zext i8 %42 to i32
  %43 = load i8, i8* %c2, align 1
  %conv50 = zext i8 %43 to i32
  %cmp51 = icmp ne i32 %conv49, %conv50
  br i1 %cmp51, label %if.then53, label %if.end59

if.then53:                                        ; preds = %if.end42
  %44 = load i8, i8* %c1, align 1
  %conv54 = zext i8 %44 to i32
  %45 = load i8, i8* %c2, align 1
  %conv55 = zext i8 %45 to i32
  %cmp56 = icmp sgt i32 %conv54, %conv55
  %conv57 = zext i1 %cmp56 to i32
  %conv58 = trunc i32 %conv57 to i8
  store i8 %conv58, i8* %retval, align 1
  br label %return

if.end59:                                         ; preds = %if.end42
  %46 = load i32, i32* %i1.addr, align 4
  %inc60 = add i32 %46, 1
  store i32 %inc60, i32* %i1.addr, align 4
  %47 = load i32, i32* %i2.addr, align 4
  %inc61 = add i32 %47, 1
  store i32 %inc61, i32* %i2.addr, align 4
  %48 = load i8*, i8** %block.addr, align 8
  %49 = load i32, i32* %i1.addr, align 4
  %idxprom62 = zext i32 %49 to i64
  %arrayidx63 = getelementptr inbounds i8, i8* %48, i64 %idxprom62
  %50 = load i8, i8* %arrayidx63, align 1
  store i8 %50, i8* %c1, align 1
  %51 = load i8*, i8** %block.addr, align 8
  %52 = load i32, i32* %i2.addr, align 4
  %idxprom64 = zext i32 %52 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %51, i64 %idxprom64
  %53 = load i8, i8* %arrayidx65, align 1
  store i8 %53, i8* %c2, align 1
  %54 = load i8, i8* %c1, align 1
  %conv66 = zext i8 %54 to i32
  %55 = load i8, i8* %c2, align 1
  %conv67 = zext i8 %55 to i32
  %cmp68 = icmp ne i32 %conv66, %conv67
  br i1 %cmp68, label %if.then70, label %if.end76

if.then70:                                        ; preds = %if.end59
  %56 = load i8, i8* %c1, align 1
  %conv71 = zext i8 %56 to i32
  %57 = load i8, i8* %c2, align 1
  %conv72 = zext i8 %57 to i32
  %cmp73 = icmp sgt i32 %conv71, %conv72
  %conv74 = zext i1 %cmp73 to i32
  %conv75 = trunc i32 %conv74 to i8
  store i8 %conv75, i8* %retval, align 1
  br label %return

if.end76:                                         ; preds = %if.end59
  %58 = load i32, i32* %i1.addr, align 4
  %inc77 = add i32 %58, 1
  store i32 %inc77, i32* %i1.addr, align 4
  %59 = load i32, i32* %i2.addr, align 4
  %inc78 = add i32 %59, 1
  store i32 %inc78, i32* %i2.addr, align 4
  %60 = load i8*, i8** %block.addr, align 8
  %61 = load i32, i32* %i1.addr, align 4
  %idxprom79 = zext i32 %61 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %60, i64 %idxprom79
  %62 = load i8, i8* %arrayidx80, align 1
  store i8 %62, i8* %c1, align 1
  %63 = load i8*, i8** %block.addr, align 8
  %64 = load i32, i32* %i2.addr, align 4
  %idxprom81 = zext i32 %64 to i64
  %arrayidx82 = getelementptr inbounds i8, i8* %63, i64 %idxprom81
  %65 = load i8, i8* %arrayidx82, align 1
  store i8 %65, i8* %c2, align 1
  %66 = load i8, i8* %c1, align 1
  %conv83 = zext i8 %66 to i32
  %67 = load i8, i8* %c2, align 1
  %conv84 = zext i8 %67 to i32
  %cmp85 = icmp ne i32 %conv83, %conv84
  br i1 %cmp85, label %if.then87, label %if.end93

if.then87:                                        ; preds = %if.end76
  %68 = load i8, i8* %c1, align 1
  %conv88 = zext i8 %68 to i32
  %69 = load i8, i8* %c2, align 1
  %conv89 = zext i8 %69 to i32
  %cmp90 = icmp sgt i32 %conv88, %conv89
  %conv91 = zext i1 %cmp90 to i32
  %conv92 = trunc i32 %conv91 to i8
  store i8 %conv92, i8* %retval, align 1
  br label %return

if.end93:                                         ; preds = %if.end76
  %70 = load i32, i32* %i1.addr, align 4
  %inc94 = add i32 %70, 1
  store i32 %inc94, i32* %i1.addr, align 4
  %71 = load i32, i32* %i2.addr, align 4
  %inc95 = add i32 %71, 1
  store i32 %inc95, i32* %i2.addr, align 4
  %72 = load i8*, i8** %block.addr, align 8
  %73 = load i32, i32* %i1.addr, align 4
  %idxprom96 = zext i32 %73 to i64
  %arrayidx97 = getelementptr inbounds i8, i8* %72, i64 %idxprom96
  %74 = load i8, i8* %arrayidx97, align 1
  store i8 %74, i8* %c1, align 1
  %75 = load i8*, i8** %block.addr, align 8
  %76 = load i32, i32* %i2.addr, align 4
  %idxprom98 = zext i32 %76 to i64
  %arrayidx99 = getelementptr inbounds i8, i8* %75, i64 %idxprom98
  %77 = load i8, i8* %arrayidx99, align 1
  store i8 %77, i8* %c2, align 1
  %78 = load i8, i8* %c1, align 1
  %conv100 = zext i8 %78 to i32
  %79 = load i8, i8* %c2, align 1
  %conv101 = zext i8 %79 to i32
  %cmp102 = icmp ne i32 %conv100, %conv101
  br i1 %cmp102, label %if.then104, label %if.end110

if.then104:                                       ; preds = %if.end93
  %80 = load i8, i8* %c1, align 1
  %conv105 = zext i8 %80 to i32
  %81 = load i8, i8* %c2, align 1
  %conv106 = zext i8 %81 to i32
  %cmp107 = icmp sgt i32 %conv105, %conv106
  %conv108 = zext i1 %cmp107 to i32
  %conv109 = trunc i32 %conv108 to i8
  store i8 %conv109, i8* %retval, align 1
  br label %return

if.end110:                                        ; preds = %if.end93
  %82 = load i32, i32* %i1.addr, align 4
  %inc111 = add i32 %82, 1
  store i32 %inc111, i32* %i1.addr, align 4
  %83 = load i32, i32* %i2.addr, align 4
  %inc112 = add i32 %83, 1
  store i32 %inc112, i32* %i2.addr, align 4
  %84 = load i8*, i8** %block.addr, align 8
  %85 = load i32, i32* %i1.addr, align 4
  %idxprom113 = zext i32 %85 to i64
  %arrayidx114 = getelementptr inbounds i8, i8* %84, i64 %idxprom113
  %86 = load i8, i8* %arrayidx114, align 1
  store i8 %86, i8* %c1, align 1
  %87 = load i8*, i8** %block.addr, align 8
  %88 = load i32, i32* %i2.addr, align 4
  %idxprom115 = zext i32 %88 to i64
  %arrayidx116 = getelementptr inbounds i8, i8* %87, i64 %idxprom115
  %89 = load i8, i8* %arrayidx116, align 1
  store i8 %89, i8* %c2, align 1
  %90 = load i8, i8* %c1, align 1
  %conv117 = zext i8 %90 to i32
  %91 = load i8, i8* %c2, align 1
  %conv118 = zext i8 %91 to i32
  %cmp119 = icmp ne i32 %conv117, %conv118
  br i1 %cmp119, label %if.then121, label %if.end127

if.then121:                                       ; preds = %if.end110
  %92 = load i8, i8* %c1, align 1
  %conv122 = zext i8 %92 to i32
  %93 = load i8, i8* %c2, align 1
  %conv123 = zext i8 %93 to i32
  %cmp124 = icmp sgt i32 %conv122, %conv123
  %conv125 = zext i1 %cmp124 to i32
  %conv126 = trunc i32 %conv125 to i8
  store i8 %conv126, i8* %retval, align 1
  br label %return

if.end127:                                        ; preds = %if.end110
  %94 = load i32, i32* %i1.addr, align 4
  %inc128 = add i32 %94, 1
  store i32 %inc128, i32* %i1.addr, align 4
  %95 = load i32, i32* %i2.addr, align 4
  %inc129 = add i32 %95, 1
  store i32 %inc129, i32* %i2.addr, align 4
  %96 = load i8*, i8** %block.addr, align 8
  %97 = load i32, i32* %i1.addr, align 4
  %idxprom130 = zext i32 %97 to i64
  %arrayidx131 = getelementptr inbounds i8, i8* %96, i64 %idxprom130
  %98 = load i8, i8* %arrayidx131, align 1
  store i8 %98, i8* %c1, align 1
  %99 = load i8*, i8** %block.addr, align 8
  %100 = load i32, i32* %i2.addr, align 4
  %idxprom132 = zext i32 %100 to i64
  %arrayidx133 = getelementptr inbounds i8, i8* %99, i64 %idxprom132
  %101 = load i8, i8* %arrayidx133, align 1
  store i8 %101, i8* %c2, align 1
  %102 = load i8, i8* %c1, align 1
  %conv134 = zext i8 %102 to i32
  %103 = load i8, i8* %c2, align 1
  %conv135 = zext i8 %103 to i32
  %cmp136 = icmp ne i32 %conv134, %conv135
  br i1 %cmp136, label %if.then138, label %if.end144

if.then138:                                       ; preds = %if.end127
  %104 = load i8, i8* %c1, align 1
  %conv139 = zext i8 %104 to i32
  %105 = load i8, i8* %c2, align 1
  %conv140 = zext i8 %105 to i32
  %cmp141 = icmp sgt i32 %conv139, %conv140
  %conv142 = zext i1 %cmp141 to i32
  %conv143 = trunc i32 %conv142 to i8
  store i8 %conv143, i8* %retval, align 1
  br label %return

if.end144:                                        ; preds = %if.end127
  %106 = load i32, i32* %i1.addr, align 4
  %inc145 = add i32 %106, 1
  store i32 %inc145, i32* %i1.addr, align 4
  %107 = load i32, i32* %i2.addr, align 4
  %inc146 = add i32 %107, 1
  store i32 %inc146, i32* %i2.addr, align 4
  %108 = load i8*, i8** %block.addr, align 8
  %109 = load i32, i32* %i1.addr, align 4
  %idxprom147 = zext i32 %109 to i64
  %arrayidx148 = getelementptr inbounds i8, i8* %108, i64 %idxprom147
  %110 = load i8, i8* %arrayidx148, align 1
  store i8 %110, i8* %c1, align 1
  %111 = load i8*, i8** %block.addr, align 8
  %112 = load i32, i32* %i2.addr, align 4
  %idxprom149 = zext i32 %112 to i64
  %arrayidx150 = getelementptr inbounds i8, i8* %111, i64 %idxprom149
  %113 = load i8, i8* %arrayidx150, align 1
  store i8 %113, i8* %c2, align 1
  %114 = load i8, i8* %c1, align 1
  %conv151 = zext i8 %114 to i32
  %115 = load i8, i8* %c2, align 1
  %conv152 = zext i8 %115 to i32
  %cmp153 = icmp ne i32 %conv151, %conv152
  br i1 %cmp153, label %if.then155, label %if.end161

if.then155:                                       ; preds = %if.end144
  %116 = load i8, i8* %c1, align 1
  %conv156 = zext i8 %116 to i32
  %117 = load i8, i8* %c2, align 1
  %conv157 = zext i8 %117 to i32
  %cmp158 = icmp sgt i32 %conv156, %conv157
  %conv159 = zext i1 %cmp158 to i32
  %conv160 = trunc i32 %conv159 to i8
  store i8 %conv160, i8* %retval, align 1
  br label %return

if.end161:                                        ; preds = %if.end144
  %118 = load i32, i32* %i1.addr, align 4
  %inc162 = add i32 %118, 1
  store i32 %inc162, i32* %i1.addr, align 4
  %119 = load i32, i32* %i2.addr, align 4
  %inc163 = add i32 %119, 1
  store i32 %inc163, i32* %i2.addr, align 4
  %120 = load i8*, i8** %block.addr, align 8
  %121 = load i32, i32* %i1.addr, align 4
  %idxprom164 = zext i32 %121 to i64
  %arrayidx165 = getelementptr inbounds i8, i8* %120, i64 %idxprom164
  %122 = load i8, i8* %arrayidx165, align 1
  store i8 %122, i8* %c1, align 1
  %123 = load i8*, i8** %block.addr, align 8
  %124 = load i32, i32* %i2.addr, align 4
  %idxprom166 = zext i32 %124 to i64
  %arrayidx167 = getelementptr inbounds i8, i8* %123, i64 %idxprom166
  %125 = load i8, i8* %arrayidx167, align 1
  store i8 %125, i8* %c2, align 1
  %126 = load i8, i8* %c1, align 1
  %conv168 = zext i8 %126 to i32
  %127 = load i8, i8* %c2, align 1
  %conv169 = zext i8 %127 to i32
  %cmp170 = icmp ne i32 %conv168, %conv169
  br i1 %cmp170, label %if.then172, label %if.end178

if.then172:                                       ; preds = %if.end161
  %128 = load i8, i8* %c1, align 1
  %conv173 = zext i8 %128 to i32
  %129 = load i8, i8* %c2, align 1
  %conv174 = zext i8 %129 to i32
  %cmp175 = icmp sgt i32 %conv173, %conv174
  %conv176 = zext i1 %cmp175 to i32
  %conv177 = trunc i32 %conv176 to i8
  store i8 %conv177, i8* %retval, align 1
  br label %return

if.end178:                                        ; preds = %if.end161
  %130 = load i32, i32* %i1.addr, align 4
  %inc179 = add i32 %130, 1
  store i32 %inc179, i32* %i1.addr, align 4
  %131 = load i32, i32* %i2.addr, align 4
  %inc180 = add i32 %131, 1
  store i32 %inc180, i32* %i2.addr, align 4
  %132 = load i8*, i8** %block.addr, align 8
  %133 = load i32, i32* %i1.addr, align 4
  %idxprom181 = zext i32 %133 to i64
  %arrayidx182 = getelementptr inbounds i8, i8* %132, i64 %idxprom181
  %134 = load i8, i8* %arrayidx182, align 1
  store i8 %134, i8* %c1, align 1
  %135 = load i8*, i8** %block.addr, align 8
  %136 = load i32, i32* %i2.addr, align 4
  %idxprom183 = zext i32 %136 to i64
  %arrayidx184 = getelementptr inbounds i8, i8* %135, i64 %idxprom183
  %137 = load i8, i8* %arrayidx184, align 1
  store i8 %137, i8* %c2, align 1
  %138 = load i8, i8* %c1, align 1
  %conv185 = zext i8 %138 to i32
  %139 = load i8, i8* %c2, align 1
  %conv186 = zext i8 %139 to i32
  %cmp187 = icmp ne i32 %conv185, %conv186
  br i1 %cmp187, label %if.then189, label %if.end195

if.then189:                                       ; preds = %if.end178
  %140 = load i8, i8* %c1, align 1
  %conv190 = zext i8 %140 to i32
  %141 = load i8, i8* %c2, align 1
  %conv191 = zext i8 %141 to i32
  %cmp192 = icmp sgt i32 %conv190, %conv191
  %conv193 = zext i1 %cmp192 to i32
  %conv194 = trunc i32 %conv193 to i8
  store i8 %conv194, i8* %retval, align 1
  br label %return

if.end195:                                        ; preds = %if.end178
  %142 = load i32, i32* %i1.addr, align 4
  %inc196 = add i32 %142, 1
  store i32 %inc196, i32* %i1.addr, align 4
  %143 = load i32, i32* %i2.addr, align 4
  %inc197 = add i32 %143, 1
  store i32 %inc197, i32* %i2.addr, align 4
  %144 = load i32, i32* %nblock.addr, align 4
  %add = add i32 %144, 8
  store i32 %add, i32* %k, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end195
  %145 = load i8*, i8** %block.addr, align 8
  %146 = load i32, i32* %i1.addr, align 4
  %idxprom198 = zext i32 %146 to i64
  %arrayidx199 = getelementptr inbounds i8, i8* %145, i64 %idxprom198
  %147 = load i8, i8* %arrayidx199, align 1
  store i8 %147, i8* %c1, align 1
  %148 = load i8*, i8** %block.addr, align 8
  %149 = load i32, i32* %i2.addr, align 4
  %idxprom200 = zext i32 %149 to i64
  %arrayidx201 = getelementptr inbounds i8, i8* %148, i64 %idxprom200
  %150 = load i8, i8* %arrayidx201, align 1
  store i8 %150, i8* %c2, align 1
  %151 = load i8, i8* %c1, align 1
  %conv202 = zext i8 %151 to i32
  %152 = load i8, i8* %c2, align 1
  %conv203 = zext i8 %152 to i32
  %cmp204 = icmp ne i32 %conv202, %conv203
  br i1 %cmp204, label %if.then206, label %if.end212

if.then206:                                       ; preds = %do.body
  %153 = load i8, i8* %c1, align 1
  %conv207 = zext i8 %153 to i32
  %154 = load i8, i8* %c2, align 1
  %conv208 = zext i8 %154 to i32
  %cmp209 = icmp sgt i32 %conv207, %conv208
  %conv210 = zext i1 %cmp209 to i32
  %conv211 = trunc i32 %conv210 to i8
  store i8 %conv211, i8* %retval, align 1
  br label %return

if.end212:                                        ; preds = %do.body
  %155 = load i16*, i16** %quadrant.addr, align 8
  %156 = load i32, i32* %i1.addr, align 4
  %idxprom213 = zext i32 %156 to i64
  %arrayidx214 = getelementptr inbounds i16, i16* %155, i64 %idxprom213
  %157 = load i16, i16* %arrayidx214, align 2
  store i16 %157, i16* %s1, align 2
  %158 = load i16*, i16** %quadrant.addr, align 8
  %159 = load i32, i32* %i2.addr, align 4
  %idxprom215 = zext i32 %159 to i64
  %arrayidx216 = getelementptr inbounds i16, i16* %158, i64 %idxprom215
  %160 = load i16, i16* %arrayidx216, align 2
  store i16 %160, i16* %s2, align 2
  %161 = load i16, i16* %s1, align 2
  %conv217 = zext i16 %161 to i32
  %162 = load i16, i16* %s2, align 2
  %conv218 = zext i16 %162 to i32
  %cmp219 = icmp ne i32 %conv217, %conv218
  br i1 %cmp219, label %if.then221, label %if.end227

if.then221:                                       ; preds = %if.end212
  %163 = load i16, i16* %s1, align 2
  %conv222 = zext i16 %163 to i32
  %164 = load i16, i16* %s2, align 2
  %conv223 = zext i16 %164 to i32
  %cmp224 = icmp sgt i32 %conv222, %conv223
  %conv225 = zext i1 %cmp224 to i32
  %conv226 = trunc i32 %conv225 to i8
  store i8 %conv226, i8* %retval, align 1
  br label %return

if.end227:                                        ; preds = %if.end212
  %165 = load i32, i32* %i1.addr, align 4
  %inc228 = add i32 %165, 1
  store i32 %inc228, i32* %i1.addr, align 4
  %166 = load i32, i32* %i2.addr, align 4
  %inc229 = add i32 %166, 1
  store i32 %inc229, i32* %i2.addr, align 4
  %167 = load i8*, i8** %block.addr, align 8
  %168 = load i32, i32* %i1.addr, align 4
  %idxprom230 = zext i32 %168 to i64
  %arrayidx231 = getelementptr inbounds i8, i8* %167, i64 %idxprom230
  %169 = load i8, i8* %arrayidx231, align 1
  store i8 %169, i8* %c1, align 1
  %170 = load i8*, i8** %block.addr, align 8
  %171 = load i32, i32* %i2.addr, align 4
  %idxprom232 = zext i32 %171 to i64
  %arrayidx233 = getelementptr inbounds i8, i8* %170, i64 %idxprom232
  %172 = load i8, i8* %arrayidx233, align 1
  store i8 %172, i8* %c2, align 1
  %173 = load i8, i8* %c1, align 1
  %conv234 = zext i8 %173 to i32
  %174 = load i8, i8* %c2, align 1
  %conv235 = zext i8 %174 to i32
  %cmp236 = icmp ne i32 %conv234, %conv235
  br i1 %cmp236, label %if.then238, label %if.end244

if.then238:                                       ; preds = %if.end227
  %175 = load i8, i8* %c1, align 1
  %conv239 = zext i8 %175 to i32
  %176 = load i8, i8* %c2, align 1
  %conv240 = zext i8 %176 to i32
  %cmp241 = icmp sgt i32 %conv239, %conv240
  %conv242 = zext i1 %cmp241 to i32
  %conv243 = trunc i32 %conv242 to i8
  store i8 %conv243, i8* %retval, align 1
  br label %return

if.end244:                                        ; preds = %if.end227
  %177 = load i16*, i16** %quadrant.addr, align 8
  %178 = load i32, i32* %i1.addr, align 4
  %idxprom245 = zext i32 %178 to i64
  %arrayidx246 = getelementptr inbounds i16, i16* %177, i64 %idxprom245
  %179 = load i16, i16* %arrayidx246, align 2
  store i16 %179, i16* %s1, align 2
  %180 = load i16*, i16** %quadrant.addr, align 8
  %181 = load i32, i32* %i2.addr, align 4
  %idxprom247 = zext i32 %181 to i64
  %arrayidx248 = getelementptr inbounds i16, i16* %180, i64 %idxprom247
  %182 = load i16, i16* %arrayidx248, align 2
  store i16 %182, i16* %s2, align 2
  %183 = load i16, i16* %s1, align 2
  %conv249 = zext i16 %183 to i32
  %184 = load i16, i16* %s2, align 2
  %conv250 = zext i16 %184 to i32
  %cmp251 = icmp ne i32 %conv249, %conv250
  br i1 %cmp251, label %if.then253, label %if.end259

if.then253:                                       ; preds = %if.end244
  %185 = load i16, i16* %s1, align 2
  %conv254 = zext i16 %185 to i32
  %186 = load i16, i16* %s2, align 2
  %conv255 = zext i16 %186 to i32
  %cmp256 = icmp sgt i32 %conv254, %conv255
  %conv257 = zext i1 %cmp256 to i32
  %conv258 = trunc i32 %conv257 to i8
  store i8 %conv258, i8* %retval, align 1
  br label %return

if.end259:                                        ; preds = %if.end244
  %187 = load i32, i32* %i1.addr, align 4
  %inc260 = add i32 %187, 1
  store i32 %inc260, i32* %i1.addr, align 4
  %188 = load i32, i32* %i2.addr, align 4
  %inc261 = add i32 %188, 1
  store i32 %inc261, i32* %i2.addr, align 4
  %189 = load i8*, i8** %block.addr, align 8
  %190 = load i32, i32* %i1.addr, align 4
  %idxprom262 = zext i32 %190 to i64
  %arrayidx263 = getelementptr inbounds i8, i8* %189, i64 %idxprom262
  %191 = load i8, i8* %arrayidx263, align 1
  store i8 %191, i8* %c1, align 1
  %192 = load i8*, i8** %block.addr, align 8
  %193 = load i32, i32* %i2.addr, align 4
  %idxprom264 = zext i32 %193 to i64
  %arrayidx265 = getelementptr inbounds i8, i8* %192, i64 %idxprom264
  %194 = load i8, i8* %arrayidx265, align 1
  store i8 %194, i8* %c2, align 1
  %195 = load i8, i8* %c1, align 1
  %conv266 = zext i8 %195 to i32
  %196 = load i8, i8* %c2, align 1
  %conv267 = zext i8 %196 to i32
  %cmp268 = icmp ne i32 %conv266, %conv267
  br i1 %cmp268, label %if.then270, label %if.end276

if.then270:                                       ; preds = %if.end259
  %197 = load i8, i8* %c1, align 1
  %conv271 = zext i8 %197 to i32
  %198 = load i8, i8* %c2, align 1
  %conv272 = zext i8 %198 to i32
  %cmp273 = icmp sgt i32 %conv271, %conv272
  %conv274 = zext i1 %cmp273 to i32
  %conv275 = trunc i32 %conv274 to i8
  store i8 %conv275, i8* %retval, align 1
  br label %return

if.end276:                                        ; preds = %if.end259
  %199 = load i16*, i16** %quadrant.addr, align 8
  %200 = load i32, i32* %i1.addr, align 4
  %idxprom277 = zext i32 %200 to i64
  %arrayidx278 = getelementptr inbounds i16, i16* %199, i64 %idxprom277
  %201 = load i16, i16* %arrayidx278, align 2
  store i16 %201, i16* %s1, align 2
  %202 = load i16*, i16** %quadrant.addr, align 8
  %203 = load i32, i32* %i2.addr, align 4
  %idxprom279 = zext i32 %203 to i64
  %arrayidx280 = getelementptr inbounds i16, i16* %202, i64 %idxprom279
  %204 = load i16, i16* %arrayidx280, align 2
  store i16 %204, i16* %s2, align 2
  %205 = load i16, i16* %s1, align 2
  %conv281 = zext i16 %205 to i32
  %206 = load i16, i16* %s2, align 2
  %conv282 = zext i16 %206 to i32
  %cmp283 = icmp ne i32 %conv281, %conv282
  br i1 %cmp283, label %if.then285, label %if.end291

if.then285:                                       ; preds = %if.end276
  %207 = load i16, i16* %s1, align 2
  %conv286 = zext i16 %207 to i32
  %208 = load i16, i16* %s2, align 2
  %conv287 = zext i16 %208 to i32
  %cmp288 = icmp sgt i32 %conv286, %conv287
  %conv289 = zext i1 %cmp288 to i32
  %conv290 = trunc i32 %conv289 to i8
  store i8 %conv290, i8* %retval, align 1
  br label %return

if.end291:                                        ; preds = %if.end276
  %209 = load i32, i32* %i1.addr, align 4
  %inc292 = add i32 %209, 1
  store i32 %inc292, i32* %i1.addr, align 4
  %210 = load i32, i32* %i2.addr, align 4
  %inc293 = add i32 %210, 1
  store i32 %inc293, i32* %i2.addr, align 4
  %211 = load i8*, i8** %block.addr, align 8
  %212 = load i32, i32* %i1.addr, align 4
  %idxprom294 = zext i32 %212 to i64
  %arrayidx295 = getelementptr inbounds i8, i8* %211, i64 %idxprom294
  %213 = load i8, i8* %arrayidx295, align 1
  store i8 %213, i8* %c1, align 1
  %214 = load i8*, i8** %block.addr, align 8
  %215 = load i32, i32* %i2.addr, align 4
  %idxprom296 = zext i32 %215 to i64
  %arrayidx297 = getelementptr inbounds i8, i8* %214, i64 %idxprom296
  %216 = load i8, i8* %arrayidx297, align 1
  store i8 %216, i8* %c2, align 1
  %217 = load i8, i8* %c1, align 1
  %conv298 = zext i8 %217 to i32
  %218 = load i8, i8* %c2, align 1
  %conv299 = zext i8 %218 to i32
  %cmp300 = icmp ne i32 %conv298, %conv299
  br i1 %cmp300, label %if.then302, label %if.end308

if.then302:                                       ; preds = %if.end291
  %219 = load i8, i8* %c1, align 1
  %conv303 = zext i8 %219 to i32
  %220 = load i8, i8* %c2, align 1
  %conv304 = zext i8 %220 to i32
  %cmp305 = icmp sgt i32 %conv303, %conv304
  %conv306 = zext i1 %cmp305 to i32
  %conv307 = trunc i32 %conv306 to i8
  store i8 %conv307, i8* %retval, align 1
  br label %return

if.end308:                                        ; preds = %if.end291
  %221 = load i16*, i16** %quadrant.addr, align 8
  %222 = load i32, i32* %i1.addr, align 4
  %idxprom309 = zext i32 %222 to i64
  %arrayidx310 = getelementptr inbounds i16, i16* %221, i64 %idxprom309
  %223 = load i16, i16* %arrayidx310, align 2
  store i16 %223, i16* %s1, align 2
  %224 = load i16*, i16** %quadrant.addr, align 8
  %225 = load i32, i32* %i2.addr, align 4
  %idxprom311 = zext i32 %225 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %224, i64 %idxprom311
  %226 = load i16, i16* %arrayidx312, align 2
  store i16 %226, i16* %s2, align 2
  %227 = load i16, i16* %s1, align 2
  %conv313 = zext i16 %227 to i32
  %228 = load i16, i16* %s2, align 2
  %conv314 = zext i16 %228 to i32
  %cmp315 = icmp ne i32 %conv313, %conv314
  br i1 %cmp315, label %if.then317, label %if.end323

if.then317:                                       ; preds = %if.end308
  %229 = load i16, i16* %s1, align 2
  %conv318 = zext i16 %229 to i32
  %230 = load i16, i16* %s2, align 2
  %conv319 = zext i16 %230 to i32
  %cmp320 = icmp sgt i32 %conv318, %conv319
  %conv321 = zext i1 %cmp320 to i32
  %conv322 = trunc i32 %conv321 to i8
  store i8 %conv322, i8* %retval, align 1
  br label %return

if.end323:                                        ; preds = %if.end308
  %231 = load i32, i32* %i1.addr, align 4
  %inc324 = add i32 %231, 1
  store i32 %inc324, i32* %i1.addr, align 4
  %232 = load i32, i32* %i2.addr, align 4
  %inc325 = add i32 %232, 1
  store i32 %inc325, i32* %i2.addr, align 4
  %233 = load i8*, i8** %block.addr, align 8
  %234 = load i32, i32* %i1.addr, align 4
  %idxprom326 = zext i32 %234 to i64
  %arrayidx327 = getelementptr inbounds i8, i8* %233, i64 %idxprom326
  %235 = load i8, i8* %arrayidx327, align 1
  store i8 %235, i8* %c1, align 1
  %236 = load i8*, i8** %block.addr, align 8
  %237 = load i32, i32* %i2.addr, align 4
  %idxprom328 = zext i32 %237 to i64
  %arrayidx329 = getelementptr inbounds i8, i8* %236, i64 %idxprom328
  %238 = load i8, i8* %arrayidx329, align 1
  store i8 %238, i8* %c2, align 1
  %239 = load i8, i8* %c1, align 1
  %conv330 = zext i8 %239 to i32
  %240 = load i8, i8* %c2, align 1
  %conv331 = zext i8 %240 to i32
  %cmp332 = icmp ne i32 %conv330, %conv331
  br i1 %cmp332, label %if.then334, label %if.end340

if.then334:                                       ; preds = %if.end323
  %241 = load i8, i8* %c1, align 1
  %conv335 = zext i8 %241 to i32
  %242 = load i8, i8* %c2, align 1
  %conv336 = zext i8 %242 to i32
  %cmp337 = icmp sgt i32 %conv335, %conv336
  %conv338 = zext i1 %cmp337 to i32
  %conv339 = trunc i32 %conv338 to i8
  store i8 %conv339, i8* %retval, align 1
  br label %return

if.end340:                                        ; preds = %if.end323
  %243 = load i16*, i16** %quadrant.addr, align 8
  %244 = load i32, i32* %i1.addr, align 4
  %idxprom341 = zext i32 %244 to i64
  %arrayidx342 = getelementptr inbounds i16, i16* %243, i64 %idxprom341
  %245 = load i16, i16* %arrayidx342, align 2
  store i16 %245, i16* %s1, align 2
  %246 = load i16*, i16** %quadrant.addr, align 8
  %247 = load i32, i32* %i2.addr, align 4
  %idxprom343 = zext i32 %247 to i64
  %arrayidx344 = getelementptr inbounds i16, i16* %246, i64 %idxprom343
  %248 = load i16, i16* %arrayidx344, align 2
  store i16 %248, i16* %s2, align 2
  %249 = load i16, i16* %s1, align 2
  %conv345 = zext i16 %249 to i32
  %250 = load i16, i16* %s2, align 2
  %conv346 = zext i16 %250 to i32
  %cmp347 = icmp ne i32 %conv345, %conv346
  br i1 %cmp347, label %if.then349, label %if.end355

if.then349:                                       ; preds = %if.end340
  %251 = load i16, i16* %s1, align 2
  %conv350 = zext i16 %251 to i32
  %252 = load i16, i16* %s2, align 2
  %conv351 = zext i16 %252 to i32
  %cmp352 = icmp sgt i32 %conv350, %conv351
  %conv353 = zext i1 %cmp352 to i32
  %conv354 = trunc i32 %conv353 to i8
  store i8 %conv354, i8* %retval, align 1
  br label %return

if.end355:                                        ; preds = %if.end340
  %253 = load i32, i32* %i1.addr, align 4
  %inc356 = add i32 %253, 1
  store i32 %inc356, i32* %i1.addr, align 4
  %254 = load i32, i32* %i2.addr, align 4
  %inc357 = add i32 %254, 1
  store i32 %inc357, i32* %i2.addr, align 4
  %255 = load i8*, i8** %block.addr, align 8
  %256 = load i32, i32* %i1.addr, align 4
  %idxprom358 = zext i32 %256 to i64
  %arrayidx359 = getelementptr inbounds i8, i8* %255, i64 %idxprom358
  %257 = load i8, i8* %arrayidx359, align 1
  store i8 %257, i8* %c1, align 1
  %258 = load i8*, i8** %block.addr, align 8
  %259 = load i32, i32* %i2.addr, align 4
  %idxprom360 = zext i32 %259 to i64
  %arrayidx361 = getelementptr inbounds i8, i8* %258, i64 %idxprom360
  %260 = load i8, i8* %arrayidx361, align 1
  store i8 %260, i8* %c2, align 1
  %261 = load i8, i8* %c1, align 1
  %conv362 = zext i8 %261 to i32
  %262 = load i8, i8* %c2, align 1
  %conv363 = zext i8 %262 to i32
  %cmp364 = icmp ne i32 %conv362, %conv363
  br i1 %cmp364, label %if.then366, label %if.end372

if.then366:                                       ; preds = %if.end355
  %263 = load i8, i8* %c1, align 1
  %conv367 = zext i8 %263 to i32
  %264 = load i8, i8* %c2, align 1
  %conv368 = zext i8 %264 to i32
  %cmp369 = icmp sgt i32 %conv367, %conv368
  %conv370 = zext i1 %cmp369 to i32
  %conv371 = trunc i32 %conv370 to i8
  store i8 %conv371, i8* %retval, align 1
  br label %return

if.end372:                                        ; preds = %if.end355
  %265 = load i16*, i16** %quadrant.addr, align 8
  %266 = load i32, i32* %i1.addr, align 4
  %idxprom373 = zext i32 %266 to i64
  %arrayidx374 = getelementptr inbounds i16, i16* %265, i64 %idxprom373
  %267 = load i16, i16* %arrayidx374, align 2
  store i16 %267, i16* %s1, align 2
  %268 = load i16*, i16** %quadrant.addr, align 8
  %269 = load i32, i32* %i2.addr, align 4
  %idxprom375 = zext i32 %269 to i64
  %arrayidx376 = getelementptr inbounds i16, i16* %268, i64 %idxprom375
  %270 = load i16, i16* %arrayidx376, align 2
  store i16 %270, i16* %s2, align 2
  %271 = load i16, i16* %s1, align 2
  %conv377 = zext i16 %271 to i32
  %272 = load i16, i16* %s2, align 2
  %conv378 = zext i16 %272 to i32
  %cmp379 = icmp ne i32 %conv377, %conv378
  br i1 %cmp379, label %if.then381, label %if.end387

if.then381:                                       ; preds = %if.end372
  %273 = load i16, i16* %s1, align 2
  %conv382 = zext i16 %273 to i32
  %274 = load i16, i16* %s2, align 2
  %conv383 = zext i16 %274 to i32
  %cmp384 = icmp sgt i32 %conv382, %conv383
  %conv385 = zext i1 %cmp384 to i32
  %conv386 = trunc i32 %conv385 to i8
  store i8 %conv386, i8* %retval, align 1
  br label %return

if.end387:                                        ; preds = %if.end372
  %275 = load i32, i32* %i1.addr, align 4
  %inc388 = add i32 %275, 1
  store i32 %inc388, i32* %i1.addr, align 4
  %276 = load i32, i32* %i2.addr, align 4
  %inc389 = add i32 %276, 1
  store i32 %inc389, i32* %i2.addr, align 4
  %277 = load i8*, i8** %block.addr, align 8
  %278 = load i32, i32* %i1.addr, align 4
  %idxprom390 = zext i32 %278 to i64
  %arrayidx391 = getelementptr inbounds i8, i8* %277, i64 %idxprom390
  %279 = load i8, i8* %arrayidx391, align 1
  store i8 %279, i8* %c1, align 1
  %280 = load i8*, i8** %block.addr, align 8
  %281 = load i32, i32* %i2.addr, align 4
  %idxprom392 = zext i32 %281 to i64
  %arrayidx393 = getelementptr inbounds i8, i8* %280, i64 %idxprom392
  %282 = load i8, i8* %arrayidx393, align 1
  store i8 %282, i8* %c2, align 1
  %283 = load i8, i8* %c1, align 1
  %conv394 = zext i8 %283 to i32
  %284 = load i8, i8* %c2, align 1
  %conv395 = zext i8 %284 to i32
  %cmp396 = icmp ne i32 %conv394, %conv395
  br i1 %cmp396, label %if.then398, label %if.end404

if.then398:                                       ; preds = %if.end387
  %285 = load i8, i8* %c1, align 1
  %conv399 = zext i8 %285 to i32
  %286 = load i8, i8* %c2, align 1
  %conv400 = zext i8 %286 to i32
  %cmp401 = icmp sgt i32 %conv399, %conv400
  %conv402 = zext i1 %cmp401 to i32
  %conv403 = trunc i32 %conv402 to i8
  store i8 %conv403, i8* %retval, align 1
  br label %return

if.end404:                                        ; preds = %if.end387
  %287 = load i16*, i16** %quadrant.addr, align 8
  %288 = load i32, i32* %i1.addr, align 4
  %idxprom405 = zext i32 %288 to i64
  %arrayidx406 = getelementptr inbounds i16, i16* %287, i64 %idxprom405
  %289 = load i16, i16* %arrayidx406, align 2
  store i16 %289, i16* %s1, align 2
  %290 = load i16*, i16** %quadrant.addr, align 8
  %291 = load i32, i32* %i2.addr, align 4
  %idxprom407 = zext i32 %291 to i64
  %arrayidx408 = getelementptr inbounds i16, i16* %290, i64 %idxprom407
  %292 = load i16, i16* %arrayidx408, align 2
  store i16 %292, i16* %s2, align 2
  %293 = load i16, i16* %s1, align 2
  %conv409 = zext i16 %293 to i32
  %294 = load i16, i16* %s2, align 2
  %conv410 = zext i16 %294 to i32
  %cmp411 = icmp ne i32 %conv409, %conv410
  br i1 %cmp411, label %if.then413, label %if.end419

if.then413:                                       ; preds = %if.end404
  %295 = load i16, i16* %s1, align 2
  %conv414 = zext i16 %295 to i32
  %296 = load i16, i16* %s2, align 2
  %conv415 = zext i16 %296 to i32
  %cmp416 = icmp sgt i32 %conv414, %conv415
  %conv417 = zext i1 %cmp416 to i32
  %conv418 = trunc i32 %conv417 to i8
  store i8 %conv418, i8* %retval, align 1
  br label %return

if.end419:                                        ; preds = %if.end404
  %297 = load i32, i32* %i1.addr, align 4
  %inc420 = add i32 %297, 1
  store i32 %inc420, i32* %i1.addr, align 4
  %298 = load i32, i32* %i2.addr, align 4
  %inc421 = add i32 %298, 1
  store i32 %inc421, i32* %i2.addr, align 4
  %299 = load i8*, i8** %block.addr, align 8
  %300 = load i32, i32* %i1.addr, align 4
  %idxprom422 = zext i32 %300 to i64
  %arrayidx423 = getelementptr inbounds i8, i8* %299, i64 %idxprom422
  %301 = load i8, i8* %arrayidx423, align 1
  store i8 %301, i8* %c1, align 1
  %302 = load i8*, i8** %block.addr, align 8
  %303 = load i32, i32* %i2.addr, align 4
  %idxprom424 = zext i32 %303 to i64
  %arrayidx425 = getelementptr inbounds i8, i8* %302, i64 %idxprom424
  %304 = load i8, i8* %arrayidx425, align 1
  store i8 %304, i8* %c2, align 1
  %305 = load i8, i8* %c1, align 1
  %conv426 = zext i8 %305 to i32
  %306 = load i8, i8* %c2, align 1
  %conv427 = zext i8 %306 to i32
  %cmp428 = icmp ne i32 %conv426, %conv427
  br i1 %cmp428, label %if.then430, label %if.end436

if.then430:                                       ; preds = %if.end419
  %307 = load i8, i8* %c1, align 1
  %conv431 = zext i8 %307 to i32
  %308 = load i8, i8* %c2, align 1
  %conv432 = zext i8 %308 to i32
  %cmp433 = icmp sgt i32 %conv431, %conv432
  %conv434 = zext i1 %cmp433 to i32
  %conv435 = trunc i32 %conv434 to i8
  store i8 %conv435, i8* %retval, align 1
  br label %return

if.end436:                                        ; preds = %if.end419
  %309 = load i16*, i16** %quadrant.addr, align 8
  %310 = load i32, i32* %i1.addr, align 4
  %idxprom437 = zext i32 %310 to i64
  %arrayidx438 = getelementptr inbounds i16, i16* %309, i64 %idxprom437
  %311 = load i16, i16* %arrayidx438, align 2
  store i16 %311, i16* %s1, align 2
  %312 = load i16*, i16** %quadrant.addr, align 8
  %313 = load i32, i32* %i2.addr, align 4
  %idxprom439 = zext i32 %313 to i64
  %arrayidx440 = getelementptr inbounds i16, i16* %312, i64 %idxprom439
  %314 = load i16, i16* %arrayidx440, align 2
  store i16 %314, i16* %s2, align 2
  %315 = load i16, i16* %s1, align 2
  %conv441 = zext i16 %315 to i32
  %316 = load i16, i16* %s2, align 2
  %conv442 = zext i16 %316 to i32
  %cmp443 = icmp ne i32 %conv441, %conv442
  br i1 %cmp443, label %if.then445, label %if.end451

if.then445:                                       ; preds = %if.end436
  %317 = load i16, i16* %s1, align 2
  %conv446 = zext i16 %317 to i32
  %318 = load i16, i16* %s2, align 2
  %conv447 = zext i16 %318 to i32
  %cmp448 = icmp sgt i32 %conv446, %conv447
  %conv449 = zext i1 %cmp448 to i32
  %conv450 = trunc i32 %conv449 to i8
  store i8 %conv450, i8* %retval, align 1
  br label %return

if.end451:                                        ; preds = %if.end436
  %319 = load i32, i32* %i1.addr, align 4
  %inc452 = add i32 %319, 1
  store i32 %inc452, i32* %i1.addr, align 4
  %320 = load i32, i32* %i2.addr, align 4
  %inc453 = add i32 %320, 1
  store i32 %inc453, i32* %i2.addr, align 4
  %321 = load i32, i32* %i1.addr, align 4
  %322 = load i32, i32* %nblock.addr, align 4
  %cmp454 = icmp uge i32 %321, %322
  br i1 %cmp454, label %if.then456, label %if.end457

if.then456:                                       ; preds = %if.end451
  %323 = load i32, i32* %nblock.addr, align 4
  %324 = load i32, i32* %i1.addr, align 4
  %sub = sub i32 %324, %323
  store i32 %sub, i32* %i1.addr, align 4
  br label %if.end457

if.end457:                                        ; preds = %if.then456, %if.end451
  %325 = load i32, i32* %i2.addr, align 4
  %326 = load i32, i32* %nblock.addr, align 4
  %cmp458 = icmp uge i32 %325, %326
  br i1 %cmp458, label %if.then460, label %if.end462

if.then460:                                       ; preds = %if.end457
  %327 = load i32, i32* %nblock.addr, align 4
  %328 = load i32, i32* %i2.addr, align 4
  %sub461 = sub i32 %328, %327
  store i32 %sub461, i32* %i2.addr, align 4
  br label %if.end462

if.end462:                                        ; preds = %if.then460, %if.end457
  %329 = load i32, i32* %k, align 4
  %sub463 = sub nsw i32 %329, 8
  store i32 %sub463, i32* %k, align 4
  %330 = load i32*, i32** %budget.addr, align 8
  %331 = load i32, i32* %330, align 4
  %dec = add nsw i32 %331, -1
  store i32 %dec, i32* %330, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end462
  %332 = load i32, i32* %k, align 4
  %cmp464 = icmp sge i32 %332, 0
  br i1 %cmp464, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  store i8 0, i8* %retval, align 1
  br label %return

return:                                           ; preds = %do.end, %if.then445, %if.then430, %if.then413, %if.then398, %if.then381, %if.then366, %if.then349, %if.then334, %if.then317, %if.then302, %if.then285, %if.then270, %if.then253, %if.then238, %if.then221, %if.then206, %if.then189, %if.then172, %if.then155, %if.then138, %if.then121, %if.then104, %if.then87, %if.then70, %if.then53, %if.then36, %if.then19, %if.then
  %333 = load i8, i8* %retval, align 1
  ret i8 %333
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackQSort3(i32* %fmap, i32* %eclass, i32 %loSt, i32 %hiSt) #0 {
entry:
  %fmap.addr = alloca i32*, align 8
  %eclass.addr = alloca i32*, align 8
  %loSt.addr = alloca i32, align 4
  %hiSt.addr = alloca i32, align 4
  %unLo = alloca i32, align 4
  %unHi = alloca i32, align 4
  %ltLo = alloca i32, align 4
  %gtHi = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %sp = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %med = alloca i32, align 4
  %r = alloca i32, align 4
  %r3 = alloca i32, align 4
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %zztmp = alloca i32, align 4
  %zztmp73 = alloca i32, align 4
  %zztmp93 = alloca i32, align 4
  %yyp1 = alloca i32, align 4
  %yyp2 = alloca i32, align 4
  %yyn = alloca i32, align 4
  %zztmp117 = alloca i32, align 4
  %yyp1139 = alloca i32, align 4
  %yyp2140 = alloca i32, align 4
  %yyn143 = alloca i32, align 4
  %zztmp147 = alloca i32, align 4
  store i32* %fmap, i32** %fmap.addr, align 8
  store i32* %eclass, i32** %eclass.addr, align 8
  store i32 %loSt, i32* %loSt.addr, align 4
  store i32 %hiSt, i32* %hiSt.addr, align 4
  store i32 0, i32* %r, align 4
  store i32 0, i32* %sp, align 4
  %0 = load i32, i32* %loSt.addr, align 4
  %1 = load i32, i32* %sp, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom
  store i32 %0, i32* %arrayidx, align 4
  %2 = load i32, i32* %hiSt.addr, align 4
  %3 = load i32, i32* %sp, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom1
  store i32 %2, i32* %arrayidx2, align 4
  %4 = load i32, i32* %sp, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %sp, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end191, %if.then106, %if.then9, %entry
  %5 = load i32, i32* %sp, align 4
  %cmp = icmp sgt i32 %5, 0
  br i1 %cmp, label %while.body, label %while.end192

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %sp, align 4
  %cmp3 = icmp slt i32 %6, 100
  br i1 %cmp3, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %7 = load i32, i32* %sp, align 4
  %dec = add nsw i32 %7, -1
  store i32 %dec, i32* %sp, align 4
  %8 = load i32, i32* %sp, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom4
  %9 = load i32, i32* %arrayidx5, align 4
  store i32 %9, i32* %lo, align 4
  %10 = load i32, i32* %sp, align 4
  %idxprom6 = sext i32 %10 to i64
  %arrayidx7 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom6
  %11 = load i32, i32* %arrayidx7, align 4
  store i32 %11, i32* %hi, align 4
  %12 = load i32, i32* %hi, align 4
  %13 = load i32, i32* %lo, align 4
  %sub = sub nsw i32 %12, %13
  %cmp8 = icmp slt i32 %sub, 10
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %14 = load i32*, i32** %fmap.addr, align 8
  %15 = load i32*, i32** %eclass.addr, align 8
  %16 = load i32, i32* %lo, align 4
  %17 = load i32, i32* %hi, align 4
  call void @fallbackSimpleSort(i32* %14, i32* %15, i32 %16, i32 %17)
  br label %while.cond

if.end10:                                         ; preds = %if.end
  %18 = load i32, i32* %r, align 4
  %mul = mul i32 %18, 7621
  %add = add i32 %mul, 1
  %rem = urem i32 %add, 32768
  store i32 %rem, i32* %r, align 4
  %19 = load i32, i32* %r, align 4
  %rem11 = urem i32 %19, 3
  store i32 %rem11, i32* %r3, align 4
  %20 = load i32, i32* %r3, align 4
  %cmp12 = icmp eq i32 %20, 0
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end10
  %21 = load i32*, i32** %eclass.addr, align 8
  %22 = load i32*, i32** %fmap.addr, align 8
  %23 = load i32, i32* %lo, align 4
  %idxprom14 = sext i32 %23 to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %22, i64 %idxprom14
  %24 = load i32, i32* %arrayidx15, align 4
  %idxprom16 = zext i32 %24 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 %idxprom16
  %25 = load i32, i32* %arrayidx17, align 4
  store i32 %25, i32* %med, align 4
  br label %if.end31

if.else:                                          ; preds = %if.end10
  %26 = load i32, i32* %r3, align 4
  %cmp18 = icmp eq i32 %26, 1
  br i1 %cmp18, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.else
  %27 = load i32*, i32** %eclass.addr, align 8
  %28 = load i32*, i32** %fmap.addr, align 8
  %29 = load i32, i32* %lo, align 4
  %30 = load i32, i32* %hi, align 4
  %add20 = add nsw i32 %29, %30
  %shr = ashr i32 %add20, 1
  %idxprom21 = sext i32 %shr to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom21
  %31 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = zext i32 %31 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %27, i64 %idxprom23
  %32 = load i32, i32* %arrayidx24, align 4
  store i32 %32, i32* %med, align 4
  br label %if.end30

if.else25:                                        ; preds = %if.else
  %33 = load i32*, i32** %eclass.addr, align 8
  %34 = load i32*, i32** %fmap.addr, align 8
  %35 = load i32, i32* %hi, align 4
  %idxprom26 = sext i32 %35 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %34, i64 %idxprom26
  %36 = load i32, i32* %arrayidx27, align 4
  %idxprom28 = zext i32 %36 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %33, i64 %idxprom28
  %37 = load i32, i32* %arrayidx29, align 4
  store i32 %37, i32* %med, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else25, %if.then19
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then13
  %38 = load i32, i32* %lo, align 4
  store i32 %38, i32* %ltLo, align 4
  store i32 %38, i32* %unLo, align 4
  %39 = load i32, i32* %hi, align 4
  store i32 %39, i32* %gtHi, align 4
  store i32 %39, i32* %unHi, align 4
  br label %while.body33

while.body33:                                     ; preds = %if.end92, %if.end31
  br label %while.body35

while.body35:                                     ; preds = %if.end59, %if.then45, %while.body33
  %40 = load i32, i32* %unLo, align 4
  %41 = load i32, i32* %unHi, align 4
  %cmp36 = icmp sgt i32 %40, %41
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %while.body35
  br label %while.end

if.end38:                                         ; preds = %while.body35
  %42 = load i32*, i32** %eclass.addr, align 8
  %43 = load i32*, i32** %fmap.addr, align 8
  %44 = load i32, i32* %unLo, align 4
  %idxprom39 = sext i32 %44 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %43, i64 %idxprom39
  %45 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = zext i32 %45 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %42, i64 %idxprom41
  %46 = load i32, i32* %arrayidx42, align 4
  %47 = load i32, i32* %med, align 4
  %sub43 = sub nsw i32 %46, %47
  store i32 %sub43, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %cmp44 = icmp eq i32 %48, 0
  br i1 %cmp44, label %if.then45, label %if.end56

if.then45:                                        ; preds = %if.end38
  %49 = load i32*, i32** %fmap.addr, align 8
  %50 = load i32, i32* %unLo, align 4
  %idxprom46 = sext i32 %50 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %49, i64 %idxprom46
  %51 = load i32, i32* %arrayidx47, align 4
  store i32 %51, i32* %zztmp, align 4
  %52 = load i32*, i32** %fmap.addr, align 8
  %53 = load i32, i32* %ltLo, align 4
  %idxprom48 = sext i32 %53 to i64
  %arrayidx49 = getelementptr inbounds i32, i32* %52, i64 %idxprom48
  %54 = load i32, i32* %arrayidx49, align 4
  %55 = load i32*, i32** %fmap.addr, align 8
  %56 = load i32, i32* %unLo, align 4
  %idxprom50 = sext i32 %56 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %55, i64 %idxprom50
  store i32 %54, i32* %arrayidx51, align 4
  %57 = load i32, i32* %zztmp, align 4
  %58 = load i32*, i32** %fmap.addr, align 8
  %59 = load i32, i32* %ltLo, align 4
  %idxprom52 = sext i32 %59 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %58, i64 %idxprom52
  store i32 %57, i32* %arrayidx53, align 4
  %60 = load i32, i32* %ltLo, align 4
  %inc54 = add nsw i32 %60, 1
  store i32 %inc54, i32* %ltLo, align 4
  %61 = load i32, i32* %unLo, align 4
  %inc55 = add nsw i32 %61, 1
  store i32 %inc55, i32* %unLo, align 4
  br label %while.body35

if.end56:                                         ; preds = %if.end38
  %62 = load i32, i32* %n, align 4
  %cmp57 = icmp sgt i32 %62, 0
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.end56
  br label %while.end

if.end59:                                         ; preds = %if.end56
  %63 = load i32, i32* %unLo, align 4
  %inc60 = add nsw i32 %63, 1
  store i32 %inc60, i32* %unLo, align 4
  br label %while.body35

while.end:                                        ; preds = %if.then58, %if.then37
  br label %while.body62

while.body62:                                     ; preds = %if.end87, %if.then72, %while.end
  %64 = load i32, i32* %unLo, align 4
  %65 = load i32, i32* %unHi, align 4
  %cmp63 = icmp sgt i32 %64, %65
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %while.body62
  br label %while.end89

if.end65:                                         ; preds = %while.body62
  %66 = load i32*, i32** %eclass.addr, align 8
  %67 = load i32*, i32** %fmap.addr, align 8
  %68 = load i32, i32* %unHi, align 4
  %idxprom66 = sext i32 %68 to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %67, i64 %idxprom66
  %69 = load i32, i32* %arrayidx67, align 4
  %idxprom68 = zext i32 %69 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %66, i64 %idxprom68
  %70 = load i32, i32* %arrayidx69, align 4
  %71 = load i32, i32* %med, align 4
  %sub70 = sub nsw i32 %70, %71
  store i32 %sub70, i32* %n, align 4
  %72 = load i32, i32* %n, align 4
  %cmp71 = icmp eq i32 %72, 0
  br i1 %cmp71, label %if.then72, label %if.end84

if.then72:                                        ; preds = %if.end65
  %73 = load i32*, i32** %fmap.addr, align 8
  %74 = load i32, i32* %unHi, align 4
  %idxprom74 = sext i32 %74 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %73, i64 %idxprom74
  %75 = load i32, i32* %arrayidx75, align 4
  store i32 %75, i32* %zztmp73, align 4
  %76 = load i32*, i32** %fmap.addr, align 8
  %77 = load i32, i32* %gtHi, align 4
  %idxprom76 = sext i32 %77 to i64
  %arrayidx77 = getelementptr inbounds i32, i32* %76, i64 %idxprom76
  %78 = load i32, i32* %arrayidx77, align 4
  %79 = load i32*, i32** %fmap.addr, align 8
  %80 = load i32, i32* %unHi, align 4
  %idxprom78 = sext i32 %80 to i64
  %arrayidx79 = getelementptr inbounds i32, i32* %79, i64 %idxprom78
  store i32 %78, i32* %arrayidx79, align 4
  %81 = load i32, i32* %zztmp73, align 4
  %82 = load i32*, i32** %fmap.addr, align 8
  %83 = load i32, i32* %gtHi, align 4
  %idxprom80 = sext i32 %83 to i64
  %arrayidx81 = getelementptr inbounds i32, i32* %82, i64 %idxprom80
  store i32 %81, i32* %arrayidx81, align 4
  %84 = load i32, i32* %gtHi, align 4
  %dec82 = add nsw i32 %84, -1
  store i32 %dec82, i32* %gtHi, align 4
  %85 = load i32, i32* %unHi, align 4
  %dec83 = add nsw i32 %85, -1
  store i32 %dec83, i32* %unHi, align 4
  br label %while.body62

if.end84:                                         ; preds = %if.end65
  %86 = load i32, i32* %n, align 4
  %cmp85 = icmp slt i32 %86, 0
  br i1 %cmp85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end84
  br label %while.end89

if.end87:                                         ; preds = %if.end84
  %87 = load i32, i32* %unHi, align 4
  %dec88 = add nsw i32 %87, -1
  store i32 %dec88, i32* %unHi, align 4
  br label %while.body62

while.end89:                                      ; preds = %if.then86, %if.then64
  %88 = load i32, i32* %unLo, align 4
  %89 = load i32, i32* %unHi, align 4
  %cmp90 = icmp sgt i32 %88, %89
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %while.end89
  br label %while.end104

if.end92:                                         ; preds = %while.end89
  %90 = load i32*, i32** %fmap.addr, align 8
  %91 = load i32, i32* %unLo, align 4
  %idxprom94 = sext i32 %91 to i64
  %arrayidx95 = getelementptr inbounds i32, i32* %90, i64 %idxprom94
  %92 = load i32, i32* %arrayidx95, align 4
  store i32 %92, i32* %zztmp93, align 4
  %93 = load i32*, i32** %fmap.addr, align 8
  %94 = load i32, i32* %unHi, align 4
  %idxprom96 = sext i32 %94 to i64
  %arrayidx97 = getelementptr inbounds i32, i32* %93, i64 %idxprom96
  %95 = load i32, i32* %arrayidx97, align 4
  %96 = load i32*, i32** %fmap.addr, align 8
  %97 = load i32, i32* %unLo, align 4
  %idxprom98 = sext i32 %97 to i64
  %arrayidx99 = getelementptr inbounds i32, i32* %96, i64 %idxprom98
  store i32 %95, i32* %arrayidx99, align 4
  %98 = load i32, i32* %zztmp93, align 4
  %99 = load i32*, i32** %fmap.addr, align 8
  %100 = load i32, i32* %unHi, align 4
  %idxprom100 = sext i32 %100 to i64
  %arrayidx101 = getelementptr inbounds i32, i32* %99, i64 %idxprom100
  store i32 %98, i32* %arrayidx101, align 4
  %101 = load i32, i32* %unLo, align 4
  %inc102 = add nsw i32 %101, 1
  store i32 %inc102, i32* %unLo, align 4
  %102 = load i32, i32* %unHi, align 4
  %dec103 = add nsw i32 %102, -1
  store i32 %dec103, i32* %unHi, align 4
  br label %while.body33

while.end104:                                     ; preds = %if.then91
  %103 = load i32, i32* %gtHi, align 4
  %104 = load i32, i32* %ltLo, align 4
  %cmp105 = icmp slt i32 %103, %104
  br i1 %cmp105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %while.end104
  br label %while.cond

if.end107:                                        ; preds = %while.end104
  %105 = load i32, i32* %ltLo, align 4
  %106 = load i32, i32* %lo, align 4
  %sub108 = sub nsw i32 %105, %106
  %107 = load i32, i32* %unLo, align 4
  %108 = load i32, i32* %ltLo, align 4
  %sub109 = sub nsw i32 %107, %108
  %cmp110 = icmp slt i32 %sub108, %sub109
  br i1 %cmp110, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end107
  %109 = load i32, i32* %ltLo, align 4
  %110 = load i32, i32* %lo, align 4
  %sub111 = sub nsw i32 %109, %110
  br label %cond.end

cond.false:                                       ; preds = %if.end107
  %111 = load i32, i32* %unLo, align 4
  %112 = load i32, i32* %ltLo, align 4
  %sub112 = sub nsw i32 %111, %112
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub111, %cond.true ], [ %sub112, %cond.false ]
  store i32 %cond, i32* %n, align 4
  %113 = load i32, i32* %lo, align 4
  store i32 %113, i32* %yyp1, align 4
  %114 = load i32, i32* %unLo, align 4
  %115 = load i32, i32* %n, align 4
  %sub113 = sub nsw i32 %114, %115
  store i32 %sub113, i32* %yyp2, align 4
  %116 = load i32, i32* %n, align 4
  store i32 %116, i32* %yyn, align 4
  br label %while.cond114

while.cond114:                                    ; preds = %while.body116, %cond.end
  %117 = load i32, i32* %yyn, align 4
  %cmp115 = icmp sgt i32 %117, 0
  br i1 %cmp115, label %while.body116, label %while.end129

while.body116:                                    ; preds = %while.cond114
  %118 = load i32*, i32** %fmap.addr, align 8
  %119 = load i32, i32* %yyp1, align 4
  %idxprom118 = sext i32 %119 to i64
  %arrayidx119 = getelementptr inbounds i32, i32* %118, i64 %idxprom118
  %120 = load i32, i32* %arrayidx119, align 4
  store i32 %120, i32* %zztmp117, align 4
  %121 = load i32*, i32** %fmap.addr, align 8
  %122 = load i32, i32* %yyp2, align 4
  %idxprom120 = sext i32 %122 to i64
  %arrayidx121 = getelementptr inbounds i32, i32* %121, i64 %idxprom120
  %123 = load i32, i32* %arrayidx121, align 4
  %124 = load i32*, i32** %fmap.addr, align 8
  %125 = load i32, i32* %yyp1, align 4
  %idxprom122 = sext i32 %125 to i64
  %arrayidx123 = getelementptr inbounds i32, i32* %124, i64 %idxprom122
  store i32 %123, i32* %arrayidx123, align 4
  %126 = load i32, i32* %zztmp117, align 4
  %127 = load i32*, i32** %fmap.addr, align 8
  %128 = load i32, i32* %yyp2, align 4
  %idxprom124 = sext i32 %128 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %127, i64 %idxprom124
  store i32 %126, i32* %arrayidx125, align 4
  %129 = load i32, i32* %yyp1, align 4
  %inc126 = add nsw i32 %129, 1
  store i32 %inc126, i32* %yyp1, align 4
  %130 = load i32, i32* %yyp2, align 4
  %inc127 = add nsw i32 %130, 1
  store i32 %inc127, i32* %yyp2, align 4
  %131 = load i32, i32* %yyn, align 4
  %dec128 = add nsw i32 %131, -1
  store i32 %dec128, i32* %yyn, align 4
  br label %while.cond114

while.end129:                                     ; preds = %while.cond114
  %132 = load i32, i32* %hi, align 4
  %133 = load i32, i32* %gtHi, align 4
  %sub130 = sub nsw i32 %132, %133
  %134 = load i32, i32* %gtHi, align 4
  %135 = load i32, i32* %unHi, align 4
  %sub131 = sub nsw i32 %134, %135
  %cmp132 = icmp slt i32 %sub130, %sub131
  br i1 %cmp132, label %cond.true133, label %cond.false135

cond.true133:                                     ; preds = %while.end129
  %136 = load i32, i32* %hi, align 4
  %137 = load i32, i32* %gtHi, align 4
  %sub134 = sub nsw i32 %136, %137
  br label %cond.end137

cond.false135:                                    ; preds = %while.end129
  %138 = load i32, i32* %gtHi, align 4
  %139 = load i32, i32* %unHi, align 4
  %sub136 = sub nsw i32 %138, %139
  br label %cond.end137

cond.end137:                                      ; preds = %cond.false135, %cond.true133
  %cond138 = phi i32 [ %sub134, %cond.true133 ], [ %sub136, %cond.false135 ]
  store i32 %cond138, i32* %m, align 4
  %140 = load i32, i32* %unLo, align 4
  store i32 %140, i32* %yyp1139, align 4
  %141 = load i32, i32* %hi, align 4
  %142 = load i32, i32* %m, align 4
  %sub141 = sub nsw i32 %141, %142
  %add142 = add nsw i32 %sub141, 1
  store i32 %add142, i32* %yyp2140, align 4
  %143 = load i32, i32* %m, align 4
  store i32 %143, i32* %yyn143, align 4
  br label %while.cond144

while.cond144:                                    ; preds = %while.body146, %cond.end137
  %144 = load i32, i32* %yyn143, align 4
  %cmp145 = icmp sgt i32 %144, 0
  br i1 %cmp145, label %while.body146, label %while.end159

while.body146:                                    ; preds = %while.cond144
  %145 = load i32*, i32** %fmap.addr, align 8
  %146 = load i32, i32* %yyp1139, align 4
  %idxprom148 = sext i32 %146 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %145, i64 %idxprom148
  %147 = load i32, i32* %arrayidx149, align 4
  store i32 %147, i32* %zztmp147, align 4
  %148 = load i32*, i32** %fmap.addr, align 8
  %149 = load i32, i32* %yyp2140, align 4
  %idxprom150 = sext i32 %149 to i64
  %arrayidx151 = getelementptr inbounds i32, i32* %148, i64 %idxprom150
  %150 = load i32, i32* %arrayidx151, align 4
  %151 = load i32*, i32** %fmap.addr, align 8
  %152 = load i32, i32* %yyp1139, align 4
  %idxprom152 = sext i32 %152 to i64
  %arrayidx153 = getelementptr inbounds i32, i32* %151, i64 %idxprom152
  store i32 %150, i32* %arrayidx153, align 4
  %153 = load i32, i32* %zztmp147, align 4
  %154 = load i32*, i32** %fmap.addr, align 8
  %155 = load i32, i32* %yyp2140, align 4
  %idxprom154 = sext i32 %155 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %154, i64 %idxprom154
  store i32 %153, i32* %arrayidx155, align 4
  %156 = load i32, i32* %yyp1139, align 4
  %inc156 = add nsw i32 %156, 1
  store i32 %inc156, i32* %yyp1139, align 4
  %157 = load i32, i32* %yyp2140, align 4
  %inc157 = add nsw i32 %157, 1
  store i32 %inc157, i32* %yyp2140, align 4
  %158 = load i32, i32* %yyn143, align 4
  %dec158 = add nsw i32 %158, -1
  store i32 %dec158, i32* %yyn143, align 4
  br label %while.cond144

while.end159:                                     ; preds = %while.cond144
  %159 = load i32, i32* %lo, align 4
  %160 = load i32, i32* %unLo, align 4
  %add160 = add nsw i32 %159, %160
  %161 = load i32, i32* %ltLo, align 4
  %sub161 = sub nsw i32 %add160, %161
  %sub162 = sub nsw i32 %sub161, 1
  store i32 %sub162, i32* %n, align 4
  %162 = load i32, i32* %hi, align 4
  %163 = load i32, i32* %gtHi, align 4
  %164 = load i32, i32* %unHi, align 4
  %sub163 = sub nsw i32 %163, %164
  %sub164 = sub nsw i32 %162, %sub163
  %add165 = add nsw i32 %sub164, 1
  store i32 %add165, i32* %m, align 4
  %165 = load i32, i32* %n, align 4
  %166 = load i32, i32* %lo, align 4
  %sub166 = sub nsw i32 %165, %166
  %167 = load i32, i32* %hi, align 4
  %168 = load i32, i32* %m, align 4
  %sub167 = sub nsw i32 %167, %168
  %cmp168 = icmp sgt i32 %sub166, %sub167
  br i1 %cmp168, label %if.then169, label %if.else180

if.then169:                                       ; preds = %while.end159
  %169 = load i32, i32* %lo, align 4
  %170 = load i32, i32* %sp, align 4
  %idxprom170 = sext i32 %170 to i64
  %arrayidx171 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom170
  store i32 %169, i32* %arrayidx171, align 4
  %171 = load i32, i32* %n, align 4
  %172 = load i32, i32* %sp, align 4
  %idxprom172 = sext i32 %172 to i64
  %arrayidx173 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom172
  store i32 %171, i32* %arrayidx173, align 4
  %173 = load i32, i32* %sp, align 4
  %inc174 = add nsw i32 %173, 1
  store i32 %inc174, i32* %sp, align 4
  %174 = load i32, i32* %m, align 4
  %175 = load i32, i32* %sp, align 4
  %idxprom175 = sext i32 %175 to i64
  %arrayidx176 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom175
  store i32 %174, i32* %arrayidx176, align 4
  %176 = load i32, i32* %hi, align 4
  %177 = load i32, i32* %sp, align 4
  %idxprom177 = sext i32 %177 to i64
  %arrayidx178 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom177
  store i32 %176, i32* %arrayidx178, align 4
  %178 = load i32, i32* %sp, align 4
  %inc179 = add nsw i32 %178, 1
  store i32 %inc179, i32* %sp, align 4
  br label %if.end191

if.else180:                                       ; preds = %while.end159
  %179 = load i32, i32* %m, align 4
  %180 = load i32, i32* %sp, align 4
  %idxprom181 = sext i32 %180 to i64
  %arrayidx182 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom181
  store i32 %179, i32* %arrayidx182, align 4
  %181 = load i32, i32* %hi, align 4
  %182 = load i32, i32* %sp, align 4
  %idxprom183 = sext i32 %182 to i64
  %arrayidx184 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom183
  store i32 %181, i32* %arrayidx184, align 4
  %183 = load i32, i32* %sp, align 4
  %inc185 = add nsw i32 %183, 1
  store i32 %inc185, i32* %sp, align 4
  %184 = load i32, i32* %lo, align 4
  %185 = load i32, i32* %sp, align 4
  %idxprom186 = sext i32 %185 to i64
  %arrayidx187 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom186
  store i32 %184, i32* %arrayidx187, align 4
  %186 = load i32, i32* %n, align 4
  %187 = load i32, i32* %sp, align 4
  %idxprom188 = sext i32 %187 to i64
  %arrayidx189 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom188
  store i32 %186, i32* %arrayidx189, align 4
  %188 = load i32, i32* %sp, align 4
  %inc190 = add nsw i32 %188, 1
  store i32 %inc190, i32* %sp, align 4
  br label %if.end191

if.end191:                                        ; preds = %if.else180, %if.then169
  br label %while.cond

while.end192:                                     ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackSimpleSort(i32* %fmap, i32* %eclass, i32 %lo, i32 %hi) #0 {
entry:
  %fmap.addr = alloca i32*, align 8
  %eclass.addr = alloca i32*, align 8
  %lo.addr = alloca i32, align 4
  %hi.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ec_tmp = alloca i32, align 4
  store i32* %fmap, i32** %fmap.addr, align 8
  store i32* %eclass, i32** %eclass.addr, align 8
  store i32 %lo, i32* %lo.addr, align 4
  store i32 %hi, i32* %hi.addr, align 4
  %0 = load i32, i32* %lo.addr, align 4
  %1 = load i32, i32* %hi.addr, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end58

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %hi.addr, align 4
  %3 = load i32, i32* %lo.addr, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sgt i32 %sub, 3
  br i1 %cmp1, label %if.then2, label %if.end26

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %hi.addr, align 4
  %sub3 = sub nsw i32 %4, 4
  store i32 %sub3, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc24, %if.then2
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %lo.addr, align 4
  %cmp4 = icmp sge i32 %5, %6
  br i1 %cmp4, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  %7 = load i32*, i32** %fmap.addr, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  store i32 %9, i32* %tmp, align 4
  %10 = load i32*, i32** %eclass.addr, align 8
  %11 = load i32, i32* %tmp, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 %idxprom5
  %12 = load i32, i32* %arrayidx6, align 4
  store i32 %12, i32* %ec_tmp, align 4
  %13 = load i32, i32* %i, align 4
  %add = add nsw i32 %13, 4
  store i32 %add, i32* %j, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4
  %15 = load i32, i32* %hi.addr, align 4
  %cmp8 = icmp sle i32 %14, %15
  br i1 %cmp8, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond7
  %16 = load i32, i32* %ec_tmp, align 4
  %17 = load i32*, i32** %eclass.addr, align 8
  %18 = load i32*, i32** %fmap.addr, align 8
  %19 = load i32, i32* %j, align 4
  %idxprom9 = sext i32 %19 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %18, i64 %idxprom9
  %20 = load i32, i32* %arrayidx10, align 4
  %idxprom11 = zext i32 %20 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 %idxprom11
  %21 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp ugt i32 %16, %21
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond7
  %22 = phi i1 [ false, %for.cond7 ], [ %cmp13, %land.rhs ]
  br i1 %22, label %for.body14, label %for.end

for.body14:                                       ; preds = %land.end
  %23 = load i32*, i32** %fmap.addr, align 8
  %24 = load i32, i32* %j, align 4
  %idxprom15 = sext i32 %24 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %23, i64 %idxprom15
  %25 = load i32, i32* %arrayidx16, align 4
  %26 = load i32*, i32** %fmap.addr, align 8
  %27 = load i32, i32* %j, align 4
  %sub17 = sub nsw i32 %27, 4
  %idxprom18 = sext i32 %sub17 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %26, i64 %idxprom18
  store i32 %25, i32* %arrayidx19, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body14
  %28 = load i32, i32* %j, align 4
  %add20 = add nsw i32 %28, 4
  store i32 %add20, i32* %j, align 4
  br label %for.cond7

for.end:                                          ; preds = %land.end
  %29 = load i32, i32* %tmp, align 4
  %30 = load i32*, i32** %fmap.addr, align 8
  %31 = load i32, i32* %j, align 4
  %sub21 = sub nsw i32 %31, 4
  %idxprom22 = sext i32 %sub21 to i64
  %arrayidx23 = getelementptr inbounds i32, i32* %30, i64 %idxprom22
  store i32 %29, i32* %arrayidx23, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4
  %dec = add nsw i32 %32, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  br label %if.end26

if.end26:                                         ; preds = %for.end25, %if.end
  %33 = load i32, i32* %hi.addr, align 4
  %sub27 = sub nsw i32 %33, 1
  store i32 %sub27, i32* %i, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc56, %if.end26
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %lo.addr, align 4
  %cmp29 = icmp sge i32 %34, %35
  br i1 %cmp29, label %for.body30, label %for.end58

for.body30:                                       ; preds = %for.cond28
  %36 = load i32*, i32** %fmap.addr, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %37 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 %idxprom31
  %38 = load i32, i32* %arrayidx32, align 4
  store i32 %38, i32* %tmp, align 4
  %39 = load i32*, i32** %eclass.addr, align 8
  %40 = load i32, i32* %tmp, align 4
  %idxprom33 = sext i32 %40 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %39, i64 %idxprom33
  %41 = load i32, i32* %arrayidx34, align 4
  store i32 %41, i32* %ec_tmp, align 4
  %42 = load i32, i32* %i, align 4
  %add35 = add nsw i32 %42, 1
  store i32 %add35, i32* %j, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc51, %for.body30
  %43 = load i32, i32* %j, align 4
  %44 = load i32, i32* %hi.addr, align 4
  %cmp37 = icmp sle i32 %43, %44
  br i1 %cmp37, label %land.rhs38, label %land.end44

land.rhs38:                                       ; preds = %for.cond36
  %45 = load i32, i32* %ec_tmp, align 4
  %46 = load i32*, i32** %eclass.addr, align 8
  %47 = load i32*, i32** %fmap.addr, align 8
  %48 = load i32, i32* %j, align 4
  %idxprom39 = sext i32 %48 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %47, i64 %idxprom39
  %49 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = zext i32 %49 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %46, i64 %idxprom41
  %50 = load i32, i32* %arrayidx42, align 4
  %cmp43 = icmp ugt i32 %45, %50
  br label %land.end44

land.end44:                                       ; preds = %land.rhs38, %for.cond36
  %51 = phi i1 [ false, %for.cond36 ], [ %cmp43, %land.rhs38 ]
  br i1 %51, label %for.body45, label %for.end52

for.body45:                                       ; preds = %land.end44
  %52 = load i32*, i32** %fmap.addr, align 8
  %53 = load i32, i32* %j, align 4
  %idxprom46 = sext i32 %53 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %52, i64 %idxprom46
  %54 = load i32, i32* %arrayidx47, align 4
  %55 = load i32*, i32** %fmap.addr, align 8
  %56 = load i32, i32* %j, align 4
  %sub48 = sub nsw i32 %56, 1
  %idxprom49 = sext i32 %sub48 to i64
  %arrayidx50 = getelementptr inbounds i32, i32* %55, i64 %idxprom49
  store i32 %54, i32* %arrayidx50, align 4
  br label %for.inc51

for.inc51:                                        ; preds = %for.body45
  %57 = load i32, i32* %j, align 4
  %inc = add nsw i32 %57, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond36

for.end52:                                        ; preds = %land.end44
  %58 = load i32, i32* %tmp, align 4
  %59 = load i32*, i32** %fmap.addr, align 8
  %60 = load i32, i32* %j, align 4
  %sub53 = sub nsw i32 %60, 1
  %idxprom54 = sext i32 %sub53 to i64
  %arrayidx55 = getelementptr inbounds i32, i32* %59, i64 %idxprom54
  store i32 %58, i32* %arrayidx55, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.end52
  %61 = load i32, i32* %i, align 4
  %dec57 = add nsw i32 %61, -1
  store i32 %dec57, i32* %i, align 4
  br label %for.cond28

for.end58:                                        ; preds = %for.cond28, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_output_safely(i8* %name, i8* %mode) #0 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %fh = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i8* %mode, i8** %mode.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call i32 (i8*, i32, ...) @open(i8* %0, i32 193, i32 384)
  store i32 %call, i32* %fh, align 4
  %1 = load i32, i32* %fh, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %fh, align 4
  %3 = load i8*, i8** %mode.addr, align 8
  %call1 = call %struct._IO_FILE* @fdopen(i32 %2, i8* %3) #9
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fh, align 4
  %call4 = call i32 @close(i32 %5)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  store %struct._IO_FILE* %6, %struct._IO_FILE** %retval, align 8
  br label %return

return:                                           ; preds = %if.end5, %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8
  ret %struct._IO_FILE* %7
}

declare dso_local i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

declare dso_local i32 @close(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %argList = alloca %struct.zzzz*, align 8
  %aa = alloca %struct.zzzz*, align 8
  %decode = alloca i8, align 1
  %aa2 = alloca %struct.zzzz*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  %call = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %call1 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.15, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.15, i64 0, i64 0))
  %0 = load i8**, i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0
  %1 = load i8*, i8** %arrayidx, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8* %1)
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8** @progName, align 8
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %tmp, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %tmp, align 8
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv3, 47
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %6 = load i8*, i8** %tmp, align 8
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %add.ptr, i8** @progName, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.zzzz* null, %struct.zzzz** %argList, align 8
  call void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.16, i64 0, i64 0))
  call void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.17, i64 0, i64 0))
  store i32 1, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc12, %for.end
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %argc.addr, align 4
  %sub = sub nsw i32 %9, 1
  %cmp7 = icmp sle i32 %8, %sub
  br i1 %cmp7, label %for.body9, label %for.end13

for.body9:                                        ; preds = %for.cond6
  %10 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  %11 = load i8**, i8*** %argv.addr, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx10 = getelementptr inbounds i8*, i8** %11, i64 %idxprom
  %13 = load i8*, i8** %arrayidx10, align 8
  %call11 = call %struct.zzzz* @snocString(%struct.zzzz* %10, i8* %13)
  store %struct.zzzz* %call11, %struct.zzzz** %argList, align 8
  br label %for.inc12

for.inc12:                                        ; preds = %for.body9
  %14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond6

for.end13:                                        ; preds = %for.cond6
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  store i8 1, i8* %decode, align 1
  %15 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %15, %struct.zzzz** %aa, align 8
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc42, %for.end13
  %16 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp15 = icmp ne %struct.zzzz* %16, null
  br i1 %cmp15, label %for.body17, label %for.end43

for.body17:                                       ; preds = %for.cond14
  %17 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name = getelementptr inbounds %struct.zzzz, %struct.zzzz* %17, i32 0, i32 0
  %18 = load i8*, i8** %name, align 8
  %call18 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %for.body17
  store i8 0, i8* %decode, align 1
  br label %for.inc42

if.end22:                                         ; preds = %for.body17
  %19 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name23 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %19, i32 0, i32 0
  %20 = load i8*, i8** %name23, align 8
  %arrayidx24 = getelementptr inbounds i8, i8* %20, i64 0
  %21 = load i8, i8* %arrayidx24, align 1
  %conv25 = sext i8 %21 to i32
  %cmp26 = icmp eq i32 %conv25, 45
  br i1 %cmp26, label %land.lhs.true, label %if.end30

land.lhs.true:                                    ; preds = %if.end22
  %22 = load i8, i8* %decode, align 1
  %conv28 = zext i8 %22 to i32
  %tobool = icmp ne i32 %conv28, 0
  br i1 %tobool, label %if.then29, label %if.end30

if.then29:                                        ; preds = %land.lhs.true
  br label %for.inc42

if.end30:                                         ; preds = %land.lhs.true, %if.end22
  %23 = load i32, i32* @numFileNames, align 4
  %inc31 = add nsw i32 %23, 1
  store i32 %inc31, i32* @numFileNames, align 4
  %24 = load i32, i32* @longestFileName, align 4
  %25 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name32 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %25, i32 0, i32 0
  %26 = load i8*, i8** %name32, align 8
  %call33 = call i64 @strlen(i8* %26) #10
  %conv34 = trunc i64 %call33 to i32
  %cmp35 = icmp slt i32 %24, %conv34
  br i1 %cmp35, label %if.then37, label %if.end41

if.then37:                                        ; preds = %if.end30
  %27 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name38 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %27, i32 0, i32 0
  %28 = load i8*, i8** %name38, align 8
  %call39 = call i64 @strlen(i8* %28) #10
  %conv40 = trunc i64 %call39 to i32
  store i32 %conv40, i32* @longestFileName, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.then37, %if.end30
  br label %for.inc42

for.inc42:                                        ; preds = %if.end41, %if.then29, %if.then21
  %29 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link = getelementptr inbounds %struct.zzzz, %struct.zzzz* %29, i32 0, i32 1
  %30 = load %struct.zzzz*, %struct.zzzz** %link, align 8
  store %struct.zzzz* %30, %struct.zzzz** %aa, align 8
  br label %for.cond14

for.end43:                                        ; preds = %for.cond14
  %31 = load i32, i32* @numFileNames, align 4
  %cmp44 = icmp eq i32 %31, 0
  br i1 %cmp44, label %if.then46, label %if.else

if.then46:                                        ; preds = %for.end43
  store i32 1, i32* @srcMode, align 4
  br label %if.end47

if.else:                                          ; preds = %for.end43
  store i32 3, i32* @srcMode, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then46
  store i32 1, i32* @opMode, align 4
  %32 = load i8*, i8** @progName, align 8
  %call48 = call i8* @strstr(i8* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #10
  %cmp49 = icmp ne i8* %call48, null
  br i1 %cmp49, label %if.then54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end47
  %33 = load i8*, i8** @progName, align 8
  %call51 = call i8* @strstr(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #10
  %cmp52 = icmp ne i8* %call51, null
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %lor.lhs.false, %if.end47
  store i32 2, i32* @opMode, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %lor.lhs.false
  %34 = load i8*, i8** @progName, align 8
  %call56 = call i8* @strstr(i8* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #10
  %cmp57 = icmp ne i8* %call56, null
  br i1 %cmp57, label %if.then71, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %if.end55
  %35 = load i8*, i8** @progName, align 8
  %call60 = call i8* @strstr(i8* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #10
  %cmp61 = icmp ne i8* %call60, null
  br i1 %cmp61, label %if.then71, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %36 = load i8*, i8** @progName, align 8
  %call64 = call i8* @strstr(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)) #10
  %cmp65 = icmp ne i8* %call64, null
  br i1 %cmp65, label %if.then71, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %37 = load i8*, i8** @progName, align 8
  %call68 = call i8* @strstr(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #10
  %cmp69 = icmp ne i8* %call68, null
  br i1 %cmp69, label %if.then71, label %if.end74

if.then71:                                        ; preds = %lor.lhs.false67, %lor.lhs.false63, %lor.lhs.false59, %if.end55
  store i32 2, i32* @opMode, align 4
  %38 = load i32, i32* @numFileNames, align 4
  %cmp72 = icmp eq i32 %38, 0
  %39 = zext i1 %cmp72 to i64
  %cond = select i1 %cmp72, i32 1, i32 2
  store i32 %cond, i32* @srcMode, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.then71, %lor.lhs.false67
  %40 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %40, %struct.zzzz** %aa, align 8
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc135, %if.end74
  %41 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp76 = icmp ne %struct.zzzz* %41, null
  br i1 %cmp76, label %for.body78, label %for.end137

for.body78:                                       ; preds = %for.cond75
  %42 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name79 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %42, i32 0, i32 0
  %43 = load i8*, i8** %name79, align 8
  %call80 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp81 = icmp eq i32 %call80, 0
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %for.body78
  br label %for.end137

if.end84:                                         ; preds = %for.body78
  %44 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name85 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %44, i32 0, i32 0
  %45 = load i8*, i8** %name85, align 8
  %arrayidx86 = getelementptr inbounds i8, i8* %45, i64 0
  %46 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %46 to i32
  %cmp88 = icmp eq i32 %conv87, 45
  br i1 %cmp88, label %land.lhs.true90, label %if.end134

land.lhs.true90:                                  ; preds = %if.end84
  %47 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name91 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %47, i32 0, i32 0
  %48 = load i8*, i8** %name91, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %49 to i32
  %cmp94 = icmp ne i32 %conv93, 45
  br i1 %cmp94, label %if.then96, label %if.end134

if.then96:                                        ; preds = %land.lhs.true90
  store i32 1, i32* %j, align 4
  br label %for.cond97

for.cond97:                                       ; preds = %for.inc131, %if.then96
  %50 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name98 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %50, i32 0, i32 0
  %51 = load i8*, i8** %name98, align 8
  %52 = load i32, i32* %j, align 4
  %idxprom99 = sext i32 %52 to i64
  %arrayidx100 = getelementptr inbounds i8, i8* %51, i64 %idxprom99
  %53 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %53 to i32
  %cmp102 = icmp ne i32 %conv101, 0
  br i1 %cmp102, label %for.body104, label %for.end133

for.body104:                                      ; preds = %for.cond97
  %54 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name105 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %54, i32 0, i32 0
  %55 = load i8*, i8** %name105, align 8
  %56 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %56 to i64
  %arrayidx107 = getelementptr inbounds i8, i8* %55, i64 %idxprom106
  %57 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %57 to i32
  switch i32 %conv108, label %sw.default [
    i32 99, label %sw.bb
    i32 100, label %sw.bb109
    i32 122, label %sw.bb110
    i32 102, label %sw.bb111
    i32 116, label %sw.bb112
    i32 107, label %sw.bb113
    i32 115, label %sw.bb114
    i32 113, label %sw.bb115
    i32 49, label %sw.bb116
    i32 50, label %sw.bb117
    i32 51, label %sw.bb118
    i32 52, label %sw.bb119
    i32 53, label %sw.bb120
    i32 54, label %sw.bb121
    i32 55, label %sw.bb122
    i32 56, label %sw.bb123
    i32 57, label %sw.bb124
    i32 86, label %sw.bb125
    i32 76, label %sw.bb125
    i32 118, label %sw.bb126
    i32 104, label %sw.bb128
  ]

sw.bb:                                            ; preds = %for.body104
  store i32 2, i32* @srcMode, align 4
  br label %sw.epilog

sw.bb109:                                         ; preds = %for.body104
  store i32 2, i32* @opMode, align 4
  br label %sw.epilog

sw.bb110:                                         ; preds = %for.body104
  store i32 1, i32* @opMode, align 4
  br label %sw.epilog

sw.bb111:                                         ; preds = %for.body104
  store i8 1, i8* @forceOverwrite, align 1
  br label %sw.epilog

sw.bb112:                                         ; preds = %for.body104
  store i32 3, i32* @opMode, align 4
  br label %sw.epilog

sw.bb113:                                         ; preds = %for.body104
  store i8 1, i8* @keepInputFiles, align 1
  br label %sw.epilog

sw.bb114:                                         ; preds = %for.body104
  store i8 1, i8* @smallMode, align 1
  br label %sw.epilog

sw.bb115:                                         ; preds = %for.body104
  store i8 0, i8* @noisy, align 1
  br label %sw.epilog

sw.bb116:                                         ; preds = %for.body104
  store i32 1, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb117:                                         ; preds = %for.body104
  store i32 2, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb118:                                         ; preds = %for.body104
  store i32 3, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb119:                                         ; preds = %for.body104
  store i32 4, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb120:                                         ; preds = %for.body104
  store i32 5, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb121:                                         ; preds = %for.body104
  store i32 6, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb122:                                         ; preds = %for.body104
  store i32 7, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb123:                                         ; preds = %for.body104
  store i32 8, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb124:                                         ; preds = %for.body104
  store i32 9, i32* @blockSize100k, align 4
  br label %sw.epilog

sw.bb125:                                         ; preds = %for.body104, %for.body104
  call void @license()
  br label %sw.epilog

sw.bb126:                                         ; preds = %for.body104
  %58 = load i32, i32* @verbosity, align 4
  %inc127 = add nsw i32 %58, 1
  store i32 %inc127, i32* @verbosity, align 4
  br label %sw.epilog

sw.bb128:                                         ; preds = %for.body104
  %59 = load i8*, i8** @progName, align 8
  call void @usage(i8* %59)
  call void @exit(i32 0) #11
  unreachable

sw.default:                                       ; preds = %for.body104
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %61 = load i8*, i8** @progName, align 8
  %62 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %62, i32 0, i32 0
  %63 = load i8*, i8** %name129, align 8
  %call130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %61, i8* %63)
  %64 = load i8*, i8** @progName, align 8
  call void @usage(i8* %64)
  call void @exit(i32 1) #11
  unreachable

sw.epilog:                                        ; preds = %sw.bb126, %sw.bb125, %sw.bb124, %sw.bb123, %sw.bb122, %sw.bb121, %sw.bb120, %sw.bb119, %sw.bb118, %sw.bb117, %sw.bb116, %sw.bb115, %sw.bb114, %sw.bb113, %sw.bb112, %sw.bb111, %sw.bb110, %sw.bb109, %sw.bb
  br label %for.inc131

for.inc131:                                       ; preds = %sw.epilog
  %65 = load i32, i32* %j, align 4
  %inc132 = add nsw i32 %65, 1
  store i32 %inc132, i32* %j, align 4
  br label %for.cond97

for.end133:                                       ; preds = %for.cond97
  br label %if.end134

if.end134:                                        ; preds = %for.end133, %land.lhs.true90, %if.end84
  br label %for.inc135

for.inc135:                                       ; preds = %if.end134
  %66 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link136 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %66, i32 0, i32 1
  %67 = load %struct.zzzz*, %struct.zzzz** %link136, align 8
  store %struct.zzzz* %67, %struct.zzzz** %aa, align 8
  br label %for.cond75

for.end137:                                       ; preds = %if.then83, %for.cond75
  %68 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %68, %struct.zzzz** %aa, align 8
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc278, %for.end137
  %69 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp139 = icmp ne %struct.zzzz* %69, null
  br i1 %cmp139, label %for.body141, label %for.end280

for.body141:                                      ; preds = %for.cond138
  %70 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %70, i32 0, i32 0
  %71 = load i8*, i8** %name142, align 8
  %call143 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp144 = icmp eq i32 %call143, 0
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %for.body141
  br label %for.end280

if.end147:                                        ; preds = %for.body141
  %72 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name148 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %72, i32 0, i32 0
  %73 = load i8*, i8** %name148, align 8
  %call149 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %cmp150 = icmp eq i32 %call149, 0
  br i1 %cmp150, label %if.then152, label %if.else153

if.then152:                                       ; preds = %if.end147
  store i32 2, i32* @srcMode, align 4
  br label %if.end277

if.else153:                                       ; preds = %if.end147
  %74 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %74, i32 0, i32 0
  %75 = load i8*, i8** %name154, align 8
  %call155 = call i32 @strcmp(i8* %75, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %cmp156 = icmp eq i32 %call155, 0
  br i1 %cmp156, label %if.then158, label %if.else159

if.then158:                                       ; preds = %if.else153
  store i32 2, i32* @opMode, align 4
  br label %if.end276

if.else159:                                       ; preds = %if.else153
  %76 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name160 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %76, i32 0, i32 0
  %77 = load i8*, i8** %name160, align 8
  %call161 = call i32 @strcmp(i8* %77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %cmp162 = icmp eq i32 %call161, 0
  br i1 %cmp162, label %if.then164, label %if.else165

if.then164:                                       ; preds = %if.else159
  store i32 1, i32* @opMode, align 4
  br label %if.end275

if.else165:                                       ; preds = %if.else159
  %78 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name166 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %78, i32 0, i32 0
  %79 = load i8*, i8** %name166, align 8
  %call167 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %cmp168 = icmp eq i32 %call167, 0
  br i1 %cmp168, label %if.then170, label %if.else171

if.then170:                                       ; preds = %if.else165
  store i8 1, i8* @forceOverwrite, align 1
  br label %if.end274

if.else171:                                       ; preds = %if.else165
  %80 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name172 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %80, i32 0, i32 0
  %81 = load i8*, i8** %name172, align 8
  %call173 = call i32 @strcmp(i8* %81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %cmp174 = icmp eq i32 %call173, 0
  br i1 %cmp174, label %if.then176, label %if.else177

if.then176:                                       ; preds = %if.else171
  store i32 3, i32* @opMode, align 4
  br label %if.end273

if.else177:                                       ; preds = %if.else171
  %82 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name178 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %82, i32 0, i32 0
  %83 = load i8*, i8** %name178, align 8
  %call179 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %cmp180 = icmp eq i32 %call179, 0
  br i1 %cmp180, label %if.then182, label %if.else183

if.then182:                                       ; preds = %if.else177
  store i8 1, i8* @keepInputFiles, align 1
  br label %if.end272

if.else183:                                       ; preds = %if.else177
  %84 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %85 = load i8*, i8** %name184, align 8
  %call185 = call i32 @strcmp(i8* %85, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %cmp186 = icmp eq i32 %call185, 0
  br i1 %cmp186, label %if.then188, label %if.else189

if.then188:                                       ; preds = %if.else183
  store i8 1, i8* @smallMode, align 1
  br label %if.end271

if.else189:                                       ; preds = %if.else183
  %86 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %86, i32 0, i32 0
  %87 = load i8*, i8** %name190, align 8
  %call191 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %cmp192 = icmp eq i32 %call191, 0
  br i1 %cmp192, label %if.then194, label %if.else195

if.then194:                                       ; preds = %if.else189
  store i8 0, i8* @noisy, align 1
  br label %if.end270

if.else195:                                       ; preds = %if.else189
  %88 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name196 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %88, i32 0, i32 0
  %89 = load i8*, i8** %name196, align 8
  %call197 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %cmp198 = icmp eq i32 %call197, 0
  br i1 %cmp198, label %if.then200, label %if.else201

if.then200:                                       ; preds = %if.else195
  call void @license()
  br label %if.end269

if.else201:                                       ; preds = %if.else195
  %90 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name202 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %90, i32 0, i32 0
  %91 = load i8*, i8** %name202, align 8
  %call203 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %cmp204 = icmp eq i32 %call203, 0
  br i1 %cmp204, label %if.then206, label %if.else207

if.then206:                                       ; preds = %if.else201
  call void @license()
  br label %if.end268

if.else207:                                       ; preds = %if.else201
  %92 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %92, i32 0, i32 0
  %93 = load i8*, i8** %name208, align 8
  %call209 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %cmp210 = icmp eq i32 %call209, 0
  br i1 %cmp210, label %if.then212, label %if.else213

if.then212:                                       ; preds = %if.else207
  store i32 1, i32* @workFactor, align 4
  br label %if.end267

if.else213:                                       ; preds = %if.else207
  %94 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name214 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %94, i32 0, i32 0
  %95 = load i8*, i8** %name214, align 8
  %call215 = call i32 @strcmp(i8* %95, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %cmp216 = icmp eq i32 %call215, 0
  br i1 %cmp216, label %if.then218, label %if.else220

if.then218:                                       ; preds = %if.else213
  %96 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name219 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %96, i32 0, i32 0
  %97 = load i8*, i8** %name219, align 8
  call void @redundant(i8* %97)
  br label %if.end266

if.else220:                                       ; preds = %if.else213
  %98 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name221 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %98, i32 0, i32 0
  %99 = load i8*, i8** %name221, align 8
  %call222 = call i32 @strcmp(i8* %99, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %cmp223 = icmp eq i32 %call222, 0
  br i1 %cmp223, label %if.then225, label %if.else227

if.then225:                                       ; preds = %if.else220
  %100 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name226 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %100, i32 0, i32 0
  %101 = load i8*, i8** %name226, align 8
  call void @redundant(i8* %101)
  br label %if.end265

if.else227:                                       ; preds = %if.else220
  %102 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name228 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %102, i32 0, i32 0
  %103 = load i8*, i8** %name228, align 8
  %call229 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %cmp230 = icmp eq i32 %call229, 0
  br i1 %cmp230, label %if.then232, label %if.else233

if.then232:                                       ; preds = %if.else227
  store i32 1, i32* @blockSize100k, align 4
  br label %if.end264

if.else233:                                       ; preds = %if.else227
  %104 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name234 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %104, i32 0, i32 0
  %105 = load i8*, i8** %name234, align 8
  %call235 = call i32 @strcmp(i8* %105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %cmp236 = icmp eq i32 %call235, 0
  br i1 %cmp236, label %if.then238, label %if.else239

if.then238:                                       ; preds = %if.else233
  store i32 9, i32* @blockSize100k, align 4
  br label %if.end263

if.else239:                                       ; preds = %if.else233
  %106 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name240 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %106, i32 0, i32 0
  %107 = load i8*, i8** %name240, align 8
  %call241 = call i32 @strcmp(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %cmp242 = icmp eq i32 %call241, 0
  br i1 %cmp242, label %if.then244, label %if.else246

if.then244:                                       ; preds = %if.else239
  %108 = load i32, i32* @verbosity, align 4
  %inc245 = add nsw i32 %108, 1
  store i32 %inc245, i32* @verbosity, align 4
  br label %if.end262

if.else246:                                       ; preds = %if.else239
  %109 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %109, i32 0, i32 0
  %110 = load i8*, i8** %name247, align 8
  %call248 = call i32 @strcmp(i8* %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %cmp249 = icmp eq i32 %call248, 0
  br i1 %cmp249, label %if.then251, label %if.else252

if.then251:                                       ; preds = %if.else246
  %111 = load i8*, i8** @progName, align 8
  call void @usage(i8* %111)
  call void @exit(i32 0) #11
  unreachable

if.else252:                                       ; preds = %if.else246
  %112 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %112, i32 0, i32 0
  %113 = load i8*, i8** %name253, align 8
  %call254 = call i32 @strncmp(i8* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0), i64 2) #10
  %cmp255 = icmp eq i32 %call254, 0
  br i1 %cmp255, label %if.then257, label %if.end260

if.then257:                                       ; preds = %if.else252
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %115 = load i8*, i8** @progName, align 8
  %116 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %116, i32 0, i32 0
  %117 = load i8*, i8** %name258, align 8
  %call259 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %114, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %115, i8* %117)
  %118 = load i8*, i8** @progName, align 8
  call void @usage(i8* %118)
  call void @exit(i32 1) #11
  unreachable

if.end260:                                        ; preds = %if.else252
  br label %if.end261

if.end261:                                        ; preds = %if.end260
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.then244
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then238
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then232
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.then225
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then218
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then212
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then206
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then200
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then194
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then188
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then182
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then176
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.then170
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %if.then164
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.then158
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then152
  br label %for.inc278

for.inc278:                                       ; preds = %if.end277
  %119 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %119, i32 0, i32 1
  %120 = load %struct.zzzz*, %struct.zzzz** %link279, align 8
  store %struct.zzzz* %120, %struct.zzzz** %aa, align 8
  br label %for.cond138

for.end280:                                       ; preds = %if.then146, %for.cond138
  %121 = load i32, i32* @verbosity, align 4
  %cmp281 = icmp sgt i32 %121, 4
  br i1 %cmp281, label %if.then283, label %if.end284

if.then283:                                       ; preds = %for.end280
  store i32 4, i32* @verbosity, align 4
  br label %if.end284

if.end284:                                        ; preds = %if.then283, %for.end280
  %122 = load i32, i32* @opMode, align 4
  %cmp285 = icmp eq i32 %122, 1
  br i1 %cmp285, label %land.lhs.true287, label %if.end294

land.lhs.true287:                                 ; preds = %if.end284
  %123 = load i8, i8* @smallMode, align 1
  %conv288 = zext i8 %123 to i32
  %tobool289 = icmp ne i32 %conv288, 0
  br i1 %tobool289, label %land.lhs.true290, label %if.end294

land.lhs.true290:                                 ; preds = %land.lhs.true287
  %124 = load i32, i32* @blockSize100k, align 4
  %cmp291 = icmp sgt i32 %124, 2
  br i1 %cmp291, label %if.then293, label %if.end294

if.then293:                                       ; preds = %land.lhs.true290
  store i32 2, i32* @blockSize100k, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.then293, %land.lhs.true290, %land.lhs.true287, %if.end284
  %125 = load i32, i32* @opMode, align 4
  %cmp295 = icmp eq i32 %125, 3
  br i1 %cmp295, label %land.lhs.true297, label %if.end302

land.lhs.true297:                                 ; preds = %if.end294
  %126 = load i32, i32* @srcMode, align 4
  %cmp298 = icmp eq i32 %126, 2
  br i1 %cmp298, label %if.then300, label %if.end302

if.then300:                                       ; preds = %land.lhs.true297
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %128 = load i8*, i8** @progName, align 8
  %call301 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %128)
  call void @exit(i32 1) #11
  unreachable

if.end302:                                        ; preds = %land.lhs.true297, %if.end294
  %129 = load i32, i32* @srcMode, align 4
  %cmp303 = icmp eq i32 %129, 2
  br i1 %cmp303, label %land.lhs.true305, label %if.end309

land.lhs.true305:                                 ; preds = %if.end302
  %130 = load i32, i32* @numFileNames, align 4
  %cmp306 = icmp eq i32 %130, 0
  br i1 %cmp306, label %if.then308, label %if.end309

if.then308:                                       ; preds = %land.lhs.true305
  store i32 1, i32* @srcMode, align 4
  br label %if.end309

if.end309:                                        ; preds = %if.then308, %land.lhs.true305, %if.end302
  %131 = load i32, i32* @opMode, align 4
  %cmp310 = icmp ne i32 %131, 1
  br i1 %cmp310, label %if.then312, label %if.end313

if.then312:                                       ; preds = %if.end309
  store i32 0, i32* @blockSize100k, align 4
  br label %if.end313

if.end313:                                        ; preds = %if.then312, %if.end309
  %132 = load i32, i32* @srcMode, align 4
  %cmp314 = icmp eq i32 %132, 3
  br i1 %cmp314, label %if.then316, label %if.end320

if.then316:                                       ; preds = %if.end313
  %call317 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %call318 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %call319 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %if.end320

if.end320:                                        ; preds = %if.then316, %if.end313
  %133 = load i32, i32* @opMode, align 4
  %cmp321 = icmp eq i32 %133, 1
  br i1 %cmp321, label %if.then323, label %if.else354

if.then323:                                       ; preds = %if.end320
  %134 = load i32, i32* @srcMode, align 4
  %cmp324 = icmp eq i32 %134, 1
  br i1 %cmp324, label %if.then326, label %if.else327

if.then326:                                       ; preds = %if.then323
  call void @compress(i8* null)
  br label %if.end353

if.else327:                                       ; preds = %if.then323
  store i8 1, i8* %decode, align 1
  %135 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %135, %struct.zzzz** %aa, align 8
  br label %for.cond328

for.cond328:                                      ; preds = %for.inc350, %if.else327
  %136 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp329 = icmp ne %struct.zzzz* %136, null
  br i1 %cmp329, label %for.body331, label %for.end352

for.body331:                                      ; preds = %for.cond328
  %137 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name332 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %137, i32 0, i32 0
  %138 = load i8*, i8** %name332, align 8
  %call333 = call i32 @strcmp(i8* %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp334 = icmp eq i32 %call333, 0
  br i1 %cmp334, label %if.then336, label %if.end337

if.then336:                                       ; preds = %for.body331
  store i8 0, i8* %decode, align 1
  br label %for.inc350

if.end337:                                        ; preds = %for.body331
  %139 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name338 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %139, i32 0, i32 0
  %140 = load i8*, i8** %name338, align 8
  %arrayidx339 = getelementptr inbounds i8, i8* %140, i64 0
  %141 = load i8, i8* %arrayidx339, align 1
  %conv340 = sext i8 %141 to i32
  %cmp341 = icmp eq i32 %conv340, 45
  br i1 %cmp341, label %land.lhs.true343, label %if.end347

land.lhs.true343:                                 ; preds = %if.end337
  %142 = load i8, i8* %decode, align 1
  %conv344 = zext i8 %142 to i32
  %tobool345 = icmp ne i32 %conv344, 0
  br i1 %tobool345, label %if.then346, label %if.end347

if.then346:                                       ; preds = %land.lhs.true343
  br label %for.inc350

if.end347:                                        ; preds = %land.lhs.true343, %if.end337
  %143 = load i32, i32* @numFilesProcessed, align 4
  %inc348 = add nsw i32 %143, 1
  store i32 %inc348, i32* @numFilesProcessed, align 4
  %144 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name349 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %144, i32 0, i32 0
  %145 = load i8*, i8** %name349, align 8
  call void @compress(i8* %145)
  br label %for.inc350

for.inc350:                                       ; preds = %if.end347, %if.then346, %if.then336
  %146 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link351 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %146, i32 0, i32 1
  %147 = load %struct.zzzz*, %struct.zzzz** %link351, align 8
  store %struct.zzzz* %147, %struct.zzzz** %aa, align 8
  br label %for.cond328

for.end352:                                       ; preds = %for.cond328
  br label %if.end353

if.end353:                                        ; preds = %for.end352, %if.then326
  br label %if.end431

if.else354:                                       ; preds = %if.end320
  %148 = load i32, i32* @opMode, align 4
  %cmp355 = icmp eq i32 %148, 2
  br i1 %cmp355, label %if.then357, label %if.else391

if.then357:                                       ; preds = %if.else354
  store i8 0, i8* @unzFailsExist, align 1
  %149 = load i32, i32* @srcMode, align 4
  %cmp358 = icmp eq i32 %149, 1
  br i1 %cmp358, label %if.then360, label %if.else361

if.then360:                                       ; preds = %if.then357
  call void @uncompress(i8* null)
  br label %if.end387

if.else361:                                       ; preds = %if.then357
  store i8 1, i8* %decode, align 1
  %150 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %150, %struct.zzzz** %aa, align 8
  br label %for.cond362

for.cond362:                                      ; preds = %for.inc384, %if.else361
  %151 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp363 = icmp ne %struct.zzzz* %151, null
  br i1 %cmp363, label %for.body365, label %for.end386

for.body365:                                      ; preds = %for.cond362
  %152 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name366 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %152, i32 0, i32 0
  %153 = load i8*, i8** %name366, align 8
  %call367 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp368 = icmp eq i32 %call367, 0
  br i1 %cmp368, label %if.then370, label %if.end371

if.then370:                                       ; preds = %for.body365
  store i8 0, i8* %decode, align 1
  br label %for.inc384

if.end371:                                        ; preds = %for.body365
  %154 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name372 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %154, i32 0, i32 0
  %155 = load i8*, i8** %name372, align 8
  %arrayidx373 = getelementptr inbounds i8, i8* %155, i64 0
  %156 = load i8, i8* %arrayidx373, align 1
  %conv374 = sext i8 %156 to i32
  %cmp375 = icmp eq i32 %conv374, 45
  br i1 %cmp375, label %land.lhs.true377, label %if.end381

land.lhs.true377:                                 ; preds = %if.end371
  %157 = load i8, i8* %decode, align 1
  %conv378 = zext i8 %157 to i32
  %tobool379 = icmp ne i32 %conv378, 0
  br i1 %tobool379, label %if.then380, label %if.end381

if.then380:                                       ; preds = %land.lhs.true377
  br label %for.inc384

if.end381:                                        ; preds = %land.lhs.true377, %if.end371
  %158 = load i32, i32* @numFilesProcessed, align 4
  %inc382 = add nsw i32 %158, 1
  store i32 %inc382, i32* @numFilesProcessed, align 4
  %159 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name383 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %159, i32 0, i32 0
  %160 = load i8*, i8** %name383, align 8
  call void @uncompress(i8* %160)
  br label %for.inc384

for.inc384:                                       ; preds = %if.end381, %if.then380, %if.then370
  %161 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link385 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %161, i32 0, i32 1
  %162 = load %struct.zzzz*, %struct.zzzz** %link385, align 8
  store %struct.zzzz* %162, %struct.zzzz** %aa, align 8
  br label %for.cond362

for.end386:                                       ; preds = %for.cond362
  br label %if.end387

if.end387:                                        ; preds = %for.end386, %if.then360
  %163 = load i8, i8* @unzFailsExist, align 1
  %tobool388 = icmp ne i8 %163, 0
  br i1 %tobool388, label %if.then389, label %if.end390

if.then389:                                       ; preds = %if.end387
  call void @setExit(i32 2)
  %164 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %164) #11
  unreachable

if.end390:                                        ; preds = %if.end387
  br label %if.end430

if.else391:                                       ; preds = %if.else354
  store i8 0, i8* @testFailsExist, align 1
  %165 = load i32, i32* @srcMode, align 4
  %cmp392 = icmp eq i32 %165, 1
  br i1 %cmp392, label %if.then394, label %if.else395

if.then394:                                       ; preds = %if.else391
  call void @testf(i8* null)
  br label %if.end421

if.else395:                                       ; preds = %if.else391
  store i8 1, i8* %decode, align 1
  %166 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %166, %struct.zzzz** %aa, align 8
  br label %for.cond396

for.cond396:                                      ; preds = %for.inc418, %if.else395
  %167 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp397 = icmp ne %struct.zzzz* %167, null
  br i1 %cmp397, label %for.body399, label %for.end420

for.body399:                                      ; preds = %for.cond396
  %168 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name400 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %168, i32 0, i32 0
  %169 = load i8*, i8** %name400, align 8
  %call401 = call i32 @strcmp(i8* %169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.18, i64 0, i64 0)) #10
  %cmp402 = icmp eq i32 %call401, 0
  br i1 %cmp402, label %if.then404, label %if.end405

if.then404:                                       ; preds = %for.body399
  store i8 0, i8* %decode, align 1
  br label %for.inc418

if.end405:                                        ; preds = %for.body399
  %170 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name406 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %170, i32 0, i32 0
  %171 = load i8*, i8** %name406, align 8
  %arrayidx407 = getelementptr inbounds i8, i8* %171, i64 0
  %172 = load i8, i8* %arrayidx407, align 1
  %conv408 = sext i8 %172 to i32
  %cmp409 = icmp eq i32 %conv408, 45
  br i1 %cmp409, label %land.lhs.true411, label %if.end415

land.lhs.true411:                                 ; preds = %if.end405
  %173 = load i8, i8* %decode, align 1
  %conv412 = zext i8 %173 to i32
  %tobool413 = icmp ne i32 %conv412, 0
  br i1 %tobool413, label %if.then414, label %if.end415

if.then414:                                       ; preds = %land.lhs.true411
  br label %for.inc418

if.end415:                                        ; preds = %land.lhs.true411, %if.end405
  %174 = load i32, i32* @numFilesProcessed, align 4
  %inc416 = add nsw i32 %174, 1
  store i32 %inc416, i32* @numFilesProcessed, align 4
  %175 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name417 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %175, i32 0, i32 0
  %176 = load i8*, i8** %name417, align 8
  call void @testf(i8* %176)
  br label %for.inc418

for.inc418:                                       ; preds = %if.end415, %if.then414, %if.then404
  %177 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link419 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %177, i32 0, i32 1
  %178 = load %struct.zzzz*, %struct.zzzz** %link419, align 8
  store %struct.zzzz* %178, %struct.zzzz** %aa, align 8
  br label %for.cond396

for.end420:                                       ; preds = %for.cond396
  br label %if.end421

if.end421:                                        ; preds = %for.end420, %if.then394
  %179 = load i8, i8* @testFailsExist, align 1
  %conv422 = zext i8 %179 to i32
  %tobool423 = icmp ne i32 %conv422, 0
  br i1 %tobool423, label %land.lhs.true424, label %if.end429

land.lhs.true424:                                 ; preds = %if.end421
  %180 = load i8, i8* @noisy, align 1
  %conv425 = zext i8 %180 to i32
  %tobool426 = icmp ne i32 %conv425, 0
  br i1 %tobool426, label %if.then427, label %if.end429

if.then427:                                       ; preds = %land.lhs.true424
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %181, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.35, i64 0, i64 0))
  call void @setExit(i32 2)
  %182 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %182) #11
  unreachable

if.end429:                                        ; preds = %land.lhs.true424, %if.end421
  br label %if.end430

if.end430:                                        ; preds = %if.end429, %if.end390
  br label %if.end431

if.end431:                                        ; preds = %if.end430, %if.end353
  %183 = load %struct.zzzz*, %struct.zzzz** %argList, align 8
  store %struct.zzzz* %183, %struct.zzzz** %aa, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end440, %if.end431
  %184 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %cmp432 = icmp ne %struct.zzzz* %184, null
  br i1 %cmp432, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %185 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %link434 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %185, i32 0, i32 1
  %186 = load %struct.zzzz*, %struct.zzzz** %link434, align 8
  store %struct.zzzz* %186, %struct.zzzz** %aa2, align 8
  %187 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name435 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %187, i32 0, i32 0
  %188 = load i8*, i8** %name435, align 8
  %cmp436 = icmp ne i8* %188, null
  br i1 %cmp436, label %if.then438, label %if.end440

if.then438:                                       ; preds = %while.body
  %189 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %name439 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %189, i32 0, i32 0
  %190 = load i8*, i8** %name439, align 8
  call void @free(i8* %190) #9
  br label %if.end440

if.end440:                                        ; preds = %if.then438, %while.body
  %191 = load %struct.zzzz*, %struct.zzzz** %aa, align 8
  %192 = bitcast %struct.zzzz* %191 to i8*
  call void @free(i8* %192) #9
  %193 = load %struct.zzzz*, %struct.zzzz** %aa2, align 8
  store %struct.zzzz* %193, %struct.zzzz** %aa, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %194 = load i32, i32* @exitValue, align 4
  ret i32 %194
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32 %n) #0 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* @opMode, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([869 x i8], [869 x i8]* @.str.36, i64 0, i64 0), i8* %2)
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** @progName, align 8
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([996 x i8], [996 x i8]* @.str.37, i64 0, i64 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @showFileNames()
  %5 = load i32, i32* @opMode, align 4
  %cmp2 = icmp eq i32 %5, 1
  br i1 %cmp2, label %if.then3, label %if.else4

if.then3:                                         ; preds = %if.end
  call void @cleanUpAndFail(i32 3) #12
  unreachable

if.else4:                                         ; preds = %if.end
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copyFileName(i8* %to, i8* %from) #0 {
entry:
  %to.addr = alloca i8*, align 8
  %from.addr = alloca i8*, align 8
  store i8* %to, i8** %to.addr, align 8
  store i8* %from, i8** %from.addr, align 8
  %0 = load i8*, i8** %from.addr, align 8
  %call = call i64 @strlen(i8* %0) #10
  %cmp = icmp ugt i64 %call, 1024
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** %from.addr, align 8
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.47, i64 0, i64 0), i8* %2, i32 1024)
  call void @setExit(i32 1)
  %3 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %3) #11
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %to.addr, align 8
  %5 = load i8*, i8** %from.addr, align 8
  %call2 = call i8* @strncpy(i8* %4, i8* %5, i64 1024) #9
  %6 = load i8*, i8** %to.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1024
  store i8 0, i8* %arrayidx, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* %varName) #0 {
entry:
  %argList.addr = alloca %struct.zzzz**, align 8
  %varName.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %envbase = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.zzzz** %argList, %struct.zzzz*** %argList.addr, align 8
  store i8* %varName, i8** %varName.addr, align 8
  %0 = load i8*, i8** %varName.addr, align 8
  %call = call i8* @getenv(i8* %0) #9
  store i8* %call, i8** %envbase, align 8
  %1 = load i8*, i8** %envbase, align 8
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %if.then, label %if.end48

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %envbase, align 8
  store i8* %2, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %while.body

while.body:                                       ; preds = %if.end46, %if.then
  %3 = load i8*, i8** %p, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then3, label %if.end

if.then3:                                         ; preds = %while.body
  br label %while.end47

if.end:                                           ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  %7 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext
  store i8* %add.ptr, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %while.cond4

while.cond4:                                      ; preds = %while.body11, %if.end
  %call5 = call i16** @__ctype_b_loc() #13
  %8 = load i16*, i16** %call5, align 8
  %9 = load i8*, i8** %p, align 8
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0
  %10 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %10 to i32
  %idxprom8 = sext i32 %conv7 to i64
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 %idxprom8
  %11 = load i16, i16* %arrayidx9, align 2
  %conv10 = zext i16 %11 to i32
  %and = and i32 %conv10, 8192
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %while.body11, label %while.end

while.body11:                                     ; preds = %while.cond4
  %12 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %while.cond4

while.end:                                        ; preds = %while.cond4
  br label %while.cond12

while.cond12:                                     ; preds = %while.body27, %while.end
  %13 = load i8*, i8** %p, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13
  %15 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %15 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond12
  %call18 = call i16** @__ctype_b_loc() #13
  %16 = load i16*, i16** %call18, align 8
  %17 = load i8*, i8** %p, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %18 to i64
  %arrayidx20 = getelementptr inbounds i8, i8* %17, i64 %idxprom19
  %19 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %19 to i32
  %idxprom22 = sext i32 %conv21 to i64
  %arrayidx23 = getelementptr inbounds i16, i16* %16, i64 %idxprom22
  %20 = load i16, i16* %arrayidx23, align 2
  %conv24 = zext i16 %20 to i32
  %and25 = and i32 %conv24, 8192
  %tobool26 = icmp ne i32 %and25, 0
  %lnot = xor i1 %tobool26, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond12
  %21 = phi i1 [ false, %while.cond12 ], [ %lnot, %land.rhs ]
  br i1 %21, label %while.body27, label %while.end28

while.body27:                                     ; preds = %land.end
  %22 = load i32, i32* %i, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond12

while.end28:                                      ; preds = %land.end
  %23 = load i32, i32* %i, align 4
  %cmp29 = icmp sgt i32 %23, 0
  br i1 %cmp29, label %if.then31, label %if.end46

if.then31:                                        ; preds = %while.end28
  %24 = load i32, i32* %i, align 4
  store i32 %24, i32* %k, align 4
  %25 = load i32, i32* %k, align 4
  %cmp32 = icmp sgt i32 %25, 1024
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then31
  store i32 1024, i32* %k, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.then31
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end35
  %26 = load i32, i32* %j, align 4
  %27 = load i32, i32* %k, align 4
  %cmp36 = icmp slt i32 %26, %27
  br i1 %cmp36, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load i8*, i8** %p, align 8
  %29 = load i32, i32* %j, align 4
  %idxprom38 = sext i32 %29 to i64
  %arrayidx39 = getelementptr inbounds i8, i8* %28, i64 %idxprom38
  %30 = load i8, i8* %arrayidx39, align 1
  %31 = load i32, i32* %j, align 4
  %idxprom40 = sext i32 %31 to i64
  %arrayidx41 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %idxprom40
  store i8 %30, i8* %arrayidx41, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %j, align 4
  %inc42 = add nsw i32 %32, 1
  store i32 %inc42, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %33 to i64
  %arrayidx44 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %idxprom43
  store i8 0, i8* %arrayidx44, align 1
  %34 = load %struct.zzzz**, %struct.zzzz*** %argList.addr, align 8
  %35 = load %struct.zzzz*, %struct.zzzz** %34, align 8
  %call45 = call %struct.zzzz* @snocString(%struct.zzzz* %35, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 0))
  %36 = load %struct.zzzz**, %struct.zzzz*** %argList.addr, align 8
  store %struct.zzzz* %call45, %struct.zzzz** %36, align 8
  br label %if.end46

if.end46:                                         ; preds = %for.end, %while.end28
  br label %while.body

while.end47:                                      ; preds = %if.then3
  br label %if.end48

if.end48:                                         ; preds = %while.end47, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.zzzz* @snocString(%struct.zzzz* %root, i8* %name) #0 {
entry:
  %retval = alloca %struct.zzzz*, align 8
  %root.addr = alloca %struct.zzzz*, align 8
  %name.addr = alloca i8*, align 8
  %tmp = alloca %struct.zzzz*, align 8
  %tmp6 = alloca %struct.zzzz*, align 8
  store %struct.zzzz* %root, %struct.zzzz** %root.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load %struct.zzzz*, %struct.zzzz** %root.addr, align 8
  %cmp = icmp eq %struct.zzzz* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call %struct.zzzz* @mkCell()
  store %struct.zzzz* %call, %struct.zzzz** %tmp, align 8
  %1 = load i8*, i8** %name.addr, align 8
  %call1 = call i64 @strlen(i8* %1) #10
  %add = add i64 5, %call1
  %conv = trunc i64 %add to i32
  %call2 = call i8* @myMalloc(i32 %conv)
  %2 = load %struct.zzzz*, %struct.zzzz** %tmp, align 8
  %name3 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 0
  store i8* %call2, i8** %name3, align 8
  %3 = load %struct.zzzz*, %struct.zzzz** %tmp, align 8
  %name4 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3, i32 0, i32 0
  %4 = load i8*, i8** %name4, align 8
  %5 = load i8*, i8** %name.addr, align 8
  %call5 = call i8* @strcpy(i8* %4, i8* %5) #9
  %6 = load %struct.zzzz*, %struct.zzzz** %tmp, align 8
  store %struct.zzzz* %6, %struct.zzzz** %retval, align 8
  br label %return

if.else:                                          ; preds = %entry
  %7 = load %struct.zzzz*, %struct.zzzz** %root.addr, align 8
  store %struct.zzzz* %7, %struct.zzzz** %tmp6, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %8 = load %struct.zzzz*, %struct.zzzz** %tmp6, align 8
  %link = getelementptr inbounds %struct.zzzz, %struct.zzzz* %8, i32 0, i32 1
  %9 = load %struct.zzzz*, %struct.zzzz** %link, align 8
  %cmp7 = icmp ne %struct.zzzz* %9, null
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load %struct.zzzz*, %struct.zzzz** %tmp6, align 8
  %link9 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %10, i32 0, i32 1
  %11 = load %struct.zzzz*, %struct.zzzz** %link9, align 8
  store %struct.zzzz* %11, %struct.zzzz** %tmp6, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = load %struct.zzzz*, %struct.zzzz** %tmp6, align 8
  %link10 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %12, i32 0, i32 1
  %13 = load %struct.zzzz*, %struct.zzzz** %link10, align 8
  %14 = load i8*, i8** %name.addr, align 8
  %call11 = call %struct.zzzz* @snocString(%struct.zzzz* %13, i8* %14)
  %15 = load %struct.zzzz*, %struct.zzzz** %tmp6, align 8
  %link12 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %15, i32 0, i32 1
  store %struct.zzzz* %call11, %struct.zzzz** %link12, align 8
  %16 = load %struct.zzzz*, %struct.zzzz** %root.addr, align 8
  store %struct.zzzz* %16, %struct.zzzz** %retval, align 8
  br label %return

return:                                           ; preds = %while.end, %if.then
  %17 = load %struct.zzzz*, %struct.zzzz** %retval, align 8
  ret %struct.zzzz* %17
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @license() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i8* @BZ2_bzlibVersion()
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([529 x i8], [529 x i8]* @.str.49, i64 0, i64 0), i8* %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage(i8* %fullProgName) #0 {
entry:
  %fullProgName.addr = alloca i8*, align 8
  store i8* %fullProgName, i8** %fullProgName.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i8* @BZ2_bzlibVersion()
  %1 = load i8*, i8** %fullProgName.addr, align 8
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([1230 x i8], [1230 x i8]* @.str.50, i64 0, i64 0), i8* %call, i8* %1)
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @redundant(i8* %flag) #0 {
entry:
  %flag.addr = alloca i8*, align 8
  store i8* %flag, i8** %flag.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %2 = load i8*, i8** %flag.addr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.51, i64 0, i64 0), i8* %1, i8* %2)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mySignalCatcher(i32 %n) #0 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i64 0, i64 0), i8* %1)
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compress(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %outStr = alloca %struct._IO_FILE*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  %retVal = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %0 = load i8*, i8** %name.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @srcMode, align 4
  %cmp1 = icmp ne i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0)) #12
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* @srcMode, align 4
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb3
  ]

sw.bb:                                            ; preds = %if.end
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0))
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %3 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %3)
  %4 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %4)
  %call = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %sw.epilog

sw.bb3:                                           ; preds = %if.end
  %5 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %5)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb, %if.end
  %6 = load i32, i32* @srcMode, align 4
  %cmp4 = icmp ne i32 %6, 1
  br i1 %cmp4, label %land.lhs.true5, label %if.end12

land.lhs.true5:                                   ; preds = %sw.epilog
  %call6 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %conv = zext i8 %call6 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then7, label %if.end12

if.then7:                                         ; preds = %land.lhs.true5
  %7 = load i8, i8* @noisy, align 1
  %tobool8 = icmp ne i8 %7, 0
  br i1 %tobool8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.then7
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = load i8*, i8** @progName, align 8
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.then7
  call void @setExit(i32 1)
  br label %return

if.end12:                                         ; preds = %land.lhs.true5, %sw.epilog
  %10 = load i32, i32* @srcMode, align 4
  %cmp13 = icmp ne i32 %10, 1
  br i1 %cmp13, label %land.lhs.true15, label %if.end22

land.lhs.true15:                                  ; preds = %if.end12
  %call16 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %tobool17 = icmp ne i8 %call16, 0
  br i1 %tobool17, label %if.end22, label %if.then18

if.then18:                                        ; preds = %land.lhs.true15
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = load i8*, i8** @progName, align 8
  %call19 = call i32* @__errno_location() #13
  %13 = load i32, i32* %call19, align 4
  %call20 = call i8* @strerror(i32 %13) #9
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i8* %12, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call20)
  call void @setExit(i32 1)
  br label %return

if.end22:                                         ; preds = %land.lhs.true15, %if.end12
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end22
  %14 = load i32, i32* %i, align 4
  %cmp23 = icmp slt i32 %14, 4
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %idxprom
  %16 = load i8*, i8** %arrayidx, align 8
  %call25 = call zeroext i8 @hasSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %16)
  %tobool26 = icmp ne i8 %call25, 0
  br i1 %tobool26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %for.body
  %17 = load i8, i8* @noisy, align 1
  %tobool28 = icmp ne i8 %17, 0
  br i1 %tobool28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %if.then27
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = load i8*, i8** @progName, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %20 to i64
  %arrayidx31 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %idxprom30
  %21 = load i8*, i8** %arrayidx31, align 8
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.58, i64 0, i64 0), i8* %19, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %21)
  br label %if.end33

if.end33:                                         ; preds = %if.then29, %if.then27
  call void @setExit(i32 1)
  br label %return

if.end34:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end34
  %22 = load i32, i32* %i, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* @srcMode, align 4
  %cmp35 = icmp eq i32 %23, 3
  br i1 %cmp35, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %24 = load i32, i32* @srcMode, align 4
  %cmp37 = icmp eq i32 %24, 2
  br i1 %cmp37, label %if.then39, label %if.end46

if.then39:                                        ; preds = %lor.lhs.false, %for.end
  %call40 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %statBuf) #9
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 3
  %25 = load i32, i32* %st_mode, align 8
  %and = and i32 %25, 61440
  %cmp41 = icmp eq i32 %and, 16384
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.then39
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %27 = load i8*, i8** @progName, align 8
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.59, i64 0, i64 0), i8* %27, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %return

if.end45:                                         ; preds = %if.then39
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %lor.lhs.false
  %28 = load i32, i32* @srcMode, align 4
  %cmp47 = icmp eq i32 %28, 3
  br i1 %cmp47, label %land.lhs.true49, label %if.end60

land.lhs.true49:                                  ; preds = %if.end46
  %29 = load i8, i8* @forceOverwrite, align 1
  %tobool50 = icmp ne i8 %29, 0
  br i1 %tobool50, label %if.end60, label %land.lhs.true51

land.lhs.true51:                                  ; preds = %land.lhs.true49
  %call52 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %conv53 = zext i8 %call52 to i32
  %tobool54 = icmp ne i32 %conv53, 0
  br i1 %tobool54, label %if.then55, label %if.end60

if.then55:                                        ; preds = %land.lhs.true51
  %30 = load i8, i8* @noisy, align 1
  %tobool56 = icmp ne i8 %30, 0
  br i1 %tobool56, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.then55
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = load i8*, i8** @progName, align 8
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60, i64 0, i64 0), i8* %32, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.then55
  call void @setExit(i32 1)
  br label %return

if.end60:                                         ; preds = %land.lhs.true51, %land.lhs.true49, %if.end46
  %33 = load i32, i32* @srcMode, align 4
  %cmp61 = icmp eq i32 %33, 3
  br i1 %cmp61, label %land.lhs.true63, label %if.end73

land.lhs.true63:                                  ; preds = %if.end60
  %call64 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %conv65 = zext i8 %call64 to i32
  %tobool66 = icmp ne i32 %conv65, 0
  br i1 %tobool66, label %if.then67, label %if.end73

if.then67:                                        ; preds = %land.lhs.true63
  %34 = load i8, i8* @forceOverwrite, align 1
  %tobool68 = icmp ne i8 %34, 0
  br i1 %tobool68, label %if.then69, label %if.else

if.then69:                                        ; preds = %if.then67
  %call70 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  br label %if.end72

if.else:                                          ; preds = %if.then67
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = load i8*, i8** @progName, align 8
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.61, i64 0, i64 0), i8* %36, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %return

if.end72:                                         ; preds = %if.then69
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %land.lhs.true63, %if.end60
  %37 = load i32, i32* @srcMode, align 4
  %cmp74 = icmp eq i32 %37, 3
  br i1 %cmp74, label %land.lhs.true76, label %if.end86

land.lhs.true76:                                  ; preds = %if.end73
  %38 = load i8, i8* @forceOverwrite, align 1
  %tobool77 = icmp ne i8 %38, 0
  br i1 %tobool77, label %if.end86, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %land.lhs.true76
  %call79 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  store i32 %call79, i32* %n, align 4
  %cmp80 = icmp sgt i32 %call79, 0
  br i1 %cmp80, label %if.then82, label %if.end86

if.then82:                                        ; preds = %land.lhs.true78
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = load i8*, i8** @progName, align 8
  %41 = load i32, i32* %n, align 4
  %42 = load i32, i32* %n, align 4
  %cmp83 = icmp sgt i32 %42, 1
  %43 = zext i1 %cmp83 to i64
  %cond = select i1 %cmp83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.13, i64 0, i64 0)
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0), i8* %40, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i32 %41, i8* %cond)
  call void @setExit(i32 1)
  br label %return

if.end86:                                         ; preds = %land.lhs.true78, %land.lhs.true76, %if.end73
  %44 = load i32, i32* @srcMode, align 4
  %cmp87 = icmp eq i32 %44, 3
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %if.end86
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end90

if.end90:                                         ; preds = %if.then89, %if.end86
  %45 = load i32, i32* @srcMode, align 4
  switch i32 %45, label %sw.default [
    i32 1, label %sw.bb91
    i32 2, label %sw.bb99
    i32 3, label %sw.bb120
  ]

sw.bb91:                                          ; preds = %if.end90
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %46, %struct._IO_FILE** %inStr, align 8
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %47, %struct._IO_FILE** %outStr, align 8
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call92 = call i32 @fileno(%struct._IO_FILE* %48) #9
  %call93 = call i32 @isatty(i32 %call92) #9
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.then95, label %if.end98

if.then95:                                        ; preds = %sw.bb91
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = load i8*, i8** @progName, align 8
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.64, i64 0, i64 0), i8* %50)
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = load i8*, i8** @progName, align 8
  %53 = load i8*, i8** @progName, align 8
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i64 0, i64 0), i8* %52, i8* %53)
  call void @setExit(i32 1)
  br label %return

if.end98:                                         ; preds = %sw.bb91
  br label %sw.epilog147

sw.bb99:                                          ; preds = %if.end90
  %call100 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call100, %struct._IO_FILE** %inStr, align 8
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %54, %struct._IO_FILE** %outStr, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call101 = call i32 @fileno(%struct._IO_FILE* %55) #9
  %call102 = call i32 @isatty(i32 %call101) #9
  %tobool103 = icmp ne i32 %call102, 0
  br i1 %tobool103, label %if.then104, label %if.end112

if.then104:                                       ; preds = %sw.bb99
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = load i8*, i8** @progName, align 8
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.64, i64 0, i64 0), i8* %57)
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %59 = load i8*, i8** @progName, align 8
  %60 = load i8*, i8** @progName, align 8
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i64 0, i64 0), i8* %59, i8* %60)
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp107 = icmp ne %struct._IO_FILE* %61, null
  br i1 %cmp107, label %if.then109, label %if.end111

if.then109:                                       ; preds = %if.then104
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %call110 = call i32 @fclose(%struct._IO_FILE* %62)
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %if.then104
  call void @setExit(i32 1)
  br label %return

if.end112:                                        ; preds = %sw.bb99
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp113 = icmp eq %struct._IO_FILE* %63, null
  br i1 %cmp113, label %if.then115, label %if.end119

if.then115:                                       ; preds = %if.end112
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = load i8*, i8** @progName, align 8
  %call116 = call i32* @__errno_location() #13
  %66 = load i32, i32* %call116, align 4
  %call117 = call i8* @strerror(i32 %66) #9
  %call118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i8* %65, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call117)
  call void @setExit(i32 1)
  br label %return

if.end119:                                        ; preds = %if.end112
  br label %sw.epilog147

sw.bb120:                                         ; preds = %if.end90
  %call121 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call121, %struct._IO_FILE** %inStr, align 8
  %call122 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0))
  store %struct._IO_FILE* %call122, %struct._IO_FILE** %outStr, align 8
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %cmp123 = icmp eq %struct._IO_FILE* %67, null
  br i1 %cmp123, label %if.then125, label %if.end134

if.then125:                                       ; preds = %sw.bb120
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %69 = load i8*, i8** @progName, align 8
  %call126 = call i32* @__errno_location() #13
  %70 = load i32, i32* %call126, align 4
  %call127 = call i8* @strerror(i32 %70) #9
  %call128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i64 0, i64 0), i8* %69, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %call127)
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp129 = icmp ne %struct._IO_FILE* %71, null
  br i1 %cmp129, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.then125
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %call132 = call i32 @fclose(%struct._IO_FILE* %72)
  br label %if.end133

if.end133:                                        ; preds = %if.then131, %if.then125
  call void @setExit(i32 1)
  br label %return

if.end134:                                        ; preds = %sw.bb120
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp135 = icmp eq %struct._IO_FILE* %73, null
  br i1 %cmp135, label %if.then137, label %if.end146

if.then137:                                       ; preds = %if.end134
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %75 = load i8*, i8** @progName, align 8
  %call138 = call i32* @__errno_location() #13
  %76 = load i32, i32* %call138, align 4
  %call139 = call i8* @strerror(i32 %76) #9
  %call140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i8* %75, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call139)
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %cmp141 = icmp ne %struct._IO_FILE* %77, null
  br i1 %cmp141, label %if.then143, label %if.end145

if.then143:                                       ; preds = %if.then137
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %call144 = call i32 @fclose(%struct._IO_FILE* %78)
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %if.then137
  call void @setExit(i32 1)
  br label %return

if.end146:                                        ; preds = %if.end134
  br label %sw.epilog147

sw.default:                                       ; preds = %if.end90
  call void @panic(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #12
  unreachable

sw.epilog147:                                     ; preds = %if.end146, %if.end119, %if.end98
  %79 = load i32, i32* @verbosity, align 4
  %cmp148 = icmp sge i32 %79, 1
  br i1 %cmp148, label %if.then150, label %if.end153

if.then150:                                       ; preds = %sw.epilog147
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call152 = call i32 @fflush(%struct._IO_FILE* %81)
  br label %if.end153

if.end153:                                        ; preds = %if.then150, %sw.epilog147
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  store %struct._IO_FILE* %82, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  call void @compressStream(%struct._IO_FILE* %83, %struct._IO_FILE* %84)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %85 = load i32, i32* @srcMode, align 4
  %cmp154 = icmp eq i32 %85, 3
  br i1 %cmp154, label %if.then156, label %if.end165

if.then156:                                       ; preds = %if.end153
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %86 = load i8, i8* @keepInputFiles, align 1
  %tobool157 = icmp ne i8 %86, 0
  br i1 %tobool157, label %if.end164, label %if.then158

if.then158:                                       ; preds = %if.then156
  %call159 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0)) #9
  store i32 %call159, i32* %retVal, align 4
  %87 = load i32, i32* %retVal, align 4
  %cmp160 = icmp ne i32 %87, 0
  br i1 %cmp160, label %if.then162, label %if.end163

if.then162:                                       ; preds = %if.then158
  call void @ioError() #12
  unreachable

if.end163:                                        ; preds = %if.then158
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then156
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.end153
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %return

return:                                           ; preds = %if.end165, %if.end145, %if.end133, %if.then115, %if.end111, %if.then95, %if.then82, %if.else, %if.end59, %if.then43, %if.end33, %if.then18, %if.end11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uncompress(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %outStr = alloca %struct._IO_FILE*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %magicNumberOK = alloca i8, align 1
  %cantGuess = alloca i8, align 1
  %statBuf = alloca %struct.stat, align 8
  %retVal = alloca i32, align 4
  %retVal168 = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %0 = load i8*, i8** %name.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @srcMode, align 4
  %cmp1 = icmp ne i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.79, i64 0, i64 0)) #12
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 0, i8* %cantGuess, align 1
  %2 = load i32, i32* @srcMode, align 4
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb9
  ]

sw.bb:                                            ; preds = %if.end
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0))
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %3 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %3)
  %4 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %4)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb2
  %5 = load i32, i32* %i, align 4
  %cmp3 = icmp slt i32 %5, 4
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %idxprom
  %7 = load i8*, i8** %arrayidx, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @unzSuffix, i64 0, i64 %idxprom4
  %9 = load i8*, i8** %arrayidx5, align 8
  %call = call zeroext i8 @mapSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %7, i8* %9)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %for.body
  br label %zzz

if.end7:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end7
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %cantGuess, align 1
  %call8 = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i64 0, i64 0)) #9
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end
  %11 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %11)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb9, %for.end, %sw.bb, %if.end
  br label %zzz

zzz:                                              ; preds = %sw.epilog, %if.then6
  %12 = load i32, i32* @srcMode, align 4
  %cmp10 = icmp ne i32 %12, 1
  br i1 %cmp10, label %land.lhs.true11, label %if.end19

land.lhs.true11:                                  ; preds = %zzz
  %call12 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %conv = zext i8 %call12 to i32
  %tobool13 = icmp ne i32 %conv, 0
  br i1 %tobool13, label %if.then14, label %if.end19

if.then14:                                        ; preds = %land.lhs.true11
  %13 = load i8, i8* @noisy, align 1
  %tobool15 = icmp ne i8 %13, 0
  br i1 %tobool15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.then14
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = load i8*, i8** @progName, align 8
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i8* %15, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.then14
  call void @setExit(i32 1)
  br label %if.end191

if.end19:                                         ; preds = %land.lhs.true11, %zzz
  %16 = load i32, i32* @srcMode, align 4
  %cmp20 = icmp ne i32 %16, 1
  br i1 %cmp20, label %land.lhs.true22, label %if.end29

land.lhs.true22:                                  ; preds = %if.end19
  %call23 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %tobool24 = icmp ne i8 %call23, 0
  br i1 %tobool24, label %if.end29, label %if.then25

if.then25:                                        ; preds = %land.lhs.true22
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = load i8*, i8** @progName, align 8
  %call26 = call i32* @__errno_location() #13
  %19 = load i32, i32* %call26, align 4
  %call27 = call i8* @strerror(i32 %19) #9
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i8* %18, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call27)
  call void @setExit(i32 1)
  br label %if.end191

if.end29:                                         ; preds = %land.lhs.true22, %if.end19
  %20 = load i32, i32* @srcMode, align 4
  %cmp30 = icmp eq i32 %20, 3
  br i1 %cmp30, label %if.then34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end29
  %21 = load i32, i32* @srcMode, align 4
  %cmp32 = icmp eq i32 %21, 2
  br i1 %cmp32, label %if.then34, label %if.end41

if.then34:                                        ; preds = %lor.lhs.false, %if.end29
  %call35 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %statBuf) #9
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 3
  %22 = load i32, i32* %st_mode, align 8
  %and = and i32 %22, 61440
  %cmp36 = icmp eq i32 %and, 16384
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.then34
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = load i8*, i8** @progName, align 8
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.59, i64 0, i64 0), i8* %24, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %if.end191

if.end40:                                         ; preds = %if.then34
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %lor.lhs.false
  %25 = load i32, i32* @srcMode, align 4
  %cmp42 = icmp eq i32 %25, 3
  br i1 %cmp42, label %land.lhs.true44, label %if.end55

land.lhs.true44:                                  ; preds = %if.end41
  %26 = load i8, i8* @forceOverwrite, align 1
  %tobool45 = icmp ne i8 %26, 0
  br i1 %tobool45, label %if.end55, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %land.lhs.true44
  %call47 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %conv48 = zext i8 %call47 to i32
  %tobool49 = icmp ne i32 %conv48, 0
  br i1 %tobool49, label %if.then50, label %if.end55

if.then50:                                        ; preds = %land.lhs.true46
  %27 = load i8, i8* @noisy, align 1
  %tobool51 = icmp ne i8 %27, 0
  br i1 %tobool51, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.then50
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load i8*, i8** @progName, align 8
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60, i64 0, i64 0), i8* %29, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.then50
  call void @setExit(i32 1)
  br label %if.end191

if.end55:                                         ; preds = %land.lhs.true46, %land.lhs.true44, %if.end41
  %30 = load i8, i8* %cantGuess, align 1
  %tobool56 = icmp ne i8 %30, 0
  br i1 %tobool56, label %if.then57, label %if.end62

if.then57:                                        ; preds = %if.end55
  %31 = load i8, i8* @noisy, align 1
  %tobool58 = icmp ne i8 %31, 0
  br i1 %tobool58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.then57
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = load i8*, i8** @progName, align 8
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.81, i64 0, i64 0), i8* %33, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.then57
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end55
  %34 = load i32, i32* @srcMode, align 4
  %cmp63 = icmp eq i32 %34, 3
  br i1 %cmp63, label %land.lhs.true65, label %if.end75

land.lhs.true65:                                  ; preds = %if.end62
  %call66 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %conv67 = zext i8 %call66 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  br i1 %tobool68, label %if.then69, label %if.end75

if.then69:                                        ; preds = %land.lhs.true65
  %35 = load i8, i8* @forceOverwrite, align 1
  %tobool70 = icmp ne i8 %35, 0
  br i1 %tobool70, label %if.then71, label %if.else

if.then71:                                        ; preds = %if.then69
  %call72 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  br label %if.end74

if.else:                                          ; preds = %if.then69
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load i8*, i8** @progName, align 8
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.61, i64 0, i64 0), i8* %37, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %if.end191

if.end74:                                         ; preds = %if.then71
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %land.lhs.true65, %if.end62
  %38 = load i32, i32* @srcMode, align 4
  %cmp76 = icmp eq i32 %38, 3
  br i1 %cmp76, label %land.lhs.true78, label %if.end88

land.lhs.true78:                                  ; preds = %if.end75
  %39 = load i8, i8* @forceOverwrite, align 1
  %tobool79 = icmp ne i8 %39, 0
  br i1 %tobool79, label %if.end88, label %land.lhs.true80

land.lhs.true80:                                  ; preds = %land.lhs.true78
  %call81 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  store i32 %call81, i32* %n, align 4
  %cmp82 = icmp sgt i32 %call81, 0
  br i1 %cmp82, label %if.then84, label %if.end88

if.then84:                                        ; preds = %land.lhs.true80
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %41 = load i8*, i8** @progName, align 8
  %42 = load i32, i32* %n, align 4
  %43 = load i32, i32* %n, align 4
  %cmp85 = icmp sgt i32 %43, 1
  %44 = zext i1 %cmp85 to i64
  %cond = select i1 %cmp85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.13, i64 0, i64 0)
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0), i8* %41, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i32 %42, i8* %cond)
  call void @setExit(i32 1)
  br label %if.end191

if.end88:                                         ; preds = %land.lhs.true80, %land.lhs.true78, %if.end75
  %45 = load i32, i32* @srcMode, align 4
  %cmp89 = icmp eq i32 %45, 3
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %46 = load i32, i32* @srcMode, align 4
  switch i32 %46, label %sw.default [
    i32 1, label %sw.bb93
    i32 2, label %sw.bb101
    i32 3, label %sw.bb115
  ]

sw.bb93:                                          ; preds = %if.end92
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %47, %struct._IO_FILE** %inStr, align 8
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %48, %struct._IO_FILE** %outStr, align 8
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %call94 = call i32 @fileno(%struct._IO_FILE* %49) #9
  %call95 = call i32 @isatty(i32 %call94) #9
  %tobool96 = icmp ne i32 %call95, 0
  br i1 %tobool96, label %if.then97, label %if.end100

if.then97:                                        ; preds = %sw.bb93
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = load i8*, i8** @progName, align 8
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.82, i64 0, i64 0), i8* %51)
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = load i8*, i8** @progName, align 8
  %54 = load i8*, i8** @progName, align 8
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i64 0, i64 0), i8* %53, i8* %54)
  call void @setExit(i32 1)
  br label %if.end191

if.end100:                                        ; preds = %sw.bb93
  br label %sw.epilog142

sw.bb101:                                         ; preds = %if.end92
  %call102 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call102, %struct._IO_FILE** %inStr, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %55, %struct._IO_FILE** %outStr, align 8
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp103 = icmp eq %struct._IO_FILE* %56, null
  br i1 %cmp103, label %if.then105, label %if.end114

if.then105:                                       ; preds = %sw.bb101
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = load i8*, i8** @progName, align 8
  %call106 = call i32* @__errno_location() #13
  %59 = load i32, i32* %call106, align 4
  %call107 = call i8* @strerror(i32 %59) #9
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0), i8* %58, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call107)
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp109 = icmp ne %struct._IO_FILE* %60, null
  br i1 %cmp109, label %if.then111, label %if.end113

if.then111:                                       ; preds = %if.then105
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %call112 = call i32 @fclose(%struct._IO_FILE* %61)
  br label %if.end113

if.end113:                                        ; preds = %if.then111, %if.then105
  call void @setExit(i32 1)
  br label %if.end191

if.end114:                                        ; preds = %sw.bb101
  br label %sw.epilog142

sw.bb115:                                         ; preds = %if.end92
  %call116 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call116, %struct._IO_FILE** %inStr, align 8
  %call117 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0))
  store %struct._IO_FILE* %call117, %struct._IO_FILE** %outStr, align 8
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %cmp118 = icmp eq %struct._IO_FILE* %62, null
  br i1 %cmp118, label %if.then120, label %if.end129

if.then120:                                       ; preds = %sw.bb115
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %64 = load i8*, i8** @progName, align 8
  %call121 = call i32* @__errno_location() #13
  %65 = load i32, i32* %call121, align 4
  %call122 = call i8* @strerror(i32 %65) #9
  %call123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i64 0, i64 0), i8* %64, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %call122)
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp124 = icmp ne %struct._IO_FILE* %66, null
  br i1 %cmp124, label %if.then126, label %if.end128

if.then126:                                       ; preds = %if.then120
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %call127 = call i32 @fclose(%struct._IO_FILE* %67)
  br label %if.end128

if.end128:                                        ; preds = %if.then126, %if.then120
  call void @setExit(i32 1)
  br label %if.end191

if.end129:                                        ; preds = %sw.bb115
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp130 = icmp eq %struct._IO_FILE* %68, null
  br i1 %cmp130, label %if.then132, label %if.end141

if.then132:                                       ; preds = %if.end129
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %70 = load i8*, i8** @progName, align 8
  %call133 = call i32* @__errno_location() #13
  %71 = load i32, i32* %call133, align 4
  %call134 = call i8* @strerror(i32 %71) #9
  %call135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0), i8* %70, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call134)
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %cmp136 = icmp ne %struct._IO_FILE* %72, null
  br i1 %cmp136, label %if.then138, label %if.end140

if.then138:                                       ; preds = %if.then132
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %call139 = call i32 @fclose(%struct._IO_FILE* %73)
  br label %if.end140

if.end140:                                        ; preds = %if.then138, %if.then132
  call void @setExit(i32 1)
  br label %if.end191

if.end141:                                        ; preds = %if.end129
  br label %sw.epilog142

sw.default:                                       ; preds = %if.end92
  call void @panic(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0)) #12
  unreachable

sw.epilog142:                                     ; preds = %if.end141, %if.end114, %if.end100
  %74 = load i32, i32* @verbosity, align 4
  %cmp143 = icmp sge i32 %74, 1
  br i1 %cmp143, label %if.then145, label %if.end148

if.then145:                                       ; preds = %sw.epilog142
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call147 = call i32 @fflush(%struct._IO_FILE* %76)
  br label %if.end148

if.end148:                                        ; preds = %if.then145, %sw.epilog142
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  store %struct._IO_FILE* %77, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %outStr, align 8
  %call149 = call zeroext i8 @uncompressStream(%struct._IO_FILE* %78, %struct._IO_FILE* %79)
  store i8 %call149, i8* %magicNumberOK, align 1
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %80 = load i8, i8* %magicNumberOK, align 1
  %tobool150 = icmp ne i8 %80, 0
  br i1 %tobool150, label %if.then151, label %if.else164

if.then151:                                       ; preds = %if.end148
  %81 = load i32, i32* @srcMode, align 4
  %cmp152 = icmp eq i32 %81, 3
  br i1 %cmp152, label %if.then154, label %if.end163

if.then154:                                       ; preds = %if.then151
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %82 = load i8, i8* @keepInputFiles, align 1
  %tobool155 = icmp ne i8 %82, 0
  br i1 %tobool155, label %if.end162, label %if.then156

if.then156:                                       ; preds = %if.then154
  %call157 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0)) #9
  store i32 %call157, i32* %retVal, align 4
  %83 = load i32, i32* %retVal, align 4
  %cmp158 = icmp ne i32 %83, 0
  br i1 %cmp158, label %if.then160, label %if.end161

if.then160:                                       ; preds = %if.then156
  call void @ioError() #12
  unreachable

if.end161:                                        ; preds = %if.then156
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then154
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then151
  br label %if.end175

if.else164:                                       ; preds = %if.end148
  store i8 1, i8* @unzFailsExist, align 1
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %84 = load i32, i32* @srcMode, align 4
  %cmp165 = icmp eq i32 %84, 3
  br i1 %cmp165, label %if.then167, label %if.end174

if.then167:                                       ; preds = %if.else164
  %call169 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  store i32 %call169, i32* %retVal168, align 4
  %85 = load i32, i32* %retVal168, align 4
  %cmp170 = icmp ne i32 %85, 0
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %if.then167
  call void @ioError() #12
  unreachable

if.end173:                                        ; preds = %if.then167
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.else164
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end163
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %86 = load i8, i8* %magicNumberOK, align 1
  %tobool176 = icmp ne i8 %86, 0
  br i1 %tobool176, label %if.then177, label %if.else183

if.then177:                                       ; preds = %if.end175
  %87 = load i32, i32* @verbosity, align 4
  %cmp178 = icmp sge i32 %87, 1
  br i1 %cmp178, label %if.then180, label %if.end182

if.then180:                                       ; preds = %if.then177
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0))
  br label %if.end182

if.end182:                                        ; preds = %if.then180, %if.then177
  br label %if.end191

if.else183:                                       ; preds = %if.end175
  call void @setExit(i32 2)
  %89 = load i32, i32* @verbosity, align 4
  %cmp184 = icmp sge i32 %89, 1
  br i1 %cmp184, label %if.then186, label %if.else188

if.then186:                                       ; preds = %if.else183
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.86, i64 0, i64 0))
  br label %if.end190

if.else188:                                       ; preds = %if.else183
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = load i8*, i8** @progName, align 8
  %call189 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.87, i64 0, i64 0), i8* %92, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end190

if.end190:                                        ; preds = %if.else188, %if.then186
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.end182, %if.end140, %if.end128, %if.end113, %if.then97, %if.then84, %if.else, %if.end54, %if.then38, %if.then25, %if.end18
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setExit(i32 %v) #0 {
entry:
  %v.addr = alloca i32, align 4
  store i32 %v, i32* %v.addr, align 4
  %0 = load i32, i32* %v.addr, align 4
  %1 = load i32, i32* @exitValue, align 4
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %v.addr, align 4
  store i32 %2, i32* @exitValue, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @testf(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %allOK = alloca i8, align 1
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %0 = load i8*, i8** %name.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @srcMode, align 4
  %cmp1 = icmp ne i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @panic(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i64 0, i64 0)) #12
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.15, i64 0, i64 0))
  %2 = load i32, i32* @srcMode, align 4
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb3
  ]

sw.bb:                                            ; preds = %if.end
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0))
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %3 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %3)
  br label %sw.epilog

sw.bb3:                                           ; preds = %if.end
  %4 = load i8*, i8** %name.addr, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %4)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb, %if.end
  %5 = load i32, i32* @srcMode, align 4
  %cmp4 = icmp ne i32 %5, 1
  br i1 %cmp4, label %land.lhs.true5, label %if.end11

land.lhs.true5:                                   ; preds = %sw.epilog
  %call = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %conv = zext i8 %call to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then6, label %if.end11

if.then6:                                         ; preds = %land.lhs.true5
  %6 = load i8, i8* @noisy, align 1
  %tobool7 = icmp ne i8 %6, 0
  br i1 %tobool7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.then6
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = load i8*, i8** @progName, align 8
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i8* %8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.then6
  call void @setExit(i32 1)
  br label %if.end67

if.end11:                                         ; preds = %land.lhs.true5, %sw.epilog
  %9 = load i32, i32* @srcMode, align 4
  %cmp12 = icmp ne i32 %9, 1
  br i1 %cmp12, label %land.lhs.true14, label %if.end21

land.lhs.true14:                                  ; preds = %if.end11
  %call15 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %tobool16 = icmp ne i8 %call15, 0
  br i1 %tobool16, label %if.end21, label %if.then17

if.then17:                                        ; preds = %land.lhs.true14
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i8*, i8** @progName, align 8
  %call18 = call i32* @__errno_location() #13
  %12 = load i32, i32* %call18, align 4
  %call19 = call i8* @strerror(i32 %12) #9
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0), i8* %11, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call19)
  call void @setExit(i32 1)
  br label %if.end67

if.end21:                                         ; preds = %land.lhs.true14, %if.end11
  %13 = load i32, i32* @srcMode, align 4
  %cmp22 = icmp ne i32 %13, 1
  br i1 %cmp22, label %if.then24, label %if.end31

if.then24:                                        ; preds = %if.end21
  %call25 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %statBuf) #9
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 3
  %14 = load i32, i32* %st_mode, align 8
  %and = and i32 %14, 61440
  %cmp26 = icmp eq i32 %and, 16384
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.then24
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = load i8*, i8** @progName, align 8
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.59, i64 0, i64 0), i8* %16, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %if.end67

if.end30:                                         ; preds = %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end21
  %17 = load i32, i32* @srcMode, align 4
  switch i32 %17, label %sw.default [
    i32 1, label %sw.bb32
    i32 2, label %sw.bb40
    i32 3, label %sw.bb40
  ]

sw.bb32:                                          ; preds = %if.end31
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %call33 = call i32 @fileno(%struct._IO_FILE* %18) #9
  %call34 = call i32 @isatty(i32 %call33) #9
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then36, label %if.end39

if.then36:                                        ; preds = %sw.bb32
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load i8*, i8** @progName, align 8
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.82, i64 0, i64 0), i8* %20)
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load i8*, i8** @progName, align 8
  %23 = load i8*, i8** @progName, align 8
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i64 0, i64 0), i8* %22, i8* %23)
  call void @setExit(i32 1)
  br label %if.end67

if.end39:                                         ; preds = %sw.bb32
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %24, %struct._IO_FILE** %inStr, align 8
  br label %sw.epilog49

sw.bb40:                                          ; preds = %if.end31, %if.end31
  %call41 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call41, %struct._IO_FILE** %inStr, align 8
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %cmp42 = icmp eq %struct._IO_FILE* %25, null
  br i1 %cmp42, label %if.then44, label %if.end48

if.then44:                                        ; preds = %sw.bb40
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %27 = load i8*, i8** @progName, align 8
  %call45 = call i32* @__errno_location() #13
  %28 = load i32, i32* %call45, align 4
  %call46 = call i8* @strerror(i32 %28) #9
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0), i8* %27, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %call46)
  call void @setExit(i32 1)
  br label %if.end67

if.end48:                                         ; preds = %sw.bb40
  br label %sw.epilog49

sw.default:                                       ; preds = %if.end31
  call void @panic(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i64 0, i64 0)) #12
  unreachable

sw.epilog49:                                      ; preds = %if.end48, %if.end39
  %29 = load i32, i32* @verbosity, align 4
  %cmp50 = icmp sge i32 %29, 1
  br i1 %cmp50, label %if.then52, label %if.end55

if.then52:                                        ; preds = %sw.epilog49
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call54 = call i32 @fflush(%struct._IO_FILE* %31)
  br label %if.end55

if.end55:                                         ; preds = %if.then52, %sw.epilog49
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %inStr, align 8
  %call56 = call zeroext i8 @testStream(%struct._IO_FILE* %32)
  store i8 %call56, i8* %allOK, align 1
  %33 = load i8, i8* %allOK, align 1
  %conv57 = zext i8 %33 to i32
  %tobool58 = icmp ne i32 %conv57, 0
  br i1 %tobool58, label %land.lhs.true59, label %if.end64

land.lhs.true59:                                  ; preds = %if.end55
  %34 = load i32, i32* @verbosity, align 4
  %cmp60 = icmp sge i32 %34, 1
  br i1 %cmp60, label %if.then62, label %if.end64

if.then62:                                        ; preds = %land.lhs.true59
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0))
  br label %if.end64

if.end64:                                         ; preds = %if.then62, %land.lhs.true59, %if.end55
  %36 = load i8, i8* %allOK, align 1
  %tobool65 = icmp ne i8 %36, 0
  br i1 %tobool65, label %if.end67, label %if.then66

if.then66:                                        ; preds = %if.end64
  store i8 1, i8* @testFailsExist, align 1
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.end64, %if.then44, %if.then36, %if.then28, %if.then17, %if.end10
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @panic(i8* %s) #5 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %2 = load i8*, i8** %s.addr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.71, i64 0, i64 0), i8* %1, i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @containsDubiousChars(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  ret i8 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @fileExists(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %tmp = alloca %struct._IO_FILE*, align 8
  %exists = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  store %struct._IO_FILE* %call, %struct._IO_FILE** %tmp, align 8
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %tmp, align 8
  %cmp = icmp ne %struct._IO_FILE* %1, null
  %conv = zext i1 %cmp to i32
  %conv1 = trunc i32 %conv to i8
  store i8 %conv1, i8* %exists, align 1
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %tmp, align 8
  %cmp2 = icmp ne %struct._IO_FILE* %2, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %tmp, align 8
  %call4 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8, i8* %exists, align 1
  ret i8 %4
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pad(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %call = call i64 @strlen(i8* %0) #10
  %conv = trunc i64 %call to i32
  %1 = load i32, i32* @longestFileName, align 4
  %cmp = icmp sge i32 %conv, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @longestFileName, align 4
  %4 = load i8*, i8** %s.addr, align 8
  %call2 = call i64 @strlen(i8* %4) #10
  %conv3 = trunc i64 %call2 to i32
  %sub = sub nsw i32 %3, %conv3
  %cmp4 = icmp sle i32 %2, %sub
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.72, i64 0, i64 0))
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then
  ret void
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @testStream(%struct._IO_FILE* %zStream) #0 {
entry:
  %retval = alloca i8, align 1
  %zStream.addr = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %nread = alloca i32, align 4
  %streamNo = alloca i32, align 4
  %i = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %nUnused = alloca i32, align 4
  %unusedTmpV = alloca i8*, align 8
  %unusedTmp = alloca i8*, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %zStream.addr, align 8
  store i8* null, i8** %bzf, align 8
  store i32 0, i32* %nUnused, align 4
  store i32 0, i32* %streamNo, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %0) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %errhandler_io

if.end:                                           ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end40, %if.end
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %2 = load i32, i32* @verbosity, align 4
  %3 = load i8, i8* @smallMode, align 1
  %conv = zext i8 %3 to i32
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %4 = load i32, i32* %nUnused, align 4
  %call1 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %1, i32 %2, i32 %conv, i8* %arraydecay, i32 %4)
  store i8* %call1, i8** %bzf, align 8
  %5 = load i8*, i8** %bzf, align 8
  %cmp = icmp eq i8* %5, null
  br i1 %cmp, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i32, i32* %bzerr, align 4
  %cmp3 = icmp ne i32 %6, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %lor.lhs.false, %while.body
  br label %errhandler

if.end6:                                          ; preds = %lor.lhs.false
  %7 = load i32, i32* %streamNo, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %streamNo, align 4
  br label %while.cond7

while.cond7:                                      ; preds = %if.end16, %if.end6
  %8 = load i32, i32* %bzerr, align 4
  %cmp8 = icmp eq i32 %8, 0
  br i1 %cmp8, label %while.body10, label %while.end

while.body10:                                     ; preds = %while.cond7
  %9 = load i8*, i8** %bzf, align 8
  %arraydecay11 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call12 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %9, i8* %arraydecay11, i32 5000)
  store i32 %call12, i32* %nread, align 4
  %10 = load i32, i32* %bzerr, align 4
  %cmp13 = icmp eq i32 %10, -5
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %while.body10
  br label %errhandler

if.end16:                                         ; preds = %while.body10
  br label %while.cond7

while.end:                                        ; preds = %while.cond7
  %11 = load i32, i32* %bzerr, align 4
  %cmp17 = icmp ne i32 %11, 4
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %while.end
  br label %errhandler

if.end20:                                         ; preds = %while.end
  %12 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadGetUnused(i32* %bzerr, i8* %12, i8** %unusedTmpV, i32* %nUnused)
  %13 = load i32, i32* %bzerr, align 4
  %cmp21 = icmp ne i32 %13, 0
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end20
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0)) #12
  unreachable

if.end24:                                         ; preds = %if.end20
  %14 = load i8*, i8** %unusedTmpV, align 8
  store i8* %14, i8** %unusedTmp, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end24
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %nUnused, align 4
  %cmp25 = icmp slt i32 %15, %16
  br i1 %cmp25, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i8*, i8** %unusedTmp, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom
  %19 = load i8, i8* %arrayidx, align 1
  %20 = load i32, i32* %i, align 4
  %idxprom27 = sext i32 %20 to i64
  %arrayidx28 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %idxprom27
  store i8 %19, i8* %arrayidx28, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %21, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %22 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %22)
  %23 = load i32, i32* %bzerr, align 4
  %cmp30 = icmp ne i32 %23, 0
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %for.end
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0)) #12
  unreachable

if.end33:                                         ; preds = %for.end
  %24 = load i32, i32* %nUnused, align 4
  %cmp34 = icmp eq i32 %24, 0
  br i1 %cmp34, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %if.end33
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call36 = call zeroext i8 @myfeof(%struct._IO_FILE* %25)
  %conv37 = zext i8 %call36 to i32
  %tobool38 = icmp ne i32 %conv37, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true
  br label %while.end41

if.end40:                                         ; preds = %land.lhs.true, %if.end33
  br label %while.body

while.end41:                                      ; preds = %if.then39
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call42 = call i32 @ferror(%struct._IO_FILE* %26) #9
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %while.end41
  br label %errhandler_io

if.end45:                                         ; preds = %while.end41
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call46 = call i32 @fclose(%struct._IO_FILE* %27)
  store i32 %call46, i32* %ret, align 4
  %28 = load i32, i32* %ret, align 4
  %cmp47 = icmp eq i32 %28, -1
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end45
  br label %errhandler_io

if.end50:                                         ; preds = %if.end45
  %29 = load i32, i32* @verbosity, align 4
  %cmp51 = icmp sge i32 %29, 2
  br i1 %cmp51, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end50
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end50
  store i8 1, i8* %retval, align 1
  br label %return

errhandler:                                       ; preds = %if.then19, %if.then15, %if.then5
  %31 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr_dummy, i8* %31)
  %32 = load i32, i32* @verbosity, align 4
  %cmp56 = icmp eq i32 %32, 0
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; preds = %errhandler
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = load i8*, i8** @progName, align 8
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i64 0, i64 0), i8* %34, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %errhandler
  %35 = load i32, i32* %bzerr, align 4
  switch i32 %35, label %sw.default [
    i32 -9, label %sw.bb
    i32 -6, label %sw.bb61
    i32 -4, label %sw.bb62
    i32 -3, label %sw.bb64
    i32 -7, label %sw.bb65
    i32 -5, label %sw.bb67
  ]

sw.bb:                                            ; preds = %if.end60
  call void @configError() #12
  unreachable

sw.bb61:                                          ; preds = %if.end60
  br label %errhandler_io

errhandler_io:                                    ; preds = %sw.bb61, %if.then49, %if.then44, %if.then
  call void @ioError() #12
  unreachable

sw.bb62:                                          ; preds = %if.end60
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.100, i64 0, i64 0))
  store i8 0, i8* %retval, align 1
  br label %return

sw.bb64:                                          ; preds = %if.end60
  call void @outOfMemory() #12
  unreachable

sw.bb65:                                          ; preds = %if.end60
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.101, i64 0, i64 0))
  store i8 0, i8* %retval, align 1
  br label %return

sw.bb67:                                          ; preds = %if.end60
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %cmp68 = icmp ne %struct._IO_FILE* %38, %39
  br i1 %cmp68, label %if.then70, label %if.end72

if.then70:                                        ; preds = %sw.bb67
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call71 = call i32 @fclose(%struct._IO_FILE* %40)
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %sw.bb67
  %41 = load i32, i32* %streamNo, align 4
  %cmp73 = icmp eq i32 %41, 1
  br i1 %cmp73, label %if.then75, label %if.else

if.then75:                                        ; preds = %if.end72
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.102, i64 0, i64 0))
  store i8 0, i8* %retval, align 1
  br label %return

if.else:                                          ; preds = %if.end72
  %43 = load i8, i8* @noisy, align 1
  %tobool77 = icmp ne i8 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.else
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i64 0, i64 0))
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.else
  store i8 1, i8* %retval, align 1
  br label %return

sw.default:                                       ; preds = %if.end60
  call void @panic(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.104, i64 0, i64 0)) #12
  unreachable

return:                                           ; preds = %if.end80, %if.then75, %sw.bb65, %sw.bb62, %if.end55
  %45 = load i8, i8* %retval, align 1
  ret i8 %45
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @myfeof(%struct._IO_FILE* %f) #0 {
entry:
  %retval = alloca i8, align 1
  %f.addr = alloca %struct._IO_FILE*, align 8
  %c = alloca i32, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call = call i32 @fgetc(%struct._IO_FILE* %0)
  store i32 %call, i32* %c, align 4
  %1 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %c, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call1 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %3)
  store i8 0, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1
  ret i8 %4
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @configError() #5 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([236 x i8], [236 x i8]* @.str.77, i64 0, i64 0))
  call void @setExit(i32 3)
  %1 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %1) #11
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @ioError() #5 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.78, i64 0, i64 0), i8* %1)
  %2 = load i8*, i8** @progName, align 8
  call void @perror(i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @outOfMemory() #5 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0), i8* %1)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @showFileNames() #0 {
entry:
  %0 = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @cleanUpAndFail(i32 %ec) #5 {
entry:
  %ec.addr = alloca i32, align 4
  %retVal = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i32 %ec, i32* %ec.addr, align 4
  %0 = load i32, i32* @srcMode, align 4
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @opMode, align 4
  %cmp1 = icmp ne i32 %1, 3
  br i1 %cmp1, label %land.lhs.true2, label %if.end25

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i8, i8* @deleteOutputOnInterrupt, align 1
  %conv = zext i8 %2 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then, label %if.end25

if.then:                                          ; preds = %land.lhs.true2
  %call = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %statBuf) #9
  store i32 %call, i32* %retVal, align 4
  %3 = load i32, i32* %retVal, align 4
  %cmp3 = icmp eq i32 %3, 0
  br i1 %cmp3, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  %4 = load i8, i8* @noisy, align 1
  %tobool6 = icmp ne i8 %4, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then5
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i8*, i8** @progName, align 8
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i64 0, i64 0), i8* %6, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %cmp9 = icmp ne %struct._IO_FILE* %7, null
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %call12 = call i32 @fclose(%struct._IO_FILE* %8)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end
  %call14 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  store i32 %call14, i32* %retVal, align 4
  %9 = load i32, i32* %retVal, align 4
  %cmp15 = icmp ne i32 %9, 0
  br i1 %cmp15, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end13
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i8*, i8** @progName, align 8
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0), i8* %11)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end13
  br label %if.end24

if.else:                                          ; preds = %if.then
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = load i8*, i8** @progName, align 8
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0), i8* %13)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = load i8*, i8** @progName, align 8
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.42, i64 0, i64 0), i8* %15)
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i8*, i8** @progName, align 8
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = load i8*, i8** @progName, align 8
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.44, i64 0, i64 0), i8* %19)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.end19
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %land.lhs.true2, %land.lhs.true, %entry
  %20 = load i8, i8* @noisy, align 1
  %conv26 = zext i8 %20 to i32
  %tobool27 = icmp ne i32 %conv26, 0
  br i1 %tobool27, label %land.lhs.true28, label %if.end36

land.lhs.true28:                                  ; preds = %if.end25
  %21 = load i32, i32* @numFileNames, align 4
  %cmp29 = icmp sgt i32 %21, 0
  br i1 %cmp29, label %land.lhs.true31, label %if.end36

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %22 = load i32, i32* @numFilesProcessed, align 4
  %23 = load i32, i32* @numFileNames, align 4
  %cmp32 = icmp slt i32 %22, %23
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %land.lhs.true31
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %25 = load i8*, i8** @progName, align 8
  %26 = load i8*, i8** @progName, align 8
  %27 = load i32, i32* @numFileNames, align 4
  %28 = load i32, i32* @numFileNames, align 4
  %29 = load i32, i32* @numFilesProcessed, align 4
  %sub = sub nsw i32 %28, %29
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.45, i64 0, i64 0), i8* %25, i8* %26, i32 %27, i32 %sub)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true31, %land.lhs.true28, %if.end25
  %30 = load i32, i32* %ec.addr, align 4
  call void @setExit(i32 %30)
  %31 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %31) #11
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @remove(i8*) #2

declare dso_local void @perror(i8*) #1

declare dso_local i32 @fgetc(%struct._IO_FILE*) #1

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mapSuffix(i8* %name, i8* %oldSuffix, i8* %newSuffix) #0 {
entry:
  %retval = alloca i8, align 1
  %name.addr = alloca i8*, align 8
  %oldSuffix.addr = alloca i8*, align 8
  %newSuffix.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  store i8* %oldSuffix, i8** %oldSuffix.addr, align 8
  store i8* %newSuffix, i8** %newSuffix.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %1 = load i8*, i8** %oldSuffix.addr, align 8
  %call = call zeroext i8 @hasSuffix(i8* %0, i8* %1)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %call1 = call i64 @strlen(i8* %3) #10
  %4 = load i8*, i8** %oldSuffix.addr, align 8
  %call2 = call i64 @strlen(i8* %4) #10
  %sub = sub i64 %call1, %call2
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub
  store i8 0, i8* %arrayidx, align 1
  %5 = load i8*, i8** %name.addr, align 8
  %6 = load i8*, i8** %newSuffix.addr, align 8
  %call3 = call i8* @strcat(i8* %5, i8* %6) #9
  store i8 1, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load i8, i8* %retval, align 1
  ret i8 %7
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @notAStandardFile(i8* %name) #0 {
entry:
  %retval = alloca i8, align 1
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call i32 @lstat(i8* %0, %struct.stat* %statBuf) #9
  store i32 %call, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 3
  %2 = load i32, i32* %st_mode, align 8
  %and = and i32 %2, 61440
  %cmp1 = icmp eq i32 %and, 32768
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1
  br label %return

if.end3:                                          ; preds = %if.end
  store i8 1, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i8, i8* %retval, align 1
  ret i8 %3
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @countHardLinks(i8* %name) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call i32 @lstat(i8* %0, %struct.stat* %statBuf) #9
  store i32 %call, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 2
  %2 = load i64, i64* %st_nlink, align 8
  %sub = sub i64 %2, 1
  %conv = trunc i64 %sub to i32
  store i32 %conv, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4
  ret i32 %3
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @saveInputFileMetaInfo(i8* %srcName) #0 {
entry:
  %srcName.addr = alloca i8*, align 8
  %retVal = alloca i32, align 4
  store i8* %srcName, i8** %srcName.addr, align 8
  %0 = load i8*, i8** %srcName.addr, align 8
  %call = call i32 @stat(i8* %0, %struct.stat* @fileMetaInfo) #9
  store i32 %call, i32* %retVal, align 4
  %1 = load i32, i32* %retVal, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @ioError() #12
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @uncompressStream(%struct._IO_FILE* %zStream, %struct._IO_FILE* %stream) #0 {
entry:
  %retval = alloca i8, align 1
  %zStream.addr = alloca %struct._IO_FILE*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %nread = alloca i32, align 4
  %streamNo = alloca i32, align 4
  %i = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %nUnused = alloca i32, align 4
  %unusedTmpV = alloca i8*, align 8
  %unusedTmp = alloca i8*, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %zStream.addr, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i8* null, i8** %bzf, align 8
  store i32 0, i32* %nUnused, align 4
  store i32 0, i32* %streamNo, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %0) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %errhandler_io

if.end:                                           ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call1 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  br label %errhandler_io

if.end4:                                          ; preds = %if.end
  br label %while.body

while.body:                                       ; preds = %if.end61, %if.end4
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %3 = load i32, i32* @verbosity, align 4
  %4 = load i8, i8* @smallMode, align 1
  %conv = zext i8 %4 to i32
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %5 = load i32, i32* %nUnused, align 4
  %call5 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %2, i32 %3, i32 %conv, i8* %arraydecay, i32 %5)
  store i8* %call5, i8** %bzf, align 8
  %6 = load i8*, i8** %bzf, align 8
  %cmp = icmp eq i8* %6, null
  br i1 %cmp, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i32, i32* %bzerr, align 4
  %cmp7 = icmp ne i32 %7, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %lor.lhs.false, %while.body
  br label %errhandler

if.end10:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %streamNo, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %streamNo, align 4
  br label %while.cond11

while.cond11:                                     ; preds = %if.end36, %if.end10
  %9 = load i32, i32* %bzerr, align 4
  %cmp12 = icmp eq i32 %9, 0
  br i1 %cmp12, label %while.body14, label %while.end

while.body14:                                     ; preds = %while.cond11
  %10 = load i8*, i8** %bzf, align 8
  %arraydecay15 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call16 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %10, i8* %arraydecay15, i32 5000)
  store i32 %call16, i32* %nread, align 4
  %11 = load i32, i32* %bzerr, align 4
  %cmp17 = icmp eq i32 %11, -5
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %while.body14
  br label %trycat

if.end20:                                         ; preds = %while.body14
  %12 = load i32, i32* %bzerr, align 4
  %cmp21 = icmp eq i32 %12, 0
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %if.end20
  %13 = load i32, i32* %bzerr, align 4
  %cmp24 = icmp eq i32 %13, 4
  br i1 %cmp24, label %land.lhs.true, label %if.end32

land.lhs.true:                                    ; preds = %lor.lhs.false23, %if.end20
  %14 = load i32, i32* %nread, align 4
  %cmp26 = icmp sgt i32 %14, 0
  br i1 %cmp26, label %if.then28, label %if.end32

if.then28:                                        ; preds = %land.lhs.true
  %arraydecay29 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %15 = load i32, i32* %nread, align 4
  %conv30 = sext i32 %15 to i64
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call31 = call i64 @fwrite(i8* %arraydecay29, i64 1, i64 %conv30, %struct._IO_FILE* %16)
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %land.lhs.true, %lor.lhs.false23
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call33 = call i32 @ferror(%struct._IO_FILE* %17) #9
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end32
  br label %errhandler_io

if.end36:                                         ; preds = %if.end32
  br label %while.cond11

while.end:                                        ; preds = %while.cond11
  %18 = load i32, i32* %bzerr, align 4
  %cmp37 = icmp ne i32 %18, 4
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %while.end
  br label %errhandler

if.end40:                                         ; preds = %while.end
  %19 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadGetUnused(i32* %bzerr, i8* %19, i8** %unusedTmpV, i32* %nUnused)
  %20 = load i32, i32* %bzerr, align 4
  %cmp41 = icmp ne i32 %20, 0
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end40
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)) #12
  unreachable

if.end44:                                         ; preds = %if.end40
  %21 = load i8*, i8** %unusedTmpV, align 8
  store i8* %21, i8** %unusedTmp, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end44
  %22 = load i32, i32* %i, align 4
  %23 = load i32, i32* %nUnused, align 4
  %cmp45 = icmp slt i32 %22, %23
  br i1 %cmp45, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load i8*, i8** %unusedTmp, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom = sext i32 %25 to i64
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %idxprom
  %26 = load i8, i8* %arrayidx, align 1
  %27 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %27 to i64
  %arrayidx48 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %idxprom47
  store i8 %26, i8* %arrayidx48, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4
  %inc49 = add nsw i32 %28, 1
  store i32 %inc49, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %29)
  %30 = load i32, i32* %bzerr, align 4
  %cmp50 = icmp ne i32 %30, 0
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %for.end
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)) #12
  unreachable

if.end53:                                         ; preds = %for.end
  %31 = load i32, i32* %nUnused, align 4
  %cmp54 = icmp eq i32 %31, 0
  br i1 %cmp54, label %land.lhs.true56, label %if.end61

land.lhs.true56:                                  ; preds = %if.end53
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call57 = call zeroext i8 @myfeof(%struct._IO_FILE* %32)
  %conv58 = zext i8 %call57 to i32
  %tobool59 = icmp ne i32 %conv58, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %land.lhs.true56
  br label %while.end62

if.end61:                                         ; preds = %land.lhs.true56, %if.end53
  br label %while.body

while.end62:                                      ; preds = %if.then60
  br label %closeok

closeok:                                          ; preds = %while.end120, %while.end62
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call63 = call i32 @ferror(%struct._IO_FILE* %33) #9
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %closeok
  br label %errhandler_io

if.end66:                                         ; preds = %closeok
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call67 = call i32 @fclose(%struct._IO_FILE* %34)
  store i32 %call67, i32* %ret, align 4
  %35 = load i32, i32* %ret, align 4
  %cmp68 = icmp eq i32 %35, -1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end66
  br label %errhandler_io

if.end71:                                         ; preds = %if.end66
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call72 = call i32 @ferror(%struct._IO_FILE* %36) #9
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.end71
  br label %errhandler_io

if.end75:                                         ; preds = %if.end71
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call76 = call i32 @fflush(%struct._IO_FILE* %37)
  store i32 %call76, i32* %ret, align 4
  %38 = load i32, i32* %ret, align 4
  %cmp77 = icmp ne i32 %38, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end75
  br label %errhandler_io

if.end80:                                         ; preds = %if.end75
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %cmp81 = icmp ne %struct._IO_FILE* %39, %40
  br i1 %cmp81, label %if.then83, label %if.end89

if.then83:                                        ; preds = %if.end80
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call84 = call i32 @fclose(%struct._IO_FILE* %41)
  store i32 %call84, i32* %ret, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %42 = load i32, i32* %ret, align 4
  %cmp85 = icmp eq i32 %42, -1
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then83
  br label %errhandler_io

if.end88:                                         ; preds = %if.then83
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end80
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %43 = load i32, i32* @verbosity, align 4
  %cmp90 = icmp sge i32 %43, 2
  br i1 %cmp90, label %if.then92, label %if.end94

if.then92:                                        ; preds = %if.end89
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  br label %if.end94

if.end94:                                         ; preds = %if.then92, %if.end89
  store i8 1, i8* %retval, align 1
  br label %return

trycat:                                           ; preds = %if.then19
  %45 = load i8, i8* @forceOverwrite, align 1
  %tobool95 = icmp ne i8 %45, 0
  br i1 %tobool95, label %if.then96, label %if.end121

if.then96:                                        ; preds = %trycat
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  call void @rewind(%struct._IO_FILE* %46)
  br label %while.body97

while.body97:                                     ; preds = %if.end119, %if.then96
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call98 = call zeroext i8 @myfeof(%struct._IO_FILE* %47)
  %tobool99 = icmp ne i8 %call98, 0
  br i1 %tobool99, label %if.then100, label %if.end101

if.then100:                                       ; preds = %while.body97
  br label %while.end120

if.end101:                                        ; preds = %while.body97
  %arraydecay102 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call103 = call i64 @fread(i8* %arraydecay102, i64 1, i64 5000, %struct._IO_FILE* %48)
  %conv104 = trunc i64 %call103 to i32
  store i32 %conv104, i32* %nread, align 4
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call105 = call i32 @ferror(%struct._IO_FILE* %49) #9
  %tobool106 = icmp ne i32 %call105, 0
  br i1 %tobool106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.end101
  br label %errhandler_io

if.end108:                                        ; preds = %if.end101
  %50 = load i32, i32* %nread, align 4
  %cmp109 = icmp sgt i32 %50, 0
  br i1 %cmp109, label %if.then111, label %if.end115

if.then111:                                       ; preds = %if.end108
  %arraydecay112 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %51 = load i32, i32* %nread, align 4
  %conv113 = sext i32 %51 to i64
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call114 = call i64 @fwrite(i8* %arraydecay112, i64 1, i64 %conv113, %struct._IO_FILE* %52)
  br label %if.end115

if.end115:                                        ; preds = %if.then111, %if.end108
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call116 = call i32 @ferror(%struct._IO_FILE* %53) #9
  %tobool117 = icmp ne i32 %call116, 0
  br i1 %tobool117, label %if.then118, label %if.end119

if.then118:                                       ; preds = %if.end115
  br label %errhandler_io

if.end119:                                        ; preds = %if.end115
  br label %while.body97

while.end120:                                     ; preds = %if.then100
  br label %closeok

if.end121:                                        ; preds = %trycat
  br label %errhandler

errhandler:                                       ; preds = %if.end121, %if.then39, %if.then9
  %54 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr_dummy, i8* %54)
  %55 = load i32, i32* %bzerr, align 4
  switch i32 %55, label %sw.default [
    i32 -9, label %sw.bb
    i32 -6, label %sw.bb122
    i32 -4, label %sw.bb123
    i32 -3, label %sw.bb124
    i32 -7, label %sw.bb125
    i32 -5, label %sw.bb126
  ]

sw.bb:                                            ; preds = %errhandler
  call void @configError() #12
  unreachable

sw.bb122:                                         ; preds = %errhandler
  br label %errhandler_io

errhandler_io:                                    ; preds = %sw.bb122, %if.then118, %if.then107, %if.then87, %if.then79, %if.then74, %if.then70, %if.then65, %if.then35, %if.then3, %if.then
  call void @ioError() #12
  unreachable

sw.bb123:                                         ; preds = %errhandler
  call void @crcError() #12
  unreachable

sw.bb124:                                         ; preds = %errhandler
  call void @outOfMemory() #12
  unreachable

sw.bb125:                                         ; preds = %errhandler
  call void @compressedStreamEOF() #12
  unreachable

sw.bb126:                                         ; preds = %errhandler
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %cmp127 = icmp ne %struct._IO_FILE* %56, %57
  br i1 %cmp127, label %if.then129, label %if.end131

if.then129:                                       ; preds = %sw.bb126
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call130 = call i32 @fclose(%struct._IO_FILE* %58)
  br label %if.end131

if.end131:                                        ; preds = %if.then129, %sw.bb126
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %cmp132 = icmp ne %struct._IO_FILE* %59, %60
  br i1 %cmp132, label %if.then134, label %if.end136

if.then134:                                       ; preds = %if.end131
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call135 = call i32 @fclose(%struct._IO_FILE* %61)
  br label %if.end136

if.end136:                                        ; preds = %if.then134, %if.end131
  %62 = load i32, i32* %streamNo, align 4
  %cmp137 = icmp eq i32 %62, 1
  br i1 %cmp137, label %if.then139, label %if.else

if.then139:                                       ; preds = %if.end136
  store i8 0, i8* %retval, align 1
  br label %return

if.else:                                          ; preds = %if.end136
  %63 = load i8, i8* @noisy, align 1
  %tobool140 = icmp ne i8 %63, 0
  br i1 %tobool140, label %if.then141, label %if.end143

if.then141:                                       ; preds = %if.else
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = load i8*, i8** @progName, align 8
  %call142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.90, i64 0, i64 0), i8* %65, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end143

if.end143:                                        ; preds = %if.then141, %if.else
  store i8 1, i8* %retval, align 1
  br label %return

sw.default:                                       ; preds = %errhandler
  call void @panic(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.91, i64 0, i64 0)) #12
  unreachable

return:                                           ; preds = %if.end143, %if.then139, %if.end94
  %66 = load i8, i8* %retval, align 1
  ret i8 %66
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @applySavedMetaInfoToOutputFile(i8* %dstName) #0 {
entry:
  %dstName.addr = alloca i8*, align 8
  %retVal = alloca i32, align 4
  %uTimBuf = alloca %struct.timespec, align 8
  store i8* %dstName, i8** %dstName.addr, align 8
  %0 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0), align 8
  %actime = getelementptr inbounds %struct.timespec, %struct.timespec* %uTimBuf, i32 0, i32 0
  store i64 %0, i64* %actime, align 8
  %1 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0), align 8
  %modtime = getelementptr inbounds %struct.timespec, %struct.timespec* %uTimBuf, i32 0, i32 1
  store i64 %1, i64* %modtime, align 8
  %2 = load i8*, i8** %dstName.addr, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 3), align 8
  %call = call i32 @chmod(i8* %2, i32 %3) #9
  store i32 %call, i32* %retVal, align 4
  %4 = load i32, i32* %retVal, align 4
  %cmp = icmp ne i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @ioError() #12
  unreachable

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %dstName.addr, align 8
  %call1 = call i32 @utime(i8* %5, %struct.timespec* %uTimBuf) #9
  store i32 %call1, i32* %retVal, align 4
  %6 = load i32, i32* %retVal, align 4
  %cmp2 = icmp ne i32 %6, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @ioError() #12
  unreachable

if.end4:                                          ; preds = %if.end
  %7 = load i8*, i8** %dstName.addr, align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 4), align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 5), align 8
  %call5 = call i32 @chown(i8* %7, i32 %8, i32 %9) #9
  store i32 %call5, i32* %retVal, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @utime(i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

declare dso_local void @rewind(%struct._IO_FILE*) #1

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @crcError() #5 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.92, i64 0, i64 0), i8* %1)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @compressedStreamEOF() #5 {
entry:
  %0 = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.93, i64 0, i64 0), i8* %2)
  %3 = load i8*, i8** @progName, align 8
  call void @perror(i8* %3)
  call void @showFileNames()
  call void @cadvise()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cadvise() #0 {
entry:
  %0 = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([241 x i8], [241 x i8]* @.str.46, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @hasSuffix(i8* %s, i8* %suffix) #0 {
entry:
  %retval = alloca i8, align 1
  %s.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %ns = alloca i32, align 4
  %nx = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i8* %suffix, i8** %suffix.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %call = call i64 @strlen(i8* %0) #10
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %ns, align 4
  %1 = load i8*, i8** %suffix.addr, align 8
  %call1 = call i64 @strlen(i8* %1) #10
  %conv2 = trunc i64 %call1 to i32
  store i32 %conv2, i32* %nx, align 4
  %2 = load i32, i32* %ns, align 4
  %3 = load i32, i32* %nx, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %s.addr, align 8
  %5 = load i32, i32* %ns, align 4
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  %6 = load i32, i32* %nx, align 4
  %idx.ext4 = sext i32 %6 to i64
  %idx.neg = sub i64 0, %idx.ext4
  %add.ptr5 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg
  %7 = load i8*, i8** %suffix.addr, align 8
  %call6 = call i32 @strcmp(i8* %add.ptr5, i8* %7) #10
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1
  br label %return

if.end10:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %8 = load i8, i8* %retval, align 1
  ret i8 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compressStream(%struct._IO_FILE* %stream, %struct._IO_FILE* %zStream) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %zStream.addr = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %ibuf = alloca [5000 x i8], align 16
  %nIbuf = alloca i32, align 4
  %nbytes_in_lo32 = alloca i32, align 4
  %nbytes_in_hi32 = alloca i32, align 4
  %nbytes_out_lo32 = alloca i32, align 4
  %nbytes_out_hi32 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %buf_nin = alloca [32 x i8], align 16
  %buf_nout = alloca [32 x i8], align 16
  %nbytes_in = alloca %struct.UInt64, align 1
  %nbytes_out = alloca %struct.UInt64, align 1
  %nbytes_in_d = alloca double, align 8
  %nbytes_out_d = alloca double, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %zStream.addr, align 8
  store i8* null, i8** %bzf, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %0) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %errhandler_io

if.end:                                           ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call1 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  br label %errhandler_io

if.end4:                                          ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %3 = load i32, i32* @blockSize100k, align 4
  %4 = load i32, i32* @verbosity, align 4
  %5 = load i32, i32* @workFactor, align 4
  %call5 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, %struct._IO_FILE* %2, i32 %3, i32 %4, i32 %5)
  store i8* %call5, i8** %bzf, align 8
  %6 = load i32, i32* %bzerr, align 4
  %cmp = icmp ne i32 %6, 0
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  br label %errhandler

if.end7:                                          ; preds = %if.end4
  %7 = load i32, i32* @verbosity, align 4
  %cmp8 = icmp sge i32 %7, 2
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i64 0, i64 0))
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  br label %while.body

while.body:                                       ; preds = %if.end29, %if.end11
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call12 = call zeroext i8 @myfeof(%struct._IO_FILE* %9)
  %tobool13 = icmp ne i8 %call12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %while.body
  br label %while.end

if.end15:                                         ; preds = %while.body
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %ibuf, i64 0, i64 0
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call16 = call i64 @fread(i8* %arraydecay, i64 1, i64 5000, %struct._IO_FILE* %10)
  %conv = trunc i64 %call16 to i32
  store i32 %conv, i32* %nIbuf, align 4
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call17 = call i32 @ferror(%struct._IO_FILE* %11) #9
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end15
  br label %errhandler_io

if.end20:                                         ; preds = %if.end15
  %12 = load i32, i32* %nIbuf, align 4
  %cmp21 = icmp sgt i32 %12, 0
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end20
  %13 = load i8*, i8** %bzf, align 8
  %arraydecay24 = getelementptr inbounds [5000 x i8], [5000 x i8]* %ibuf, i64 0, i64 0
  %14 = load i32, i32* %nIbuf, align 4
  call void @BZ2_bzWrite(i32* %bzerr, i8* %13, i8* %arraydecay24, i32 %14)
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end20
  %15 = load i32, i32* %bzerr, align 4
  %cmp26 = icmp ne i32 %15, 0
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end25
  br label %errhandler

if.end29:                                         ; preds = %if.end25
  br label %while.body

while.end:                                        ; preds = %if.then14
  %16 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzWriteClose64(i32* %bzerr, i8* %16, i32 0, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %17 = load i32, i32* %bzerr, align 4
  %cmp30 = icmp ne i32 %17, 0
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %while.end
  br label %errhandler

if.end33:                                         ; preds = %while.end
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call34 = call i32 @ferror(%struct._IO_FILE* %18) #9
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end33
  br label %errhandler_io

if.end37:                                         ; preds = %if.end33
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call38 = call i32 @fflush(%struct._IO_FILE* %19)
  store i32 %call38, i32* %ret, align 4
  %20 = load i32, i32* %ret, align 4
  %cmp39 = icmp eq i32 %20, -1
  br i1 %cmp39, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end37
  br label %errhandler_io

if.end42:                                         ; preds = %if.end37
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %cmp43 = icmp ne %struct._IO_FILE* %21, %22
  br i1 %cmp43, label %if.then45, label %if.end51

if.then45:                                        ; preds = %if.end42
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %zStream.addr, align 8
  %call46 = call i32 @fclose(%struct._IO_FILE* %23)
  store i32 %call46, i32* %ret, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %24 = load i32, i32* %ret, align 4
  %cmp47 = icmp eq i32 %24, -1
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.then45
  br label %errhandler_io

if.end50:                                         ; preds = %if.then45
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end42
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call52 = call i32 @ferror(%struct._IO_FILE* %25) #9
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end51
  br label %errhandler_io

if.end55:                                         ; preds = %if.end51
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8
  %call56 = call i32 @fclose(%struct._IO_FILE* %26)
  store i32 %call56, i32* %ret, align 4
  %27 = load i32, i32* %ret, align 4
  %cmp57 = icmp eq i32 %27, -1
  br i1 %cmp57, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end55
  br label %errhandler_io

if.end60:                                         ; preds = %if.end55
  %28 = load i32, i32* @verbosity, align 4
  %cmp61 = icmp sge i32 %28, 1
  br i1 %cmp61, label %if.then63, label %if.end81

if.then63:                                        ; preds = %if.end60
  %29 = load i32, i32* %nbytes_in_lo32, align 4
  %cmp64 = icmp eq i32 %29, 0
  br i1 %cmp64, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then63
  %30 = load i32, i32* %nbytes_in_hi32, align 4
  %cmp66 = icmp eq i32 %30, 0
  br i1 %cmp66, label %if.then68, label %if.else

if.then68:                                        ; preds = %land.lhs.true
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0))
  br label %if.end80

if.else:                                          ; preds = %land.lhs.true, %if.then63
  %32 = load i32, i32* %nbytes_in_lo32, align 4
  %33 = load i32, i32* %nbytes_in_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_in, i32 %32, i32 %33)
  %34 = load i32, i32* %nbytes_out_lo32, align 4
  %35 = load i32, i32* %nbytes_out_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_out, i32 %34, i32 %35)
  %call70 = call double @uInt64_to_double(%struct.UInt64* %nbytes_in)
  store double %call70, double* %nbytes_in_d, align 8
  %call71 = call double @uInt64_to_double(%struct.UInt64* %nbytes_out)
  store double %call71, double* %nbytes_out_d, align 8
  %arraydecay72 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nin, i64 0, i64 0
  call void @uInt64_toAscii(i8* %arraydecay72, %struct.UInt64* %nbytes_in)
  %arraydecay73 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nout, i64 0, i64 0
  call void @uInt64_toAscii(i8* %arraydecay73, %struct.UInt64* %nbytes_out)
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load double, double* %nbytes_in_d, align 8
  %38 = load double, double* %nbytes_out_d, align 8
  %div = fdiv double %37, %38
  %39 = load double, double* %nbytes_out_d, align 8
  %mul = fmul double 8.000000e+00, %39
  %40 = load double, double* %nbytes_in_d, align 8
  %div74 = fdiv double %mul, %40
  %41 = load double, double* %nbytes_out_d, align 8
  %42 = load double, double* %nbytes_in_d, align 8
  %div75 = fdiv double %41, %42
  %sub = fsub double 1.000000e+00, %div75
  %mul76 = fmul double 1.000000e+02, %sub
  %arraydecay77 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nin, i64 0, i64 0
  %arraydecay78 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nout, i64 0, i64 0
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.75, i64 0, i64 0), double %div, double %div74, double %mul76, i8* %arraydecay77, i8* %arraydecay78)
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then68
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end60
  ret void

errhandler:                                       ; preds = %if.then32, %if.then28, %if.then6
  %43 = load i8*, i8** %bzf, align 8
  call void @BZ2_bzWriteClose64(i32* %bzerr_dummy, i8* %43, i32 1, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %44 = load i32, i32* %bzerr, align 4
  switch i32 %44, label %sw.default [
    i32 -9, label %sw.bb
    i32 -3, label %sw.bb82
    i32 -6, label %sw.bb83
  ]

sw.bb:                                            ; preds = %errhandler
  call void @configError() #12
  unreachable

sw.bb82:                                          ; preds = %errhandler
  call void @outOfMemory() #12
  unreachable

sw.bb83:                                          ; preds = %errhandler
  br label %errhandler_io

errhandler_io:                                    ; preds = %sw.bb83, %if.then59, %if.then54, %if.then49, %if.then41, %if.then36, %if.then19, %if.then3, %if.then
  call void @ioError() #12
  unreachable

sw.default:                                       ; preds = %errhandler
  call void @panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64* %n, i32 %lo32, i32 %hi32) #0 {
entry:
  %n.addr = alloca %struct.UInt64*, align 8
  %lo32.addr = alloca i32, align 4
  %hi32.addr = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %n.addr, align 8
  store i32 %lo32, i32* %lo32.addr, align 4
  store i32 %hi32, i32* %hi32.addr, align 4
  %0 = load i32, i32* %hi32.addr, align 4
  %shr = lshr i32 %0, 24
  %and = and i32 %shr, 255
  %conv = trunc i32 %and to i8
  %1 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 7
  store i8 %conv, i8* %arrayidx, align 1
  %2 = load i32, i32* %hi32.addr, align 4
  %shr1 = lshr i32 %2, 16
  %and2 = and i32 %shr1, 255
  %conv3 = trunc i32 %and2 to i8
  %3 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b4 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %3, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %b4, i64 0, i64 6
  store i8 %conv3, i8* %arrayidx5, align 1
  %4 = load i32, i32* %hi32.addr, align 4
  %shr6 = lshr i32 %4, 8
  %and7 = and i32 %shr6, 255
  %conv8 = trunc i32 %and7 to i8
  %5 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b9 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %5, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [8 x i8], [8 x i8]* %b9, i64 0, i64 5
  store i8 %conv8, i8* %arrayidx10, align 1
  %6 = load i32, i32* %hi32.addr, align 4
  %and11 = and i32 %6, 255
  %conv12 = trunc i32 %and11 to i8
  %7 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b13 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %7, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %b13, i64 0, i64 4
  store i8 %conv12, i8* %arrayidx14, align 1
  %8 = load i32, i32* %lo32.addr, align 4
  %shr15 = lshr i32 %8, 24
  %and16 = and i32 %shr15, 255
  %conv17 = trunc i32 %and16 to i8
  %9 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b18 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %9, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [8 x i8], [8 x i8]* %b18, i64 0, i64 3
  store i8 %conv17, i8* %arrayidx19, align 1
  %10 = load i32, i32* %lo32.addr, align 4
  %shr20 = lshr i32 %10, 16
  %and21 = and i32 %shr20, 255
  %conv22 = trunc i32 %and21 to i8
  %11 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b23 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %11, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %b23, i64 0, i64 2
  store i8 %conv22, i8* %arrayidx24, align 1
  %12 = load i32, i32* %lo32.addr, align 4
  %shr25 = lshr i32 %12, 8
  %and26 = and i32 %shr25, 255
  %conv27 = trunc i32 %and26 to i8
  %13 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b28 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %13, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [8 x i8], [8 x i8]* %b28, i64 0, i64 1
  store i8 %conv27, i8* %arrayidx29, align 1
  %14 = load i32, i32* %lo32.addr, align 4
  %and30 = and i32 %14, 255
  %conv31 = trunc i32 %and30 to i8
  %15 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b32 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %15, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [8 x i8], [8 x i8]* %b32, i64 0, i64 0
  store i8 %conv31, i8* %arrayidx33, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal double @uInt64_to_double(%struct.UInt64* %n) #0 {
entry:
  %n.addr = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  %base = alloca double, align 8
  %sum = alloca double, align 8
  store %struct.UInt64* %n, %struct.UInt64** %n.addr, align 8
  store double 1.000000e+00, double* %base, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double, double* %base, align 8
  %2 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %2, i32 0, i32 0
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = uitofp i8 %4 to double
  %mul = fmul double %1, %conv
  %5 = load double, double* %sum, align 8
  %add = fadd double %5, %mul
  store double %add, double* %sum, align 8
  %6 = load double, double* %base, align 8
  %mul1 = fmul double %6, 2.560000e+02
  store double %mul1, double* %base, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load double, double* %sum, align 8
  ret double %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uInt64_toAscii(i8* %outbuf, %struct.UInt64* %n) #0 {
entry:
  %outbuf.addr = alloca i8*, align 8
  %n.addr = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %buf = alloca [32 x i8], align 16
  %nBuf = alloca i32, align 4
  %n_copy = alloca %struct.UInt64, align 1
  store i8* %outbuf, i8** %outbuf.addr, align 8
  store %struct.UInt64* %n, %struct.UInt64** %n.addr, align 8
  store i32 0, i32* %nBuf, align 4
  %0 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %1 = bitcast %struct.UInt64* %n_copy to i8*
  %2 = bitcast %struct.UInt64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 8, i1 false)
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %call = call i32 @uInt64_qrm10(%struct.UInt64* %n_copy)
  store i32 %call, i32* %q, align 4
  %3 = load i32, i32* %q, align 4
  %add = add nsw i32 %3, 48
  %conv = trunc i32 %add to i8
  %4 = load i32, i32* %nBuf, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %5 = load i32, i32* %nBuf, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %nBuf, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %call1 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %n_copy)
  %tobool = icmp ne i8 %call1, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %outbuf.addr, align 8
  %7 = load i32, i32* %nBuf, align 4
  %idxprom2 = sext i32 %7 to i64
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2
  store i8 0, i8* %arrayidx3, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %nBuf, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %nBuf, align 4
  %11 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %10, %11
  %sub5 = sub nsw i32 %sub, 1
  %idxprom6 = sext i32 %sub5 to i64
  %arrayidx7 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom6
  %12 = load i8, i8* %arrayidx7, align 1
  %13 = load i8*, i8** %outbuf.addr, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %14 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 %idxprom8
  store i8 %12, i8* %arrayidx9, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64* %n) #0 {
entry:
  %n.addr = alloca %struct.UInt64*, align 8
  %rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %n.addr, align 8
  store i32 0, i32* %rem, align 4
  store i32 7, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %rem, align 4
  %mul = mul i32 %1, 256
  %2 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %2, i32 0, i32 0
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %add = add i32 %mul, %conv
  store i32 %add, i32* %tmp, align 4
  %5 = load i32, i32* %tmp, align 4
  %div = udiv i32 %5, 10
  %conv1 = trunc i32 %div to i8
  %6 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b2 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %6, i32 0, i32 0
  %7 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %b2, i64 0, i64 %idxprom3
  store i8 %conv1, i8* %arrayidx4, align 1
  %8 = load i32, i32* %tmp, align 4
  %rem5 = urem i32 %8, 10
  store i32 %rem5, i32* %rem, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %rem, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64* %n) #0 {
entry:
  %retval = alloca i8, align 1
  %n.addr = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %n.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.UInt64*, %struct.UInt64** %n.addr, align 8
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %1, i32 0, i32 0
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i8 0, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1
  br label %return

return:                                           ; preds = %for.end, %if.then
  %5 = load i8, i8* %retval, align 1
  ret i8 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.zzzz* @mkCell() #0 {
entry:
  %c = alloca %struct.zzzz*, align 8
  %call = call i8* @myMalloc(i32 16)
  %0 = bitcast i8* %call to %struct.zzzz*
  store %struct.zzzz* %0, %struct.zzzz** %c, align 8
  %1 = load %struct.zzzz*, %struct.zzzz** %c, align 8
  %name = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1, i32 0, i32 0
  store i8* null, i8** %name, align 8
  %2 = load %struct.zzzz*, %struct.zzzz** %c, align 8
  %link = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %link, align 8
  %3 = load %struct.zzzz*, %struct.zzzz** %c, align 8
  ret %struct.zzzz* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @myMalloc(i32 %n) #0 {
entry:
  %n.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #9
  store i8* %call, i8** %p, align 8
  %1 = load i8*, i8** %p, align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @outOfMemory() #12
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p, align 8
  ret i8* %2
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32 %errcode) #0 {
entry:
  %errcode.addr = alloca i32, align 4
  store i32 %errcode, i32* %errcode.addr, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1 = load i32, i32* %errcode.addr, align 4
  %call = call i8* @BZ2_bzlibVersion()
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([443 x i8], [443 x i8]* @.str.105, i64 0, i64 0), i32 %1, i8* %call)
  %2 = load i32, i32* %errcode.addr, align 4
  %cmp = icmp eq i32 %2, 1007
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([1057 x i8], [1057 x i8]* @.str.1.106, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @exit(i32 3) #11
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzlibVersion() #0 {
entry:
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.107, i64 0, i64 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %blockSize100k.addr = alloca i32, align 4
  %verbosity.addr = alloca i32, align 4
  %workFactor.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  store i32 %blockSize100k, i32* %blockSize100k.addr, align 4
  store i32 %verbosity, i32* %verbosity.addr, align 4
  store i32 %workFactor, i32* %workFactor.addr, align 4
  %call = call i32 @bz_config_ok()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -9, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %1 = load i32, i32* %blockSize100k.addr, align 4
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then8, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %blockSize100k.addr, align 4
  %cmp3 = icmp sgt i32 %2, 9
  br i1 %cmp3, label %if.then8, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %workFactor.addr, align 4
  %cmp5 = icmp slt i32 %3, 0
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, i32* %workFactor.addr, align 4
  %cmp7 = icmp sgt i32 %4, 250
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end9:                                          ; preds = %lor.lhs.false6
  %5 = load i32, i32* %workFactor.addr, align 4
  %cmp10 = icmp eq i32 %5, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  store i32 30, i32* %workFactor.addr, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end9
  %6 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %6, i32 0, i32 9
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %cmp13 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %8 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc15, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12
  %9 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %9, i32 0, i32 10
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %cmp17 = icmp eq void (i8*, i8*)* %10, null
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end16
  %11 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %11, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree19, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %12 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i32 0, i32 9
  %13 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc21, align 8
  %14 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 11
  %15 = load i8*, i8** %opaque, align 8
  %call22 = call i8* %13(i8* %15, i32 55768, i32 1)
  %16 = bitcast i8* %call22 to %struct.EState*
  store %struct.EState* %16, %struct.EState** %s, align 8
  %17 = load %struct.EState*, %struct.EState** %s, align 8
  %cmp23 = icmp eq %struct.EState* %17, null
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end20
  store i32 -3, i32* %retval, align 4
  br label %return

if.end25:                                         ; preds = %if.end20
  %18 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %19 = load %struct.EState*, %struct.EState** %s, align 8
  %strm26 = getelementptr inbounds %struct.EState, %struct.EState* %19, i32 0, i32 0
  store %struct.bz_stream* %18, %struct.bz_stream** %strm26, align 8
  %20 = load %struct.EState*, %struct.EState** %s, align 8
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 4
  store i32* null, i32** %arr1, align 8
  %21 = load %struct.EState*, %struct.EState** %s, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 5
  store i32* null, i32** %arr2, align 8
  %22 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 6
  store i32* null, i32** %ftab, align 8
  %23 = load i32, i32* %blockSize100k.addr, align 4
  %mul = mul nsw i32 100000, %23
  store i32 %mul, i32* %n, align 4
  %24 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %24, i32 0, i32 9
  %25 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc27, align 8
  %26 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque28 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %26, i32 0, i32 11
  %27 = load i8*, i8** %opaque28, align 8
  %28 = load i32, i32* %n, align 4
  %conv = sext i32 %28 to i64
  %mul29 = mul i64 %conv, 4
  %conv30 = trunc i64 %mul29 to i32
  %call31 = call i8* %25(i8* %27, i32 %conv30, i32 1)
  %29 = bitcast i8* %call31 to i32*
  %30 = load %struct.EState*, %struct.EState** %s, align 8
  %arr132 = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 4
  store i32* %29, i32** %arr132, align 8
  %31 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %31, i32 0, i32 9
  %32 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc33, align 8
  %33 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %33, i32 0, i32 11
  %34 = load i8*, i8** %opaque34, align 8
  %35 = load i32, i32* %n, align 4
  %add = add nsw i32 %35, 34
  %conv35 = sext i32 %add to i64
  %mul36 = mul i64 %conv35, 4
  %conv37 = trunc i64 %mul36 to i32
  %call38 = call i8* %32(i8* %34, i32 %conv37, i32 1)
  %36 = bitcast i8* %call38 to i32*
  %37 = load %struct.EState*, %struct.EState** %s, align 8
  %arr239 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32 5
  store i32* %36, i32** %arr239, align 8
  %38 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %38, i32 0, i32 9
  %39 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc40, align 8
  %40 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %40, i32 0, i32 11
  %41 = load i8*, i8** %opaque41, align 8
  %call42 = call i8* %39(i8* %41, i32 262148, i32 1)
  %42 = bitcast i8* %call42 to i32*
  %43 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab43 = getelementptr inbounds %struct.EState, %struct.EState* %43, i32 0, i32 6
  store i32* %42, i32** %ftab43, align 8
  %44 = load %struct.EState*, %struct.EState** %s, align 8
  %arr144 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 4
  %45 = load i32*, i32** %arr144, align 8
  %cmp45 = icmp eq i32* %45, null
  br i1 %cmp45, label %if.then55, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end25
  %46 = load %struct.EState*, %struct.EState** %s, align 8
  %arr248 = getelementptr inbounds %struct.EState, %struct.EState* %46, i32 0, i32 5
  %47 = load i32*, i32** %arr248, align 8
  %cmp49 = icmp eq i32* %47, null
  br i1 %cmp49, label %if.then55, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %48 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab52 = getelementptr inbounds %struct.EState, %struct.EState* %48, i32 0, i32 6
  %49 = load i32*, i32** %ftab52, align 8
  %cmp53 = icmp eq i32* %49, null
  br i1 %cmp53, label %if.then55, label %if.end86

if.then55:                                        ; preds = %lor.lhs.false51, %lor.lhs.false47, %if.end25
  %50 = load %struct.EState*, %struct.EState** %s, align 8
  %arr156 = getelementptr inbounds %struct.EState, %struct.EState* %50, i32 0, i32 4
  %51 = load i32*, i32** %arr156, align 8
  %cmp57 = icmp ne i32* %51, null
  br i1 %cmp57, label %if.then59, label %if.end63

if.then59:                                        ; preds = %if.then55
  %52 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree60 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %52, i32 0, i32 10
  %53 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree60, align 8
  %54 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque61 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %54, i32 0, i32 11
  %55 = load i8*, i8** %opaque61, align 8
  %56 = load %struct.EState*, %struct.EState** %s, align 8
  %arr162 = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 4
  %57 = load i32*, i32** %arr162, align 8
  %58 = bitcast i32* %57 to i8*
  call void %53(i8* %55, i8* %58)
  br label %if.end63

if.end63:                                         ; preds = %if.then59, %if.then55
  %59 = load %struct.EState*, %struct.EState** %s, align 8
  %arr264 = getelementptr inbounds %struct.EState, %struct.EState* %59, i32 0, i32 5
  %60 = load i32*, i32** %arr264, align 8
  %cmp65 = icmp ne i32* %60, null
  br i1 %cmp65, label %if.then67, label %if.end71

if.then67:                                        ; preds = %if.end63
  %61 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 10
  %62 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree68, align 8
  %63 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque69 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %63, i32 0, i32 11
  %64 = load i8*, i8** %opaque69, align 8
  %65 = load %struct.EState*, %struct.EState** %s, align 8
  %arr270 = getelementptr inbounds %struct.EState, %struct.EState* %65, i32 0, i32 5
  %66 = load i32*, i32** %arr270, align 8
  %67 = bitcast i32* %66 to i8*
  call void %62(i8* %64, i8* %67)
  br label %if.end71

if.end71:                                         ; preds = %if.then67, %if.end63
  %68 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab72 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 6
  %69 = load i32*, i32** %ftab72, align 8
  %cmp73 = icmp ne i32* %69, null
  br i1 %cmp73, label %if.then75, label %if.end79

if.then75:                                        ; preds = %if.end71
  %70 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree76 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %70, i32 0, i32 10
  %71 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree76, align 8
  %72 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %72, i32 0, i32 11
  %73 = load i8*, i8** %opaque77, align 8
  %74 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab78 = getelementptr inbounds %struct.EState, %struct.EState* %74, i32 0, i32 6
  %75 = load i32*, i32** %ftab78, align 8
  %76 = bitcast i32* %75 to i8*
  call void %71(i8* %73, i8* %76)
  br label %if.end79

if.end79:                                         ; preds = %if.then75, %if.end71
  %77 = load %struct.EState*, %struct.EState** %s, align 8
  %cmp80 = icmp ne %struct.EState* %77, null
  br i1 %cmp80, label %if.then82, label %if.end85

if.then82:                                        ; preds = %if.end79
  %78 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree83 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %78, i32 0, i32 10
  %79 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree83, align 8
  %80 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %80, i32 0, i32 11
  %81 = load i8*, i8** %opaque84, align 8
  %82 = load %struct.EState*, %struct.EState** %s, align 8
  %83 = bitcast %struct.EState* %82 to i8*
  call void %79(i8* %81, i8* %83)
  br label %if.end85

if.end85:                                         ; preds = %if.then82, %if.end79
  store i32 -3, i32* %retval, align 4
  br label %return

if.end86:                                         ; preds = %lor.lhs.false51
  %84 = load %struct.EState*, %struct.EState** %s, align 8
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %84, i32 0, i32 29
  store i32 0, i32* %blockNo, align 4
  %85 = load %struct.EState*, %struct.EState** %s, align 8
  %state = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 2
  store i32 2, i32* %state, align 4
  %86 = load %struct.EState*, %struct.EState** %s, align 8
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %86, i32 0, i32 1
  store i32 2, i32* %mode, align 8
  %87 = load %struct.EState*, %struct.EState** %s, align 8
  %combinedCRC = getelementptr inbounds %struct.EState, %struct.EState* %87, i32 0, i32 27
  store i32 0, i32* %combinedCRC, align 4
  %88 = load i32, i32* %blockSize100k.addr, align 4
  %89 = load %struct.EState*, %struct.EState** %s, align 8
  %blockSize100k87 = getelementptr inbounds %struct.EState, %struct.EState* %89, i32 0, i32 30
  store i32 %88, i32* %blockSize100k87, align 8
  %90 = load i32, i32* %blockSize100k.addr, align 4
  %mul88 = mul nsw i32 100000, %90
  %sub = sub nsw i32 %mul88, 19
  %91 = load %struct.EState*, %struct.EState** %s, align 8
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %91, i32 0, i32 18
  store i32 %sub, i32* %nblockMAX, align 8
  %92 = load i32, i32* %verbosity.addr, align 4
  %93 = load %struct.EState*, %struct.EState** %s, align 8
  %verbosity89 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 28
  store i32 %92, i32* %verbosity89, align 8
  %94 = load i32, i32* %workFactor.addr, align 4
  %95 = load %struct.EState*, %struct.EState** %s, align 8
  %workFactor90 = getelementptr inbounds %struct.EState, %struct.EState* %95, i32 0, i32 12
  store i32 %94, i32* %workFactor90, align 8
  %96 = load %struct.EState*, %struct.EState** %s, align 8
  %arr291 = getelementptr inbounds %struct.EState, %struct.EState* %96, i32 0, i32 5
  %97 = load i32*, i32** %arr291, align 8
  %98 = bitcast i32* %97 to i8*
  %99 = load %struct.EState*, %struct.EState** %s, align 8
  %block = getelementptr inbounds %struct.EState, %struct.EState* %99, i32 0, i32 9
  store i8* %98, i8** %block, align 8
  %100 = load %struct.EState*, %struct.EState** %s, align 8
  %arr192 = getelementptr inbounds %struct.EState, %struct.EState* %100, i32 0, i32 4
  %101 = load i32*, i32** %arr192, align 8
  %102 = bitcast i32* %101 to i16*
  %103 = load %struct.EState*, %struct.EState** %s, align 8
  %mtfv = getelementptr inbounds %struct.EState, %struct.EState* %103, i32 0, i32 10
  store i16* %102, i16** %mtfv, align 8
  %104 = load %struct.EState*, %struct.EState** %s, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %104, i32 0, i32 11
  store i8* null, i8** %zbits, align 8
  %105 = load %struct.EState*, %struct.EState** %s, align 8
  %arr193 = getelementptr inbounds %struct.EState, %struct.EState* %105, i32 0, i32 4
  %106 = load i32*, i32** %arr193, align 8
  %107 = load %struct.EState*, %struct.EState** %s, align 8
  %ptr = getelementptr inbounds %struct.EState, %struct.EState* %107, i32 0, i32 8
  store i32* %106, i32** %ptr, align 8
  %108 = load %struct.EState*, %struct.EState** %s, align 8
  %109 = bitcast %struct.EState* %108 to i8*
  %110 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state94 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %110, i32 0, i32 8
  store i8* %109, i8** %state94, align 8
  %111 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %111, i32 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4
  %112 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %112, i32 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8
  %113 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %113, i32 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4
  %114 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %114, i32 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8
  %115 = load %struct.EState*, %struct.EState** %s, align 8
  call void @init_RL(%struct.EState* %115)
  %116 = load %struct.EState*, %struct.EState** %s, align 8
  call void @prepare_new_block(%struct.EState* %116)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end86, %if.end85, %if.then24, %if.then8, %if.then
  %117 = load i32, i32* %retval, align 4
  ret i32 %117
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bz_config_ok() #0 {
entry:
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @default_bzalloc(i8* %opaque, i32 %items, i32 %size) #0 {
entry:
  %opaque.addr = alloca i8*, align 8
  %items.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %v = alloca i8*, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  store i32 %items, i32* %items.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  %0 = load i32, i32* %items.addr, align 4
  %1 = load i32, i32* %size.addr, align 4
  %mul = mul nsw i32 %0, %1
  %conv = sext i32 %mul to i64
  %call = call noalias i8* @malloc(i64 %conv) #9
  store i8* %call, i8** %v, align 8
  %2 = load i8*, i8** %v, align 8
  ret i8* %2
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @default_bzfree(i8* %opaque, i8* %addr) #0 {
entry:
  %opaque.addr = alloca i8*, align 8
  %addr.addr = alloca i8*, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  store i8* %addr, i8** %addr.addr, align 8
  %0 = load i8*, i8** %addr.addr, align 8
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8
  call void @free(i8* %1) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_RL(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 256, i32* %state_in_ch, align 4
  %1 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %1, i32 0, i32 14
  store i32 0, i32* %state_in_len, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prepare_new_block(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  store i32 0, i32* %nblock, align 4
  %1 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %1, i32 0, i32 19
  store i32 0, i32* %numZ, align 4
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 20
  store i32 0, i32* %state_out_pos, align 8
  %3 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 26
  store i32 -1, i32* %blockCRC, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 22
  %6 = load i32, i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 29
  %9 = load i32, i32* %blockNo, align 4
  %inc1 = add nsw i32 %9, 1
  store i32 %inc1, i32* %blockNo, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 %action) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %action.addr = alloca i32, align 4
  %progress = alloca i8, align 1
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  store i32 %action, i32* %action.addr, align 4
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1, i32 0, i32 8
  %2 = load i8*, i8** %state, align 8
  %3 = bitcast i8* %2 to %struct.EState*
  store %struct.EState* %3, %struct.EState** %s, align 8
  %4 = load %struct.EState*, %struct.EState** %s, align 8
  %cmp1 = icmp eq %struct.EState* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load %struct.EState*, %struct.EState** %s, align 8
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 0
  %6 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp5 = icmp ne %struct.bz_stream* %6, %7
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -2, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end3
  br label %preswitch

preswitch:                                        ; preds = %if.then18, %if.then13, %if.end7
  %8 = load %struct.EState*, %struct.EState** %s, align 8
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  %9 = load i32, i32* %mode, align 8
  switch i32 %9, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb8
    i32 3, label %sw.bb23
    i32 4, label %sw.bb47
  ]

sw.bb:                                            ; preds = %preswitch
  store i32 -1, i32* %retval, align 4
  br label %return

sw.bb8:                                           ; preds = %preswitch
  %10 = load i32, i32* %action.addr, align 4
  %cmp9 = icmp eq i32 %10, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %sw.bb8
  %11 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %call = call zeroext i8 @handle_compress(%struct.bz_stream* %11)
  store i8 %call, i8* %progress, align 1
  %12 = load i8, i8* %progress, align 1
  %conv = zext i8 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  %13 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 -2
  store i32 %cond, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %sw.bb8
  %14 = load i32, i32* %action.addr, align 4
  %cmp11 = icmp eq i32 %14, 1
  br i1 %cmp11, label %if.then13, label %if.else15

if.then13:                                        ; preds = %if.else
  %15 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %15, i32 0, i32 1
  %16 = load i32, i32* %avail_in, align 8
  %17 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 3
  store i32 %16, i32* %avail_in_expect, align 8
  %18 = load %struct.EState*, %struct.EState** %s, align 8
  %mode14 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 1
  store i32 3, i32* %mode14, align 8
  br label %preswitch

if.else15:                                        ; preds = %if.else
  %19 = load i32, i32* %action.addr, align 4
  %cmp16 = icmp eq i32 %19, 2
  br i1 %cmp16, label %if.then18, label %if.else22

if.then18:                                        ; preds = %if.else15
  %20 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %avail_in19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %20, i32 0, i32 1
  %21 = load i32, i32* %avail_in19, align 8
  %22 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect20 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 3
  store i32 %21, i32* %avail_in_expect20, align 8
  %23 = load %struct.EState*, %struct.EState** %s, align 8
  %mode21 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 1
  store i32 4, i32* %mode21, align 8
  br label %preswitch

if.else22:                                        ; preds = %if.else15
  store i32 -2, i32* %retval, align 4
  br label %return

sw.bb23:                                          ; preds = %preswitch
  %24 = load i32, i32* %action.addr, align 4
  %cmp24 = icmp ne i32 %24, 1
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %sw.bb23
  store i32 -1, i32* %retval, align 4
  br label %return

if.end27:                                         ; preds = %sw.bb23
  %25 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect28 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 3
  %26 = load i32, i32* %avail_in_expect28, align 8
  %27 = load %struct.EState*, %struct.EState** %s, align 8
  %strm29 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 0
  %28 = load %struct.bz_stream*, %struct.bz_stream** %strm29, align 8
  %avail_in30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %28, i32 0, i32 1
  %29 = load i32, i32* %avail_in30, align 8
  %cmp31 = icmp ne i32 %26, %29
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end27
  store i32 -1, i32* %retval, align 4
  br label %return

if.end34:                                         ; preds = %if.end27
  %30 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %call35 = call zeroext i8 @handle_compress(%struct.bz_stream* %30)
  store i8 %call35, i8* %progress, align 1
  %31 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect36 = getelementptr inbounds %struct.EState, %struct.EState* %31, i32 0, i32 3
  %32 = load i32, i32* %avail_in_expect36, align 8
  %cmp37 = icmp ugt i32 %32, 0
  br i1 %cmp37, label %if.then44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end34
  %33 = load %struct.EState*, %struct.EState** %s, align 8
  %call39 = call zeroext i8 @isempty_RL(%struct.EState* %33)
  %tobool40 = icmp ne i8 %call39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %if.then44

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %34 = load %struct.EState*, %struct.EState** %s, align 8
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32 20
  %35 = load i32, i32* %state_out_pos, align 8
  %36 = load %struct.EState*, %struct.EState** %s, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %36, i32 0, i32 19
  %37 = load i32, i32* %numZ, align 4
  %cmp42 = icmp slt i32 %35, %37
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %lor.lhs.false41, %lor.lhs.false, %if.end34
  store i32 2, i32* %retval, align 4
  br label %return

if.end45:                                         ; preds = %lor.lhs.false41
  %38 = load %struct.EState*, %struct.EState** %s, align 8
  %mode46 = getelementptr inbounds %struct.EState, %struct.EState* %38, i32 0, i32 1
  store i32 2, i32* %mode46, align 8
  store i32 1, i32* %retval, align 4
  br label %return

sw.bb47:                                          ; preds = %preswitch
  %39 = load i32, i32* %action.addr, align 4
  %cmp48 = icmp ne i32 %39, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %sw.bb47
  store i32 -1, i32* %retval, align 4
  br label %return

if.end51:                                         ; preds = %sw.bb47
  %40 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect52 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 3
  %41 = load i32, i32* %avail_in_expect52, align 8
  %42 = load %struct.EState*, %struct.EState** %s, align 8
  %strm53 = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 0
  %43 = load %struct.bz_stream*, %struct.bz_stream** %strm53, align 8
  %avail_in54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %43, i32 0, i32 1
  %44 = load i32, i32* %avail_in54, align 8
  %cmp55 = icmp ne i32 %41, %44
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end51
  store i32 -1, i32* %retval, align 4
  br label %return

if.end58:                                         ; preds = %if.end51
  %45 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %call59 = call zeroext i8 @handle_compress(%struct.bz_stream* %45)
  store i8 %call59, i8* %progress, align 1
  %46 = load i8, i8* %progress, align 1
  %tobool60 = icmp ne i8 %46, 0
  br i1 %tobool60, label %if.end62, label %if.then61

if.then61:                                        ; preds = %if.end58
  store i32 -1, i32* %retval, align 4
  br label %return

if.end62:                                         ; preds = %if.end58
  %47 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect63 = getelementptr inbounds %struct.EState, %struct.EState* %47, i32 0, i32 3
  %48 = load i32, i32* %avail_in_expect63, align 8
  %cmp64 = icmp ugt i32 %48, 0
  br i1 %cmp64, label %if.then74, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.end62
  %49 = load %struct.EState*, %struct.EState** %s, align 8
  %call67 = call zeroext i8 @isempty_RL(%struct.EState* %49)
  %tobool68 = icmp ne i8 %call67, 0
  br i1 %tobool68, label %lor.lhs.false69, label %if.then74

lor.lhs.false69:                                  ; preds = %lor.lhs.false66
  %50 = load %struct.EState*, %struct.EState** %s, align 8
  %state_out_pos70 = getelementptr inbounds %struct.EState, %struct.EState* %50, i32 0, i32 20
  %51 = load i32, i32* %state_out_pos70, align 8
  %52 = load %struct.EState*, %struct.EState** %s, align 8
  %numZ71 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 19
  %53 = load i32, i32* %numZ71, align 4
  %cmp72 = icmp slt i32 %51, %53
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %lor.lhs.false69, %lor.lhs.false66, %if.end62
  store i32 3, i32* %retval, align 4
  br label %return

if.end75:                                         ; preds = %lor.lhs.false69
  %54 = load %struct.EState*, %struct.EState** %s, align 8
  %mode76 = getelementptr inbounds %struct.EState, %struct.EState* %54, i32 0, i32 1
  store i32 1, i32* %mode76, align 8
  store i32 4, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %preswitch
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.end75, %if.then74, %if.then61, %if.then57, %if.then50, %if.end45, %if.then44, %if.then33, %if.then26, %if.else22, %if.then10, %sw.bb, %if.then6, %if.then2, %if.then
  %55 = load i32, i32* %retval, align 4
  ret i32 %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream* %strm) #0 {
entry:
  %strm.addr = alloca %struct.bz_stream*, align 8
  %progress_in = alloca i8, align 1
  %progress_out = alloca i8, align 1
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  store i8 0, i8* %progress_in, align 1
  store i8 0, i8* %progress_out, align 1
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %1 = load i8*, i8** %state, align 8
  %2 = bitcast i8* %1 to %struct.EState*
  store %struct.EState* %2, %struct.EState** %s, align 8
  br label %while.body

while.body:                                       ; preds = %if.end65, %entry
  %3 = load %struct.EState*, %struct.EState** %s, align 8
  %state1 = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 2
  %4 = load i32, i32* %state1, align 4
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %if.end30

if.then:                                          ; preds = %while.body
  %5 = load %struct.EState*, %struct.EState** %s, align 8
  %call = call zeroext i8 @copy_output_until_stop(%struct.EState* %5)
  %conv = zext i8 %call to i32
  %6 = load i8, i8* %progress_out, align 1
  %conv2 = zext i8 %6 to i32
  %or = or i32 %conv2, %conv
  %conv3 = trunc i32 %or to i8
  store i8 %conv3, i8* %progress_out, align 1
  %7 = load %struct.EState*, %struct.EState** %s, align 8
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 20
  %8 = load i32, i32* %state_out_pos, align 8
  %9 = load %struct.EState*, %struct.EState** %s, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 19
  %10 = load i32, i32* %numZ, align 4
  %cmp4 = icmp slt i32 %8, %10
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  br label %while.end

if.end:                                           ; preds = %if.then
  %11 = load %struct.EState*, %struct.EState** %s, align 8
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 1
  %12 = load i32, i32* %mode, align 8
  %cmp7 = icmp eq i32 %12, 4
  br i1 %cmp7, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 3
  %14 = load i32, i32* %avail_in_expect, align 8
  %cmp9 = icmp eq i32 %14, 0
  br i1 %cmp9, label %land.lhs.true11, label %if.end15

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.EState*, %struct.EState** %s, align 8
  %call12 = call zeroext i8 @isempty_RL(%struct.EState* %15)
  %conv13 = zext i8 %call12 to i32
  %tobool = icmp ne i32 %conv13, 0
  br i1 %tobool, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true11
  br label %while.end

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end
  %16 = load %struct.EState*, %struct.EState** %s, align 8
  call void @prepare_new_block(%struct.EState* %16)
  %17 = load %struct.EState*, %struct.EState** %s, align 8
  %state16 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 2
  store i32 2, i32* %state16, align 4
  %18 = load %struct.EState*, %struct.EState** %s, align 8
  %mode17 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 1
  %19 = load i32, i32* %mode17, align 8
  %cmp18 = icmp eq i32 %19, 3
  br i1 %cmp18, label %land.lhs.true20, label %if.end29

land.lhs.true20:                                  ; preds = %if.end15
  %20 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect21 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 3
  %21 = load i32, i32* %avail_in_expect21, align 8
  %cmp22 = icmp eq i32 %21, 0
  br i1 %cmp22, label %land.lhs.true24, label %if.end29

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %22 = load %struct.EState*, %struct.EState** %s, align 8
  %call25 = call zeroext i8 @isempty_RL(%struct.EState* %22)
  %conv26 = zext i8 %call25 to i32
  %tobool27 = icmp ne i32 %conv26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %land.lhs.true24
  br label %while.end

if.end29:                                         ; preds = %land.lhs.true24, %land.lhs.true20, %if.end15
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %while.body
  %23 = load %struct.EState*, %struct.EState** %s, align 8
  %state31 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 2
  %24 = load i32, i32* %state31, align 4
  %cmp32 = icmp eq i32 %24, 2
  br i1 %cmp32, label %if.then34, label %if.end65

if.then34:                                        ; preds = %if.end30
  %25 = load %struct.EState*, %struct.EState** %s, align 8
  %call35 = call zeroext i8 @copy_input_until_stop(%struct.EState* %25)
  %conv36 = zext i8 %call35 to i32
  %26 = load i8, i8* %progress_in, align 1
  %conv37 = zext i8 %26 to i32
  %or38 = or i32 %conv37, %conv36
  %conv39 = trunc i32 %or38 to i8
  store i8 %conv39, i8* %progress_in, align 1
  %27 = load %struct.EState*, %struct.EState** %s, align 8
  %mode40 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 1
  %28 = load i32, i32* %mode40, align 8
  %cmp41 = icmp ne i32 %28, 2
  br i1 %cmp41, label %land.lhs.true43, label %if.else

land.lhs.true43:                                  ; preds = %if.then34
  %29 = load %struct.EState*, %struct.EState** %s, align 8
  %avail_in_expect44 = getelementptr inbounds %struct.EState, %struct.EState* %29, i32 0, i32 3
  %30 = load i32, i32* %avail_in_expect44, align 8
  %cmp45 = icmp eq i32 %30, 0
  br i1 %cmp45, label %if.then47, label %if.else

if.then47:                                        ; preds = %land.lhs.true43
  %31 = load %struct.EState*, %struct.EState** %s, align 8
  call void @flush_RL(%struct.EState* %31)
  %32 = load %struct.EState*, %struct.EState** %s, align 8
  %33 = load %struct.EState*, %struct.EState** %s, align 8
  %mode48 = getelementptr inbounds %struct.EState, %struct.EState* %33, i32 0, i32 1
  %34 = load i32, i32* %mode48, align 8
  %cmp49 = icmp eq i32 %34, 4
  %conv50 = zext i1 %cmp49 to i32
  %conv51 = trunc i32 %conv50 to i8
  call void @BZ2_compressBlock(%struct.EState* %32, i8 zeroext %conv51)
  %35 = load %struct.EState*, %struct.EState** %s, align 8
  %state52 = getelementptr inbounds %struct.EState, %struct.EState* %35, i32 0, i32 2
  store i32 1, i32* %state52, align 4
  br label %if.end64

if.else:                                          ; preds = %land.lhs.true43, %if.then34
  %36 = load %struct.EState*, %struct.EState** %s, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %36, i32 0, i32 17
  %37 = load i32, i32* %nblock, align 4
  %38 = load %struct.EState*, %struct.EState** %s, align 8
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %38, i32 0, i32 18
  %39 = load i32, i32* %nblockMAX, align 8
  %cmp53 = icmp sge i32 %37, %39
  br i1 %cmp53, label %if.then55, label %if.else57

if.then55:                                        ; preds = %if.else
  %40 = load %struct.EState*, %struct.EState** %s, align 8
  call void @BZ2_compressBlock(%struct.EState* %40, i8 zeroext 0)
  %41 = load %struct.EState*, %struct.EState** %s, align 8
  %state56 = getelementptr inbounds %struct.EState, %struct.EState* %41, i32 0, i32 2
  store i32 1, i32* %state56, align 4
  br label %if.end63

if.else57:                                        ; preds = %if.else
  %42 = load %struct.EState*, %struct.EState** %s, align 8
  %strm58 = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 0
  %43 = load %struct.bz_stream*, %struct.bz_stream** %strm58, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %43, i32 0, i32 1
  %44 = load i32, i32* %avail_in, align 8
  %cmp59 = icmp eq i32 %44, 0
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.else57
  br label %while.end

if.end62:                                         ; preds = %if.else57
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then55
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then47
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end30
  br label %while.body

while.end:                                        ; preds = %if.then61, %if.then28, %if.then14, %if.then6
  %45 = load i8, i8* %progress_in, align 1
  %conv66 = zext i8 %45 to i32
  %tobool67 = icmp ne i32 %conv66, 0
  br i1 %tobool67, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.end
  %46 = load i8, i8* %progress_out, align 1
  %conv68 = zext i8 %46 to i32
  %tobool69 = icmp ne i32 %conv68, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.end
  %47 = phi i1 [ true, %while.end ], [ %tobool69, %lor.rhs ]
  %lor.ext = zext i1 %47 to i32
  %conv70 = trunc i32 %lor.ext to i8
  ret i8 %conv70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @isempty_RL(%struct.EState* %s) #0 {
entry:
  %retval = alloca i8, align 1
  %s.addr = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %1 = load i32, i32* %state_in_ch, align 4
  %cmp = icmp ult i32 %1, 256
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 14
  %3 = load i32, i32* %state_in_len, align 8
  %cmp1 = icmp sgt i32 %3, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  store i8 1, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %retval, align 1
  ret i8 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %progress_out = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i8 0, i8* %progress_out, align 1
  br label %while.body

while.body:                                       ; preds = %if.end19, %entry
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1, i32 0, i32 5
  %2 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %3 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 20
  %4 = load i32, i32* %state_out_pos, align 8
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 19
  %6 = load i32, i32* %numZ, align 4
  %cmp1 = icmp sge i32 %4, %6
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %while.end

if.end3:                                          ; preds = %if.end
  store i8 1, i8* %progress_out, align 1
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 11
  %8 = load i8*, i8** %zbits, align 8
  %9 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_out_pos4 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 20
  %10 = load i32, i32* %state_out_pos4, align 8
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1
  %12 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm5 = getelementptr inbounds %struct.EState, %struct.EState* %12, i32 0, i32 0
  %13 = load %struct.bz_stream*, %struct.bz_stream** %strm5, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %13, i32 0, i32 4
  %14 = load i8*, i8** %next_out, align 8
  store i8 %11, i8* %14, align 1
  %15 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_out_pos6 = getelementptr inbounds %struct.EState, %struct.EState* %15, i32 0, i32 20
  %16 = load i32, i32* %state_out_pos6, align 8
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %state_out_pos6, align 8
  %17 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm7 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 0
  %18 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %avail_out8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %18, i32 0, i32 5
  %19 = load i32, i32* %avail_out8, align 8
  %dec = add i32 %19, -1
  store i32 %dec, i32* %avail_out8, align 8
  %20 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm9 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 0
  %21 = load %struct.bz_stream*, %struct.bz_stream** %strm9, align 8
  %next_out10 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 4
  %22 = load i8*, i8** %next_out10, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr, i8** %next_out10, align 8
  %23 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm11 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 0
  %24 = load %struct.bz_stream*, %struct.bz_stream** %strm11, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %24, i32 0, i32 6
  %25 = load i32, i32* %total_out_lo32, align 4
  %inc12 = add i32 %25, 1
  store i32 %inc12, i32* %total_out_lo32, align 4
  %26 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm13 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 0
  %27 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %total_out_lo3214 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %27, i32 0, i32 6
  %28 = load i32, i32* %total_out_lo3214, align 4
  %cmp15 = icmp eq i32 %28, 0
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end3
  %29 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm17 = getelementptr inbounds %struct.EState, %struct.EState* %29, i32 0, i32 0
  %30 = load %struct.bz_stream*, %struct.bz_stream** %strm17, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %30, i32 0, i32 7
  %31 = load i32, i32* %total_out_hi32, align 8
  %inc18 = add i32 %31, 1
  store i32 %inc18, i32* %total_out_hi32, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.end3
  br label %while.body

while.end:                                        ; preds = %if.then2, %if.then
  %32 = load i8, i8* %progress_out, align 1
  ret i8 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %progress_in = alloca i8, align 1
  %zchh = alloca i32, align 4
  %ch = alloca i8, align 1
  %zchh77 = alloca i32, align 4
  %ch89 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i8 0, i8* %progress_in, align 1
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 1
  %1 = load i32, i32* %mode, align 8
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %if.else59

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end58, %if.then
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 17
  %3 = load i32, i32* %nblock, align 4
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 18
  %5 = load i32, i32* %nblockMAX, align 8
  %cmp1 = icmp sge i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 0
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 1
  %8 = load i32, i32* %avail_in, align 8
  %cmp3 = icmp eq i32 %8, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %while.end

if.end5:                                          ; preds = %if.end
  store i8 1, i8* %progress_in, align 1
  %9 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm6 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm6, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 0
  %11 = load i8*, i8** %next_in, align 8
  %12 = load i8, i8* %11, align 1
  %conv = zext i8 %12 to i32
  store i32 %conv, i32* %zchh, align 4
  %13 = load i32, i32* %zchh, align 4
  %14 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 13
  %15 = load i32, i32* %state_in_ch, align 4
  %cmp7 = icmp ne i32 %13, %15
  br i1 %cmp7, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end5
  %16 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 14
  %17 = load i32, i32* %state_in_len, align 8
  %cmp9 = icmp eq i32 %17, 1
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %land.lhs.true
  %18 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch12 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 13
  %19 = load i32, i32* %state_in_ch12, align 4
  %conv13 = trunc i32 %19 to i8
  store i8 %conv13, i8* %ch, align 1
  %20 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 26
  %21 = load i32, i32* %blockCRC, align 8
  %shl = shl i32 %21, 8
  %22 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC14 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 26
  %23 = load i32, i32* %blockCRC14, align 8
  %shr = lshr i32 %23, 24
  %24 = load i8, i8* %ch, align 1
  %conv15 = zext i8 %24 to i32
  %xor = xor i32 %shr, %conv15
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %25 = load i32, i32* %arrayidx, align 4
  %xor16 = xor i32 %shl, %25
  %26 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC17 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 26
  store i32 %xor16, i32* %blockCRC17, align 8
  %27 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 22
  %28 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch18 = getelementptr inbounds %struct.EState, %struct.EState* %28, i32 0, i32 13
  %29 = load i32, i32* %state_in_ch18, align 4
  %idxprom19 = zext i32 %29 to i64
  %arrayidx20 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom19
  store i8 1, i8* %arrayidx20, align 1
  %30 = load i8, i8* %ch, align 1
  %31 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block = getelementptr inbounds %struct.EState, %struct.EState* %31, i32 0, i32 9
  %32 = load i8*, i8** %block, align 8
  %33 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %33, i32 0, i32 17
  %34 = load i32, i32* %nblock21, align 4
  %idxprom22 = sext i32 %34 to i64
  %arrayidx23 = getelementptr inbounds i8, i8* %32, i64 %idxprom22
  store i8 %30, i8* %arrayidx23, align 1
  %35 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock24 = getelementptr inbounds %struct.EState, %struct.EState* %35, i32 0, i32 17
  %36 = load i32, i32* %nblock24, align 4
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %nblock24, align 4
  %37 = load i32, i32* %zchh, align 4
  %38 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch25 = getelementptr inbounds %struct.EState, %struct.EState* %38, i32 0, i32 13
  store i32 %37, i32* %state_in_ch25, align 4
  br label %if.end44

if.else:                                          ; preds = %land.lhs.true, %if.end5
  %39 = load i32, i32* %zchh, align 4
  %40 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch26 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 13
  %41 = load i32, i32* %state_in_ch26, align 4
  %cmp27 = icmp ne i32 %39, %41
  br i1 %cmp27, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %42 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len29 = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 14
  %43 = load i32, i32* %state_in_len29, align 8
  %cmp30 = icmp eq i32 %43, 255
  br i1 %cmp30, label %if.then32, label %if.else40

if.then32:                                        ; preds = %lor.lhs.false, %if.else
  %44 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch33 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 13
  %45 = load i32, i32* %state_in_ch33, align 4
  %cmp34 = icmp ult i32 %45, 256
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.then32
  %46 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @add_pair_to_block(%struct.EState* %46)
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.then32
  %47 = load i32, i32* %zchh, align 4
  %48 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch38 = getelementptr inbounds %struct.EState, %struct.EState* %48, i32 0, i32 13
  store i32 %47, i32* %state_in_ch38, align 4
  %49 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len39 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 14
  store i32 1, i32* %state_in_len39, align 8
  br label %if.end43

if.else40:                                        ; preds = %lor.lhs.false
  %50 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len41 = getelementptr inbounds %struct.EState, %struct.EState* %50, i32 0, i32 14
  %51 = load i32, i32* %state_in_len41, align 8
  %inc42 = add nsw i32 %51, 1
  store i32 %inc42, i32* %state_in_len41, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.end37
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then11
  %52 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm45 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 0
  %53 = load %struct.bz_stream*, %struct.bz_stream** %strm45, align 8
  %next_in46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %53, i32 0, i32 0
  %54 = load i8*, i8** %next_in46, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr, i8** %next_in46, align 8
  %55 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm47 = getelementptr inbounds %struct.EState, %struct.EState* %55, i32 0, i32 0
  %56 = load %struct.bz_stream*, %struct.bz_stream** %strm47, align 8
  %avail_in48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %56, i32 0, i32 1
  %57 = load i32, i32* %avail_in48, align 8
  %dec = add i32 %57, -1
  store i32 %dec, i32* %avail_in48, align 8
  %58 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm49 = getelementptr inbounds %struct.EState, %struct.EState* %58, i32 0, i32 0
  %59 = load %struct.bz_stream*, %struct.bz_stream** %strm49, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %59, i32 0, i32 2
  %60 = load i32, i32* %total_in_lo32, align 4
  %inc50 = add i32 %60, 1
  store i32 %inc50, i32* %total_in_lo32, align 4
  %61 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm51 = getelementptr inbounds %struct.EState, %struct.EState* %61, i32 0, i32 0
  %62 = load %struct.bz_stream*, %struct.bz_stream** %strm51, align 8
  %total_in_lo3252 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i32 0, i32 2
  %63 = load i32, i32* %total_in_lo3252, align 4
  %cmp53 = icmp eq i32 %63, 0
  br i1 %cmp53, label %if.then55, label %if.end58

if.then55:                                        ; preds = %if.end44
  %64 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm56 = getelementptr inbounds %struct.EState, %struct.EState* %64, i32 0, i32 0
  %65 = load %struct.bz_stream*, %struct.bz_stream** %strm56, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %65, i32 0, i32 3
  %66 = load i32, i32* %total_in_hi32, align 8
  %inc57 = add i32 %66, 1
  store i32 %inc57, i32* %total_in_hi32, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %if.end44
  br label %while.body

while.end:                                        ; preds = %if.then4, %if.then2
  br label %if.end155

if.else59:                                        ; preds = %entry
  br label %while.body60

while.body60:                                     ; preds = %if.end151, %if.else59
  %67 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock61 = getelementptr inbounds %struct.EState, %struct.EState* %67, i32 0, i32 17
  %68 = load i32, i32* %nblock61, align 4
  %69 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblockMAX62 = getelementptr inbounds %struct.EState, %struct.EState* %69, i32 0, i32 18
  %70 = load i32, i32* %nblockMAX62, align 8
  %cmp63 = icmp sge i32 %68, %70
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %while.body60
  br label %while.end154

if.end66:                                         ; preds = %while.body60
  %71 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm67 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 0
  %72 = load %struct.bz_stream*, %struct.bz_stream** %strm67, align 8
  %avail_in68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %72, i32 0, i32 1
  %73 = load i32, i32* %avail_in68, align 8
  %cmp69 = icmp eq i32 %73, 0
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end66
  br label %while.end154

if.end72:                                         ; preds = %if.end66
  %74 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %74, i32 0, i32 3
  %75 = load i32, i32* %avail_in_expect, align 8
  %cmp73 = icmp eq i32 %75, 0
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.end72
  br label %while.end154

if.end76:                                         ; preds = %if.end72
  store i8 1, i8* %progress_in, align 1
  %76 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm78 = getelementptr inbounds %struct.EState, %struct.EState* %76, i32 0, i32 0
  %77 = load %struct.bz_stream*, %struct.bz_stream** %strm78, align 8
  %next_in79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %77, i32 0, i32 0
  %78 = load i8*, i8** %next_in79, align 8
  %79 = load i8, i8* %78, align 1
  %conv80 = zext i8 %79 to i32
  store i32 %conv80, i32* %zchh77, align 4
  %80 = load i32, i32* %zchh77, align 4
  %81 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch81 = getelementptr inbounds %struct.EState, %struct.EState* %81, i32 0, i32 13
  %82 = load i32, i32* %state_in_ch81, align 4
  %cmp82 = icmp ne i32 %80, %82
  br i1 %cmp82, label %land.lhs.true84, label %if.else113

land.lhs.true84:                                  ; preds = %if.end76
  %83 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len85 = getelementptr inbounds %struct.EState, %struct.EState* %83, i32 0, i32 14
  %84 = load i32, i32* %state_in_len85, align 8
  %cmp86 = icmp eq i32 %84, 1
  br i1 %cmp86, label %if.then88, label %if.else113

if.then88:                                        ; preds = %land.lhs.true84
  %85 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch90 = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 13
  %86 = load i32, i32* %state_in_ch90, align 4
  %conv91 = trunc i32 %86 to i8
  store i8 %conv91, i8* %ch89, align 1
  %87 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC92 = getelementptr inbounds %struct.EState, %struct.EState* %87, i32 0, i32 26
  %88 = load i32, i32* %blockCRC92, align 8
  %shl93 = shl i32 %88, 8
  %89 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC94 = getelementptr inbounds %struct.EState, %struct.EState* %89, i32 0, i32 26
  %90 = load i32, i32* %blockCRC94, align 8
  %shr95 = lshr i32 %90, 24
  %91 = load i8, i8* %ch89, align 1
  %conv96 = zext i8 %91 to i32
  %xor97 = xor i32 %shr95, %conv96
  %idxprom98 = zext i32 %xor97 to i64
  %arrayidx99 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom98
  %92 = load i32, i32* %arrayidx99, align 4
  %xor100 = xor i32 %shl93, %92
  %93 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC101 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 26
  store i32 %xor100, i32* %blockCRC101, align 8
  %94 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse102 = getelementptr inbounds %struct.EState, %struct.EState* %94, i32 0, i32 22
  %95 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch103 = getelementptr inbounds %struct.EState, %struct.EState* %95, i32 0, i32 13
  %96 = load i32, i32* %state_in_ch103, align 4
  %idxprom104 = zext i32 %96 to i64
  %arrayidx105 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse102, i64 0, i64 %idxprom104
  store i8 1, i8* %arrayidx105, align 1
  %97 = load i8, i8* %ch89, align 1
  %98 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block106 = getelementptr inbounds %struct.EState, %struct.EState* %98, i32 0, i32 9
  %99 = load i8*, i8** %block106, align 8
  %100 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock107 = getelementptr inbounds %struct.EState, %struct.EState* %100, i32 0, i32 17
  %101 = load i32, i32* %nblock107, align 4
  %idxprom108 = sext i32 %101 to i64
  %arrayidx109 = getelementptr inbounds i8, i8* %99, i64 %idxprom108
  store i8 %97, i8* %arrayidx109, align 1
  %102 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock110 = getelementptr inbounds %struct.EState, %struct.EState* %102, i32 0, i32 17
  %103 = load i32, i32* %nblock110, align 4
  %inc111 = add nsw i32 %103, 1
  store i32 %inc111, i32* %nblock110, align 4
  %104 = load i32, i32* %zchh77, align 4
  %105 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch112 = getelementptr inbounds %struct.EState, %struct.EState* %105, i32 0, i32 13
  store i32 %104, i32* %state_in_ch112, align 4
  br label %if.end133

if.else113:                                       ; preds = %land.lhs.true84, %if.end76
  %106 = load i32, i32* %zchh77, align 4
  %107 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch114 = getelementptr inbounds %struct.EState, %struct.EState* %107, i32 0, i32 13
  %108 = load i32, i32* %state_in_ch114, align 4
  %cmp115 = icmp ne i32 %106, %108
  br i1 %cmp115, label %if.then121, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.else113
  %109 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len118 = getelementptr inbounds %struct.EState, %struct.EState* %109, i32 0, i32 14
  %110 = load i32, i32* %state_in_len118, align 8
  %cmp119 = icmp eq i32 %110, 255
  br i1 %cmp119, label %if.then121, label %if.else129

if.then121:                                       ; preds = %lor.lhs.false117, %if.else113
  %111 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch122 = getelementptr inbounds %struct.EState, %struct.EState* %111, i32 0, i32 13
  %112 = load i32, i32* %state_in_ch122, align 4
  %cmp123 = icmp ult i32 %112, 256
  br i1 %cmp123, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.then121
  %113 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @add_pair_to_block(%struct.EState* %113)
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %if.then121
  %114 = load i32, i32* %zchh77, align 4
  %115 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch127 = getelementptr inbounds %struct.EState, %struct.EState* %115, i32 0, i32 13
  store i32 %114, i32* %state_in_ch127, align 4
  %116 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len128 = getelementptr inbounds %struct.EState, %struct.EState* %116, i32 0, i32 14
  store i32 1, i32* %state_in_len128, align 8
  br label %if.end132

if.else129:                                       ; preds = %lor.lhs.false117
  %117 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len130 = getelementptr inbounds %struct.EState, %struct.EState* %117, i32 0, i32 14
  %118 = load i32, i32* %state_in_len130, align 8
  %inc131 = add nsw i32 %118, 1
  store i32 %inc131, i32* %state_in_len130, align 8
  br label %if.end132

if.end132:                                        ; preds = %if.else129, %if.end126
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then88
  %119 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm134 = getelementptr inbounds %struct.EState, %struct.EState* %119, i32 0, i32 0
  %120 = load %struct.bz_stream*, %struct.bz_stream** %strm134, align 8
  %next_in135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %120, i32 0, i32 0
  %121 = load i8*, i8** %next_in135, align 8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %incdec.ptr136, i8** %next_in135, align 8
  %122 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm137 = getelementptr inbounds %struct.EState, %struct.EState* %122, i32 0, i32 0
  %123 = load %struct.bz_stream*, %struct.bz_stream** %strm137, align 8
  %avail_in138 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %123, i32 0, i32 1
  %124 = load i32, i32* %avail_in138, align 8
  %dec139 = add i32 %124, -1
  store i32 %dec139, i32* %avail_in138, align 8
  %125 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm140 = getelementptr inbounds %struct.EState, %struct.EState* %125, i32 0, i32 0
  %126 = load %struct.bz_stream*, %struct.bz_stream** %strm140, align 8
  %total_in_lo32141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %126, i32 0, i32 2
  %127 = load i32, i32* %total_in_lo32141, align 4
  %inc142 = add i32 %127, 1
  store i32 %inc142, i32* %total_in_lo32141, align 4
  %128 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm143 = getelementptr inbounds %struct.EState, %struct.EState* %128, i32 0, i32 0
  %129 = load %struct.bz_stream*, %struct.bz_stream** %strm143, align 8
  %total_in_lo32144 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %129, i32 0, i32 2
  %130 = load i32, i32* %total_in_lo32144, align 4
  %cmp145 = icmp eq i32 %130, 0
  br i1 %cmp145, label %if.then147, label %if.end151

if.then147:                                       ; preds = %if.end133
  %131 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %strm148 = getelementptr inbounds %struct.EState, %struct.EState* %131, i32 0, i32 0
  %132 = load %struct.bz_stream*, %struct.bz_stream** %strm148, align 8
  %total_in_hi32149 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %132, i32 0, i32 3
  %133 = load i32, i32* %total_in_hi32149, align 8
  %inc150 = add i32 %133, 1
  store i32 %inc150, i32* %total_in_hi32149, align 8
  br label %if.end151

if.end151:                                        ; preds = %if.then147, %if.end133
  %134 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %avail_in_expect152 = getelementptr inbounds %struct.EState, %struct.EState* %134, i32 0, i32 3
  %135 = load i32, i32* %avail_in_expect152, align 8
  %dec153 = add i32 %135, -1
  store i32 %dec153, i32* %avail_in_expect152, align 8
  br label %while.body60

while.end154:                                     ; preds = %if.then75, %if.then71, %if.then65
  br label %if.end155

if.end155:                                        ; preds = %while.end154, %while.end
  %136 = load i8, i8* %progress_in, align 1
  ret i8 %136
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @flush_RL(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %1 = load i32, i32* %state_in_ch, align 4
  %cmp = icmp ult i32 %1, 256
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @add_pair_to_block(%struct.EState* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @init_RL(%struct.EState* %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_pair_to_block(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  %ch = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %1 = load i32, i32* %state_in_ch, align 4
  %conv = trunc i32 %1 to i8
  store i8 %conv, i8* %ch, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 14
  %4 = load i32, i32* %state_in_len, align 8
  %cmp = icmp slt i32 %2, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 26
  %6 = load i32, i32* %blockCRC, align 8
  %shl = shl i32 %6, 8
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC2 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 26
  %8 = load i32, i32* %blockCRC2, align 8
  %shr = lshr i32 %8, 24
  %9 = load i8, i8* %ch, align 1
  %conv3 = zext i8 %9 to i32
  %xor = xor i32 %shr, %conv3
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %xor4 = xor i32 %shl, %10
  %11 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC5 = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 26
  store i32 %xor4, i32* %blockCRC5, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %13 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 22
  %14 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_ch6 = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 13
  %15 = load i32, i32* %state_in_ch6, align 4
  %idxprom7 = zext i32 %15 to i64
  %arrayidx8 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom7
  store i8 1, i8* %arrayidx8, align 1
  %16 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len9 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 14
  %17 = load i32, i32* %state_in_len9, align 8
  switch i32 %17, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb27
  ]

sw.bb:                                            ; preds = %for.end
  %18 = load i8, i8* %ch, align 1
  %19 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block = getelementptr inbounds %struct.EState, %struct.EState* %19, i32 0, i32 9
  %20 = load i8*, i8** %block, align 8
  %21 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 17
  %22 = load i32, i32* %nblock, align 4
  %idxprom10 = sext i32 %22 to i64
  %arrayidx11 = getelementptr inbounds i8, i8* %20, i64 %idxprom10
  store i8 %18, i8* %arrayidx11, align 1
  %23 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock12 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 17
  %24 = load i32, i32* %nblock12, align 4
  %inc13 = add nsw i32 %24, 1
  store i32 %inc13, i32* %nblock12, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %for.end
  %25 = load i8, i8* %ch, align 1
  %26 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block15 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 9
  %27 = load i8*, i8** %block15, align 8
  %28 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock16 = getelementptr inbounds %struct.EState, %struct.EState* %28, i32 0, i32 17
  %29 = load i32, i32* %nblock16, align 4
  %idxprom17 = sext i32 %29 to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %27, i64 %idxprom17
  store i8 %25, i8* %arrayidx18, align 1
  %30 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock19 = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 17
  %31 = load i32, i32* %nblock19, align 4
  %inc20 = add nsw i32 %31, 1
  store i32 %inc20, i32* %nblock19, align 4
  %32 = load i8, i8* %ch, align 1
  %33 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block21 = getelementptr inbounds %struct.EState, %struct.EState* %33, i32 0, i32 9
  %34 = load i8*, i8** %block21, align 8
  %35 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock22 = getelementptr inbounds %struct.EState, %struct.EState* %35, i32 0, i32 17
  %36 = load i32, i32* %nblock22, align 4
  %idxprom23 = sext i32 %36 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %34, i64 %idxprom23
  store i8 %32, i8* %arrayidx24, align 1
  %37 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock25 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32 17
  %38 = load i32, i32* %nblock25, align 4
  %inc26 = add nsw i32 %38, 1
  store i32 %inc26, i32* %nblock25, align 4
  br label %sw.epilog

sw.bb27:                                          ; preds = %for.end
  %39 = load i8, i8* %ch, align 1
  %40 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block28 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 9
  %41 = load i8*, i8** %block28, align 8
  %42 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock29 = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 17
  %43 = load i32, i32* %nblock29, align 4
  %idxprom30 = sext i32 %43 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %41, i64 %idxprom30
  store i8 %39, i8* %arrayidx31, align 1
  %44 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock32 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 17
  %45 = load i32, i32* %nblock32, align 4
  %inc33 = add nsw i32 %45, 1
  store i32 %inc33, i32* %nblock32, align 4
  %46 = load i8, i8* %ch, align 1
  %47 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block34 = getelementptr inbounds %struct.EState, %struct.EState* %47, i32 0, i32 9
  %48 = load i8*, i8** %block34, align 8
  %49 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock35 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 17
  %50 = load i32, i32* %nblock35, align 4
  %idxprom36 = sext i32 %50 to i64
  %arrayidx37 = getelementptr inbounds i8, i8* %48, i64 %idxprom36
  store i8 %46, i8* %arrayidx37, align 1
  %51 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock38 = getelementptr inbounds %struct.EState, %struct.EState* %51, i32 0, i32 17
  %52 = load i32, i32* %nblock38, align 4
  %inc39 = add nsw i32 %52, 1
  store i32 %inc39, i32* %nblock38, align 4
  %53 = load i8, i8* %ch, align 1
  %54 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block40 = getelementptr inbounds %struct.EState, %struct.EState* %54, i32 0, i32 9
  %55 = load i8*, i8** %block40, align 8
  %56 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock41 = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 17
  %57 = load i32, i32* %nblock41, align 4
  %idxprom42 = sext i32 %57 to i64
  %arrayidx43 = getelementptr inbounds i8, i8* %55, i64 %idxprom42
  store i8 %53, i8* %arrayidx43, align 1
  %58 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock44 = getelementptr inbounds %struct.EState, %struct.EState* %58, i32 0, i32 17
  %59 = load i32, i32* %nblock44, align 4
  %inc45 = add nsw i32 %59, 1
  store i32 %inc45, i32* %nblock44, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  %60 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse46 = getelementptr inbounds %struct.EState, %struct.EState* %60, i32 0, i32 22
  %61 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len47 = getelementptr inbounds %struct.EState, %struct.EState* %61, i32 0, i32 14
  %62 = load i32, i32* %state_in_len47, align 8
  %sub = sub nsw i32 %62, 4
  %idxprom48 = sext i32 %sub to i64
  %arrayidx49 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse46, i64 0, i64 %idxprom48
  store i8 1, i8* %arrayidx49, align 1
  %63 = load i8, i8* %ch, align 1
  %64 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block50 = getelementptr inbounds %struct.EState, %struct.EState* %64, i32 0, i32 9
  %65 = load i8*, i8** %block50, align 8
  %66 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock51 = getelementptr inbounds %struct.EState, %struct.EState* %66, i32 0, i32 17
  %67 = load i32, i32* %nblock51, align 4
  %idxprom52 = sext i32 %67 to i64
  %arrayidx53 = getelementptr inbounds i8, i8* %65, i64 %idxprom52
  store i8 %63, i8* %arrayidx53, align 1
  %68 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock54 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 17
  %69 = load i32, i32* %nblock54, align 4
  %inc55 = add nsw i32 %69, 1
  store i32 %inc55, i32* %nblock54, align 4
  %70 = load i8, i8* %ch, align 1
  %71 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block56 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 9
  %72 = load i8*, i8** %block56, align 8
  %73 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock57 = getelementptr inbounds %struct.EState, %struct.EState* %73, i32 0, i32 17
  %74 = load i32, i32* %nblock57, align 4
  %idxprom58 = sext i32 %74 to i64
  %arrayidx59 = getelementptr inbounds i8, i8* %72, i64 %idxprom58
  store i8 %70, i8* %arrayidx59, align 1
  %75 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock60 = getelementptr inbounds %struct.EState, %struct.EState* %75, i32 0, i32 17
  %76 = load i32, i32* %nblock60, align 4
  %inc61 = add nsw i32 %76, 1
  store i32 %inc61, i32* %nblock60, align 4
  %77 = load i8, i8* %ch, align 1
  %78 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block62 = getelementptr inbounds %struct.EState, %struct.EState* %78, i32 0, i32 9
  %79 = load i8*, i8** %block62, align 8
  %80 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock63 = getelementptr inbounds %struct.EState, %struct.EState* %80, i32 0, i32 17
  %81 = load i32, i32* %nblock63, align 4
  %idxprom64 = sext i32 %81 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %79, i64 %idxprom64
  store i8 %77, i8* %arrayidx65, align 1
  %82 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock66 = getelementptr inbounds %struct.EState, %struct.EState* %82, i32 0, i32 17
  %83 = load i32, i32* %nblock66, align 4
  %inc67 = add nsw i32 %83, 1
  store i32 %inc67, i32* %nblock66, align 4
  %84 = load i8, i8* %ch, align 1
  %85 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block68 = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 9
  %86 = load i8*, i8** %block68, align 8
  %87 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock69 = getelementptr inbounds %struct.EState, %struct.EState* %87, i32 0, i32 17
  %88 = load i32, i32* %nblock69, align 4
  %idxprom70 = sext i32 %88 to i64
  %arrayidx71 = getelementptr inbounds i8, i8* %86, i64 %idxprom70
  store i8 %84, i8* %arrayidx71, align 1
  %89 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock72 = getelementptr inbounds %struct.EState, %struct.EState* %89, i32 0, i32 17
  %90 = load i32, i32* %nblock72, align 4
  %inc73 = add nsw i32 %90, 1
  store i32 %inc73, i32* %nblock72, align 4
  %91 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %state_in_len74 = getelementptr inbounds %struct.EState, %struct.EState* %91, i32 0, i32 14
  %92 = load i32, i32* %state_in_len74, align 8
  %sub75 = sub nsw i32 %92, 4
  %conv76 = trunc i32 %sub75 to i8
  %93 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block77 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 9
  %94 = load i8*, i8** %block77, align 8
  %95 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock78 = getelementptr inbounds %struct.EState, %struct.EState* %95, i32 0, i32 17
  %96 = load i32, i32* %nblock78, align 4
  %idxprom79 = sext i32 %96 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %94, i64 %idxprom79
  store i8 %conv76, i8* %arrayidx80, align 1
  %97 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock81 = getelementptr inbounds %struct.EState, %struct.EState* %97, i32 0, i32 17
  %98 = load i32, i32* %nblock81, align 4
  %inc82 = add nsw i32 %98, 1
  store i32 %inc82, i32* %nblock81, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb14, %sw.bb
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1, i32 0, i32 8
  %2 = load i8*, i8** %state, align 8
  %3 = bitcast i8* %2 to %struct.EState*
  store %struct.EState* %3, %struct.EState** %s, align 8
  %4 = load %struct.EState*, %struct.EState** %s, align 8
  %cmp1 = icmp eq %struct.EState* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load %struct.EState*, %struct.EState** %s, align 8
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 0
  %6 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp5 = icmp ne %struct.bz_stream* %6, %7
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -2, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.EState*, %struct.EState** %s, align 8
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 4
  %9 = load i32*, i32** %arr1, align 8
  %cmp8 = icmp ne i32* %9, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 10
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %12 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i32 0, i32 11
  %13 = load i8*, i8** %opaque, align 8
  %14 = load %struct.EState*, %struct.EState** %s, align 8
  %arr110 = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 4
  %15 = load i32*, i32** %arr110, align 8
  %16 = bitcast i32* %15 to i8*
  call void %11(i8* %13, i8* %16)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %17 = load %struct.EState*, %struct.EState** %s, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 5
  %18 = load i32*, i32** %arr2, align 8
  %cmp12 = icmp ne i32* %18, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end11
  %19 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %19, i32 0, i32 10
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8
  %21 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 11
  %22 = load i8*, i8** %opaque15, align 8
  %23 = load %struct.EState*, %struct.EState** %s, align 8
  %arr216 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 5
  %24 = load i32*, i32** %arr216, align 8
  %25 = bitcast i32* %24 to i8*
  call void %20(i8* %22, i8* %25)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %26 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 6
  %27 = load i32*, i32** %ftab, align 8
  %cmp18 = icmp ne i32* %27, null
  br i1 %cmp18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %28 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %28, i32 0, i32 10
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree20, align 8
  %30 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %30, i32 0, i32 11
  %31 = load i8*, i8** %opaque21, align 8
  %32 = load %struct.EState*, %struct.EState** %s, align 8
  %ftab22 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  %33 = load i32*, i32** %ftab22, align 8
  %34 = bitcast i32* %33 to i8*
  call void %29(i8* %31, i8* %34)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %35 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %35, i32 0, i32 10
  %36 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree24, align 8
  %37 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %37, i32 0, i32 11
  %38 = load i8*, i8** %opaque25, align 8
  %39 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %39, i32 0, i32 8
  %40 = load i8*, i8** %state26, align 8
  call void %36(i8* %38, i8* %40)
  %41 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %41, i32 0, i32 8
  store i8* null, i8** %state27, align 8
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end23, %if.then6, %if.then2, %if.then
  %42 = load i32, i32* %retval, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %verbosity.addr = alloca i32, align 4
  %small.addr = alloca i32, align 4
  %s = alloca %struct.DState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  store i32 %verbosity, i32* %verbosity.addr, align 4
  store i32 %small, i32* %small.addr, align 4
  %call = call i32 @bz_config_ok()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -9, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end2:                                          ; preds = %if.end
  %1 = load i32, i32* %small.addr, align 4
  %cmp3 = icmp ne i32 %1, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end2
  %2 = load i32, i32* %small.addr, align 4
  %cmp4 = icmp ne i32 %2, 1
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  store i32 -2, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end2
  %3 = load i32, i32* %verbosity.addr, align 4
  %cmp7 = icmp slt i32 %3, 0
  br i1 %cmp7, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %4 = load i32, i32* %verbosity.addr, align 4
  %cmp8 = icmp sgt i32 %4, 4
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  store i32 -2, i32* %retval, align 4
  br label %return

if.end10:                                         ; preds = %lor.lhs.false
  %5 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5, i32 0, i32 9
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %cmp11 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc13 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %8 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 10
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %cmp15 = icmp eq void (i8*, i8*)* %9, null
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree17, align 8
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %11 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzalloc19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %11, i32 0, i32 9
  %12 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc19, align 8
  %13 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %13, i32 0, i32 11
  %14 = load i8*, i8** %opaque, align 8
  %call20 = call i8* %12(i8* %14, i32 64144, i32 1)
  %15 = bitcast i8* %call20 to %struct.DState*
  store %struct.DState* %15, %struct.DState** %s, align 8
  %16 = load %struct.DState*, %struct.DState** %s, align 8
  %cmp21 = icmp eq %struct.DState* %16, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end18
  store i32 -3, i32* %retval, align 4
  br label %return

if.end23:                                         ; preds = %if.end18
  %17 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %18 = load %struct.DState*, %struct.DState** %s, align 8
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %18, i32 0, i32 0
  store %struct.bz_stream* %17, %struct.bz_stream** %strm24, align 8
  %19 = load %struct.DState*, %struct.DState** %s, align 8
  %20 = bitcast %struct.DState* %19 to i8*
  %21 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 8
  store i8* %20, i8** %state, align 8
  %22 = load %struct.DState*, %struct.DState** %s, align 8
  %state25 = getelementptr inbounds %struct.DState, %struct.DState* %22, i32 0, i32 1
  store i32 10, i32* %state25, align 8
  %23 = load %struct.DState*, %struct.DState** %s, align 8
  %bsLive = getelementptr inbounds %struct.DState, %struct.DState* %23, i32 0, i32 8
  store i32 0, i32* %bsLive, align 4
  %24 = load %struct.DState*, %struct.DState** %s, align 8
  %bsBuff = getelementptr inbounds %struct.DState, %struct.DState* %24, i32 0, i32 7
  store i32 0, i32* %bsBuff, align 8
  %25 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 26
  store i32 0, i32* %calculatedCombinedCRC, align 4
  %26 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %26, i32 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4
  %27 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %27, i32 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8
  %28 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %28, i32 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4
  %29 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8
  %30 = load i32, i32* %small.addr, align 4
  %conv = trunc i32 %30 to i8
  %31 = load %struct.DState*, %struct.DState** %s, align 8
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %31, i32 0, i32 10
  store i8 %conv, i8* %smallDecompress, align 4
  %32 = load %struct.DState*, %struct.DState** %s, align 8
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %32, i32 0, i32 22
  store i8* null, i8** %ll4, align 8
  %33 = load %struct.DState*, %struct.DState** %s, align 8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %33, i32 0, i32 21
  store i16* null, i16** %ll16, align 8
  %34 = load %struct.DState*, %struct.DState** %s, align 8
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %34, i32 0, i32 20
  store i32* null, i32** %tt, align 8
  %35 = load %struct.DState*, %struct.DState** %s, align 8
  %currBlockNo = getelementptr inbounds %struct.DState, %struct.DState* %35, i32 0, i32 11
  store i32 0, i32* %currBlockNo, align 8
  %36 = load i32, i32* %verbosity.addr, align 4
  %37 = load %struct.DState*, %struct.DState** %s, align 8
  %verbosity26 = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 12
  store i32 %36, i32* %verbosity26, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end23, %if.then22, %if.then9, %if.then5, %if.then1, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_indexIntoF(i32 %indx, i32* %cftab) #0 {
entry:
  %indx.addr = alloca i32, align 4
  %cftab.addr = alloca i32*, align 8
  %nb = alloca i32, align 4
  %na = alloca i32, align 4
  %mid = alloca i32, align 4
  store i32 %indx, i32* %indx.addr, align 4
  store i32* %cftab, i32** %cftab.addr, align 8
  store i32 0, i32* %nb, align 4
  store i32 256, i32* %na, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i32, i32* %nb, align 4
  %1 = load i32, i32* %na, align 4
  %add = add nsw i32 %0, %1
  %shr = ashr i32 %add, 1
  store i32 %shr, i32* %mid, align 4
  %2 = load i32, i32* %indx.addr, align 4
  %3 = load i32*, i32** %cftab.addr, align 8
  %4 = load i32, i32* %mid, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  %cmp = icmp sge i32 %2, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %6 = load i32, i32* %mid, align 4
  store i32 %6, i32* %nb, align 4
  br label %if.end

if.else:                                          ; preds = %do.body
  %7 = load i32, i32* %mid, align 4
  store i32 %7, i32* %na, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %8 = load i32, i32* %na, align 4
  %9 = load i32, i32* %nb, align 4
  %sub = sub nsw i32 %8, %9
  %cmp1 = icmp ne i32 %sub, 1
  br i1 %cmp1, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %10 = load i32, i32* %nb, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompress(%struct.bz_stream* %strm) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %corrupt = alloca i8, align 1
  %s = alloca %struct.DState*, align 8
  %r = alloca i32, align 4
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1, i32 0, i32 8
  %2 = load i8*, i8** %state, align 8
  %3 = bitcast i8* %2 to %struct.DState*
  store %struct.DState* %3, %struct.DState** %s, align 8
  %4 = load %struct.DState*, %struct.DState** %s, align 8
  %cmp1 = icmp eq %struct.DState* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load %struct.DState*, %struct.DState** %s, align 8
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %5, i32 0, i32 0
  %6 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp5 = icmp ne %struct.bz_stream* %6, %7
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -2, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end3
  br label %while.body

while.body:                                       ; preds = %if.end70, %if.end7
  %8 = load %struct.DState*, %struct.DState** %s, align 8
  %state8 = getelementptr inbounds %struct.DState, %struct.DState* %8, i32 0, i32 1
  %9 = load i32, i32* %state8, align 8
  %cmp9 = icmp eq i32 %9, 1
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %while.body
  store i32 -1, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %while.body
  %10 = load %struct.DState*, %struct.DState** %s, align 8
  %state12 = getelementptr inbounds %struct.DState, %struct.DState* %10, i32 0, i32 1
  %11 = load i32, i32* %state12, align 8
  %cmp13 = icmp eq i32 %11, 2
  br i1 %cmp13, label %if.then14, label %if.end47

if.then14:                                        ; preds = %if.end11
  %12 = load %struct.DState*, %struct.DState** %s, align 8
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %12, i32 0, i32 10
  %13 = load i8, i8* %smallDecompress, align 4
  %tobool = icmp ne i8 %13, 0
  br i1 %tobool, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.then14
  %14 = load %struct.DState*, %struct.DState** %s, align 8
  %call = call zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %14)
  store i8 %call, i8* %corrupt, align 1
  br label %if.end17

if.else:                                          ; preds = %if.then14
  %15 = load %struct.DState*, %struct.DState** %s, align 8
  %call16 = call zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %15)
  store i8 %call16, i8* %corrupt, align 1
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then15
  %16 = load i8, i8* %corrupt, align 1
  %tobool18 = icmp ne i8 %16, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  store i32 -4, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.end17
  %17 = load %struct.DState*, %struct.DState** %s, align 8
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %17, i32 0, i32 17
  %18 = load i32, i32* %nblock_used, align 4
  %19 = load %struct.DState*, %struct.DState** %s, align 8
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %19, i32 0, i32 51
  %20 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %20, 1
  %cmp21 = icmp eq i32 %18, %add
  br i1 %cmp21, label %land.lhs.true, label %if.else45

land.lhs.true:                                    ; preds = %if.end20
  %21 = load %struct.DState*, %struct.DState** %s, align 8
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %21, i32 0, i32 3
  %22 = load i32, i32* %state_out_len, align 8
  %cmp22 = icmp eq i32 %22, 0
  br i1 %cmp22, label %if.then23, label %if.else45

if.then23:                                        ; preds = %land.lhs.true
  %23 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %23, i32 0, i32 25
  %24 = load i32, i32* %calculatedBlockCRC, align 8
  %neg = xor i32 %24, -1
  %25 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedBlockCRC24 = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 25
  store i32 %neg, i32* %calculatedBlockCRC24, align 8
  %26 = load %struct.DState*, %struct.DState** %s, align 8
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %26, i32 0, i32 12
  %27 = load i32, i32* %verbosity, align 4
  %cmp25 = icmp sge i32 %27, 3
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.then23
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load %struct.DState*, %struct.DState** %s, align 8
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 23
  %30 = load i32, i32* %storedBlockCRC, align 8
  %31 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedBlockCRC27 = getelementptr inbounds %struct.DState, %struct.DState* %31, i32 0, i32 25
  %32 = load i32, i32* %calculatedBlockCRC27, align 8
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.108, i64 0, i64 0), i32 %30, i32 %32)
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %if.then23
  %33 = load %struct.DState*, %struct.DState** %s, align 8
  %verbosity30 = getelementptr inbounds %struct.DState, %struct.DState* %33, i32 0, i32 12
  %34 = load i32, i32* %verbosity30, align 4
  %cmp31 = icmp sge i32 %34, 2
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end29
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0))
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end29
  %36 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedBlockCRC35 = getelementptr inbounds %struct.DState, %struct.DState* %36, i32 0, i32 25
  %37 = load i32, i32* %calculatedBlockCRC35, align 8
  %38 = load %struct.DState*, %struct.DState** %s, align 8
  %storedBlockCRC36 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 23
  %39 = load i32, i32* %storedBlockCRC36, align 8
  %cmp37 = icmp ne i32 %37, %39
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end34
  store i32 -4, i32* %retval, align 4
  br label %return

if.end39:                                         ; preds = %if.end34
  %40 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %40, i32 0, i32 26
  %41 = load i32, i32* %calculatedCombinedCRC, align 4
  %shl = shl i32 %41, 1
  %42 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC40 = getelementptr inbounds %struct.DState, %struct.DState* %42, i32 0, i32 26
  %43 = load i32, i32* %calculatedCombinedCRC40, align 4
  %shr = lshr i32 %43, 31
  %or = or i32 %shl, %shr
  %44 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC41 = getelementptr inbounds %struct.DState, %struct.DState* %44, i32 0, i32 26
  store i32 %or, i32* %calculatedCombinedCRC41, align 4
  %45 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedBlockCRC42 = getelementptr inbounds %struct.DState, %struct.DState* %45, i32 0, i32 25
  %46 = load i32, i32* %calculatedBlockCRC42, align 8
  %47 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC43 = getelementptr inbounds %struct.DState, %struct.DState* %47, i32 0, i32 26
  %48 = load i32, i32* %calculatedCombinedCRC43, align 4
  %xor = xor i32 %48, %46
  store i32 %xor, i32* %calculatedCombinedCRC43, align 4
  %49 = load %struct.DState*, %struct.DState** %s, align 8
  %state44 = getelementptr inbounds %struct.DState, %struct.DState* %49, i32 0, i32 1
  store i32 14, i32* %state44, align 8
  br label %if.end46

if.else45:                                        ; preds = %land.lhs.true, %if.end20
  store i32 0, i32* %retval, align 4
  br label %return

if.end46:                                         ; preds = %if.end39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end11
  %50 = load %struct.DState*, %struct.DState** %s, align 8
  %state48 = getelementptr inbounds %struct.DState, %struct.DState* %50, i32 0, i32 1
  %51 = load i32, i32* %state48, align 8
  %cmp49 = icmp sge i32 %51, 10
  br i1 %cmp49, label %if.then50, label %if.end70

if.then50:                                        ; preds = %if.end47
  %52 = load %struct.DState*, %struct.DState** %s, align 8
  %call51 = call i32 @BZ2_decompress(%struct.DState* %52)
  store i32 %call51, i32* %r, align 4
  %53 = load i32, i32* %r, align 4
  %cmp52 = icmp eq i32 %53, 4
  br i1 %cmp52, label %if.then53, label %if.end65

if.then53:                                        ; preds = %if.then50
  %54 = load %struct.DState*, %struct.DState** %s, align 8
  %verbosity54 = getelementptr inbounds %struct.DState, %struct.DState* %54, i32 0, i32 12
  %55 = load i32, i32* %verbosity54, align 4
  %cmp55 = icmp sge i32 %55, 3
  br i1 %cmp55, label %if.then56, label %if.end59

if.then56:                                        ; preds = %if.then53
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = load %struct.DState*, %struct.DState** %s, align 8
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %57, i32 0, i32 24
  %58 = load i32, i32* %storedCombinedCRC, align 4
  %59 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC57 = getelementptr inbounds %struct.DState, %struct.DState* %59, i32 0, i32 26
  %60 = load i32, i32* %calculatedCombinedCRC57, align 4
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4.110, i64 0, i64 0), i32 %58, i32 %60)
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %if.then53
  %61 = load %struct.DState*, %struct.DState** %s, align 8
  %calculatedCombinedCRC60 = getelementptr inbounds %struct.DState, %struct.DState* %61, i32 0, i32 26
  %62 = load i32, i32* %calculatedCombinedCRC60, align 4
  %63 = load %struct.DState*, %struct.DState** %s, align 8
  %storedCombinedCRC61 = getelementptr inbounds %struct.DState, %struct.DState* %63, i32 0, i32 24
  %64 = load i32, i32* %storedCombinedCRC61, align 4
  %cmp62 = icmp ne i32 %62, %64
  br i1 %cmp62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.end59
  store i32 -4, i32* %retval, align 4
  br label %return

if.end64:                                         ; preds = %if.end59
  %65 = load i32, i32* %r, align 4
  store i32 %65, i32* %retval, align 4
  br label %return

if.end65:                                         ; preds = %if.then50
  %66 = load %struct.DState*, %struct.DState** %s, align 8
  %state66 = getelementptr inbounds %struct.DState, %struct.DState* %66, i32 0, i32 1
  %67 = load i32, i32* %state66, align 8
  %cmp67 = icmp ne i32 %67, 2
  br i1 %cmp67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end65
  %68 = load i32, i32* %r, align 4
  store i32 %68, i32* %retval, align 4
  br label %return

if.end69:                                         ; preds = %if.end65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end47
  br label %while.body

return:                                           ; preds = %if.then68, %if.end64, %if.then63, %if.else45, %if.then38, %if.then19, %if.then10, %if.then6, %if.then2, %if.then
  %69 = load i32, i32* %retval, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %s) #0 {
entry:
  %retval = alloca i8, align 1
  %s.addr = alloca %struct.DState*, align 8
  %k1 = alloca i8, align 1
  store %struct.DState* %s, %struct.DState** %s.addr, align 8
  %0 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %1 = load i8, i8* %blockRandomised, align 4
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end328, %if.then229, %if.then223, %if.then161, %if.then155, %if.then93, %if.then87, %if.then
  br label %while.body2

while.body2:                                      ; preds = %if.end26, %while.body
  %2 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm = getelementptr inbounds %struct.DState, %struct.DState* %2, i32 0, i32 0
  %3 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3, i32 0, i32 5
  %4 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %while.body2
  store i8 0, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %while.body2
  %5 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %5, i32 0, i32 3
  %6 = load i32, i32* %state_out_len, align 8
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  br label %while.end

if.end6:                                          ; preds = %if.end
  %7 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 2
  %8 = load i8, i8* %state_out_ch, align 4
  %9 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm7 = getelementptr inbounds %struct.DState, %struct.DState* %9, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 4
  %11 = load i8*, i8** %next_out, align 8
  store i8 %8, i8* %11, align 1
  %12 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %12, i32 0, i32 25
  %13 = load i32, i32* %calculatedBlockCRC, align 8
  %shl = shl i32 %13, 8
  %14 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC8 = getelementptr inbounds %struct.DState, %struct.DState* %14, i32 0, i32 25
  %15 = load i32, i32* %calculatedBlockCRC8, align 8
  %shr = lshr i32 %15, 24
  %16 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch9 = getelementptr inbounds %struct.DState, %struct.DState* %16, i32 0, i32 2
  %17 = load i8, i8* %state_out_ch9, align 4
  %conv = zext i8 %17 to i32
  %xor = xor i32 %shr, %conv
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %18 = load i32, i32* %arrayidx, align 4
  %xor10 = xor i32 %shl, %18
  %19 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC11 = getelementptr inbounds %struct.DState, %struct.DState* %19, i32 0, i32 25
  store i32 %xor10, i32* %calculatedBlockCRC11, align 8
  %20 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len12 = getelementptr inbounds %struct.DState, %struct.DState* %20, i32 0, i32 3
  %21 = load i32, i32* %state_out_len12, align 8
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %state_out_len12, align 8
  %22 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm13 = getelementptr inbounds %struct.DState, %struct.DState* %22, i32 0, i32 0
  %23 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %next_out14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %23, i32 0, i32 4
  %24 = load i8*, i8** %next_out14, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr, i8** %next_out14, align 8
  %25 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm15 = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 0
  %26 = load %struct.bz_stream*, %struct.bz_stream** %strm15, align 8
  %avail_out16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %26, i32 0, i32 5
  %27 = load i32, i32* %avail_out16, align 8
  %dec17 = add i32 %27, -1
  store i32 %dec17, i32* %avail_out16, align 8
  %28 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm18 = getelementptr inbounds %struct.DState, %struct.DState* %28, i32 0, i32 0
  %29 = load %struct.bz_stream*, %struct.bz_stream** %strm18, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 6
  %30 = load i32, i32* %total_out_lo32, align 4
  %inc = add i32 %30, 1
  store i32 %inc, i32* %total_out_lo32, align 4
  %31 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm19 = getelementptr inbounds %struct.DState, %struct.DState* %31, i32 0, i32 0
  %32 = load %struct.bz_stream*, %struct.bz_stream** %strm19, align 8
  %total_out_lo3220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %32, i32 0, i32 6
  %33 = load i32, i32* %total_out_lo3220, align 4
  %cmp21 = icmp eq i32 %33, 0
  br i1 %cmp21, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end6
  %34 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %34, i32 0, i32 0
  %35 = load %struct.bz_stream*, %struct.bz_stream** %strm24, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %35, i32 0, i32 7
  %36 = load i32, i32* %total_out_hi32, align 8
  %inc25 = add i32 %36, 1
  store i32 %inc25, i32* %total_out_hi32, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end6
  br label %while.body2

while.end:                                        ; preds = %if.then5
  %37 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 17
  %38 = load i32, i32* %nblock_used, align 4
  %39 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %39, i32 0, i32 51
  %40 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %40, 1
  %cmp27 = icmp eq i32 %38, %add
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.end
  store i8 0, i8* %retval, align 1
  br label %return

if.end30:                                         ; preds = %while.end
  %41 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used31 = getelementptr inbounds %struct.DState, %struct.DState* %41, i32 0, i32 17
  %42 = load i32, i32* %nblock_used31, align 4
  %43 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock32 = getelementptr inbounds %struct.DState, %struct.DState* %43, i32 0, i32 51
  %44 = load i32, i32* %save_nblock32, align 8
  %add33 = add nsw i32 %44, 1
  %cmp34 = icmp sgt i32 %42, %add33
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end30
  store i8 1, i8* %retval, align 1
  br label %return

if.end37:                                         ; preds = %if.end30
  %45 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len38 = getelementptr inbounds %struct.DState, %struct.DState* %45, i32 0, i32 3
  store i32 1, i32* %state_out_len38, align 8
  %46 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %46, i32 0, i32 15
  %47 = load i32, i32* %k0, align 8
  %conv39 = trunc i32 %47 to i8
  %48 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch40 = getelementptr inbounds %struct.DState, %struct.DState* %48, i32 0, i32 2
  store i8 %conv39, i8* %state_out_ch40, align 4
  %49 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %49, i32 0, i32 14
  %50 = load i32, i32* %tPos, align 4
  %51 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab = getelementptr inbounds %struct.DState, %struct.DState* %51, i32 0, i32 18
  %arraydecay = getelementptr inbounds [257 x i32], [257 x i32]* %cftab, i64 0, i64 0
  %call = call i32 @BZ2_indexIntoF(i32 %50, i32* %arraydecay)
  %conv41 = trunc i32 %call to i8
  store i8 %conv41, i8* %k1, align 1
  %52 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %52, i32 0, i32 21
  %53 = load i16*, i16** %ll16, align 8
  %54 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos42 = getelementptr inbounds %struct.DState, %struct.DState* %54, i32 0, i32 14
  %55 = load i32, i32* %tPos42, align 4
  %idxprom43 = zext i32 %55 to i64
  %arrayidx44 = getelementptr inbounds i16, i16* %53, i64 %idxprom43
  %56 = load i16, i16* %arrayidx44, align 2
  %conv45 = zext i16 %56 to i32
  %57 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %57, i32 0, i32 22
  %58 = load i8*, i8** %ll4, align 8
  %59 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos46 = getelementptr inbounds %struct.DState, %struct.DState* %59, i32 0, i32 14
  %60 = load i32, i32* %tPos46, align 4
  %shr47 = lshr i32 %60, 1
  %idxprom48 = zext i32 %shr47 to i64
  %arrayidx49 = getelementptr inbounds i8, i8* %58, i64 %idxprom48
  %61 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %61 to i32
  %62 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos51 = getelementptr inbounds %struct.DState, %struct.DState* %62, i32 0, i32 14
  %63 = load i32, i32* %tPos51, align 4
  %shl52 = shl i32 %63, 2
  %and = and i32 %shl52, 4
  %shr53 = lshr i32 %conv50, %and
  %and54 = and i32 %shr53, 15
  %shl55 = shl i32 %and54, 16
  %or = or i32 %conv45, %shl55
  %64 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos56 = getelementptr inbounds %struct.DState, %struct.DState* %64, i32 0, i32 14
  store i32 %or, i32* %tPos56, align 4
  %65 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %65, i32 0, i32 5
  %66 = load i32, i32* %rNToGo, align 8
  %cmp57 = icmp eq i32 %66, 0
  br i1 %cmp57, label %if.then59, label %if.end71

if.then59:                                        ; preds = %if.end37
  %67 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %67, i32 0, i32 6
  %68 = load i32, i32* %rTPos, align 4
  %idxprom60 = sext i32 %68 to i64
  %arrayidx61 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom60
  %69 = load i32, i32* %arrayidx61, align 4
  %70 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo62 = getelementptr inbounds %struct.DState, %struct.DState* %70, i32 0, i32 5
  store i32 %69, i32* %rNToGo62, align 8
  %71 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos63 = getelementptr inbounds %struct.DState, %struct.DState* %71, i32 0, i32 6
  %72 = load i32, i32* %rTPos63, align 4
  %inc64 = add nsw i32 %72, 1
  store i32 %inc64, i32* %rTPos63, align 4
  %73 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos65 = getelementptr inbounds %struct.DState, %struct.DState* %73, i32 0, i32 6
  %74 = load i32, i32* %rTPos65, align 4
  %cmp66 = icmp eq i32 %74, 512
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.then59
  %75 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos69 = getelementptr inbounds %struct.DState, %struct.DState* %75, i32 0, i32 6
  store i32 0, i32* %rTPos69, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.then59
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end37
  %76 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo72 = getelementptr inbounds %struct.DState, %struct.DState* %76, i32 0, i32 5
  %77 = load i32, i32* %rNToGo72, align 8
  %dec73 = add nsw i32 %77, -1
  store i32 %dec73, i32* %rNToGo72, align 8
  %78 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo74 = getelementptr inbounds %struct.DState, %struct.DState* %78, i32 0, i32 5
  %79 = load i32, i32* %rNToGo74, align 8
  %cmp75 = icmp eq i32 %79, 1
  %80 = zext i1 %cmp75 to i64
  %cond = select i1 %cmp75, i32 1, i32 0
  %81 = load i8, i8* %k1, align 1
  %conv77 = zext i8 %81 to i32
  %xor78 = xor i32 %conv77, %cond
  %conv79 = trunc i32 %xor78 to i8
  store i8 %conv79, i8* %k1, align 1
  %82 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used80 = getelementptr inbounds %struct.DState, %struct.DState* %82, i32 0, i32 17
  %83 = load i32, i32* %nblock_used80, align 4
  %inc81 = add nsw i32 %83, 1
  store i32 %inc81, i32* %nblock_used80, align 4
  %84 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used82 = getelementptr inbounds %struct.DState, %struct.DState* %84, i32 0, i32 17
  %85 = load i32, i32* %nblock_used82, align 4
  %86 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock83 = getelementptr inbounds %struct.DState, %struct.DState* %86, i32 0, i32 51
  %87 = load i32, i32* %save_nblock83, align 8
  %add84 = add nsw i32 %87, 1
  %cmp85 = icmp eq i32 %85, %add84
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end71
  br label %while.body

if.end88:                                         ; preds = %if.end71
  %88 = load i8, i8* %k1, align 1
  %conv89 = zext i8 %88 to i32
  %89 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k090 = getelementptr inbounds %struct.DState, %struct.DState* %89, i32 0, i32 15
  %90 = load i32, i32* %k090, align 8
  %cmp91 = icmp ne i32 %conv89, %90
  br i1 %cmp91, label %if.then93, label %if.end96

if.then93:                                        ; preds = %if.end88
  %91 = load i8, i8* %k1, align 1
  %conv94 = zext i8 %91 to i32
  %92 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k095 = getelementptr inbounds %struct.DState, %struct.DState* %92, i32 0, i32 15
  store i32 %conv94, i32* %k095, align 8
  br label %while.body

if.end96:                                         ; preds = %if.end88
  %93 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len97 = getelementptr inbounds %struct.DState, %struct.DState* %93, i32 0, i32 3
  store i32 2, i32* %state_out_len97, align 8
  %94 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos98 = getelementptr inbounds %struct.DState, %struct.DState* %94, i32 0, i32 14
  %95 = load i32, i32* %tPos98, align 4
  %96 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab99 = getelementptr inbounds %struct.DState, %struct.DState* %96, i32 0, i32 18
  %arraydecay100 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab99, i64 0, i64 0
  %call101 = call i32 @BZ2_indexIntoF(i32 %95, i32* %arraydecay100)
  %conv102 = trunc i32 %call101 to i8
  store i8 %conv102, i8* %k1, align 1
  %97 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16103 = getelementptr inbounds %struct.DState, %struct.DState* %97, i32 0, i32 21
  %98 = load i16*, i16** %ll16103, align 8
  %99 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos104 = getelementptr inbounds %struct.DState, %struct.DState* %99, i32 0, i32 14
  %100 = load i32, i32* %tPos104, align 4
  %idxprom105 = zext i32 %100 to i64
  %arrayidx106 = getelementptr inbounds i16, i16* %98, i64 %idxprom105
  %101 = load i16, i16* %arrayidx106, align 2
  %conv107 = zext i16 %101 to i32
  %102 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4108 = getelementptr inbounds %struct.DState, %struct.DState* %102, i32 0, i32 22
  %103 = load i8*, i8** %ll4108, align 8
  %104 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos109 = getelementptr inbounds %struct.DState, %struct.DState* %104, i32 0, i32 14
  %105 = load i32, i32* %tPos109, align 4
  %shr110 = lshr i32 %105, 1
  %idxprom111 = zext i32 %shr110 to i64
  %arrayidx112 = getelementptr inbounds i8, i8* %103, i64 %idxprom111
  %106 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %106 to i32
  %107 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos114 = getelementptr inbounds %struct.DState, %struct.DState* %107, i32 0, i32 14
  %108 = load i32, i32* %tPos114, align 4
  %shl115 = shl i32 %108, 2
  %and116 = and i32 %shl115, 4
  %shr117 = lshr i32 %conv113, %and116
  %and118 = and i32 %shr117, 15
  %shl119 = shl i32 %and118, 16
  %or120 = or i32 %conv107, %shl119
  %109 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos121 = getelementptr inbounds %struct.DState, %struct.DState* %109, i32 0, i32 14
  store i32 %or120, i32* %tPos121, align 4
  %110 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo122 = getelementptr inbounds %struct.DState, %struct.DState* %110, i32 0, i32 5
  %111 = load i32, i32* %rNToGo122, align 8
  %cmp123 = icmp eq i32 %111, 0
  br i1 %cmp123, label %if.then125, label %if.end138

if.then125:                                       ; preds = %if.end96
  %112 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos126 = getelementptr inbounds %struct.DState, %struct.DState* %112, i32 0, i32 6
  %113 = load i32, i32* %rTPos126, align 4
  %idxprom127 = sext i32 %113 to i64
  %arrayidx128 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom127
  %114 = load i32, i32* %arrayidx128, align 4
  %115 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo129 = getelementptr inbounds %struct.DState, %struct.DState* %115, i32 0, i32 5
  store i32 %114, i32* %rNToGo129, align 8
  %116 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos130 = getelementptr inbounds %struct.DState, %struct.DState* %116, i32 0, i32 6
  %117 = load i32, i32* %rTPos130, align 4
  %inc131 = add nsw i32 %117, 1
  store i32 %inc131, i32* %rTPos130, align 4
  %118 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos132 = getelementptr inbounds %struct.DState, %struct.DState* %118, i32 0, i32 6
  %119 = load i32, i32* %rTPos132, align 4
  %cmp133 = icmp eq i32 %119, 512
  br i1 %cmp133, label %if.then135, label %if.end137

if.then135:                                       ; preds = %if.then125
  %120 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos136 = getelementptr inbounds %struct.DState, %struct.DState* %120, i32 0, i32 6
  store i32 0, i32* %rTPos136, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.then125
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end96
  %121 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo139 = getelementptr inbounds %struct.DState, %struct.DState* %121, i32 0, i32 5
  %122 = load i32, i32* %rNToGo139, align 8
  %dec140 = add nsw i32 %122, -1
  store i32 %dec140, i32* %rNToGo139, align 8
  %123 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo141 = getelementptr inbounds %struct.DState, %struct.DState* %123, i32 0, i32 5
  %124 = load i32, i32* %rNToGo141, align 8
  %cmp142 = icmp eq i32 %124, 1
  %125 = zext i1 %cmp142 to i64
  %cond144 = select i1 %cmp142, i32 1, i32 0
  %126 = load i8, i8* %k1, align 1
  %conv145 = zext i8 %126 to i32
  %xor146 = xor i32 %conv145, %cond144
  %conv147 = trunc i32 %xor146 to i8
  store i8 %conv147, i8* %k1, align 1
  %127 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used148 = getelementptr inbounds %struct.DState, %struct.DState* %127, i32 0, i32 17
  %128 = load i32, i32* %nblock_used148, align 4
  %inc149 = add nsw i32 %128, 1
  store i32 %inc149, i32* %nblock_used148, align 4
  %129 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used150 = getelementptr inbounds %struct.DState, %struct.DState* %129, i32 0, i32 17
  %130 = load i32, i32* %nblock_used150, align 4
  %131 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock151 = getelementptr inbounds %struct.DState, %struct.DState* %131, i32 0, i32 51
  %132 = load i32, i32* %save_nblock151, align 8
  %add152 = add nsw i32 %132, 1
  %cmp153 = icmp eq i32 %130, %add152
  br i1 %cmp153, label %if.then155, label %if.end156

if.then155:                                       ; preds = %if.end138
  br label %while.body

if.end156:                                        ; preds = %if.end138
  %133 = load i8, i8* %k1, align 1
  %conv157 = zext i8 %133 to i32
  %134 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0158 = getelementptr inbounds %struct.DState, %struct.DState* %134, i32 0, i32 15
  %135 = load i32, i32* %k0158, align 8
  %cmp159 = icmp ne i32 %conv157, %135
  br i1 %cmp159, label %if.then161, label %if.end164

if.then161:                                       ; preds = %if.end156
  %136 = load i8, i8* %k1, align 1
  %conv162 = zext i8 %136 to i32
  %137 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0163 = getelementptr inbounds %struct.DState, %struct.DState* %137, i32 0, i32 15
  store i32 %conv162, i32* %k0163, align 8
  br label %while.body

if.end164:                                        ; preds = %if.end156
  %138 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len165 = getelementptr inbounds %struct.DState, %struct.DState* %138, i32 0, i32 3
  store i32 3, i32* %state_out_len165, align 8
  %139 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos166 = getelementptr inbounds %struct.DState, %struct.DState* %139, i32 0, i32 14
  %140 = load i32, i32* %tPos166, align 4
  %141 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab167 = getelementptr inbounds %struct.DState, %struct.DState* %141, i32 0, i32 18
  %arraydecay168 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab167, i64 0, i64 0
  %call169 = call i32 @BZ2_indexIntoF(i32 %140, i32* %arraydecay168)
  %conv170 = trunc i32 %call169 to i8
  store i8 %conv170, i8* %k1, align 1
  %142 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16171 = getelementptr inbounds %struct.DState, %struct.DState* %142, i32 0, i32 21
  %143 = load i16*, i16** %ll16171, align 8
  %144 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos172 = getelementptr inbounds %struct.DState, %struct.DState* %144, i32 0, i32 14
  %145 = load i32, i32* %tPos172, align 4
  %idxprom173 = zext i32 %145 to i64
  %arrayidx174 = getelementptr inbounds i16, i16* %143, i64 %idxprom173
  %146 = load i16, i16* %arrayidx174, align 2
  %conv175 = zext i16 %146 to i32
  %147 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4176 = getelementptr inbounds %struct.DState, %struct.DState* %147, i32 0, i32 22
  %148 = load i8*, i8** %ll4176, align 8
  %149 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos177 = getelementptr inbounds %struct.DState, %struct.DState* %149, i32 0, i32 14
  %150 = load i32, i32* %tPos177, align 4
  %shr178 = lshr i32 %150, 1
  %idxprom179 = zext i32 %shr178 to i64
  %arrayidx180 = getelementptr inbounds i8, i8* %148, i64 %idxprom179
  %151 = load i8, i8* %arrayidx180, align 1
  %conv181 = zext i8 %151 to i32
  %152 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos182 = getelementptr inbounds %struct.DState, %struct.DState* %152, i32 0, i32 14
  %153 = load i32, i32* %tPos182, align 4
  %shl183 = shl i32 %153, 2
  %and184 = and i32 %shl183, 4
  %shr185 = lshr i32 %conv181, %and184
  %and186 = and i32 %shr185, 15
  %shl187 = shl i32 %and186, 16
  %or188 = or i32 %conv175, %shl187
  %154 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos189 = getelementptr inbounds %struct.DState, %struct.DState* %154, i32 0, i32 14
  store i32 %or188, i32* %tPos189, align 4
  %155 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo190 = getelementptr inbounds %struct.DState, %struct.DState* %155, i32 0, i32 5
  %156 = load i32, i32* %rNToGo190, align 8
  %cmp191 = icmp eq i32 %156, 0
  br i1 %cmp191, label %if.then193, label %if.end206

if.then193:                                       ; preds = %if.end164
  %157 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos194 = getelementptr inbounds %struct.DState, %struct.DState* %157, i32 0, i32 6
  %158 = load i32, i32* %rTPos194, align 4
  %idxprom195 = sext i32 %158 to i64
  %arrayidx196 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom195
  %159 = load i32, i32* %arrayidx196, align 4
  %160 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo197 = getelementptr inbounds %struct.DState, %struct.DState* %160, i32 0, i32 5
  store i32 %159, i32* %rNToGo197, align 8
  %161 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos198 = getelementptr inbounds %struct.DState, %struct.DState* %161, i32 0, i32 6
  %162 = load i32, i32* %rTPos198, align 4
  %inc199 = add nsw i32 %162, 1
  store i32 %inc199, i32* %rTPos198, align 4
  %163 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos200 = getelementptr inbounds %struct.DState, %struct.DState* %163, i32 0, i32 6
  %164 = load i32, i32* %rTPos200, align 4
  %cmp201 = icmp eq i32 %164, 512
  br i1 %cmp201, label %if.then203, label %if.end205

if.then203:                                       ; preds = %if.then193
  %165 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos204 = getelementptr inbounds %struct.DState, %struct.DState* %165, i32 0, i32 6
  store i32 0, i32* %rTPos204, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.then203, %if.then193
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end164
  %166 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo207 = getelementptr inbounds %struct.DState, %struct.DState* %166, i32 0, i32 5
  %167 = load i32, i32* %rNToGo207, align 8
  %dec208 = add nsw i32 %167, -1
  store i32 %dec208, i32* %rNToGo207, align 8
  %168 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo209 = getelementptr inbounds %struct.DState, %struct.DState* %168, i32 0, i32 5
  %169 = load i32, i32* %rNToGo209, align 8
  %cmp210 = icmp eq i32 %169, 1
  %170 = zext i1 %cmp210 to i64
  %cond212 = select i1 %cmp210, i32 1, i32 0
  %171 = load i8, i8* %k1, align 1
  %conv213 = zext i8 %171 to i32
  %xor214 = xor i32 %conv213, %cond212
  %conv215 = trunc i32 %xor214 to i8
  store i8 %conv215, i8* %k1, align 1
  %172 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used216 = getelementptr inbounds %struct.DState, %struct.DState* %172, i32 0, i32 17
  %173 = load i32, i32* %nblock_used216, align 4
  %inc217 = add nsw i32 %173, 1
  store i32 %inc217, i32* %nblock_used216, align 4
  %174 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used218 = getelementptr inbounds %struct.DState, %struct.DState* %174, i32 0, i32 17
  %175 = load i32, i32* %nblock_used218, align 4
  %176 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock219 = getelementptr inbounds %struct.DState, %struct.DState* %176, i32 0, i32 51
  %177 = load i32, i32* %save_nblock219, align 8
  %add220 = add nsw i32 %177, 1
  %cmp221 = icmp eq i32 %175, %add220
  br i1 %cmp221, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end206
  br label %while.body

if.end224:                                        ; preds = %if.end206
  %178 = load i8, i8* %k1, align 1
  %conv225 = zext i8 %178 to i32
  %179 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0226 = getelementptr inbounds %struct.DState, %struct.DState* %179, i32 0, i32 15
  %180 = load i32, i32* %k0226, align 8
  %cmp227 = icmp ne i32 %conv225, %180
  br i1 %cmp227, label %if.then229, label %if.end232

if.then229:                                       ; preds = %if.end224
  %181 = load i8, i8* %k1, align 1
  %conv230 = zext i8 %181 to i32
  %182 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0231 = getelementptr inbounds %struct.DState, %struct.DState* %182, i32 0, i32 15
  store i32 %conv230, i32* %k0231, align 8
  br label %while.body

if.end232:                                        ; preds = %if.end224
  %183 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos233 = getelementptr inbounds %struct.DState, %struct.DState* %183, i32 0, i32 14
  %184 = load i32, i32* %tPos233, align 4
  %185 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab234 = getelementptr inbounds %struct.DState, %struct.DState* %185, i32 0, i32 18
  %arraydecay235 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab234, i64 0, i64 0
  %call236 = call i32 @BZ2_indexIntoF(i32 %184, i32* %arraydecay235)
  %conv237 = trunc i32 %call236 to i8
  store i8 %conv237, i8* %k1, align 1
  %186 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16238 = getelementptr inbounds %struct.DState, %struct.DState* %186, i32 0, i32 21
  %187 = load i16*, i16** %ll16238, align 8
  %188 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos239 = getelementptr inbounds %struct.DState, %struct.DState* %188, i32 0, i32 14
  %189 = load i32, i32* %tPos239, align 4
  %idxprom240 = zext i32 %189 to i64
  %arrayidx241 = getelementptr inbounds i16, i16* %187, i64 %idxprom240
  %190 = load i16, i16* %arrayidx241, align 2
  %conv242 = zext i16 %190 to i32
  %191 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4243 = getelementptr inbounds %struct.DState, %struct.DState* %191, i32 0, i32 22
  %192 = load i8*, i8** %ll4243, align 8
  %193 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos244 = getelementptr inbounds %struct.DState, %struct.DState* %193, i32 0, i32 14
  %194 = load i32, i32* %tPos244, align 4
  %shr245 = lshr i32 %194, 1
  %idxprom246 = zext i32 %shr245 to i64
  %arrayidx247 = getelementptr inbounds i8, i8* %192, i64 %idxprom246
  %195 = load i8, i8* %arrayidx247, align 1
  %conv248 = zext i8 %195 to i32
  %196 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos249 = getelementptr inbounds %struct.DState, %struct.DState* %196, i32 0, i32 14
  %197 = load i32, i32* %tPos249, align 4
  %shl250 = shl i32 %197, 2
  %and251 = and i32 %shl250, 4
  %shr252 = lshr i32 %conv248, %and251
  %and253 = and i32 %shr252, 15
  %shl254 = shl i32 %and253, 16
  %or255 = or i32 %conv242, %shl254
  %198 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos256 = getelementptr inbounds %struct.DState, %struct.DState* %198, i32 0, i32 14
  store i32 %or255, i32* %tPos256, align 4
  %199 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo257 = getelementptr inbounds %struct.DState, %struct.DState* %199, i32 0, i32 5
  %200 = load i32, i32* %rNToGo257, align 8
  %cmp258 = icmp eq i32 %200, 0
  br i1 %cmp258, label %if.then260, label %if.end273

if.then260:                                       ; preds = %if.end232
  %201 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos261 = getelementptr inbounds %struct.DState, %struct.DState* %201, i32 0, i32 6
  %202 = load i32, i32* %rTPos261, align 4
  %idxprom262 = sext i32 %202 to i64
  %arrayidx263 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom262
  %203 = load i32, i32* %arrayidx263, align 4
  %204 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo264 = getelementptr inbounds %struct.DState, %struct.DState* %204, i32 0, i32 5
  store i32 %203, i32* %rNToGo264, align 8
  %205 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos265 = getelementptr inbounds %struct.DState, %struct.DState* %205, i32 0, i32 6
  %206 = load i32, i32* %rTPos265, align 4
  %inc266 = add nsw i32 %206, 1
  store i32 %inc266, i32* %rTPos265, align 4
  %207 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos267 = getelementptr inbounds %struct.DState, %struct.DState* %207, i32 0, i32 6
  %208 = load i32, i32* %rTPos267, align 4
  %cmp268 = icmp eq i32 %208, 512
  br i1 %cmp268, label %if.then270, label %if.end272

if.then270:                                       ; preds = %if.then260
  %209 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos271 = getelementptr inbounds %struct.DState, %struct.DState* %209, i32 0, i32 6
  store i32 0, i32* %rTPos271, align 4
  br label %if.end272

if.end272:                                        ; preds = %if.then270, %if.then260
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end232
  %210 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo274 = getelementptr inbounds %struct.DState, %struct.DState* %210, i32 0, i32 5
  %211 = load i32, i32* %rNToGo274, align 8
  %dec275 = add nsw i32 %211, -1
  store i32 %dec275, i32* %rNToGo274, align 8
  %212 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo276 = getelementptr inbounds %struct.DState, %struct.DState* %212, i32 0, i32 5
  %213 = load i32, i32* %rNToGo276, align 8
  %cmp277 = icmp eq i32 %213, 1
  %214 = zext i1 %cmp277 to i64
  %cond279 = select i1 %cmp277, i32 1, i32 0
  %215 = load i8, i8* %k1, align 1
  %conv280 = zext i8 %215 to i32
  %xor281 = xor i32 %conv280, %cond279
  %conv282 = trunc i32 %xor281 to i8
  store i8 %conv282, i8* %k1, align 1
  %216 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used283 = getelementptr inbounds %struct.DState, %struct.DState* %216, i32 0, i32 17
  %217 = load i32, i32* %nblock_used283, align 4
  %inc284 = add nsw i32 %217, 1
  store i32 %inc284, i32* %nblock_used283, align 4
  %218 = load i8, i8* %k1, align 1
  %conv285 = zext i8 %218 to i32
  %add286 = add nsw i32 %conv285, 4
  %219 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len287 = getelementptr inbounds %struct.DState, %struct.DState* %219, i32 0, i32 3
  store i32 %add286, i32* %state_out_len287, align 8
  %220 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos288 = getelementptr inbounds %struct.DState, %struct.DState* %220, i32 0, i32 14
  %221 = load i32, i32* %tPos288, align 4
  %222 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab289 = getelementptr inbounds %struct.DState, %struct.DState* %222, i32 0, i32 18
  %arraydecay290 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab289, i64 0, i64 0
  %call291 = call i32 @BZ2_indexIntoF(i32 %221, i32* %arraydecay290)
  %223 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0292 = getelementptr inbounds %struct.DState, %struct.DState* %223, i32 0, i32 15
  store i32 %call291, i32* %k0292, align 8
  %224 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16293 = getelementptr inbounds %struct.DState, %struct.DState* %224, i32 0, i32 21
  %225 = load i16*, i16** %ll16293, align 8
  %226 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos294 = getelementptr inbounds %struct.DState, %struct.DState* %226, i32 0, i32 14
  %227 = load i32, i32* %tPos294, align 4
  %idxprom295 = zext i32 %227 to i64
  %arrayidx296 = getelementptr inbounds i16, i16* %225, i64 %idxprom295
  %228 = load i16, i16* %arrayidx296, align 2
  %conv297 = zext i16 %228 to i32
  %229 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4298 = getelementptr inbounds %struct.DState, %struct.DState* %229, i32 0, i32 22
  %230 = load i8*, i8** %ll4298, align 8
  %231 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos299 = getelementptr inbounds %struct.DState, %struct.DState* %231, i32 0, i32 14
  %232 = load i32, i32* %tPos299, align 4
  %shr300 = lshr i32 %232, 1
  %idxprom301 = zext i32 %shr300 to i64
  %arrayidx302 = getelementptr inbounds i8, i8* %230, i64 %idxprom301
  %233 = load i8, i8* %arrayidx302, align 1
  %conv303 = zext i8 %233 to i32
  %234 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos304 = getelementptr inbounds %struct.DState, %struct.DState* %234, i32 0, i32 14
  %235 = load i32, i32* %tPos304, align 4
  %shl305 = shl i32 %235, 2
  %and306 = and i32 %shl305, 4
  %shr307 = lshr i32 %conv303, %and306
  %and308 = and i32 %shr307, 15
  %shl309 = shl i32 %and308, 16
  %or310 = or i32 %conv297, %shl309
  %236 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos311 = getelementptr inbounds %struct.DState, %struct.DState* %236, i32 0, i32 14
  store i32 %or310, i32* %tPos311, align 4
  %237 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo312 = getelementptr inbounds %struct.DState, %struct.DState* %237, i32 0, i32 5
  %238 = load i32, i32* %rNToGo312, align 8
  %cmp313 = icmp eq i32 %238, 0
  br i1 %cmp313, label %if.then315, label %if.end328

if.then315:                                       ; preds = %if.end273
  %239 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos316 = getelementptr inbounds %struct.DState, %struct.DState* %239, i32 0, i32 6
  %240 = load i32, i32* %rTPos316, align 4
  %idxprom317 = sext i32 %240 to i64
  %arrayidx318 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom317
  %241 = load i32, i32* %arrayidx318, align 4
  %242 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo319 = getelementptr inbounds %struct.DState, %struct.DState* %242, i32 0, i32 5
  store i32 %241, i32* %rNToGo319, align 8
  %243 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos320 = getelementptr inbounds %struct.DState, %struct.DState* %243, i32 0, i32 6
  %244 = load i32, i32* %rTPos320, align 4
  %inc321 = add nsw i32 %244, 1
  store i32 %inc321, i32* %rTPos320, align 4
  %245 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos322 = getelementptr inbounds %struct.DState, %struct.DState* %245, i32 0, i32 6
  %246 = load i32, i32* %rTPos322, align 4
  %cmp323 = icmp eq i32 %246, 512
  br i1 %cmp323, label %if.then325, label %if.end327

if.then325:                                       ; preds = %if.then315
  %247 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos326 = getelementptr inbounds %struct.DState, %struct.DState* %247, i32 0, i32 6
  store i32 0, i32* %rTPos326, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.then325, %if.then315
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end273
  %248 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo329 = getelementptr inbounds %struct.DState, %struct.DState* %248, i32 0, i32 5
  %249 = load i32, i32* %rNToGo329, align 8
  %dec330 = add nsw i32 %249, -1
  store i32 %dec330, i32* %rNToGo329, align 8
  %250 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo331 = getelementptr inbounds %struct.DState, %struct.DState* %250, i32 0, i32 5
  %251 = load i32, i32* %rNToGo331, align 8
  %cmp332 = icmp eq i32 %251, 1
  %252 = zext i1 %cmp332 to i64
  %cond334 = select i1 %cmp332, i32 1, i32 0
  %253 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0335 = getelementptr inbounds %struct.DState, %struct.DState* %253, i32 0, i32 15
  %254 = load i32, i32* %k0335, align 8
  %xor336 = xor i32 %254, %cond334
  store i32 %xor336, i32* %k0335, align 8
  %255 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used337 = getelementptr inbounds %struct.DState, %struct.DState* %255, i32 0, i32 17
  %256 = load i32, i32* %nblock_used337, align 4
  %inc338 = add nsw i32 %256, 1
  store i32 %inc338, i32* %nblock_used337, align 4
  br label %while.body

if.else:                                          ; preds = %entry
  br label %while.body339

while.body339:                                    ; preds = %if.end530, %if.then527, %if.then521, %if.then485, %if.then479, %if.then443, %if.then437, %if.else
  br label %while.body341

while.body341:                                    ; preds = %if.end386, %while.body339
  %257 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm342 = getelementptr inbounds %struct.DState, %struct.DState* %257, i32 0, i32 0
  %258 = load %struct.bz_stream*, %struct.bz_stream** %strm342, align 8
  %avail_out343 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %258, i32 0, i32 5
  %259 = load i32, i32* %avail_out343, align 8
  %cmp344 = icmp eq i32 %259, 0
  br i1 %cmp344, label %if.then346, label %if.end347

if.then346:                                       ; preds = %while.body341
  store i8 0, i8* %retval, align 1
  br label %return

if.end347:                                        ; preds = %while.body341
  %260 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len348 = getelementptr inbounds %struct.DState, %struct.DState* %260, i32 0, i32 3
  %261 = load i32, i32* %state_out_len348, align 8
  %cmp349 = icmp eq i32 %261, 0
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %if.end347
  br label %while.end387

if.end352:                                        ; preds = %if.end347
  %262 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch353 = getelementptr inbounds %struct.DState, %struct.DState* %262, i32 0, i32 2
  %263 = load i8, i8* %state_out_ch353, align 4
  %264 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm354 = getelementptr inbounds %struct.DState, %struct.DState* %264, i32 0, i32 0
  %265 = load %struct.bz_stream*, %struct.bz_stream** %strm354, align 8
  %next_out355 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %265, i32 0, i32 4
  %266 = load i8*, i8** %next_out355, align 8
  store i8 %263, i8* %266, align 1
  %267 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC356 = getelementptr inbounds %struct.DState, %struct.DState* %267, i32 0, i32 25
  %268 = load i32, i32* %calculatedBlockCRC356, align 8
  %shl357 = shl i32 %268, 8
  %269 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC358 = getelementptr inbounds %struct.DState, %struct.DState* %269, i32 0, i32 25
  %270 = load i32, i32* %calculatedBlockCRC358, align 8
  %shr359 = lshr i32 %270, 24
  %271 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch360 = getelementptr inbounds %struct.DState, %struct.DState* %271, i32 0, i32 2
  %272 = load i8, i8* %state_out_ch360, align 4
  %conv361 = zext i8 %272 to i32
  %xor362 = xor i32 %shr359, %conv361
  %idxprom363 = zext i32 %xor362 to i64
  %arrayidx364 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom363
  %273 = load i32, i32* %arrayidx364, align 4
  %xor365 = xor i32 %shl357, %273
  %274 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC366 = getelementptr inbounds %struct.DState, %struct.DState* %274, i32 0, i32 25
  store i32 %xor365, i32* %calculatedBlockCRC366, align 8
  %275 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len367 = getelementptr inbounds %struct.DState, %struct.DState* %275, i32 0, i32 3
  %276 = load i32, i32* %state_out_len367, align 8
  %dec368 = add nsw i32 %276, -1
  store i32 %dec368, i32* %state_out_len367, align 8
  %277 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm369 = getelementptr inbounds %struct.DState, %struct.DState* %277, i32 0, i32 0
  %278 = load %struct.bz_stream*, %struct.bz_stream** %strm369, align 8
  %next_out370 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %278, i32 0, i32 4
  %279 = load i8*, i8** %next_out370, align 8
  %incdec.ptr371 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %incdec.ptr371, i8** %next_out370, align 8
  %280 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm372 = getelementptr inbounds %struct.DState, %struct.DState* %280, i32 0, i32 0
  %281 = load %struct.bz_stream*, %struct.bz_stream** %strm372, align 8
  %avail_out373 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %281, i32 0, i32 5
  %282 = load i32, i32* %avail_out373, align 8
  %dec374 = add i32 %282, -1
  store i32 %dec374, i32* %avail_out373, align 8
  %283 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm375 = getelementptr inbounds %struct.DState, %struct.DState* %283, i32 0, i32 0
  %284 = load %struct.bz_stream*, %struct.bz_stream** %strm375, align 8
  %total_out_lo32376 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %284, i32 0, i32 6
  %285 = load i32, i32* %total_out_lo32376, align 4
  %inc377 = add i32 %285, 1
  store i32 %inc377, i32* %total_out_lo32376, align 4
  %286 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm378 = getelementptr inbounds %struct.DState, %struct.DState* %286, i32 0, i32 0
  %287 = load %struct.bz_stream*, %struct.bz_stream** %strm378, align 8
  %total_out_lo32379 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %287, i32 0, i32 6
  %288 = load i32, i32* %total_out_lo32379, align 4
  %cmp380 = icmp eq i32 %288, 0
  br i1 %cmp380, label %if.then382, label %if.end386

if.then382:                                       ; preds = %if.end352
  %289 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm383 = getelementptr inbounds %struct.DState, %struct.DState* %289, i32 0, i32 0
  %290 = load %struct.bz_stream*, %struct.bz_stream** %strm383, align 8
  %total_out_hi32384 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %290, i32 0, i32 7
  %291 = load i32, i32* %total_out_hi32384, align 8
  %inc385 = add i32 %291, 1
  store i32 %inc385, i32* %total_out_hi32384, align 8
  br label %if.end386

if.end386:                                        ; preds = %if.then382, %if.end352
  br label %while.body341

while.end387:                                     ; preds = %if.then351
  %292 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used388 = getelementptr inbounds %struct.DState, %struct.DState* %292, i32 0, i32 17
  %293 = load i32, i32* %nblock_used388, align 4
  %294 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock389 = getelementptr inbounds %struct.DState, %struct.DState* %294, i32 0, i32 51
  %295 = load i32, i32* %save_nblock389, align 8
  %add390 = add nsw i32 %295, 1
  %cmp391 = icmp eq i32 %293, %add390
  br i1 %cmp391, label %if.then393, label %if.end394

if.then393:                                       ; preds = %while.end387
  store i8 0, i8* %retval, align 1
  br label %return

if.end394:                                        ; preds = %while.end387
  %296 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used395 = getelementptr inbounds %struct.DState, %struct.DState* %296, i32 0, i32 17
  %297 = load i32, i32* %nblock_used395, align 4
  %298 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock396 = getelementptr inbounds %struct.DState, %struct.DState* %298, i32 0, i32 51
  %299 = load i32, i32* %save_nblock396, align 8
  %add397 = add nsw i32 %299, 1
  %cmp398 = icmp sgt i32 %297, %add397
  br i1 %cmp398, label %if.then400, label %if.end401

if.then400:                                       ; preds = %if.end394
  store i8 1, i8* %retval, align 1
  br label %return

if.end401:                                        ; preds = %if.end394
  %300 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len402 = getelementptr inbounds %struct.DState, %struct.DState* %300, i32 0, i32 3
  store i32 1, i32* %state_out_len402, align 8
  %301 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0403 = getelementptr inbounds %struct.DState, %struct.DState* %301, i32 0, i32 15
  %302 = load i32, i32* %k0403, align 8
  %conv404 = trunc i32 %302 to i8
  %303 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch405 = getelementptr inbounds %struct.DState, %struct.DState* %303, i32 0, i32 2
  store i8 %conv404, i8* %state_out_ch405, align 4
  %304 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos406 = getelementptr inbounds %struct.DState, %struct.DState* %304, i32 0, i32 14
  %305 = load i32, i32* %tPos406, align 4
  %306 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab407 = getelementptr inbounds %struct.DState, %struct.DState* %306, i32 0, i32 18
  %arraydecay408 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab407, i64 0, i64 0
  %call409 = call i32 @BZ2_indexIntoF(i32 %305, i32* %arraydecay408)
  %conv410 = trunc i32 %call409 to i8
  store i8 %conv410, i8* %k1, align 1
  %307 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16411 = getelementptr inbounds %struct.DState, %struct.DState* %307, i32 0, i32 21
  %308 = load i16*, i16** %ll16411, align 8
  %309 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos412 = getelementptr inbounds %struct.DState, %struct.DState* %309, i32 0, i32 14
  %310 = load i32, i32* %tPos412, align 4
  %idxprom413 = zext i32 %310 to i64
  %arrayidx414 = getelementptr inbounds i16, i16* %308, i64 %idxprom413
  %311 = load i16, i16* %arrayidx414, align 2
  %conv415 = zext i16 %311 to i32
  %312 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4416 = getelementptr inbounds %struct.DState, %struct.DState* %312, i32 0, i32 22
  %313 = load i8*, i8** %ll4416, align 8
  %314 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos417 = getelementptr inbounds %struct.DState, %struct.DState* %314, i32 0, i32 14
  %315 = load i32, i32* %tPos417, align 4
  %shr418 = lshr i32 %315, 1
  %idxprom419 = zext i32 %shr418 to i64
  %arrayidx420 = getelementptr inbounds i8, i8* %313, i64 %idxprom419
  %316 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %316 to i32
  %317 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos422 = getelementptr inbounds %struct.DState, %struct.DState* %317, i32 0, i32 14
  %318 = load i32, i32* %tPos422, align 4
  %shl423 = shl i32 %318, 2
  %and424 = and i32 %shl423, 4
  %shr425 = lshr i32 %conv421, %and424
  %and426 = and i32 %shr425, 15
  %shl427 = shl i32 %and426, 16
  %or428 = or i32 %conv415, %shl427
  %319 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos429 = getelementptr inbounds %struct.DState, %struct.DState* %319, i32 0, i32 14
  store i32 %or428, i32* %tPos429, align 4
  %320 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used430 = getelementptr inbounds %struct.DState, %struct.DState* %320, i32 0, i32 17
  %321 = load i32, i32* %nblock_used430, align 4
  %inc431 = add nsw i32 %321, 1
  store i32 %inc431, i32* %nblock_used430, align 4
  %322 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used432 = getelementptr inbounds %struct.DState, %struct.DState* %322, i32 0, i32 17
  %323 = load i32, i32* %nblock_used432, align 4
  %324 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock433 = getelementptr inbounds %struct.DState, %struct.DState* %324, i32 0, i32 51
  %325 = load i32, i32* %save_nblock433, align 8
  %add434 = add nsw i32 %325, 1
  %cmp435 = icmp eq i32 %323, %add434
  br i1 %cmp435, label %if.then437, label %if.end438

if.then437:                                       ; preds = %if.end401
  br label %while.body339

if.end438:                                        ; preds = %if.end401
  %326 = load i8, i8* %k1, align 1
  %conv439 = zext i8 %326 to i32
  %327 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0440 = getelementptr inbounds %struct.DState, %struct.DState* %327, i32 0, i32 15
  %328 = load i32, i32* %k0440, align 8
  %cmp441 = icmp ne i32 %conv439, %328
  br i1 %cmp441, label %if.then443, label %if.end446

if.then443:                                       ; preds = %if.end438
  %329 = load i8, i8* %k1, align 1
  %conv444 = zext i8 %329 to i32
  %330 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0445 = getelementptr inbounds %struct.DState, %struct.DState* %330, i32 0, i32 15
  store i32 %conv444, i32* %k0445, align 8
  br label %while.body339

if.end446:                                        ; preds = %if.end438
  %331 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len447 = getelementptr inbounds %struct.DState, %struct.DState* %331, i32 0, i32 3
  store i32 2, i32* %state_out_len447, align 8
  %332 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos448 = getelementptr inbounds %struct.DState, %struct.DState* %332, i32 0, i32 14
  %333 = load i32, i32* %tPos448, align 4
  %334 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab449 = getelementptr inbounds %struct.DState, %struct.DState* %334, i32 0, i32 18
  %arraydecay450 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab449, i64 0, i64 0
  %call451 = call i32 @BZ2_indexIntoF(i32 %333, i32* %arraydecay450)
  %conv452 = trunc i32 %call451 to i8
  store i8 %conv452, i8* %k1, align 1
  %335 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16453 = getelementptr inbounds %struct.DState, %struct.DState* %335, i32 0, i32 21
  %336 = load i16*, i16** %ll16453, align 8
  %337 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos454 = getelementptr inbounds %struct.DState, %struct.DState* %337, i32 0, i32 14
  %338 = load i32, i32* %tPos454, align 4
  %idxprom455 = zext i32 %338 to i64
  %arrayidx456 = getelementptr inbounds i16, i16* %336, i64 %idxprom455
  %339 = load i16, i16* %arrayidx456, align 2
  %conv457 = zext i16 %339 to i32
  %340 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4458 = getelementptr inbounds %struct.DState, %struct.DState* %340, i32 0, i32 22
  %341 = load i8*, i8** %ll4458, align 8
  %342 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos459 = getelementptr inbounds %struct.DState, %struct.DState* %342, i32 0, i32 14
  %343 = load i32, i32* %tPos459, align 4
  %shr460 = lshr i32 %343, 1
  %idxprom461 = zext i32 %shr460 to i64
  %arrayidx462 = getelementptr inbounds i8, i8* %341, i64 %idxprom461
  %344 = load i8, i8* %arrayidx462, align 1
  %conv463 = zext i8 %344 to i32
  %345 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos464 = getelementptr inbounds %struct.DState, %struct.DState* %345, i32 0, i32 14
  %346 = load i32, i32* %tPos464, align 4
  %shl465 = shl i32 %346, 2
  %and466 = and i32 %shl465, 4
  %shr467 = lshr i32 %conv463, %and466
  %and468 = and i32 %shr467, 15
  %shl469 = shl i32 %and468, 16
  %or470 = or i32 %conv457, %shl469
  %347 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos471 = getelementptr inbounds %struct.DState, %struct.DState* %347, i32 0, i32 14
  store i32 %or470, i32* %tPos471, align 4
  %348 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used472 = getelementptr inbounds %struct.DState, %struct.DState* %348, i32 0, i32 17
  %349 = load i32, i32* %nblock_used472, align 4
  %inc473 = add nsw i32 %349, 1
  store i32 %inc473, i32* %nblock_used472, align 4
  %350 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used474 = getelementptr inbounds %struct.DState, %struct.DState* %350, i32 0, i32 17
  %351 = load i32, i32* %nblock_used474, align 4
  %352 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock475 = getelementptr inbounds %struct.DState, %struct.DState* %352, i32 0, i32 51
  %353 = load i32, i32* %save_nblock475, align 8
  %add476 = add nsw i32 %353, 1
  %cmp477 = icmp eq i32 %351, %add476
  br i1 %cmp477, label %if.then479, label %if.end480

if.then479:                                       ; preds = %if.end446
  br label %while.body339

if.end480:                                        ; preds = %if.end446
  %354 = load i8, i8* %k1, align 1
  %conv481 = zext i8 %354 to i32
  %355 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0482 = getelementptr inbounds %struct.DState, %struct.DState* %355, i32 0, i32 15
  %356 = load i32, i32* %k0482, align 8
  %cmp483 = icmp ne i32 %conv481, %356
  br i1 %cmp483, label %if.then485, label %if.end488

if.then485:                                       ; preds = %if.end480
  %357 = load i8, i8* %k1, align 1
  %conv486 = zext i8 %357 to i32
  %358 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0487 = getelementptr inbounds %struct.DState, %struct.DState* %358, i32 0, i32 15
  store i32 %conv486, i32* %k0487, align 8
  br label %while.body339

if.end488:                                        ; preds = %if.end480
  %359 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len489 = getelementptr inbounds %struct.DState, %struct.DState* %359, i32 0, i32 3
  store i32 3, i32* %state_out_len489, align 8
  %360 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos490 = getelementptr inbounds %struct.DState, %struct.DState* %360, i32 0, i32 14
  %361 = load i32, i32* %tPos490, align 4
  %362 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab491 = getelementptr inbounds %struct.DState, %struct.DState* %362, i32 0, i32 18
  %arraydecay492 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab491, i64 0, i64 0
  %call493 = call i32 @BZ2_indexIntoF(i32 %361, i32* %arraydecay492)
  %conv494 = trunc i32 %call493 to i8
  store i8 %conv494, i8* %k1, align 1
  %363 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16495 = getelementptr inbounds %struct.DState, %struct.DState* %363, i32 0, i32 21
  %364 = load i16*, i16** %ll16495, align 8
  %365 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos496 = getelementptr inbounds %struct.DState, %struct.DState* %365, i32 0, i32 14
  %366 = load i32, i32* %tPos496, align 4
  %idxprom497 = zext i32 %366 to i64
  %arrayidx498 = getelementptr inbounds i16, i16* %364, i64 %idxprom497
  %367 = load i16, i16* %arrayidx498, align 2
  %conv499 = zext i16 %367 to i32
  %368 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4500 = getelementptr inbounds %struct.DState, %struct.DState* %368, i32 0, i32 22
  %369 = load i8*, i8** %ll4500, align 8
  %370 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos501 = getelementptr inbounds %struct.DState, %struct.DState* %370, i32 0, i32 14
  %371 = load i32, i32* %tPos501, align 4
  %shr502 = lshr i32 %371, 1
  %idxprom503 = zext i32 %shr502 to i64
  %arrayidx504 = getelementptr inbounds i8, i8* %369, i64 %idxprom503
  %372 = load i8, i8* %arrayidx504, align 1
  %conv505 = zext i8 %372 to i32
  %373 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos506 = getelementptr inbounds %struct.DState, %struct.DState* %373, i32 0, i32 14
  %374 = load i32, i32* %tPos506, align 4
  %shl507 = shl i32 %374, 2
  %and508 = and i32 %shl507, 4
  %shr509 = lshr i32 %conv505, %and508
  %and510 = and i32 %shr509, 15
  %shl511 = shl i32 %and510, 16
  %or512 = or i32 %conv499, %shl511
  %375 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos513 = getelementptr inbounds %struct.DState, %struct.DState* %375, i32 0, i32 14
  store i32 %or512, i32* %tPos513, align 4
  %376 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used514 = getelementptr inbounds %struct.DState, %struct.DState* %376, i32 0, i32 17
  %377 = load i32, i32* %nblock_used514, align 4
  %inc515 = add nsw i32 %377, 1
  store i32 %inc515, i32* %nblock_used514, align 4
  %378 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used516 = getelementptr inbounds %struct.DState, %struct.DState* %378, i32 0, i32 17
  %379 = load i32, i32* %nblock_used516, align 4
  %380 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock517 = getelementptr inbounds %struct.DState, %struct.DState* %380, i32 0, i32 51
  %381 = load i32, i32* %save_nblock517, align 8
  %add518 = add nsw i32 %381, 1
  %cmp519 = icmp eq i32 %379, %add518
  br i1 %cmp519, label %if.then521, label %if.end522

if.then521:                                       ; preds = %if.end488
  br label %while.body339

if.end522:                                        ; preds = %if.end488
  %382 = load i8, i8* %k1, align 1
  %conv523 = zext i8 %382 to i32
  %383 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0524 = getelementptr inbounds %struct.DState, %struct.DState* %383, i32 0, i32 15
  %384 = load i32, i32* %k0524, align 8
  %cmp525 = icmp ne i32 %conv523, %384
  br i1 %cmp525, label %if.then527, label %if.end530

if.then527:                                       ; preds = %if.end522
  %385 = load i8, i8* %k1, align 1
  %conv528 = zext i8 %385 to i32
  %386 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0529 = getelementptr inbounds %struct.DState, %struct.DState* %386, i32 0, i32 15
  store i32 %conv528, i32* %k0529, align 8
  br label %while.body339

if.end530:                                        ; preds = %if.end522
  %387 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos531 = getelementptr inbounds %struct.DState, %struct.DState* %387, i32 0, i32 14
  %388 = load i32, i32* %tPos531, align 4
  %389 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab532 = getelementptr inbounds %struct.DState, %struct.DState* %389, i32 0, i32 18
  %arraydecay533 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab532, i64 0, i64 0
  %call534 = call i32 @BZ2_indexIntoF(i32 %388, i32* %arraydecay533)
  %conv535 = trunc i32 %call534 to i8
  store i8 %conv535, i8* %k1, align 1
  %390 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16536 = getelementptr inbounds %struct.DState, %struct.DState* %390, i32 0, i32 21
  %391 = load i16*, i16** %ll16536, align 8
  %392 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos537 = getelementptr inbounds %struct.DState, %struct.DState* %392, i32 0, i32 14
  %393 = load i32, i32* %tPos537, align 4
  %idxprom538 = zext i32 %393 to i64
  %arrayidx539 = getelementptr inbounds i16, i16* %391, i64 %idxprom538
  %394 = load i16, i16* %arrayidx539, align 2
  %conv540 = zext i16 %394 to i32
  %395 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4541 = getelementptr inbounds %struct.DState, %struct.DState* %395, i32 0, i32 22
  %396 = load i8*, i8** %ll4541, align 8
  %397 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos542 = getelementptr inbounds %struct.DState, %struct.DState* %397, i32 0, i32 14
  %398 = load i32, i32* %tPos542, align 4
  %shr543 = lshr i32 %398, 1
  %idxprom544 = zext i32 %shr543 to i64
  %arrayidx545 = getelementptr inbounds i8, i8* %396, i64 %idxprom544
  %399 = load i8, i8* %arrayidx545, align 1
  %conv546 = zext i8 %399 to i32
  %400 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos547 = getelementptr inbounds %struct.DState, %struct.DState* %400, i32 0, i32 14
  %401 = load i32, i32* %tPos547, align 4
  %shl548 = shl i32 %401, 2
  %and549 = and i32 %shl548, 4
  %shr550 = lshr i32 %conv546, %and549
  %and551 = and i32 %shr550, 15
  %shl552 = shl i32 %and551, 16
  %or553 = or i32 %conv540, %shl552
  %402 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos554 = getelementptr inbounds %struct.DState, %struct.DState* %402, i32 0, i32 14
  store i32 %or553, i32* %tPos554, align 4
  %403 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used555 = getelementptr inbounds %struct.DState, %struct.DState* %403, i32 0, i32 17
  %404 = load i32, i32* %nblock_used555, align 4
  %inc556 = add nsw i32 %404, 1
  store i32 %inc556, i32* %nblock_used555, align 4
  %405 = load i8, i8* %k1, align 1
  %conv557 = zext i8 %405 to i32
  %add558 = add nsw i32 %conv557, 4
  %406 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len559 = getelementptr inbounds %struct.DState, %struct.DState* %406, i32 0, i32 3
  store i32 %add558, i32* %state_out_len559, align 8
  %407 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos560 = getelementptr inbounds %struct.DState, %struct.DState* %407, i32 0, i32 14
  %408 = load i32, i32* %tPos560, align 4
  %409 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab561 = getelementptr inbounds %struct.DState, %struct.DState* %409, i32 0, i32 18
  %arraydecay562 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab561, i64 0, i64 0
  %call563 = call i32 @BZ2_indexIntoF(i32 %408, i32* %arraydecay562)
  %410 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0564 = getelementptr inbounds %struct.DState, %struct.DState* %410, i32 0, i32 15
  store i32 %call563, i32* %k0564, align 8
  %411 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16565 = getelementptr inbounds %struct.DState, %struct.DState* %411, i32 0, i32 21
  %412 = load i16*, i16** %ll16565, align 8
  %413 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos566 = getelementptr inbounds %struct.DState, %struct.DState* %413, i32 0, i32 14
  %414 = load i32, i32* %tPos566, align 4
  %idxprom567 = zext i32 %414 to i64
  %arrayidx568 = getelementptr inbounds i16, i16* %412, i64 %idxprom567
  %415 = load i16, i16* %arrayidx568, align 2
  %conv569 = zext i16 %415 to i32
  %416 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4570 = getelementptr inbounds %struct.DState, %struct.DState* %416, i32 0, i32 22
  %417 = load i8*, i8** %ll4570, align 8
  %418 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos571 = getelementptr inbounds %struct.DState, %struct.DState* %418, i32 0, i32 14
  %419 = load i32, i32* %tPos571, align 4
  %shr572 = lshr i32 %419, 1
  %idxprom573 = zext i32 %shr572 to i64
  %arrayidx574 = getelementptr inbounds i8, i8* %417, i64 %idxprom573
  %420 = load i8, i8* %arrayidx574, align 1
  %conv575 = zext i8 %420 to i32
  %421 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos576 = getelementptr inbounds %struct.DState, %struct.DState* %421, i32 0, i32 14
  %422 = load i32, i32* %tPos576, align 4
  %shl577 = shl i32 %422, 2
  %and578 = and i32 %shl577, 4
  %shr579 = lshr i32 %conv575, %and578
  %and580 = and i32 %shr579, 15
  %shl581 = shl i32 %and580, 16
  %or582 = or i32 %conv569, %shl581
  %423 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos583 = getelementptr inbounds %struct.DState, %struct.DState* %423, i32 0, i32 14
  store i32 %or582, i32* %tPos583, align 4
  %424 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used584 = getelementptr inbounds %struct.DState, %struct.DState* %424, i32 0, i32 17
  %425 = load i32, i32* %nblock_used584, align 4
  %inc585 = add nsw i32 %425, 1
  store i32 %inc585, i32* %nblock_used584, align 4
  br label %while.body339

return:                                           ; preds = %if.then400, %if.then393, %if.then346, %if.then36, %if.then29, %if.then3
  %426 = load i8, i8* %retval, align 1
  ret i8 %426
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %s) #0 {
entry:
  %retval = alloca i8, align 1
  %s.addr = alloca %struct.DState*, align 8
  %k1 = alloca i8, align 1
  %c_calculatedBlockCRC = alloca i32, align 4
  %c_state_out_ch = alloca i8, align 1
  %c_state_out_len = alloca i32, align 4
  %c_nblock_used = alloca i32, align 4
  %c_k0 = alloca i32, align 4
  %c_tt = alloca i32*, align 8
  %c_tPos = alloca i32, align 4
  %cs_next_out = alloca i8*, align 8
  %cs_avail_out = alloca i32, align 4
  %avail_out_INIT = alloca i32, align 4
  %s_save_nblockPP = alloca i32, align 4
  %total_out_lo32_old = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %s.addr, align 8
  %0 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %1 = load i8, i8* %blockRandomised, align 4
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end265, %if.then192, %if.then186, %if.then138, %if.then132, %if.then84, %if.then78, %if.then
  br label %while.body2

while.body2:                                      ; preds = %if.end26, %while.body
  %2 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm = getelementptr inbounds %struct.DState, %struct.DState* %2, i32 0, i32 0
  %3 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3, i32 0, i32 5
  %4 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %while.body2
  store i8 0, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %while.body2
  %5 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %5, i32 0, i32 3
  %6 = load i32, i32* %state_out_len, align 8
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  br label %while.end

if.end6:                                          ; preds = %if.end
  %7 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 2
  %8 = load i8, i8* %state_out_ch, align 4
  %9 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm7 = getelementptr inbounds %struct.DState, %struct.DState* %9, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 4
  %11 = load i8*, i8** %next_out, align 8
  store i8 %8, i8* %11, align 1
  %12 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %12, i32 0, i32 25
  %13 = load i32, i32* %calculatedBlockCRC, align 8
  %shl = shl i32 %13, 8
  %14 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC8 = getelementptr inbounds %struct.DState, %struct.DState* %14, i32 0, i32 25
  %15 = load i32, i32* %calculatedBlockCRC8, align 8
  %shr = lshr i32 %15, 24
  %16 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch9 = getelementptr inbounds %struct.DState, %struct.DState* %16, i32 0, i32 2
  %17 = load i8, i8* %state_out_ch9, align 4
  %conv = zext i8 %17 to i32
  %xor = xor i32 %shr, %conv
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %18 = load i32, i32* %arrayidx, align 4
  %xor10 = xor i32 %shl, %18
  %19 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC11 = getelementptr inbounds %struct.DState, %struct.DState* %19, i32 0, i32 25
  store i32 %xor10, i32* %calculatedBlockCRC11, align 8
  %20 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len12 = getelementptr inbounds %struct.DState, %struct.DState* %20, i32 0, i32 3
  %21 = load i32, i32* %state_out_len12, align 8
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %state_out_len12, align 8
  %22 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm13 = getelementptr inbounds %struct.DState, %struct.DState* %22, i32 0, i32 0
  %23 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %next_out14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %23, i32 0, i32 4
  %24 = load i8*, i8** %next_out14, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr, i8** %next_out14, align 8
  %25 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm15 = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 0
  %26 = load %struct.bz_stream*, %struct.bz_stream** %strm15, align 8
  %avail_out16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %26, i32 0, i32 5
  %27 = load i32, i32* %avail_out16, align 8
  %dec17 = add i32 %27, -1
  store i32 %dec17, i32* %avail_out16, align 8
  %28 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm18 = getelementptr inbounds %struct.DState, %struct.DState* %28, i32 0, i32 0
  %29 = load %struct.bz_stream*, %struct.bz_stream** %strm18, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 6
  %30 = load i32, i32* %total_out_lo32, align 4
  %inc = add i32 %30, 1
  store i32 %inc, i32* %total_out_lo32, align 4
  %31 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm19 = getelementptr inbounds %struct.DState, %struct.DState* %31, i32 0, i32 0
  %32 = load %struct.bz_stream*, %struct.bz_stream** %strm19, align 8
  %total_out_lo3220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %32, i32 0, i32 6
  %33 = load i32, i32* %total_out_lo3220, align 4
  %cmp21 = icmp eq i32 %33, 0
  br i1 %cmp21, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end6
  %34 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %34, i32 0, i32 0
  %35 = load %struct.bz_stream*, %struct.bz_stream** %strm24, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %35, i32 0, i32 7
  %36 = load i32, i32* %total_out_hi32, align 8
  %inc25 = add i32 %36, 1
  store i32 %inc25, i32* %total_out_hi32, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end6
  br label %while.body2

while.end:                                        ; preds = %if.then5
  %37 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 17
  %38 = load i32, i32* %nblock_used, align 4
  %39 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %39, i32 0, i32 51
  %40 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %40, 1
  %cmp27 = icmp eq i32 %38, %add
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.end
  store i8 0, i8* %retval, align 1
  br label %return

if.end30:                                         ; preds = %while.end
  %41 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used31 = getelementptr inbounds %struct.DState, %struct.DState* %41, i32 0, i32 17
  %42 = load i32, i32* %nblock_used31, align 4
  %43 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock32 = getelementptr inbounds %struct.DState, %struct.DState* %43, i32 0, i32 51
  %44 = load i32, i32* %save_nblock32, align 8
  %add33 = add nsw i32 %44, 1
  %cmp34 = icmp sgt i32 %42, %add33
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end30
  store i8 1, i8* %retval, align 1
  br label %return

if.end37:                                         ; preds = %if.end30
  %45 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len38 = getelementptr inbounds %struct.DState, %struct.DState* %45, i32 0, i32 3
  store i32 1, i32* %state_out_len38, align 8
  %46 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %46, i32 0, i32 15
  %47 = load i32, i32* %k0, align 8
  %conv39 = trunc i32 %47 to i8
  %48 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch40 = getelementptr inbounds %struct.DState, %struct.DState* %48, i32 0, i32 2
  store i8 %conv39, i8* %state_out_ch40, align 4
  %49 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %49, i32 0, i32 20
  %50 = load i32*, i32** %tt, align 8
  %51 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %51, i32 0, i32 14
  %52 = load i32, i32* %tPos, align 4
  %idxprom41 = zext i32 %52 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %50, i64 %idxprom41
  %53 = load i32, i32* %arrayidx42, align 4
  %54 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos43 = getelementptr inbounds %struct.DState, %struct.DState* %54, i32 0, i32 14
  store i32 %53, i32* %tPos43, align 4
  %55 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos44 = getelementptr inbounds %struct.DState, %struct.DState* %55, i32 0, i32 14
  %56 = load i32, i32* %tPos44, align 4
  %and = and i32 %56, 255
  %conv45 = trunc i32 %and to i8
  store i8 %conv45, i8* %k1, align 1
  %57 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos46 = getelementptr inbounds %struct.DState, %struct.DState* %57, i32 0, i32 14
  %58 = load i32, i32* %tPos46, align 4
  %shr47 = lshr i32 %58, 8
  store i32 %shr47, i32* %tPos46, align 4
  %59 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %59, i32 0, i32 5
  %60 = load i32, i32* %rNToGo, align 8
  %cmp48 = icmp eq i32 %60, 0
  br i1 %cmp48, label %if.then50, label %if.end62

if.then50:                                        ; preds = %if.end37
  %61 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %61, i32 0, i32 6
  %62 = load i32, i32* %rTPos, align 4
  %idxprom51 = sext i32 %62 to i64
  %arrayidx52 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom51
  %63 = load i32, i32* %arrayidx52, align 4
  %64 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo53 = getelementptr inbounds %struct.DState, %struct.DState* %64, i32 0, i32 5
  store i32 %63, i32* %rNToGo53, align 8
  %65 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos54 = getelementptr inbounds %struct.DState, %struct.DState* %65, i32 0, i32 6
  %66 = load i32, i32* %rTPos54, align 4
  %inc55 = add nsw i32 %66, 1
  store i32 %inc55, i32* %rTPos54, align 4
  %67 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos56 = getelementptr inbounds %struct.DState, %struct.DState* %67, i32 0, i32 6
  %68 = load i32, i32* %rTPos56, align 4
  %cmp57 = icmp eq i32 %68, 512
  br i1 %cmp57, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.then50
  %69 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos60 = getelementptr inbounds %struct.DState, %struct.DState* %69, i32 0, i32 6
  store i32 0, i32* %rTPos60, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.then50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end37
  %70 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo63 = getelementptr inbounds %struct.DState, %struct.DState* %70, i32 0, i32 5
  %71 = load i32, i32* %rNToGo63, align 8
  %dec64 = add nsw i32 %71, -1
  store i32 %dec64, i32* %rNToGo63, align 8
  %72 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo65 = getelementptr inbounds %struct.DState, %struct.DState* %72, i32 0, i32 5
  %73 = load i32, i32* %rNToGo65, align 8
  %cmp66 = icmp eq i32 %73, 1
  %74 = zext i1 %cmp66 to i64
  %cond = select i1 %cmp66, i32 1, i32 0
  %75 = load i8, i8* %k1, align 1
  %conv68 = zext i8 %75 to i32
  %xor69 = xor i32 %conv68, %cond
  %conv70 = trunc i32 %xor69 to i8
  store i8 %conv70, i8* %k1, align 1
  %76 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used71 = getelementptr inbounds %struct.DState, %struct.DState* %76, i32 0, i32 17
  %77 = load i32, i32* %nblock_used71, align 4
  %inc72 = add nsw i32 %77, 1
  store i32 %inc72, i32* %nblock_used71, align 4
  %78 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used73 = getelementptr inbounds %struct.DState, %struct.DState* %78, i32 0, i32 17
  %79 = load i32, i32* %nblock_used73, align 4
  %80 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock74 = getelementptr inbounds %struct.DState, %struct.DState* %80, i32 0, i32 51
  %81 = load i32, i32* %save_nblock74, align 8
  %add75 = add nsw i32 %81, 1
  %cmp76 = icmp eq i32 %79, %add75
  br i1 %cmp76, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end62
  br label %while.body

if.end79:                                         ; preds = %if.end62
  %82 = load i8, i8* %k1, align 1
  %conv80 = zext i8 %82 to i32
  %83 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k081 = getelementptr inbounds %struct.DState, %struct.DState* %83, i32 0, i32 15
  %84 = load i32, i32* %k081, align 8
  %cmp82 = icmp ne i32 %conv80, %84
  br i1 %cmp82, label %if.then84, label %if.end87

if.then84:                                        ; preds = %if.end79
  %85 = load i8, i8* %k1, align 1
  %conv85 = zext i8 %85 to i32
  %86 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k086 = getelementptr inbounds %struct.DState, %struct.DState* %86, i32 0, i32 15
  store i32 %conv85, i32* %k086, align 8
  br label %while.body

if.end87:                                         ; preds = %if.end79
  %87 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len88 = getelementptr inbounds %struct.DState, %struct.DState* %87, i32 0, i32 3
  store i32 2, i32* %state_out_len88, align 8
  %88 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt89 = getelementptr inbounds %struct.DState, %struct.DState* %88, i32 0, i32 20
  %89 = load i32*, i32** %tt89, align 8
  %90 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos90 = getelementptr inbounds %struct.DState, %struct.DState* %90, i32 0, i32 14
  %91 = load i32, i32* %tPos90, align 4
  %idxprom91 = zext i32 %91 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %89, i64 %idxprom91
  %92 = load i32, i32* %arrayidx92, align 4
  %93 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos93 = getelementptr inbounds %struct.DState, %struct.DState* %93, i32 0, i32 14
  store i32 %92, i32* %tPos93, align 4
  %94 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos94 = getelementptr inbounds %struct.DState, %struct.DState* %94, i32 0, i32 14
  %95 = load i32, i32* %tPos94, align 4
  %and95 = and i32 %95, 255
  %conv96 = trunc i32 %and95 to i8
  store i8 %conv96, i8* %k1, align 1
  %96 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos97 = getelementptr inbounds %struct.DState, %struct.DState* %96, i32 0, i32 14
  %97 = load i32, i32* %tPos97, align 4
  %shr98 = lshr i32 %97, 8
  store i32 %shr98, i32* %tPos97, align 4
  %98 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo99 = getelementptr inbounds %struct.DState, %struct.DState* %98, i32 0, i32 5
  %99 = load i32, i32* %rNToGo99, align 8
  %cmp100 = icmp eq i32 %99, 0
  br i1 %cmp100, label %if.then102, label %if.end115

if.then102:                                       ; preds = %if.end87
  %100 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos103 = getelementptr inbounds %struct.DState, %struct.DState* %100, i32 0, i32 6
  %101 = load i32, i32* %rTPos103, align 4
  %idxprom104 = sext i32 %101 to i64
  %arrayidx105 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom104
  %102 = load i32, i32* %arrayidx105, align 4
  %103 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo106 = getelementptr inbounds %struct.DState, %struct.DState* %103, i32 0, i32 5
  store i32 %102, i32* %rNToGo106, align 8
  %104 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos107 = getelementptr inbounds %struct.DState, %struct.DState* %104, i32 0, i32 6
  %105 = load i32, i32* %rTPos107, align 4
  %inc108 = add nsw i32 %105, 1
  store i32 %inc108, i32* %rTPos107, align 4
  %106 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos109 = getelementptr inbounds %struct.DState, %struct.DState* %106, i32 0, i32 6
  %107 = load i32, i32* %rTPos109, align 4
  %cmp110 = icmp eq i32 %107, 512
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.then102
  %108 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos113 = getelementptr inbounds %struct.DState, %struct.DState* %108, i32 0, i32 6
  store i32 0, i32* %rTPos113, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.then102
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end87
  %109 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo116 = getelementptr inbounds %struct.DState, %struct.DState* %109, i32 0, i32 5
  %110 = load i32, i32* %rNToGo116, align 8
  %dec117 = add nsw i32 %110, -1
  store i32 %dec117, i32* %rNToGo116, align 8
  %111 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo118 = getelementptr inbounds %struct.DState, %struct.DState* %111, i32 0, i32 5
  %112 = load i32, i32* %rNToGo118, align 8
  %cmp119 = icmp eq i32 %112, 1
  %113 = zext i1 %cmp119 to i64
  %cond121 = select i1 %cmp119, i32 1, i32 0
  %114 = load i8, i8* %k1, align 1
  %conv122 = zext i8 %114 to i32
  %xor123 = xor i32 %conv122, %cond121
  %conv124 = trunc i32 %xor123 to i8
  store i8 %conv124, i8* %k1, align 1
  %115 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used125 = getelementptr inbounds %struct.DState, %struct.DState* %115, i32 0, i32 17
  %116 = load i32, i32* %nblock_used125, align 4
  %inc126 = add nsw i32 %116, 1
  store i32 %inc126, i32* %nblock_used125, align 4
  %117 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used127 = getelementptr inbounds %struct.DState, %struct.DState* %117, i32 0, i32 17
  %118 = load i32, i32* %nblock_used127, align 4
  %119 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock128 = getelementptr inbounds %struct.DState, %struct.DState* %119, i32 0, i32 51
  %120 = load i32, i32* %save_nblock128, align 8
  %add129 = add nsw i32 %120, 1
  %cmp130 = icmp eq i32 %118, %add129
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end115
  br label %while.body

if.end133:                                        ; preds = %if.end115
  %121 = load i8, i8* %k1, align 1
  %conv134 = zext i8 %121 to i32
  %122 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0135 = getelementptr inbounds %struct.DState, %struct.DState* %122, i32 0, i32 15
  %123 = load i32, i32* %k0135, align 8
  %cmp136 = icmp ne i32 %conv134, %123
  br i1 %cmp136, label %if.then138, label %if.end141

if.then138:                                       ; preds = %if.end133
  %124 = load i8, i8* %k1, align 1
  %conv139 = zext i8 %124 to i32
  %125 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0140 = getelementptr inbounds %struct.DState, %struct.DState* %125, i32 0, i32 15
  store i32 %conv139, i32* %k0140, align 8
  br label %while.body

if.end141:                                        ; preds = %if.end133
  %126 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len142 = getelementptr inbounds %struct.DState, %struct.DState* %126, i32 0, i32 3
  store i32 3, i32* %state_out_len142, align 8
  %127 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt143 = getelementptr inbounds %struct.DState, %struct.DState* %127, i32 0, i32 20
  %128 = load i32*, i32** %tt143, align 8
  %129 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos144 = getelementptr inbounds %struct.DState, %struct.DState* %129, i32 0, i32 14
  %130 = load i32, i32* %tPos144, align 4
  %idxprom145 = zext i32 %130 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %128, i64 %idxprom145
  %131 = load i32, i32* %arrayidx146, align 4
  %132 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos147 = getelementptr inbounds %struct.DState, %struct.DState* %132, i32 0, i32 14
  store i32 %131, i32* %tPos147, align 4
  %133 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos148 = getelementptr inbounds %struct.DState, %struct.DState* %133, i32 0, i32 14
  %134 = load i32, i32* %tPos148, align 4
  %and149 = and i32 %134, 255
  %conv150 = trunc i32 %and149 to i8
  store i8 %conv150, i8* %k1, align 1
  %135 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos151 = getelementptr inbounds %struct.DState, %struct.DState* %135, i32 0, i32 14
  %136 = load i32, i32* %tPos151, align 4
  %shr152 = lshr i32 %136, 8
  store i32 %shr152, i32* %tPos151, align 4
  %137 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo153 = getelementptr inbounds %struct.DState, %struct.DState* %137, i32 0, i32 5
  %138 = load i32, i32* %rNToGo153, align 8
  %cmp154 = icmp eq i32 %138, 0
  br i1 %cmp154, label %if.then156, label %if.end169

if.then156:                                       ; preds = %if.end141
  %139 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos157 = getelementptr inbounds %struct.DState, %struct.DState* %139, i32 0, i32 6
  %140 = load i32, i32* %rTPos157, align 4
  %idxprom158 = sext i32 %140 to i64
  %arrayidx159 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom158
  %141 = load i32, i32* %arrayidx159, align 4
  %142 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo160 = getelementptr inbounds %struct.DState, %struct.DState* %142, i32 0, i32 5
  store i32 %141, i32* %rNToGo160, align 8
  %143 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos161 = getelementptr inbounds %struct.DState, %struct.DState* %143, i32 0, i32 6
  %144 = load i32, i32* %rTPos161, align 4
  %inc162 = add nsw i32 %144, 1
  store i32 %inc162, i32* %rTPos161, align 4
  %145 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos163 = getelementptr inbounds %struct.DState, %struct.DState* %145, i32 0, i32 6
  %146 = load i32, i32* %rTPos163, align 4
  %cmp164 = icmp eq i32 %146, 512
  br i1 %cmp164, label %if.then166, label %if.end168

if.then166:                                       ; preds = %if.then156
  %147 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos167 = getelementptr inbounds %struct.DState, %struct.DState* %147, i32 0, i32 6
  store i32 0, i32* %rTPos167, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %if.then156
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end141
  %148 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo170 = getelementptr inbounds %struct.DState, %struct.DState* %148, i32 0, i32 5
  %149 = load i32, i32* %rNToGo170, align 8
  %dec171 = add nsw i32 %149, -1
  store i32 %dec171, i32* %rNToGo170, align 8
  %150 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo172 = getelementptr inbounds %struct.DState, %struct.DState* %150, i32 0, i32 5
  %151 = load i32, i32* %rNToGo172, align 8
  %cmp173 = icmp eq i32 %151, 1
  %152 = zext i1 %cmp173 to i64
  %cond175 = select i1 %cmp173, i32 1, i32 0
  %153 = load i8, i8* %k1, align 1
  %conv176 = zext i8 %153 to i32
  %xor177 = xor i32 %conv176, %cond175
  %conv178 = trunc i32 %xor177 to i8
  store i8 %conv178, i8* %k1, align 1
  %154 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used179 = getelementptr inbounds %struct.DState, %struct.DState* %154, i32 0, i32 17
  %155 = load i32, i32* %nblock_used179, align 4
  %inc180 = add nsw i32 %155, 1
  store i32 %inc180, i32* %nblock_used179, align 4
  %156 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used181 = getelementptr inbounds %struct.DState, %struct.DState* %156, i32 0, i32 17
  %157 = load i32, i32* %nblock_used181, align 4
  %158 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock182 = getelementptr inbounds %struct.DState, %struct.DState* %158, i32 0, i32 51
  %159 = load i32, i32* %save_nblock182, align 8
  %add183 = add nsw i32 %159, 1
  %cmp184 = icmp eq i32 %157, %add183
  br i1 %cmp184, label %if.then186, label %if.end187

if.then186:                                       ; preds = %if.end169
  br label %while.body

if.end187:                                        ; preds = %if.end169
  %160 = load i8, i8* %k1, align 1
  %conv188 = zext i8 %160 to i32
  %161 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0189 = getelementptr inbounds %struct.DState, %struct.DState* %161, i32 0, i32 15
  %162 = load i32, i32* %k0189, align 8
  %cmp190 = icmp ne i32 %conv188, %162
  br i1 %cmp190, label %if.then192, label %if.end195

if.then192:                                       ; preds = %if.end187
  %163 = load i8, i8* %k1, align 1
  %conv193 = zext i8 %163 to i32
  %164 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0194 = getelementptr inbounds %struct.DState, %struct.DState* %164, i32 0, i32 15
  store i32 %conv193, i32* %k0194, align 8
  br label %while.body

if.end195:                                        ; preds = %if.end187
  %165 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt196 = getelementptr inbounds %struct.DState, %struct.DState* %165, i32 0, i32 20
  %166 = load i32*, i32** %tt196, align 8
  %167 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos197 = getelementptr inbounds %struct.DState, %struct.DState* %167, i32 0, i32 14
  %168 = load i32, i32* %tPos197, align 4
  %idxprom198 = zext i32 %168 to i64
  %arrayidx199 = getelementptr inbounds i32, i32* %166, i64 %idxprom198
  %169 = load i32, i32* %arrayidx199, align 4
  %170 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos200 = getelementptr inbounds %struct.DState, %struct.DState* %170, i32 0, i32 14
  store i32 %169, i32* %tPos200, align 4
  %171 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos201 = getelementptr inbounds %struct.DState, %struct.DState* %171, i32 0, i32 14
  %172 = load i32, i32* %tPos201, align 4
  %and202 = and i32 %172, 255
  %conv203 = trunc i32 %and202 to i8
  store i8 %conv203, i8* %k1, align 1
  %173 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos204 = getelementptr inbounds %struct.DState, %struct.DState* %173, i32 0, i32 14
  %174 = load i32, i32* %tPos204, align 4
  %shr205 = lshr i32 %174, 8
  store i32 %shr205, i32* %tPos204, align 4
  %175 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo206 = getelementptr inbounds %struct.DState, %struct.DState* %175, i32 0, i32 5
  %176 = load i32, i32* %rNToGo206, align 8
  %cmp207 = icmp eq i32 %176, 0
  br i1 %cmp207, label %if.then209, label %if.end222

if.then209:                                       ; preds = %if.end195
  %177 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos210 = getelementptr inbounds %struct.DState, %struct.DState* %177, i32 0, i32 6
  %178 = load i32, i32* %rTPos210, align 4
  %idxprom211 = sext i32 %178 to i64
  %arrayidx212 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom211
  %179 = load i32, i32* %arrayidx212, align 4
  %180 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo213 = getelementptr inbounds %struct.DState, %struct.DState* %180, i32 0, i32 5
  store i32 %179, i32* %rNToGo213, align 8
  %181 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos214 = getelementptr inbounds %struct.DState, %struct.DState* %181, i32 0, i32 6
  %182 = load i32, i32* %rTPos214, align 4
  %inc215 = add nsw i32 %182, 1
  store i32 %inc215, i32* %rTPos214, align 4
  %183 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos216 = getelementptr inbounds %struct.DState, %struct.DState* %183, i32 0, i32 6
  %184 = load i32, i32* %rTPos216, align 4
  %cmp217 = icmp eq i32 %184, 512
  br i1 %cmp217, label %if.then219, label %if.end221

if.then219:                                       ; preds = %if.then209
  %185 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos220 = getelementptr inbounds %struct.DState, %struct.DState* %185, i32 0, i32 6
  store i32 0, i32* %rTPos220, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then219, %if.then209
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end195
  %186 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo223 = getelementptr inbounds %struct.DState, %struct.DState* %186, i32 0, i32 5
  %187 = load i32, i32* %rNToGo223, align 8
  %dec224 = add nsw i32 %187, -1
  store i32 %dec224, i32* %rNToGo223, align 8
  %188 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo225 = getelementptr inbounds %struct.DState, %struct.DState* %188, i32 0, i32 5
  %189 = load i32, i32* %rNToGo225, align 8
  %cmp226 = icmp eq i32 %189, 1
  %190 = zext i1 %cmp226 to i64
  %cond228 = select i1 %cmp226, i32 1, i32 0
  %191 = load i8, i8* %k1, align 1
  %conv229 = zext i8 %191 to i32
  %xor230 = xor i32 %conv229, %cond228
  %conv231 = trunc i32 %xor230 to i8
  store i8 %conv231, i8* %k1, align 1
  %192 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used232 = getelementptr inbounds %struct.DState, %struct.DState* %192, i32 0, i32 17
  %193 = load i32, i32* %nblock_used232, align 4
  %inc233 = add nsw i32 %193, 1
  store i32 %inc233, i32* %nblock_used232, align 4
  %194 = load i8, i8* %k1, align 1
  %conv234 = zext i8 %194 to i32
  %add235 = add nsw i32 %conv234, 4
  %195 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len236 = getelementptr inbounds %struct.DState, %struct.DState* %195, i32 0, i32 3
  store i32 %add235, i32* %state_out_len236, align 8
  %196 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt237 = getelementptr inbounds %struct.DState, %struct.DState* %196, i32 0, i32 20
  %197 = load i32*, i32** %tt237, align 8
  %198 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos238 = getelementptr inbounds %struct.DState, %struct.DState* %198, i32 0, i32 14
  %199 = load i32, i32* %tPos238, align 4
  %idxprom239 = zext i32 %199 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %197, i64 %idxprom239
  %200 = load i32, i32* %arrayidx240, align 4
  %201 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos241 = getelementptr inbounds %struct.DState, %struct.DState* %201, i32 0, i32 14
  store i32 %200, i32* %tPos241, align 4
  %202 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos242 = getelementptr inbounds %struct.DState, %struct.DState* %202, i32 0, i32 14
  %203 = load i32, i32* %tPos242, align 4
  %and243 = and i32 %203, 255
  %conv244 = trunc i32 %and243 to i8
  %conv245 = zext i8 %conv244 to i32
  %204 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0246 = getelementptr inbounds %struct.DState, %struct.DState* %204, i32 0, i32 15
  store i32 %conv245, i32* %k0246, align 8
  %205 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos247 = getelementptr inbounds %struct.DState, %struct.DState* %205, i32 0, i32 14
  %206 = load i32, i32* %tPos247, align 4
  %shr248 = lshr i32 %206, 8
  store i32 %shr248, i32* %tPos247, align 4
  %207 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo249 = getelementptr inbounds %struct.DState, %struct.DState* %207, i32 0, i32 5
  %208 = load i32, i32* %rNToGo249, align 8
  %cmp250 = icmp eq i32 %208, 0
  br i1 %cmp250, label %if.then252, label %if.end265

if.then252:                                       ; preds = %if.end222
  %209 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos253 = getelementptr inbounds %struct.DState, %struct.DState* %209, i32 0, i32 6
  %210 = load i32, i32* %rTPos253, align 4
  %idxprom254 = sext i32 %210 to i64
  %arrayidx255 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom254
  %211 = load i32, i32* %arrayidx255, align 4
  %212 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo256 = getelementptr inbounds %struct.DState, %struct.DState* %212, i32 0, i32 5
  store i32 %211, i32* %rNToGo256, align 8
  %213 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos257 = getelementptr inbounds %struct.DState, %struct.DState* %213, i32 0, i32 6
  %214 = load i32, i32* %rTPos257, align 4
  %inc258 = add nsw i32 %214, 1
  store i32 %inc258, i32* %rTPos257, align 4
  %215 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos259 = getelementptr inbounds %struct.DState, %struct.DState* %215, i32 0, i32 6
  %216 = load i32, i32* %rTPos259, align 4
  %cmp260 = icmp eq i32 %216, 512
  br i1 %cmp260, label %if.then262, label %if.end264

if.then262:                                       ; preds = %if.then252
  %217 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos263 = getelementptr inbounds %struct.DState, %struct.DState* %217, i32 0, i32 6
  store i32 0, i32* %rTPos263, align 4
  br label %if.end264

if.end264:                                        ; preds = %if.then262, %if.then252
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.end222
  %218 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo266 = getelementptr inbounds %struct.DState, %struct.DState* %218, i32 0, i32 5
  %219 = load i32, i32* %rNToGo266, align 8
  %dec267 = add nsw i32 %219, -1
  store i32 %dec267, i32* %rNToGo266, align 8
  %220 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo268 = getelementptr inbounds %struct.DState, %struct.DState* %220, i32 0, i32 5
  %221 = load i32, i32* %rNToGo268, align 8
  %cmp269 = icmp eq i32 %221, 1
  %222 = zext i1 %cmp269 to i64
  %cond271 = select i1 %cmp269, i32 1, i32 0
  %223 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0272 = getelementptr inbounds %struct.DState, %struct.DState* %223, i32 0, i32 15
  %224 = load i32, i32* %k0272, align 8
  %xor273 = xor i32 %224, %cond271
  store i32 %xor273, i32* %k0272, align 8
  %225 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used274 = getelementptr inbounds %struct.DState, %struct.DState* %225, i32 0, i32 17
  %226 = load i32, i32* %nblock_used274, align 4
  %inc275 = add nsw i32 %226, 1
  store i32 %inc275, i32* %nblock_used274, align 4
  br label %while.body

if.else:                                          ; preds = %entry
  %227 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC276 = getelementptr inbounds %struct.DState, %struct.DState* %227, i32 0, i32 25
  %228 = load i32, i32* %calculatedBlockCRC276, align 8
  store i32 %228, i32* %c_calculatedBlockCRC, align 4
  %229 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch277 = getelementptr inbounds %struct.DState, %struct.DState* %229, i32 0, i32 2
  %230 = load i8, i8* %state_out_ch277, align 4
  store i8 %230, i8* %c_state_out_ch, align 1
  %231 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len278 = getelementptr inbounds %struct.DState, %struct.DState* %231, i32 0, i32 3
  %232 = load i32, i32* %state_out_len278, align 8
  store i32 %232, i32* %c_state_out_len, align 4
  %233 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used279 = getelementptr inbounds %struct.DState, %struct.DState* %233, i32 0, i32 17
  %234 = load i32, i32* %nblock_used279, align 4
  store i32 %234, i32* %c_nblock_used, align 4
  %235 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0280 = getelementptr inbounds %struct.DState, %struct.DState* %235, i32 0, i32 15
  %236 = load i32, i32* %k0280, align 8
  store i32 %236, i32* %c_k0, align 4
  %237 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt281 = getelementptr inbounds %struct.DState, %struct.DState* %237, i32 0, i32 20
  %238 = load i32*, i32** %tt281, align 8
  store i32* %238, i32** %c_tt, align 8
  %239 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos282 = getelementptr inbounds %struct.DState, %struct.DState* %239, i32 0, i32 14
  %240 = load i32, i32* %tPos282, align 4
  store i32 %240, i32* %c_tPos, align 4
  %241 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm283 = getelementptr inbounds %struct.DState, %struct.DState* %241, i32 0, i32 0
  %242 = load %struct.bz_stream*, %struct.bz_stream** %strm283, align 8
  %next_out284 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %242, i32 0, i32 4
  %243 = load i8*, i8** %next_out284, align 8
  store i8* %243, i8** %cs_next_out, align 8
  %244 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm285 = getelementptr inbounds %struct.DState, %struct.DState* %244, i32 0, i32 0
  %245 = load %struct.bz_stream*, %struct.bz_stream** %strm285, align 8
  %avail_out286 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %245, i32 0, i32 5
  %246 = load i32, i32* %avail_out286, align 8
  store i32 %246, i32* %cs_avail_out, align 4
  %247 = load i32, i32* %cs_avail_out, align 4
  store i32 %247, i32* %avail_out_INIT, align 4
  %248 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock287 = getelementptr inbounds %struct.DState, %struct.DState* %248, i32 0, i32 51
  %249 = load i32, i32* %save_nblock287, align 8
  %add288 = add nsw i32 %249, 1
  store i32 %add288, i32* %s_save_nblockPP, align 4
  br label %while.body289

while.body289:                                    ; preds = %if.end384, %if.then382, %if.then377, %if.then366, %if.then361, %if.else
  %250 = load i32, i32* %c_state_out_len, align 4
  %cmp290 = icmp sgt i32 %250, 0
  br i1 %cmp290, label %if.then292, label %if.end327

if.then292:                                       ; preds = %while.body289
  br label %while.body294

while.body294:                                    ; preds = %if.end302, %if.then292
  %251 = load i32, i32* %cs_avail_out, align 4
  %cmp295 = icmp eq i32 %251, 0
  br i1 %cmp295, label %if.then297, label %if.end298

if.then297:                                       ; preds = %while.body294
  br label %return_notr

if.end298:                                        ; preds = %while.body294
  %252 = load i32, i32* %c_state_out_len, align 4
  %cmp299 = icmp eq i32 %252, 1
  br i1 %cmp299, label %if.then301, label %if.end302

if.then301:                                       ; preds = %if.end298
  br label %while.end313

if.end302:                                        ; preds = %if.end298
  %253 = load i8, i8* %c_state_out_ch, align 1
  %254 = load i8*, i8** %cs_next_out, align 8
  store i8 %253, i8* %254, align 1
  %255 = load i32, i32* %c_calculatedBlockCRC, align 4
  %shl303 = shl i32 %255, 8
  %256 = load i32, i32* %c_calculatedBlockCRC, align 4
  %shr304 = lshr i32 %256, 24
  %257 = load i8, i8* %c_state_out_ch, align 1
  %conv305 = zext i8 %257 to i32
  %xor306 = xor i32 %shr304, %conv305
  %idxprom307 = zext i32 %xor306 to i64
  %arrayidx308 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom307
  %258 = load i32, i32* %arrayidx308, align 4
  %xor309 = xor i32 %shl303, %258
  store i32 %xor309, i32* %c_calculatedBlockCRC, align 4
  %259 = load i32, i32* %c_state_out_len, align 4
  %dec310 = add nsw i32 %259, -1
  store i32 %dec310, i32* %c_state_out_len, align 4
  %260 = load i8*, i8** %cs_next_out, align 8
  %incdec.ptr311 = getelementptr inbounds i8, i8* %260, i32 1
  store i8* %incdec.ptr311, i8** %cs_next_out, align 8
  %261 = load i32, i32* %cs_avail_out, align 4
  %dec312 = add i32 %261, -1
  store i32 %dec312, i32* %cs_avail_out, align 4
  br label %while.body294

while.end313:                                     ; preds = %if.then301
  br label %s_state_out_len_eq_one

s_state_out_len_eq_one:                           ; preds = %if.then351, %if.then346, %while.end313
  %262 = load i32, i32* %cs_avail_out, align 4
  %cmp314 = icmp eq i32 %262, 0
  br i1 %cmp314, label %if.then316, label %if.end317

if.then316:                                       ; preds = %s_state_out_len_eq_one
  store i32 1, i32* %c_state_out_len, align 4
  br label %return_notr

if.end317:                                        ; preds = %s_state_out_len_eq_one
  %263 = load i8, i8* %c_state_out_ch, align 1
  %264 = load i8*, i8** %cs_next_out, align 8
  store i8 %263, i8* %264, align 1
  %265 = load i32, i32* %c_calculatedBlockCRC, align 4
  %shl318 = shl i32 %265, 8
  %266 = load i32, i32* %c_calculatedBlockCRC, align 4
  %shr319 = lshr i32 %266, 24
  %267 = load i8, i8* %c_state_out_ch, align 1
  %conv320 = zext i8 %267 to i32
  %xor321 = xor i32 %shr319, %conv320
  %idxprom322 = zext i32 %xor321 to i64
  %arrayidx323 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom322
  %268 = load i32, i32* %arrayidx323, align 4
  %xor324 = xor i32 %shl318, %268
  store i32 %xor324, i32* %c_calculatedBlockCRC, align 4
  %269 = load i8*, i8** %cs_next_out, align 8
  %incdec.ptr325 = getelementptr inbounds i8, i8* %269, i32 1
  store i8* %incdec.ptr325, i8** %cs_next_out, align 8
  %270 = load i32, i32* %cs_avail_out, align 4
  %dec326 = add i32 %270, -1
  store i32 %dec326, i32* %cs_avail_out, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.end317, %while.body289
  %271 = load i32, i32* %c_nblock_used, align 4
  %272 = load i32, i32* %s_save_nblockPP, align 4
  %cmp328 = icmp sgt i32 %271, %272
  br i1 %cmp328, label %if.then330, label %if.end331

if.then330:                                       ; preds = %if.end327
  store i8 1, i8* %retval, align 1
  br label %return

if.end331:                                        ; preds = %if.end327
  %273 = load i32, i32* %c_nblock_used, align 4
  %274 = load i32, i32* %s_save_nblockPP, align 4
  %cmp332 = icmp eq i32 %273, %274
  br i1 %cmp332, label %if.then334, label %if.end335

if.then334:                                       ; preds = %if.end331
  store i32 0, i32* %c_state_out_len, align 4
  br label %return_notr

if.end335:                                        ; preds = %if.end331
  %275 = load i32, i32* %c_k0, align 4
  %conv336 = trunc i32 %275 to i8
  store i8 %conv336, i8* %c_state_out_ch, align 1
  %276 = load i32*, i32** %c_tt, align 8
  %277 = load i32, i32* %c_tPos, align 4
  %idxprom337 = zext i32 %277 to i64
  %arrayidx338 = getelementptr inbounds i32, i32* %276, i64 %idxprom337
  %278 = load i32, i32* %arrayidx338, align 4
  store i32 %278, i32* %c_tPos, align 4
  %279 = load i32, i32* %c_tPos, align 4
  %and339 = and i32 %279, 255
  %conv340 = trunc i32 %and339 to i8
  store i8 %conv340, i8* %k1, align 1
  %280 = load i32, i32* %c_tPos, align 4
  %shr341 = lshr i32 %280, 8
  store i32 %shr341, i32* %c_tPos, align 4
  %281 = load i32, i32* %c_nblock_used, align 4
  %inc342 = add nsw i32 %281, 1
  store i32 %inc342, i32* %c_nblock_used, align 4
  %282 = load i8, i8* %k1, align 1
  %conv343 = zext i8 %282 to i32
  %283 = load i32, i32* %c_k0, align 4
  %cmp344 = icmp ne i32 %conv343, %283
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.end335
  %284 = load i8, i8* %k1, align 1
  %conv347 = zext i8 %284 to i32
  store i32 %conv347, i32* %c_k0, align 4
  br label %s_state_out_len_eq_one

if.end348:                                        ; preds = %if.end335
  %285 = load i32, i32* %c_nblock_used, align 4
  %286 = load i32, i32* %s_save_nblockPP, align 4
  %cmp349 = icmp eq i32 %285, %286
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %if.end348
  br label %s_state_out_len_eq_one

if.end352:                                        ; preds = %if.end348
  store i32 2, i32* %c_state_out_len, align 4
  %287 = load i32*, i32** %c_tt, align 8
  %288 = load i32, i32* %c_tPos, align 4
  %idxprom353 = zext i32 %288 to i64
  %arrayidx354 = getelementptr inbounds i32, i32* %287, i64 %idxprom353
  %289 = load i32, i32* %arrayidx354, align 4
  store i32 %289, i32* %c_tPos, align 4
  %290 = load i32, i32* %c_tPos, align 4
  %and355 = and i32 %290, 255
  %conv356 = trunc i32 %and355 to i8
  store i8 %conv356, i8* %k1, align 1
  %291 = load i32, i32* %c_tPos, align 4
  %shr357 = lshr i32 %291, 8
  store i32 %shr357, i32* %c_tPos, align 4
  %292 = load i32, i32* %c_nblock_used, align 4
  %inc358 = add nsw i32 %292, 1
  store i32 %inc358, i32* %c_nblock_used, align 4
  %293 = load i32, i32* %c_nblock_used, align 4
  %294 = load i32, i32* %s_save_nblockPP, align 4
  %cmp359 = icmp eq i32 %293, %294
  br i1 %cmp359, label %if.then361, label %if.end362

if.then361:                                       ; preds = %if.end352
  br label %while.body289

if.end362:                                        ; preds = %if.end352
  %295 = load i8, i8* %k1, align 1
  %conv363 = zext i8 %295 to i32
  %296 = load i32, i32* %c_k0, align 4
  %cmp364 = icmp ne i32 %conv363, %296
  br i1 %cmp364, label %if.then366, label %if.end368

if.then366:                                       ; preds = %if.end362
  %297 = load i8, i8* %k1, align 1
  %conv367 = zext i8 %297 to i32
  store i32 %conv367, i32* %c_k0, align 4
  br label %while.body289

if.end368:                                        ; preds = %if.end362
  store i32 3, i32* %c_state_out_len, align 4
  %298 = load i32*, i32** %c_tt, align 8
  %299 = load i32, i32* %c_tPos, align 4
  %idxprom369 = zext i32 %299 to i64
  %arrayidx370 = getelementptr inbounds i32, i32* %298, i64 %idxprom369
  %300 = load i32, i32* %arrayidx370, align 4
  store i32 %300, i32* %c_tPos, align 4
  %301 = load i32, i32* %c_tPos, align 4
  %and371 = and i32 %301, 255
  %conv372 = trunc i32 %and371 to i8
  store i8 %conv372, i8* %k1, align 1
  %302 = load i32, i32* %c_tPos, align 4
  %shr373 = lshr i32 %302, 8
  store i32 %shr373, i32* %c_tPos, align 4
  %303 = load i32, i32* %c_nblock_used, align 4
  %inc374 = add nsw i32 %303, 1
  store i32 %inc374, i32* %c_nblock_used, align 4
  %304 = load i32, i32* %c_nblock_used, align 4
  %305 = load i32, i32* %s_save_nblockPP, align 4
  %cmp375 = icmp eq i32 %304, %305
  br i1 %cmp375, label %if.then377, label %if.end378

if.then377:                                       ; preds = %if.end368
  br label %while.body289

if.end378:                                        ; preds = %if.end368
  %306 = load i8, i8* %k1, align 1
  %conv379 = zext i8 %306 to i32
  %307 = load i32, i32* %c_k0, align 4
  %cmp380 = icmp ne i32 %conv379, %307
  br i1 %cmp380, label %if.then382, label %if.end384

if.then382:                                       ; preds = %if.end378
  %308 = load i8, i8* %k1, align 1
  %conv383 = zext i8 %308 to i32
  store i32 %conv383, i32* %c_k0, align 4
  br label %while.body289

if.end384:                                        ; preds = %if.end378
  %309 = load i32*, i32** %c_tt, align 8
  %310 = load i32, i32* %c_tPos, align 4
  %idxprom385 = zext i32 %310 to i64
  %arrayidx386 = getelementptr inbounds i32, i32* %309, i64 %idxprom385
  %311 = load i32, i32* %arrayidx386, align 4
  store i32 %311, i32* %c_tPos, align 4
  %312 = load i32, i32* %c_tPos, align 4
  %and387 = and i32 %312, 255
  %conv388 = trunc i32 %and387 to i8
  store i8 %conv388, i8* %k1, align 1
  %313 = load i32, i32* %c_tPos, align 4
  %shr389 = lshr i32 %313, 8
  store i32 %shr389, i32* %c_tPos, align 4
  %314 = load i32, i32* %c_nblock_used, align 4
  %inc390 = add nsw i32 %314, 1
  store i32 %inc390, i32* %c_nblock_used, align 4
  %315 = load i8, i8* %k1, align 1
  %conv391 = zext i8 %315 to i32
  %add392 = add nsw i32 %conv391, 4
  store i32 %add392, i32* %c_state_out_len, align 4
  %316 = load i32*, i32** %c_tt, align 8
  %317 = load i32, i32* %c_tPos, align 4
  %idxprom393 = zext i32 %317 to i64
  %arrayidx394 = getelementptr inbounds i32, i32* %316, i64 %idxprom393
  %318 = load i32, i32* %arrayidx394, align 4
  store i32 %318, i32* %c_tPos, align 4
  %319 = load i32, i32* %c_tPos, align 4
  %and395 = and i32 %319, 255
  %conv396 = trunc i32 %and395 to i8
  %conv397 = zext i8 %conv396 to i32
  store i32 %conv397, i32* %c_k0, align 4
  %320 = load i32, i32* %c_tPos, align 4
  %shr398 = lshr i32 %320, 8
  store i32 %shr398, i32* %c_tPos, align 4
  %321 = load i32, i32* %c_nblock_used, align 4
  %inc399 = add nsw i32 %321, 1
  store i32 %inc399, i32* %c_nblock_used, align 4
  br label %while.body289

return_notr:                                      ; preds = %if.then334, %if.then316, %if.then297
  %322 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm400 = getelementptr inbounds %struct.DState, %struct.DState* %322, i32 0, i32 0
  %323 = load %struct.bz_stream*, %struct.bz_stream** %strm400, align 8
  %total_out_lo32401 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %323, i32 0, i32 6
  %324 = load i32, i32* %total_out_lo32401, align 4
  store i32 %324, i32* %total_out_lo32_old, align 4
  %325 = load i32, i32* %avail_out_INIT, align 4
  %326 = load i32, i32* %cs_avail_out, align 4
  %sub = sub i32 %325, %326
  %327 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm402 = getelementptr inbounds %struct.DState, %struct.DState* %327, i32 0, i32 0
  %328 = load %struct.bz_stream*, %struct.bz_stream** %strm402, align 8
  %total_out_lo32403 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %328, i32 0, i32 6
  %329 = load i32, i32* %total_out_lo32403, align 4
  %add404 = add i32 %329, %sub
  store i32 %add404, i32* %total_out_lo32403, align 4
  %330 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm405 = getelementptr inbounds %struct.DState, %struct.DState* %330, i32 0, i32 0
  %331 = load %struct.bz_stream*, %struct.bz_stream** %strm405, align 8
  %total_out_lo32406 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %331, i32 0, i32 6
  %332 = load i32, i32* %total_out_lo32406, align 4
  %333 = load i32, i32* %total_out_lo32_old, align 4
  %cmp407 = icmp ult i32 %332, %333
  br i1 %cmp407, label %if.then409, label %if.end413

if.then409:                                       ; preds = %return_notr
  %334 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm410 = getelementptr inbounds %struct.DState, %struct.DState* %334, i32 0, i32 0
  %335 = load %struct.bz_stream*, %struct.bz_stream** %strm410, align 8
  %total_out_hi32411 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %335, i32 0, i32 7
  %336 = load i32, i32* %total_out_hi32411, align 8
  %inc412 = add i32 %336, 1
  store i32 %inc412, i32* %total_out_hi32411, align 8
  br label %if.end413

if.end413:                                        ; preds = %if.then409, %return_notr
  %337 = load i32, i32* %c_calculatedBlockCRC, align 4
  %338 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC414 = getelementptr inbounds %struct.DState, %struct.DState* %338, i32 0, i32 25
  store i32 %337, i32* %calculatedBlockCRC414, align 8
  %339 = load i8, i8* %c_state_out_ch, align 1
  %340 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch415 = getelementptr inbounds %struct.DState, %struct.DState* %340, i32 0, i32 2
  store i8 %339, i8* %state_out_ch415, align 4
  %341 = load i32, i32* %c_state_out_len, align 4
  %342 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len416 = getelementptr inbounds %struct.DState, %struct.DState* %342, i32 0, i32 3
  store i32 %341, i32* %state_out_len416, align 8
  %343 = load i32, i32* %c_nblock_used, align 4
  %344 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used417 = getelementptr inbounds %struct.DState, %struct.DState* %344, i32 0, i32 17
  store i32 %343, i32* %nblock_used417, align 4
  %345 = load i32, i32* %c_k0, align 4
  %346 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0418 = getelementptr inbounds %struct.DState, %struct.DState* %346, i32 0, i32 15
  store i32 %345, i32* %k0418, align 8
  %347 = load i32*, i32** %c_tt, align 8
  %348 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt419 = getelementptr inbounds %struct.DState, %struct.DState* %348, i32 0, i32 20
  store i32* %347, i32** %tt419, align 8
  %349 = load i32, i32* %c_tPos, align 4
  %350 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos420 = getelementptr inbounds %struct.DState, %struct.DState* %350, i32 0, i32 14
  store i32 %349, i32* %tPos420, align 4
  %351 = load i8*, i8** %cs_next_out, align 8
  %352 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm421 = getelementptr inbounds %struct.DState, %struct.DState* %352, i32 0, i32 0
  %353 = load %struct.bz_stream*, %struct.bz_stream** %strm421, align 8
  %next_out422 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %353, i32 0, i32 4
  store i8* %351, i8** %next_out422, align 8
  %354 = load i32, i32* %cs_avail_out, align 4
  %355 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm423 = getelementptr inbounds %struct.DState, %struct.DState* %355, i32 0, i32 0
  %356 = load %struct.bz_stream*, %struct.bz_stream** %strm423, align 8
  %avail_out424 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %356, i32 0, i32 5
  store i32 %354, i32* %avail_out424, align 8
  br label %if.end425

if.end425:                                        ; preds = %if.end413
  store i8 0, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end425, %if.then330, %if.then36, %if.then29, %if.then3
  %357 = load i8, i8* %retval, align 1
  ret i8 %357
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #0 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.bz_stream*, align 8
  %s = alloca %struct.DState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm.addr, align 8
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp = icmp eq %struct.bz_stream* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1, i32 0, i32 8
  %2 = load i8*, i8** %state, align 8
  %3 = bitcast i8* %2 to %struct.DState*
  store %struct.DState* %3, %struct.DState** %s, align 8
  %4 = load %struct.DState*, %struct.DState** %s, align 8
  %cmp1 = icmp eq %struct.DState* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load %struct.DState*, %struct.DState** %s, align 8
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %5, i32 0, i32 0
  %6 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %7 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %cmp5 = icmp ne %struct.bz_stream* %6, %7
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -2, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.DState*, %struct.DState** %s, align 8
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %8, i32 0, i32 20
  %9 = load i32*, i32** %tt, align 8
  %cmp8 = icmp ne i32* %9, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 10
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %12 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i32 0, i32 11
  %13 = load i8*, i8** %opaque, align 8
  %14 = load %struct.DState*, %struct.DState** %s, align 8
  %tt10 = getelementptr inbounds %struct.DState, %struct.DState* %14, i32 0, i32 20
  %15 = load i32*, i32** %tt10, align 8
  %16 = bitcast i32* %15 to i8*
  call void %11(i8* %13, i8* %16)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %17 = load %struct.DState*, %struct.DState** %s, align 8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %17, i32 0, i32 21
  %18 = load i16*, i16** %ll16, align 8
  %cmp12 = icmp ne i16* %18, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end11
  %19 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %19, i32 0, i32 10
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8
  %21 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 11
  %22 = load i8*, i8** %opaque15, align 8
  %23 = load %struct.DState*, %struct.DState** %s, align 8
  %ll1616 = getelementptr inbounds %struct.DState, %struct.DState* %23, i32 0, i32 21
  %24 = load i16*, i16** %ll1616, align 8
  %25 = bitcast i16* %24 to i8*
  call void %20(i8* %22, i8* %25)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %26 = load %struct.DState*, %struct.DState** %s, align 8
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %26, i32 0, i32 22
  %27 = load i8*, i8** %ll4, align 8
  %cmp18 = icmp ne i8* %27, null
  br i1 %cmp18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %28 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %28, i32 0, i32 10
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree20, align 8
  %30 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %30, i32 0, i32 11
  %31 = load i8*, i8** %opaque21, align 8
  %32 = load %struct.DState*, %struct.DState** %s, align 8
  %ll422 = getelementptr inbounds %struct.DState, %struct.DState* %32, i32 0, i32 22
  %33 = load i8*, i8** %ll422, align 8
  call void %29(i8* %31, i8* %33)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %34 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %bzfree24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %34, i32 0, i32 10
  %35 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree24, align 8
  %36 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %opaque25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %36, i32 0, i32 11
  %37 = load i8*, i8** %opaque25, align 8
  %38 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %38, i32 0, i32 8
  %39 = load i8*, i8** %state26, align 8
  call void %35(i8* %37, i8* %39)
  %40 = load %struct.bz_stream*, %struct.bz_stream** %strm.addr, align 8
  %state27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %40, i32 0, i32 8
  store i8* null, i8** %state27, align 8
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end23, %if.then6, %if.then2, %if.then
  %41 = load i32, i32* %retval, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzWriteOpen(i32* %bzerror, %struct._IO_FILE* %f, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %retval = alloca i8*, align 8
  %bzerror.addr = alloca i32*, align 8
  %f.addr = alloca %struct._IO_FILE*, align 8
  %blockSize100k.addr = alloca i32, align 4
  %verbosity.addr = alloca i32, align 4
  %workFactor.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  store i32 %blockSize100k, i32* %blockSize100k.addr, align 4
  store i32 %verbosity, i32* %verbosity.addr, align 4
  store i32 %workFactor, i32* %workFactor.addr, align 4
  store %struct.bzFile* null, %struct.bzFile** %bzf, align 8
  %0 = load i32*, i32** %bzerror.addr, align 8
  %cmp = icmp ne i32* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp1 = icmp ne %struct.bzFile* %2, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %3 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %cmp4 = icmp eq %struct._IO_FILE* %4, null
  br i1 %cmp4, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %5 = load i32, i32* %blockSize100k.addr, align 4
  %cmp5 = icmp slt i32 %5, 1
  br i1 %cmp5, label %if.then16, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %blockSize100k.addr, align 4
  %cmp7 = icmp sgt i32 %6, 9
  br i1 %cmp7, label %if.then16, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %7 = load i32, i32* %workFactor.addr, align 4
  %cmp9 = icmp slt i32 %7, 0
  br i1 %cmp9, label %if.then16, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %8 = load i32, i32* %workFactor.addr, align 4
  %cmp11 = icmp sgt i32 %8, 250
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %9 = load i32, i32* %verbosity.addr, align 4
  %cmp13 = icmp slt i32 %9, 0
  br i1 %cmp13, label %if.then16, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %10 = load i32, i32* %verbosity.addr, align 4
  %cmp15 = icmp sgt i32 %10, 4
  br i1 %cmp15, label %if.then16, label %if.end24

if.then16:                                        ; preds = %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false, %if.end3
  %11 = load i32*, i32** %bzerror.addr, align 8
  %cmp17 = icmp ne i32* %11, null
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then16
  %12 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %12, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then16
  %13 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp20 = icmp ne %struct.bzFile* %13, null
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end19
  %14 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr22 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %14, i32 0, i32 5
  store i32 -2, i32* %lastErr22, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end19
  store i8* null, i8** %retval, align 8
  br label %return

if.end24:                                         ; preds = %lor.lhs.false14
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %15) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then25, label %if.end33

if.then25:                                        ; preds = %if.end24
  %16 = load i32*, i32** %bzerror.addr, align 8
  %cmp26 = icmp ne i32* %16, null
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then25
  %17 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %17, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.then25
  %18 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp29 = icmp ne %struct.bzFile* %18, null
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end28
  %19 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %19, i32 0, i32 5
  store i32 -6, i32* %lastErr31, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28
  store i8* null, i8** %retval, align 8
  br label %return

if.end33:                                         ; preds = %if.end24
  %call34 = call noalias i8* @malloc(i64 5104) #9
  %20 = bitcast i8* %call34 to %struct.bzFile*
  store %struct.bzFile* %20, %struct.bzFile** %bzf, align 8
  %21 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp35 = icmp eq %struct.bzFile* %21, null
  br i1 %cmp35, label %if.then36, label %if.end44

if.then36:                                        ; preds = %if.end33
  %22 = load i32*, i32** %bzerror.addr, align 8
  %cmp37 = icmp ne i32* %22, null
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.then36
  %23 = load i32*, i32** %bzerror.addr, align 8
  store i32 -3, i32* %23, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.then36
  %24 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp40 = icmp ne %struct.bzFile* %24, null
  br i1 %cmp40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.end39
  %25 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %25, i32 0, i32 5
  store i32 -3, i32* %lastErr42, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end39
  store i8* null, i8** %retval, align 8
  br label %return

if.end44:                                         ; preds = %if.end33
  %26 = load i32*, i32** %bzerror.addr, align 8
  %cmp45 = icmp ne i32* %26, null
  br i1 %cmp45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end44
  %27 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %27, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.end44
  %28 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp48 = icmp ne %struct.bzFile* %28, null
  br i1 %cmp48, label %if.then49, label %if.end51

if.then49:                                        ; preds = %if.end47
  %29 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %29, i32 0, i32 5
  store i32 0, i32* %lastErr50, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.end47
  %30 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %30, i32 0, i32 6
  store i8 0, i8* %initialisedOk, align 4
  %31 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %31, i32 0, i32 2
  store i32 0, i32* %bufN, align 8
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %33 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %33, i32 0, i32 0
  store %struct._IO_FILE* %32, %struct._IO_FILE** %handle, align 8
  %34 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %34, i32 0, i32 3
  store i8 1, i8* %writing, align 4
  %35 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %35, i32 0, i32 4
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %36 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %36, i32 0, i32 4
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm52, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %37 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %37, i32 0, i32 4
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm53, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %38 = load i32, i32* %workFactor.addr, align 4
  %cmp54 = icmp eq i32 %38, 0
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end51
  store i32 30, i32* %workFactor.addr, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.end51
  %39 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %40 = load i32, i32* %blockSize100k.addr, align 4
  %41 = load i32, i32* %verbosity.addr, align 4
  %42 = load i32, i32* %workFactor.addr, align 4
  %call58 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm57, i32 %40, i32 %41, i32 %42)
  store i32 %call58, i32* %ret, align 4
  %43 = load i32, i32* %ret, align 4
  %cmp59 = icmp ne i32 %43, 0
  br i1 %cmp59, label %if.then60, label %if.end68

if.then60:                                        ; preds = %if.end56
  %44 = load i32*, i32** %bzerror.addr, align 8
  %cmp61 = icmp ne i32* %44, null
  br i1 %cmp61, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.then60
  %45 = load i32, i32* %ret, align 4
  %46 = load i32*, i32** %bzerror.addr, align 8
  store i32 %45, i32* %46, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.then60
  %47 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp64 = icmp ne %struct.bzFile* %47, null
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.end63
  %48 = load i32, i32* %ret, align 4
  %49 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %49, i32 0, i32 5
  store i32 %48, i32* %lastErr66, align 8
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.end63
  %50 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %51 = bitcast %struct.bzFile* %50 to i8*
  call void @free(i8* %51) #9
  store i8* null, i8** %retval, align 8
  br label %return

if.end68:                                         ; preds = %if.end56
  %52 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %52, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm69, i32 0, i32 1
  store i32 0, i32* %avail_in, align 8
  %53 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %initialisedOk70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %53, i32 0, i32 6
  store i8 1, i8* %initialisedOk70, align 4
  %54 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %55 = bitcast %struct.bzFile* %54 to i8*
  store i8* %55, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end68, %if.end67, %if.end43, %if.end32, %if.end23
  %56 = load i8*, i8** %retval, align 8
  ret i8* %56
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWrite(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  store %struct.bzFile* %1, %struct.bzFile** %bzf, align 8
  %2 = load i32*, i32** %bzerror.addr, align 8
  %cmp = icmp ne i32* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp1 = icmp ne %struct.bzFile* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp4 = icmp eq %struct.bzFile* %6, null
  br i1 %cmp4, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %7 = load i8*, i8** %buf.addr, align 8
  %cmp5 = icmp eq i8* %7, null
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %len.addr, align 4
  %cmp7 = icmp slt i32 %8, 0
  br i1 %cmp7, label %if.then8, label %if.end16

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end3
  %9 = load i32*, i32** %bzerror.addr, align 8
  %cmp9 = icmp ne i32* %9, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  %10 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %10, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  %11 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp12 = icmp ne %struct.bzFile* %11, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  %12 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr14 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %12, i32 0, i32 5
  store i32 -2, i32* %lastErr14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %return

if.end16:                                         ; preds = %lor.lhs.false6
  %13 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %13, i32 0, i32 3
  %14 = load i8, i8* %writing, align 4
  %tobool = icmp ne i8 %14, 0
  br i1 %tobool, label %if.end25, label %if.then17

if.then17:                                        ; preds = %if.end16
  %15 = load i32*, i32** %bzerror.addr, align 8
  %cmp18 = icmp ne i32* %15, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then17
  %16 = load i32*, i32** %bzerror.addr, align 8
  store i32 -1, i32* %16, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then17
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp21 = icmp ne %struct.bzFile* %17, null
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %18 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %18, i32 0, i32 5
  store i32 -1, i32* %lastErr23, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  br label %return

if.end25:                                         ; preds = %if.end16
  %19 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %19, i32 0, i32 0
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %handle, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %20) #9
  %tobool26 = icmp ne i32 %call, 0
  br i1 %tobool26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  %21 = load i32*, i32** %bzerror.addr, align 8
  %cmp28 = icmp ne i32* %21, null
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then27
  %22 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %22, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.then27
  %23 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp31 = icmp ne %struct.bzFile* %23, null
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end30
  %24 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %24, i32 0, i32 5
  store i32 -6, i32* %lastErr33, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  br label %return

if.end35:                                         ; preds = %if.end25
  %25 = load i32, i32* %len.addr, align 4
  %cmp36 = icmp eq i32 %25, 0
  br i1 %cmp36, label %if.then37, label %if.end45

if.then37:                                        ; preds = %if.end35
  %26 = load i32*, i32** %bzerror.addr, align 8
  %cmp38 = icmp ne i32* %26, null
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then37
  %27 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %27, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then37
  %28 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp41 = icmp ne %struct.bzFile* %28, null
  br i1 %cmp41, label %if.then42, label %if.end44

if.then42:                                        ; preds = %if.end40
  %29 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %29, i32 0, i32 5
  store i32 0, i32* %lastErr43, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end40
  br label %return

if.end45:                                         ; preds = %if.end35
  %30 = load i32, i32* %len.addr, align 4
  %31 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %31, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %30, i32* %avail_in, align 8
  %32 = load i8*, i8** %buf.addr, align 8
  %33 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm46 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %33, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm46, i32 0, i32 0
  store i8* %32, i8** %next_in, align 8
  br label %while.body

while.body:                                       ; preds = %if.end105, %if.end45
  %34 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %34, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm47, i32 0, i32 5
  store i32 5000, i32* %avail_out, align 8
  %35 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %35, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf48, i64 0, i64 0
  %36 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm49 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %36, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm49, i32 0, i32 4
  store i8* %arraydecay, i8** %next_out, align 8
  %37 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %37, i32 0, i32 4
  %call51 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm50, i32 0)
  store i32 %call51, i32* %ret, align 4
  %38 = load i32, i32* %ret, align 4
  %cmp52 = icmp ne i32 %38, 1
  br i1 %cmp52, label %if.then53, label %if.end61

if.then53:                                        ; preds = %while.body
  %39 = load i32*, i32** %bzerror.addr, align 8
  %cmp54 = icmp ne i32* %39, null
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.then53
  %40 = load i32, i32* %ret, align 4
  %41 = load i32*, i32** %bzerror.addr, align 8
  store i32 %40, i32* %41, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.then53
  %42 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp57 = icmp ne %struct.bzFile* %42, null
  br i1 %cmp57, label %if.then58, label %if.end60

if.then58:                                        ; preds = %if.end56
  %43 = load i32, i32* %ret, align 4
  %44 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %44, i32 0, i32 5
  store i32 %43, i32* %lastErr59, align 8
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %if.end56
  br label %return

if.end61:                                         ; preds = %while.body
  %45 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %avail_out63 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm62, i32 0, i32 5
  %46 = load i32, i32* %avail_out63, align 8
  %cmp64 = icmp ult i32 %46, 5000
  br i1 %cmp64, label %if.then65, label %if.end90

if.then65:                                        ; preds = %if.end61
  %47 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %avail_out67 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm66, i32 0, i32 5
  %48 = load i32, i32* %avail_out67, align 8
  %sub = sub i32 5000, %48
  store i32 %sub, i32* %n, align 4
  %49 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %49, i32 0, i32 1
  %arraydecay69 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf68, i64 0, i64 0
  %50 = load i32, i32* %n, align 4
  %conv = sext i32 %50 to i64
  %51 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %51, i32 0, i32 0
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %handle70, align 8
  %call71 = call i64 @fwrite(i8* %arraydecay69, i64 1, i64 %conv, %struct._IO_FILE* %52)
  %conv72 = trunc i64 %call71 to i32
  store i32 %conv72, i32* %n2, align 4
  %53 = load i32, i32* %n, align 4
  %54 = load i32, i32* %n2, align 4
  %cmp73 = icmp ne i32 %53, %54
  br i1 %cmp73, label %if.then79, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %if.then65
  %55 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %55, i32 0, i32 0
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %handle76, align 8
  %call77 = call i32 @ferror(%struct._IO_FILE* %56) #9
  %tobool78 = icmp ne i32 %call77, 0
  br i1 %tobool78, label %if.then79, label %if.end89

if.then79:                                        ; preds = %lor.lhs.false75, %if.then65
  %57 = load i32*, i32** %bzerror.addr, align 8
  %cmp80 = icmp ne i32* %57, null
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.then79
  %58 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %58, align 4
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.then79
  %59 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp84 = icmp ne %struct.bzFile* %59, null
  br i1 %cmp84, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.end83
  %60 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr87 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %60, i32 0, i32 5
  store i32 -6, i32* %lastErr87, align 8
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.end83
  br label %return

if.end89:                                         ; preds = %lor.lhs.false75
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end61
  %61 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm91 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %61, i32 0, i32 4
  %avail_in92 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm91, i32 0, i32 1
  %62 = load i32, i32* %avail_in92, align 8
  %cmp93 = icmp eq i32 %62, 0
  br i1 %cmp93, label %if.then95, label %if.end105

if.then95:                                        ; preds = %if.end90
  %63 = load i32*, i32** %bzerror.addr, align 8
  %cmp96 = icmp ne i32* %63, null
  br i1 %cmp96, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.then95
  %64 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %64, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.then95
  %65 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp100 = icmp ne %struct.bzFile* %65, null
  br i1 %cmp100, label %if.then102, label %if.end104

if.then102:                                       ; preds = %if.end99
  %66 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %66, i32 0, i32 5
  store i32 0, i32* %lastErr103, align 8
  br label %if.end104

if.end104:                                        ; preds = %if.then102, %if.end99
  br label %return

if.end105:                                        ; preds = %if.end90
  br label %while.body

return:                                           ; preds = %if.end104, %if.end88, %if.end60, %if.end44, %if.end34, %if.end24, %if.end15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWriteClose(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* %nbytes_out) #0 {
entry:
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %abandon.addr = alloca i32, align 4
  %nbytes_in.addr = alloca i32*, align 8
  %nbytes_out.addr = alloca i32*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i32 %abandon, i32* %abandon.addr, align 4
  store i32* %nbytes_in, i32** %nbytes_in.addr, align 8
  store i32* %nbytes_out, i32** %nbytes_out.addr, align 8
  %0 = load i32*, i32** %bzerror.addr, align 8
  %1 = load i8*, i8** %b.addr, align 8
  %2 = load i32, i32* %abandon.addr, align 4
  %3 = load i32*, i32** %nbytes_in.addr, align 8
  %4 = load i32*, i32** %nbytes_out.addr, align 8
  call void @BZ2_bzWriteClose64(i32* %0, i8* %1, i32 %2, i32* %3, i32* null, i32* %4, i32* null)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32) #0 {
entry:
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %abandon.addr = alloca i32, align 4
  %nbytes_in_lo32.addr = alloca i32*, align 8
  %nbytes_in_hi32.addr = alloca i32*, align 8
  %nbytes_out_lo32.addr = alloca i32*, align 8
  %nbytes_out_hi32.addr = alloca i32*, align 8
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i32 %abandon, i32* %abandon.addr, align 4
  store i32* %nbytes_in_lo32, i32** %nbytes_in_lo32.addr, align 8
  store i32* %nbytes_in_hi32, i32** %nbytes_in_hi32.addr, align 8
  store i32* %nbytes_out_lo32, i32** %nbytes_out_lo32.addr, align 8
  store i32* %nbytes_out_hi32, i32** %nbytes_out_hi32.addr, align 8
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  store %struct.bzFile* %1, %struct.bzFile** %bzf, align 8
  %2 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp = icmp eq %struct.bzFile* %2, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %bzerror.addr, align 8
  %cmp1 = icmp ne i32* %3, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %4 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp3 = icmp ne %struct.bzFile* %5, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %6 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %6, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  br label %return

if.end6:                                          ; preds = %entry
  %7 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %7, i32 0, i32 3
  %8 = load i8, i8* %writing, align 4
  %tobool = icmp ne i8 %8, 0
  br i1 %tobool, label %if.end15, label %if.then7

if.then7:                                         ; preds = %if.end6
  %9 = load i32*, i32** %bzerror.addr, align 8
  %cmp8 = icmp ne i32* %9, null
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.then7
  %10 = load i32*, i32** %bzerror.addr, align 8
  store i32 -1, i32* %10, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.then7
  %11 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp11 = icmp ne %struct.bzFile* %11, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %12 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr13 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %12, i32 0, i32 5
  store i32 -1, i32* %lastErr13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  br label %return

if.end15:                                         ; preds = %if.end6
  %13 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %13, i32 0, i32 0
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %handle, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %14) #9
  %tobool16 = icmp ne i32 %call, 0
  br i1 %tobool16, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end15
  %15 = load i32*, i32** %bzerror.addr, align 8
  %cmp18 = icmp ne i32* %15, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then17
  %16 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %16, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then17
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp21 = icmp ne %struct.bzFile* %17, null
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %18 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %18, i32 0, i32 5
  store i32 -6, i32* %lastErr23, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  br label %return

if.end25:                                         ; preds = %if.end15
  %19 = load i32*, i32** %nbytes_in_lo32.addr, align 8
  %cmp26 = icmp ne i32* %19, null
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end25
  %20 = load i32*, i32** %nbytes_in_lo32.addr, align 8
  store i32 0, i32* %20, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end25
  %21 = load i32*, i32** %nbytes_in_hi32.addr, align 8
  %cmp29 = icmp ne i32* %21, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end28
  %22 = load i32*, i32** %nbytes_in_hi32.addr, align 8
  store i32 0, i32* %22, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.end28
  %23 = load i32*, i32** %nbytes_out_lo32.addr, align 8
  %cmp32 = icmp ne i32* %23, null
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end31
  %24 = load i32*, i32** %nbytes_out_lo32.addr, align 8
  store i32 0, i32* %24, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.end31
  %25 = load i32*, i32** %nbytes_out_hi32.addr, align 8
  %cmp35 = icmp ne i32* %25, null
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end34
  %26 = load i32*, i32** %nbytes_out_hi32.addr, align 8
  store i32 0, i32* %26, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end34
  %27 = load i32, i32* %abandon.addr, align 4
  %tobool38 = icmp ne i32 %27, 0
  br i1 %tobool38, label %if.end89, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end37
  %28 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr39 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %28, i32 0, i32 5
  %29 = load i32, i32* %lastErr39, align 8
  %cmp40 = icmp eq i32 %29, 0
  br i1 %cmp40, label %if.then41, label %if.end89

if.then41:                                        ; preds = %land.lhs.true
  br label %while.body

while.body:                                       ; preds = %if.end88, %if.then41
  %30 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %30, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 5000, i32* %avail_out, align 8
  %31 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf = getelementptr inbounds %struct.bzFile, %struct.bzFile* %31, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0
  %32 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %32, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm42, i32 0, i32 4
  store i8* %arraydecay, i8** %next_out, align 8
  %33 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %33, i32 0, i32 4
  %call44 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm43, i32 2)
  store i32 %call44, i32* %ret, align 4
  %34 = load i32, i32* %ret, align 4
  %cmp45 = icmp ne i32 %34, 3
  br i1 %cmp45, label %land.lhs.true46, label %if.end56

land.lhs.true46:                                  ; preds = %while.body
  %35 = load i32, i32* %ret, align 4
  %cmp47 = icmp ne i32 %35, 4
  br i1 %cmp47, label %if.then48, label %if.end56

if.then48:                                        ; preds = %land.lhs.true46
  %36 = load i32*, i32** %bzerror.addr, align 8
  %cmp49 = icmp ne i32* %36, null
  br i1 %cmp49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.then48
  %37 = load i32, i32* %ret, align 4
  %38 = load i32*, i32** %bzerror.addr, align 8
  store i32 %37, i32* %38, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.then48
  %39 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp52 = icmp ne %struct.bzFile* %39, null
  br i1 %cmp52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end51
  %40 = load i32, i32* %ret, align 4
  %41 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %41, i32 0, i32 5
  store i32 %40, i32* %lastErr54, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end51
  br label %return

if.end56:                                         ; preds = %land.lhs.true46, %while.body
  %42 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %42, i32 0, i32 4
  %avail_out58 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm57, i32 0, i32 5
  %43 = load i32, i32* %avail_out58, align 8
  %cmp59 = icmp ult i32 %43, 5000
  br i1 %cmp59, label %if.then60, label %if.end84

if.then60:                                        ; preds = %if.end56
  %44 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %44, i32 0, i32 4
  %avail_out62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm61, i32 0, i32 5
  %45 = load i32, i32* %avail_out62, align 8
  %sub = sub i32 5000, %45
  store i32 %sub, i32* %n, align 4
  %46 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %46, i32 0, i32 1
  %arraydecay64 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf63, i64 0, i64 0
  %47 = load i32, i32* %n, align 4
  %conv = sext i32 %47 to i64
  %48 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %48, i32 0, i32 0
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %handle65, align 8
  %call66 = call i64 @fwrite(i8* %arraydecay64, i64 1, i64 %conv, %struct._IO_FILE* %49)
  %conv67 = trunc i64 %call66 to i32
  store i32 %conv67, i32* %n2, align 4
  %50 = load i32, i32* %n, align 4
  %51 = load i32, i32* %n2, align 4
  %cmp68 = icmp ne i32 %50, %51
  br i1 %cmp68, label %if.then73, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then60
  %52 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %52, i32 0, i32 0
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %handle70, align 8
  %call71 = call i32 @ferror(%struct._IO_FILE* %53) #9
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.then73, label %if.end83

if.then73:                                        ; preds = %lor.lhs.false, %if.then60
  %54 = load i32*, i32** %bzerror.addr, align 8
  %cmp74 = icmp ne i32* %54, null
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.then73
  %55 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %55, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.then73
  %56 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp78 = icmp ne %struct.bzFile* %56, null
  br i1 %cmp78, label %if.then80, label %if.end82

if.then80:                                        ; preds = %if.end77
  %57 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr81 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %57, i32 0, i32 5
  store i32 -6, i32* %lastErr81, align 8
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %if.end77
  br label %return

if.end83:                                         ; preds = %lor.lhs.false
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end56
  %58 = load i32, i32* %ret, align 4
  %cmp85 = icmp eq i32 %58, 4
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end84
  br label %while.end

if.end88:                                         ; preds = %if.end84
  br label %while.body

while.end:                                        ; preds = %if.then87
  br label %if.end89

if.end89:                                         ; preds = %while.end, %land.lhs.true, %if.end37
  %59 = load i32, i32* %abandon.addr, align 4
  %tobool90 = icmp ne i32 %59, 0
  br i1 %tobool90, label %if.end112, label %land.lhs.true91

land.lhs.true91:                                  ; preds = %if.end89
  %60 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle92 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %60, i32 0, i32 0
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %handle92, align 8
  %call93 = call i32 @ferror(%struct._IO_FILE* %61) #9
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.end112, label %if.then95

if.then95:                                        ; preds = %land.lhs.true91
  %62 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle96 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %62, i32 0, i32 0
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %handle96, align 8
  %call97 = call i32 @fflush(%struct._IO_FILE* %63)
  %64 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle98 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %64, i32 0, i32 0
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %handle98, align 8
  %call99 = call i32 @ferror(%struct._IO_FILE* %65) #9
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %if.then101, label %if.end111

if.then101:                                       ; preds = %if.then95
  %66 = load i32*, i32** %bzerror.addr, align 8
  %cmp102 = icmp ne i32* %66, null
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %if.then101
  %67 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %67, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.then104, %if.then101
  %68 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp106 = icmp ne %struct.bzFile* %68, null
  br i1 %cmp106, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.end105
  %69 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr109 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %69, i32 0, i32 5
  store i32 -6, i32* %lastErr109, align 8
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %if.end105
  br label %return

if.end111:                                        ; preds = %if.then95
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %land.lhs.true91, %if.end89
  %70 = load i32*, i32** %nbytes_in_lo32.addr, align 8
  %cmp113 = icmp ne i32* %70, null
  br i1 %cmp113, label %if.then115, label %if.end117

if.then115:                                       ; preds = %if.end112
  %71 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm116 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %71, i32 0, i32 4
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm116, i32 0, i32 2
  %72 = load i32, i32* %total_in_lo32, align 4
  %73 = load i32*, i32** %nbytes_in_lo32.addr, align 8
  store i32 %72, i32* %73, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %if.end112
  %74 = load i32*, i32** %nbytes_in_hi32.addr, align 8
  %cmp118 = icmp ne i32* %74, null
  br i1 %cmp118, label %if.then120, label %if.end122

if.then120:                                       ; preds = %if.end117
  %75 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm121 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %75, i32 0, i32 4
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm121, i32 0, i32 3
  %76 = load i32, i32* %total_in_hi32, align 8
  %77 = load i32*, i32** %nbytes_in_hi32.addr, align 8
  store i32 %76, i32* %77, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then120, %if.end117
  %78 = load i32*, i32** %nbytes_out_lo32.addr, align 8
  %cmp123 = icmp ne i32* %78, null
  br i1 %cmp123, label %if.then125, label %if.end127

if.then125:                                       ; preds = %if.end122
  %79 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm126 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %79, i32 0, i32 4
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm126, i32 0, i32 6
  %80 = load i32, i32* %total_out_lo32, align 4
  %81 = load i32*, i32** %nbytes_out_lo32.addr, align 8
  store i32 %80, i32* %81, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %if.end122
  %82 = load i32*, i32** %nbytes_out_hi32.addr, align 8
  %cmp128 = icmp ne i32* %82, null
  br i1 %cmp128, label %if.then130, label %if.end132

if.then130:                                       ; preds = %if.end127
  %83 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm131 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %83, i32 0, i32 4
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm131, i32 0, i32 7
  %84 = load i32, i32* %total_out_hi32, align 8
  %85 = load i32*, i32** %nbytes_out_hi32.addr, align 8
  store i32 %84, i32* %85, align 4
  br label %if.end132

if.end132:                                        ; preds = %if.then130, %if.end127
  %86 = load i32*, i32** %bzerror.addr, align 8
  %cmp133 = icmp ne i32* %86, null
  br i1 %cmp133, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.end132
  %87 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %87, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.then135, %if.end132
  %88 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp137 = icmp ne %struct.bzFile* %88, null
  br i1 %cmp137, label %if.then139, label %if.end141

if.then139:                                       ; preds = %if.end136
  %89 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr140 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %89, i32 0, i32 5
  store i32 0, i32* %lastErr140, align 8
  br label %if.end141

if.end141:                                        ; preds = %if.then139, %if.end136
  %90 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm142 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %90, i32 0, i32 4
  %call143 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm142)
  %91 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %92 = bitcast %struct.bzFile* %91 to i8*
  call void @free(i8* %92) #9
  br label %return

return:                                           ; preds = %if.end141, %if.end110, %if.end82, %if.end55, %if.end24, %if.end14, %if.end5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzReadOpen(i32* %bzerror, %struct._IO_FILE* %f, i32 %verbosity, i32 %small, i8* %unused, i32 %nUnused) #0 {
entry:
  %retval = alloca i8*, align 8
  %bzerror.addr = alloca i32*, align 8
  %f.addr = alloca %struct._IO_FILE*, align 8
  %verbosity.addr = alloca i32, align 4
  %small.addr = alloca i32, align 4
  %unused.addr = alloca i8*, align 8
  %nUnused.addr = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  %ret = alloca i32, align 4
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  store i32 %verbosity, i32* %verbosity.addr, align 4
  store i32 %small, i32* %small.addr, align 4
  store i8* %unused, i8** %unused.addr, align 8
  store i32 %nUnused, i32* %nUnused.addr, align 4
  store %struct.bzFile* null, %struct.bzFile** %bzf, align 8
  %0 = load i32*, i32** %bzerror.addr, align 8
  %cmp = icmp ne i32* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp1 = icmp ne %struct.bzFile* %2, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %3 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %cmp4 = icmp eq %struct._IO_FILE* %4, null
  br i1 %cmp4, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %5 = load i32, i32* %small.addr, align 4
  %cmp5 = icmp ne i32 %5, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i32, i32* %small.addr, align 4
  %cmp6 = icmp ne i32 %6, 1
  br i1 %cmp6, label %if.then21, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i32, i32* %verbosity.addr, align 4
  %cmp8 = icmp slt i32 %7, 0
  br i1 %cmp8, label %if.then21, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %8 = load i32, i32* %verbosity.addr, align 4
  %cmp10 = icmp sgt i32 %8, 4
  br i1 %cmp10, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %9 = load i8*, i8** %unused.addr, align 8
  %cmp12 = icmp eq i8* %9, null
  br i1 %cmp12, label %land.lhs.true13, label %lor.lhs.false15

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %10 = load i32, i32* %nUnused.addr, align 4
  %cmp14 = icmp ne i32 %10, 0
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %land.lhs.true13, %lor.lhs.false11
  %11 = load i8*, i8** %unused.addr, align 8
  %cmp16 = icmp ne i8* %11, null
  br i1 %cmp16, label %land.lhs.true17, label %if.end29

land.lhs.true17:                                  ; preds = %lor.lhs.false15
  %12 = load i32, i32* %nUnused.addr, align 4
  %cmp18 = icmp slt i32 %12, 0
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %land.lhs.true17
  %13 = load i32, i32* %nUnused.addr, align 4
  %cmp20 = icmp sgt i32 %13, 5000
  br i1 %cmp20, label %if.then21, label %if.end29

if.then21:                                        ; preds = %lor.lhs.false19, %land.lhs.true17, %land.lhs.true13, %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true, %if.end3
  %14 = load i32*, i32** %bzerror.addr, align 8
  %cmp22 = icmp ne i32* %14, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.then21
  %15 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %15, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then21
  %16 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp25 = icmp ne %struct.bzFile* %16, null
  br i1 %cmp25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %17, i32 0, i32 5
  store i32 -2, i32* %lastErr27, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  store i8* null, i8** %retval, align 8
  br label %return

if.end29:                                         ; preds = %lor.lhs.false19, %lor.lhs.false15
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %18) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then30, label %if.end38

if.then30:                                        ; preds = %if.end29
  %19 = load i32*, i32** %bzerror.addr, align 8
  %cmp31 = icmp ne i32* %19, null
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.then30
  %20 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %20, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.then30
  %21 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp34 = icmp ne %struct.bzFile* %21, null
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end33
  %22 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %22, i32 0, i32 5
  store i32 -6, i32* %lastErr36, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end33
  store i8* null, i8** %retval, align 8
  br label %return

if.end38:                                         ; preds = %if.end29
  %call39 = call noalias i8* @malloc(i64 5104) #9
  %23 = bitcast i8* %call39 to %struct.bzFile*
  store %struct.bzFile* %23, %struct.bzFile** %bzf, align 8
  %24 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp40 = icmp eq %struct.bzFile* %24, null
  br i1 %cmp40, label %if.then41, label %if.end49

if.then41:                                        ; preds = %if.end38
  %25 = load i32*, i32** %bzerror.addr, align 8
  %cmp42 = icmp ne i32* %25, null
  br i1 %cmp42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.then41
  %26 = load i32*, i32** %bzerror.addr, align 8
  store i32 -3, i32* %26, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.then41
  %27 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp45 = icmp ne %struct.bzFile* %27, null
  br i1 %cmp45, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end44
  %28 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %28, i32 0, i32 5
  store i32 -3, i32* %lastErr47, align 8
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.end44
  store i8* null, i8** %retval, align 8
  br label %return

if.end49:                                         ; preds = %if.end38
  %29 = load i32*, i32** %bzerror.addr, align 8
  %cmp50 = icmp ne i32* %29, null
  br i1 %cmp50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end49
  %30 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %30, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.end49
  %31 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp53 = icmp ne %struct.bzFile* %31, null
  br i1 %cmp53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end52
  %32 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr55 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %32, i32 0, i32 5
  store i32 0, i32* %lastErr55, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end52
  %33 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %33, i32 0, i32 6
  store i8 0, i8* %initialisedOk, align 4
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %35 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %35, i32 0, i32 0
  store %struct._IO_FILE* %34, %struct._IO_FILE** %handle, align 8
  %36 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %36, i32 0, i32 2
  store i32 0, i32* %bufN, align 8
  %37 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %37, i32 0, i32 3
  store i8 0, i8* %writing, align 4
  %38 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %38, i32 0, i32 4
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %39 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm57, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %40 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm58 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %40, i32 0, i32 4
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm58, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end56
  %41 = load i32, i32* %nUnused.addr, align 4
  %cmp59 = icmp sgt i32 %41, 0
  br i1 %cmp59, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %42 = load i8*, i8** %unused.addr, align 8
  %43 = load i8, i8* %42, align 1
  %44 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf = getelementptr inbounds %struct.bzFile, %struct.bzFile* %44, i32 0, i32 1
  %45 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN60 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 2
  %46 = load i32, i32* %bufN60, align 8
  %idxprom = sext i32 %46 to i64
  %arrayidx = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom
  store i8 %43, i8* %arrayidx, align 1
  %47 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 2
  %48 = load i32, i32* %bufN61, align 8
  %inc = add nsw i32 %48, 1
  store i32 %inc, i32* %bufN61, align 8
  %49 = load i8*, i8** %unused.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 1
  store i8* %add.ptr, i8** %unused.addr, align 8
  %50 = load i32, i32* %nUnused.addr, align 4
  %dec = add nsw i32 %50, -1
  store i32 %dec, i32* %nUnused.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %51 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %51, i32 0, i32 4
  %52 = load i32, i32* %verbosity.addr, align 4
  %53 = load i32, i32* %small.addr, align 4
  %call63 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm62, i32 %52, i32 %53)
  store i32 %call63, i32* %ret, align 4
  %54 = load i32, i32* %ret, align 4
  %cmp64 = icmp ne i32 %54, 0
  br i1 %cmp64, label %if.then65, label %if.end73

if.then65:                                        ; preds = %while.end
  %55 = load i32*, i32** %bzerror.addr, align 8
  %cmp66 = icmp ne i32* %55, null
  br i1 %cmp66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.then65
  %56 = load i32, i32* %ret, align 4
  %57 = load i32*, i32** %bzerror.addr, align 8
  store i32 %56, i32* %57, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.then65
  %58 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp69 = icmp ne %struct.bzFile* %58, null
  br i1 %cmp69, label %if.then70, label %if.end72

if.then70:                                        ; preds = %if.end68
  %59 = load i32, i32* %ret, align 4
  %60 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %60, i32 0, i32 5
  store i32 %59, i32* %lastErr71, align 8
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %if.end68
  %61 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %62 = bitcast %struct.bzFile* %61 to i8*
  call void @free(i8* %62) #9
  store i8* null, i8** %retval, align 8
  br label %return

if.end73:                                         ; preds = %while.end
  %63 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN74 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %63, i32 0, i32 2
  %64 = load i32, i32* %bufN74, align 8
  %65 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %65, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm75, i32 0, i32 1
  store i32 %64, i32* %avail_in, align 8
  %66 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %66, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf76, i64 0, i64 0
  %67 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm77 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %67, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm77, i32 0, i32 0
  store i8* %arraydecay, i8** %next_in, align 8
  %68 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %initialisedOk78 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %68, i32 0, i32 6
  store i8 1, i8* %initialisedOk78, align 4
  %69 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %70 = bitcast %struct.bzFile* %69 to i8*
  store i8* %70, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end73, %if.end72, %if.end48, %if.end37, %if.end28
  %71 = load i8*, i8** %retval, align 8
  ret i8* %71
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzReadClose(i32* %bzerror, i8* %b) #0 {
entry:
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  store %struct.bzFile* %1, %struct.bzFile** %bzf, align 8
  %2 = load i32*, i32** %bzerror.addr, align 8
  %cmp = icmp ne i32* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp1 = icmp ne %struct.bzFile* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp4 = icmp eq %struct.bzFile* %6, null
  br i1 %cmp4, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end3
  %7 = load i32*, i32** %bzerror.addr, align 8
  %cmp6 = icmp ne i32* %7, null
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then5
  %8 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %8, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.then5
  %9 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp9 = icmp ne %struct.bzFile* %9, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %10 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %10, i32 0, i32 5
  store i32 0, i32* %lastErr11, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8
  br label %return

if.end13:                                         ; preds = %if.end3
  %11 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %11, i32 0, i32 3
  %12 = load i8, i8* %writing, align 4
  %tobool = icmp ne i8 %12, 0
  br i1 %tobool, label %if.then14, label %if.end22

if.then14:                                        ; preds = %if.end13
  %13 = load i32*, i32** %bzerror.addr, align 8
  %cmp15 = icmp ne i32* %13, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then14
  %14 = load i32*, i32** %bzerror.addr, align 8
  store i32 -1, i32* %14, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.then14
  %15 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp18 = icmp ne %struct.bzFile* %15, null
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end17
  %16 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr20 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %16, i32 0, i32 5
  store i32 -1, i32* %lastErr20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  br label %return

if.end22:                                         ; preds = %if.end13
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %17, i32 0, i32 6
  %18 = load i8, i8* %initialisedOk, align 4
  %tobool23 = icmp ne i8 %18, 0
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end22
  %19 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %19, i32 0, i32 4
  %call = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end22
  %20 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %21 = bitcast %struct.bzFile* %20 to i8*
  call void @free(i8* %21) #9
  br label %return

return:                                           ; preds = %if.end25, %if.end21, %if.end12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzRead(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  store %struct.bzFile* %1, %struct.bzFile** %bzf, align 8
  %2 = load i32*, i32** %bzerror.addr, align 8
  %cmp = icmp ne i32* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp1 = icmp ne %struct.bzFile* %4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp4 = icmp eq %struct.bzFile* %6, null
  br i1 %cmp4, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %7 = load i8*, i8** %buf.addr, align 8
  %cmp5 = icmp eq i8* %7, null
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %len.addr, align 4
  %cmp7 = icmp slt i32 %8, 0
  br i1 %cmp7, label %if.then8, label %if.end16

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end3
  %9 = load i32*, i32** %bzerror.addr, align 8
  %cmp9 = icmp ne i32* %9, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  %10 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %10, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  %11 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp12 = icmp ne %struct.bzFile* %11, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  %12 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr14 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %12, i32 0, i32 5
  store i32 -2, i32* %lastErr14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11
  store i32 0, i32* %retval, align 4
  br label %return

if.end16:                                         ; preds = %lor.lhs.false6
  %13 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %13, i32 0, i32 3
  %14 = load i8, i8* %writing, align 4
  %tobool = icmp ne i8 %14, 0
  br i1 %tobool, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end16
  %15 = load i32*, i32** %bzerror.addr, align 8
  %cmp18 = icmp ne i32* %15, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then17
  %16 = load i32*, i32** %bzerror.addr, align 8
  store i32 -1, i32* %16, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then17
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp21 = icmp ne %struct.bzFile* %17, null
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %18 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %18, i32 0, i32 5
  store i32 -1, i32* %lastErr23, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  store i32 0, i32* %retval, align 4
  br label %return

if.end25:                                         ; preds = %if.end16
  %19 = load i32, i32* %len.addr, align 4
  %cmp26 = icmp eq i32 %19, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  %20 = load i32*, i32** %bzerror.addr, align 8
  %cmp28 = icmp ne i32* %20, null
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then27
  %21 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %21, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.then27
  %22 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp31 = icmp ne %struct.bzFile* %22, null
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end30
  %23 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %23, i32 0, i32 5
  store i32 0, i32* %lastErr33, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  store i32 0, i32* %retval, align 4
  br label %return

if.end35:                                         ; preds = %if.end25
  %24 = load i32, i32* %len.addr, align 4
  %25 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %25, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %24, i32* %avail_out, align 8
  %26 = load i8*, i8** %buf.addr, align 8
  %27 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %27, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm36, i32 0, i32 4
  store i8* %26, i8** %next_out, align 8
  br label %while.body

while.body:                                       ; preds = %if.end152, %if.end35
  %28 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %28, i32 0, i32 0
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %handle, align 8
  %call = call i32 @ferror(%struct._IO_FILE* %29) #9
  %tobool37 = icmp ne i32 %call, 0
  br i1 %tobool37, label %if.then38, label %if.end46

if.then38:                                        ; preds = %while.body
  %30 = load i32*, i32** %bzerror.addr, align 8
  %cmp39 = icmp ne i32* %30, null
  br i1 %cmp39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.then38
  %31 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %31, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.then38
  %32 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp42 = icmp ne %struct.bzFile* %32, null
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end41
  %33 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr44 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %33, i32 0, i32 5
  store i32 -6, i32* %lastErr44, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41
  store i32 0, i32* %retval, align 4
  br label %return

if.end46:                                         ; preds = %while.body
  %34 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %34, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm47, i32 0, i32 1
  %35 = load i32, i32* %avail_in, align 8
  %cmp48 = icmp eq i32 %35, 0
  br i1 %cmp48, label %land.lhs.true, label %if.end76

land.lhs.true:                                    ; preds = %if.end46
  %36 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle49 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %36, i32 0, i32 0
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %handle49, align 8
  %call50 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %37)
  %tobool51 = icmp ne i8 %call50, 0
  br i1 %tobool51, label %if.end76, label %if.then52

if.then52:                                        ; preds = %land.lhs.true
  %38 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %38, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf53, i64 0, i64 0
  %39 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 0
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %handle54, align 8
  %call55 = call i64 @fread(i8* %arraydecay, i64 1, i64 5000, %struct._IO_FILE* %40)
  %conv = trunc i64 %call55 to i32
  store i32 %conv, i32* %n, align 4
  %41 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle56 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %41, i32 0, i32 0
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %handle56, align 8
  %call57 = call i32 @ferror(%struct._IO_FILE* %42) #9
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then59, label %if.end69

if.then59:                                        ; preds = %if.then52
  %43 = load i32*, i32** %bzerror.addr, align 8
  %cmp60 = icmp ne i32* %43, null
  br i1 %cmp60, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.then59
  %44 = load i32*, i32** %bzerror.addr, align 8
  store i32 -6, i32* %44, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.then59
  %45 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp64 = icmp ne %struct.bzFile* %45, null
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end63
  %46 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %46, i32 0, i32 5
  store i32 -6, i32* %lastErr67, align 8
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end63
  store i32 0, i32* %retval, align 4
  br label %return

if.end69:                                         ; preds = %if.then52
  %47 = load i32, i32* %n, align 4
  %48 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %48, i32 0, i32 2
  store i32 %47, i32* %bufN, align 8
  %49 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %bufN70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %49, i32 0, i32 2
  %50 = load i32, i32* %bufN70, align 8
  %51 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %51, i32 0, i32 4
  %avail_in72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm71, i32 0, i32 1
  store i32 %50, i32* %avail_in72, align 8
  %52 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %buf73 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %52, i32 0, i32 1
  %arraydecay74 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf73, i64 0, i64 0
  %53 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %53, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm75, i32 0, i32 0
  store i8* %arraydecay74, i8** %next_in, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.end69, %land.lhs.true, %if.end46
  %54 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm77 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %call78 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm77)
  store i32 %call78, i32* %ret, align 4
  %55 = load i32, i32* %ret, align 4
  %cmp79 = icmp ne i32 %55, 0
  br i1 %cmp79, label %land.lhs.true81, label %if.end94

land.lhs.true81:                                  ; preds = %if.end76
  %56 = load i32, i32* %ret, align 4
  %cmp82 = icmp ne i32 %56, 4
  br i1 %cmp82, label %if.then84, label %if.end94

if.then84:                                        ; preds = %land.lhs.true81
  %57 = load i32*, i32** %bzerror.addr, align 8
  %cmp85 = icmp ne i32* %57, null
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then84
  %58 = load i32, i32* %ret, align 4
  %59 = load i32*, i32** %bzerror.addr, align 8
  store i32 %58, i32* %59, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.then84
  %60 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp89 = icmp ne %struct.bzFile* %60, null
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.end88
  %61 = load i32, i32* %ret, align 4
  %62 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr92 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %62, i32 0, i32 5
  store i32 %61, i32* %lastErr92, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.end88
  store i32 0, i32* %retval, align 4
  br label %return

if.end94:                                         ; preds = %land.lhs.true81, %if.end76
  %63 = load i32, i32* %ret, align 4
  %cmp95 = icmp eq i32 %63, 0
  br i1 %cmp95, label %land.lhs.true97, label %if.end122

land.lhs.true97:                                  ; preds = %if.end94
  %64 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %handle98 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %64, i32 0, i32 0
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %handle98, align 8
  %call99 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %65)
  %conv100 = zext i8 %call99 to i32
  %tobool101 = icmp ne i32 %conv100, 0
  br i1 %tobool101, label %land.lhs.true102, label %if.end122

land.lhs.true102:                                 ; preds = %land.lhs.true97
  %66 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %66, i32 0, i32 4
  %avail_in104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm103, i32 0, i32 1
  %67 = load i32, i32* %avail_in104, align 8
  %cmp105 = icmp eq i32 %67, 0
  br i1 %cmp105, label %land.lhs.true107, label %if.end122

land.lhs.true107:                                 ; preds = %land.lhs.true102
  %68 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm108 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %68, i32 0, i32 4
  %avail_out109 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm108, i32 0, i32 5
  %69 = load i32, i32* %avail_out109, align 8
  %cmp110 = icmp ugt i32 %69, 0
  br i1 %cmp110, label %if.then112, label %if.end122

if.then112:                                       ; preds = %land.lhs.true107
  %70 = load i32*, i32** %bzerror.addr, align 8
  %cmp113 = icmp ne i32* %70, null
  br i1 %cmp113, label %if.then115, label %if.end116

if.then115:                                       ; preds = %if.then112
  %71 = load i32*, i32** %bzerror.addr, align 8
  store i32 -7, i32* %71, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then115, %if.then112
  %72 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp117 = icmp ne %struct.bzFile* %72, null
  br i1 %cmp117, label %if.then119, label %if.end121

if.then119:                                       ; preds = %if.end116
  %73 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr120 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %73, i32 0, i32 5
  store i32 -7, i32* %lastErr120, align 8
  br label %if.end121

if.end121:                                        ; preds = %if.then119, %if.end116
  store i32 0, i32* %retval, align 4
  br label %return

if.end122:                                        ; preds = %land.lhs.true107, %land.lhs.true102, %land.lhs.true97, %if.end94
  %74 = load i32, i32* %ret, align 4
  %cmp123 = icmp eq i32 %74, 4
  br i1 %cmp123, label %if.then125, label %if.end137

if.then125:                                       ; preds = %if.end122
  %75 = load i32*, i32** %bzerror.addr, align 8
  %cmp126 = icmp ne i32* %75, null
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.then125
  %76 = load i32*, i32** %bzerror.addr, align 8
  store i32 4, i32* %76, align 4
  br label %if.end129

if.end129:                                        ; preds = %if.then128, %if.then125
  %77 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp130 = icmp ne %struct.bzFile* %77, null
  br i1 %cmp130, label %if.then132, label %if.end134

if.then132:                                       ; preds = %if.end129
  %78 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr133 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %78, i32 0, i32 5
  store i32 4, i32* %lastErr133, align 8
  br label %if.end134

if.end134:                                        ; preds = %if.then132, %if.end129
  %79 = load i32, i32* %len.addr, align 4
  %80 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm135 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %80, i32 0, i32 4
  %avail_out136 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm135, i32 0, i32 5
  %81 = load i32, i32* %avail_out136, align 8
  %sub = sub i32 %79, %81
  store i32 %sub, i32* %retval, align 4
  br label %return

if.end137:                                        ; preds = %if.end122
  %82 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm138 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %82, i32 0, i32 4
  %avail_out139 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm138, i32 0, i32 5
  %83 = load i32, i32* %avail_out139, align 8
  %cmp140 = icmp eq i32 %83, 0
  br i1 %cmp140, label %if.then142, label %if.end152

if.then142:                                       ; preds = %if.end137
  %84 = load i32*, i32** %bzerror.addr, align 8
  %cmp143 = icmp ne i32* %84, null
  br i1 %cmp143, label %if.then145, label %if.end146

if.then145:                                       ; preds = %if.then142
  %85 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %85, align 4
  br label %if.end146

if.end146:                                        ; preds = %if.then145, %if.then142
  %86 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp147 = icmp ne %struct.bzFile* %86, null
  br i1 %cmp147, label %if.then149, label %if.end151

if.then149:                                       ; preds = %if.end146
  %87 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr150 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %87, i32 0, i32 5
  store i32 0, i32* %lastErr150, align 8
  br label %if.end151

if.end151:                                        ; preds = %if.then149, %if.end146
  %88 = load i32, i32* %len.addr, align 4
  store i32 %88, i32* %retval, align 4
  br label %return

if.end152:                                        ; preds = %if.end137
  br label %while.body

return:                                           ; preds = %if.end151, %if.end134, %if.end121, %if.end93, %if.end68, %if.end45, %if.end34, %if.end24, %if.end15
  %89 = load i32, i32* %retval, align 4
  ret i32 %89
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @myfeof.123(%struct._IO_FILE* %f) #0 {
entry:
  %retval = alloca i8, align 1
  %f.addr = alloca %struct._IO_FILE*, align 8
  %c = alloca i32, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call = call i32 @fgetc(%struct._IO_FILE* %0)
  store i32 %call, i32* %c, align 4
  %1 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %c, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call1 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %3)
  store i8 0, i8* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1
  ret i8 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzReadGetUnused(i32* %bzerror, i8* %b, i8** %unused, i32* %nUnused) #0 {
entry:
  %bzerror.addr = alloca i32*, align 8
  %b.addr = alloca i8*, align 8
  %unused.addr = alloca i8**, align 8
  %nUnused.addr = alloca i32*, align 8
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %bzerror.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i8** %unused, i8*** %unused.addr, align 8
  store i32* %nUnused, i32** %nUnused.addr, align 8
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  store %struct.bzFile* %1, %struct.bzFile** %bzf, align 8
  %2 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp = icmp eq %struct.bzFile* %2, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %bzerror.addr, align 8
  %cmp1 = icmp ne i32* %3, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %4 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp3 = icmp ne %struct.bzFile* %5, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %6 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %6, i32 0, i32 5
  store i32 -2, i32* %lastErr, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  br label %return

if.end6:                                          ; preds = %entry
  %7 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr7 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %7, i32 0, i32 5
  %8 = load i32, i32* %lastErr7, align 8
  %cmp8 = icmp ne i32 %8, 4
  br i1 %cmp8, label %if.then9, label %if.end17

if.then9:                                         ; preds = %if.end6
  %9 = load i32*, i32** %bzerror.addr, align 8
  %cmp10 = icmp ne i32* %9, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then9
  %10 = load i32*, i32** %bzerror.addr, align 8
  store i32 -1, i32* %10, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then9
  %11 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp13 = icmp ne %struct.bzFile* %11, null
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %12 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr15 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %12, i32 0, i32 5
  store i32 -1, i32* %lastErr15, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12
  br label %return

if.end17:                                         ; preds = %if.end6
  %13 = load i8**, i8*** %unused.addr, align 8
  %cmp18 = icmp eq i8** %13, null
  br i1 %cmp18, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %14 = load i32*, i32** %nUnused.addr, align 8
  %cmp19 = icmp eq i32* %14, null
  br i1 %cmp19, label %if.then20, label %if.end28

if.then20:                                        ; preds = %lor.lhs.false, %if.end17
  %15 = load i32*, i32** %bzerror.addr, align 8
  %cmp21 = icmp ne i32* %15, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.then20
  %16 = load i32*, i32** %bzerror.addr, align 8
  store i32 -2, i32* %16, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.then20
  %17 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp24 = icmp ne %struct.bzFile* %17, null
  br i1 %cmp24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end23
  %18 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr26 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %18, i32 0, i32 5
  store i32 -2, i32* %lastErr26, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end23
  br label %return

if.end28:                                         ; preds = %lor.lhs.false
  %19 = load i32*, i32** %bzerror.addr, align 8
  %cmp29 = icmp ne i32* %19, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end28
  %20 = load i32*, i32** %bzerror.addr, align 8
  store i32 0, i32* %20, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.end28
  %21 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %cmp32 = icmp ne %struct.bzFile* %21, null
  br i1 %cmp32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end31
  %22 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %lastErr34 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %22, i32 0, i32 5
  store i32 0, i32* %lastErr34, align 8
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end31
  %23 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %23, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  %24 = load i32, i32* %avail_in, align 8
  %25 = load i32*, i32** %nUnused.addr, align 8
  store i32 %24, i32* %25, align 4
  %26 = load %struct.bzFile*, %struct.bzFile** %bzf, align 8
  %strm36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %26, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm36, i32 0, i32 0
  %27 = load i8*, i8** %next_in, align 8
  %28 = load i8**, i8*** %unused.addr, align 8
  store i8* %27, i8** %28, align 8
  br label %return

return:                                           ; preds = %if.end35, %if.end27, %if.end16, %if.end5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzBuffToBuffCompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %destLen.addr = alloca i32*, align 8
  %source.addr = alloca i8*, align 8
  %sourceLen.addr = alloca i32, align 4
  %blockSize100k.addr = alloca i32, align 4
  %verbosity.addr = alloca i32, align 4
  %workFactor.addr = alloca i32, align 4
  %strm = alloca %struct.bz_stream, align 8
  %ret = alloca i32, align 4
  store i8* %dest, i8** %dest.addr, align 8
  store i32* %destLen, i32** %destLen.addr, align 8
  store i8* %source, i8** %source.addr, align 8
  store i32 %sourceLen, i32* %sourceLen.addr, align 4
  store i32 %blockSize100k, i32* %blockSize100k.addr, align 4
  store i32 %verbosity, i32* %verbosity.addr, align 4
  store i32 %workFactor, i32* %workFactor.addr, align 4
  %0 = load i8*, i8** %dest.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32*, i32** %destLen.addr, align 8
  %cmp1 = icmp eq i32* %1, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %source.addr, align 8
  %cmp3 = icmp eq i8* %2, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %blockSize100k.addr, align 4
  %cmp5 = icmp slt i32 %3, 1
  br i1 %cmp5, label %if.then, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, i32* %blockSize100k.addr, align 4
  %cmp7 = icmp sgt i32 %4, 9
  br i1 %cmp7, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %5 = load i32, i32* %verbosity.addr, align 4
  %cmp9 = icmp slt i32 %5, 0
  br i1 %cmp9, label %if.then, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %6 = load i32, i32* %verbosity.addr, align 4
  %cmp11 = icmp sgt i32 %6, 4
  br i1 %cmp11, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %7 = load i32, i32* %workFactor.addr, align 4
  %cmp13 = icmp slt i32 %7, 0
  br i1 %cmp13, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %8 = load i32, i32* %workFactor.addr, align 4
  %cmp15 = icmp sgt i32 %8, 250
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false14
  %9 = load i32, i32* %workFactor.addr, align 4
  %cmp16 = icmp eq i32 %9, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  store i32 30, i32* %workFactor.addr, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %10 = load i32, i32* %blockSize100k.addr, align 4
  %11 = load i32, i32* %verbosity.addr, align 4
  %12 = load i32, i32* %workFactor.addr, align 4
  %call = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %10, i32 %11, i32 %12)
  store i32 %call, i32* %ret, align 4
  %13 = load i32, i32* %ret, align 4
  %cmp19 = icmp ne i32 %13, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  %14 = load i32, i32* %ret, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %if.end18
  %15 = load i8*, i8** %source.addr, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %15, i8** %next_in, align 8
  %16 = load i8*, i8** %dest.addr, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %16, i8** %next_out, align 8
  %17 = load i32, i32* %sourceLen.addr, align 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %17, i32* %avail_in, align 8
  %18 = load i32*, i32** %destLen.addr, align 8
  %19 = load i32, i32* %18, align 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %19, i32* %avail_out, align 8
  %call22 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 2)
  store i32 %call22, i32* %ret, align 4
  %20 = load i32, i32* %ret, align 4
  %cmp23 = icmp eq i32 %20, 3
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end21
  br label %output_overflow

if.end25:                                         ; preds = %if.end21
  %21 = load i32, i32* %ret, align 4
  %cmp26 = icmp ne i32 %21, 4
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end25
  br label %errhandler

if.end28:                                         ; preds = %if.end25
  %avail_out29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %22 = load i32, i32* %avail_out29, align 8
  %23 = load i32*, i32** %destLen.addr, align 8
  %24 = load i32, i32* %23, align 4
  %sub = sub i32 %24, %22
  store i32 %sub, i32* %23, align 4
  %call30 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  store i32 0, i32* %retval, align 4
  br label %return

output_overflow:                                  ; preds = %if.then24
  %call31 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  store i32 -8, i32* %retval, align 4
  br label %return

errhandler:                                       ; preds = %if.then27
  %call32 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  %25 = load i32, i32* %ret, align 4
  store i32 %25, i32* %retval, align 4
  br label %return

return:                                           ; preds = %errhandler, %output_overflow, %if.end28, %if.then20, %if.then
  %26 = load i32, i32* %retval, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %small, i32 %verbosity) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %destLen.addr = alloca i32*, align 8
  %source.addr = alloca i8*, align 8
  %sourceLen.addr = alloca i32, align 4
  %small.addr = alloca i32, align 4
  %verbosity.addr = alloca i32, align 4
  %strm = alloca %struct.bz_stream, align 8
  %ret = alloca i32, align 4
  store i8* %dest, i8** %dest.addr, align 8
  store i32* %destLen, i32** %destLen.addr, align 8
  store i8* %source, i8** %source.addr, align 8
  store i32 %sourceLen, i32* %sourceLen.addr, align 4
  store i32 %small, i32* %small.addr, align 4
  store i32 %verbosity, i32* %verbosity.addr, align 4
  %0 = load i8*, i8** %dest.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32*, i32** %destLen.addr, align 8
  %cmp1 = icmp eq i32* %1, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %source.addr, align 8
  %cmp3 = icmp eq i8* %2, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %small.addr, align 4
  %cmp5 = icmp ne i32 %3, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %4 = load i32, i32* %small.addr, align 4
  %cmp6 = icmp ne i32 %4, 1
  br i1 %cmp6, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false4
  %5 = load i32, i32* %verbosity.addr, align 4
  %cmp8 = icmp slt i32 %5, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %6 = load i32, i32* %verbosity.addr, align 4
  %cmp10 = icmp sgt i32 %6, 4
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false9
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %7 = load i32, i32* %verbosity.addr, align 4
  %8 = load i32, i32* %small.addr, align 4
  %call = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %7, i32 %8)
  store i32 %call, i32* %ret, align 4
  %9 = load i32, i32* %ret, align 4
  %cmp11 = icmp ne i32 %9, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  %10 = load i32, i32* %ret, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %11, i8** %next_in, align 8
  %12 = load i8*, i8** %dest.addr, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %12, i8** %next_out, align 8
  %13 = load i32, i32* %sourceLen.addr, align 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %13, i32* %avail_in, align 8
  %14 = load i32*, i32** %destLen.addr, align 8
  %15 = load i32, i32* %14, align 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %15, i32* %avail_out, align 8
  %call14 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm)
  store i32 %call14, i32* %ret, align 4
  %16 = load i32, i32* %ret, align 4
  %cmp15 = icmp eq i32 %16, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end13
  br label %output_overflow_or_eof

if.end17:                                         ; preds = %if.end13
  %17 = load i32, i32* %ret, align 4
  %cmp18 = icmp ne i32 %17, 4
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  br label %errhandler

if.end20:                                         ; preds = %if.end17
  %avail_out21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %18 = load i32, i32* %avail_out21, align 8
  %19 = load i32*, i32** %destLen.addr, align 8
  %20 = load i32, i32* %19, align 4
  %sub = sub i32 %20, %18
  store i32 %sub, i32* %19, align 4
  %call22 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 0, i32* %retval, align 4
  br label %return

output_overflow_or_eof:                           ; preds = %if.then16
  %avail_out23 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %21 = load i32, i32* %avail_out23, align 8
  %cmp24 = icmp ugt i32 %21, 0
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %output_overflow_or_eof
  %call26 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 -7, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %output_overflow_or_eof
  %call27 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 -8, i32* %retval, align 4
  br label %return

errhandler:                                       ; preds = %if.then19
  %call28 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  %22 = load i32, i32* %ret, align 4
  store i32 %22, i32* %retval, align 4
  br label %return

return:                                           ; preds = %errhandler, %if.else, %if.then25, %if.end20, %if.then12, %if.then
  %23 = load i32, i32* %retval, align 4
  ret i32 %23
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzopen(i8* %path, i8* %mode) #0 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  store i8* %mode, i8** %mode.addr, align 8
  %0 = load i8*, i8** %path.addr, align 8
  %1 = load i8*, i8** %mode.addr, align 8
  %call = call i8* @bzopen_or_bzdopen(i8* %0, i32 -1, i8* %1, i32 0)
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bzopen_or_bzdopen(i8* %path, i32 %fd, i8* %mode, i32 %open_mode) #0 {
entry:
  %retval = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %fd.addr = alloca i32, align 4
  %mode.addr = alloca i8*, align 8
  %open_mode.addr = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %unused = alloca [5000 x i8], align 16
  %blockSize100k = alloca i32, align 4
  %writing = alloca i32, align 4
  %mode2 = alloca [10 x i8], align 1
  %fp = alloca %struct._IO_FILE*, align 8
  %bzfp = alloca i8*, align 8
  %verbosity = alloca i32, align 4
  %workFactor = alloca i32, align 4
  %smallMode = alloca i32, align 4
  %nUnused = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %mode, i8** %mode.addr, align 8
  store i32 %open_mode, i32* %open_mode.addr, align 4
  store i32 9, i32* %blockSize100k, align 4
  store i32 0, i32* %writing, align 4
  %0 = bitcast [10 x i8]* %mode2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 10, i1 false)
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8
  store i8* null, i8** %bzfp, align 8
  store i32 0, i32* %verbosity, align 4
  store i32 30, i32* %workFactor, align 4
  store i32 0, i32* %smallMode, align 4
  store i32 0, i32* %nUnused, align 4
  %1 = load i8*, i8** %mode.addr, align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %if.end
  %2 = load i8*, i8** %mode.addr, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %mode.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv = sext i8 %5 to i32
  switch i32 %conv, label %sw.default [
    i32 114, label %sw.bb
    i32 119, label %sw.bb1
    i32 115, label %sw.bb2
  ]

sw.bb:                                            ; preds = %while.body
  store i32 0, i32* %writing, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  store i32 1, i32* %writing, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %while.body
  store i32 1, i32* %smallMode, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %call = call i16** @__ctype_b_loc() #13
  %6 = load i16*, i16** %call, align 8
  %7 = load i8*, i8** %mode.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv3 = sext i8 %8 to i32
  %idxprom = sext i32 %conv3 to i64
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom
  %9 = load i16, i16* %arrayidx, align 2
  %conv4 = zext i16 %9 to i32
  %and = and i32 %conv4, 2048
  %tobool5 = icmp ne i32 %and, 0
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %sw.default
  %10 = load i8*, i8** %mode.addr, align 8
  %11 = load i8, i8* %10, align 1
  %conv7 = sext i8 %11 to i32
  %sub = sub nsw i32 %conv7, 48
  store i32 %sub, i32* %blockSize100k, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %sw.default
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end8, %sw.bb2, %sw.bb1, %sw.bb
  %12 = load i8*, i8** %mode.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %mode.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %13 = load i32, i32* %writing, align 4
  %tobool9 = icmp ne i32 %13, 0
  %14 = zext i1 %tobool9 to i64
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.126, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.127, i64 0, i64 0)
  %call10 = call i8* @strcat(i8* %arraydecay, i8* %cond) #9
  %arraydecay11 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %call12 = call i8* @strcat(i8* %arraydecay11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.128, i64 0, i64 0)) #9
  %15 = load i32, i32* %open_mode.addr, align 4
  %cmp13 = icmp eq i32 %15, 0
  br i1 %cmp13, label %if.then15, label %if.else27

if.then15:                                        ; preds = %while.end
  %16 = load i8*, i8** %path.addr, align 8
  %cmp16 = icmp eq i8* %16, null
  br i1 %cmp16, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then15
  %17 = load i8*, i8** %path.addr, align 8
  %call18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9.129, i64 0, i64 0)) #10
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %lor.lhs.false, %if.then15
  %18 = load i32, i32* %writing, align 4
  %tobool22 = icmp ne i32 %18, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then21
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then21
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond23 = phi %struct._IO_FILE* [ %19, %cond.true ], [ %20, %cond.false ]
  store %struct._IO_FILE* %cond23, %struct._IO_FILE** %fp, align 8
  br label %if.end26

if.else:                                          ; preds = %lor.lhs.false
  %21 = load i8*, i8** %path.addr, align 8
  %arraydecay24 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %call25 = call %struct._IO_FILE* @fopen(i8* %21, i8* %arraydecay24)
  store %struct._IO_FILE* %call25, %struct._IO_FILE** %fp, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %cond.end
  br label %if.end30

if.else27:                                        ; preds = %while.end
  %22 = load i32, i32* %fd.addr, align 4
  %arraydecay28 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %call29 = call %struct._IO_FILE* @fdopen(i32 %22, i8* %arraydecay28) #9
  store %struct._IO_FILE* %call29, %struct._IO_FILE** %fp, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.end26
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %cmp31 = icmp eq %struct._IO_FILE* %23, null
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end30
  store i8* null, i8** %retval, align 8
  br label %return

if.end34:                                         ; preds = %if.end30
  %24 = load i32, i32* %writing, align 4
  %tobool35 = icmp ne i32 %24, 0
  br i1 %tobool35, label %if.then36, label %if.else46

if.then36:                                        ; preds = %if.end34
  %25 = load i32, i32* %blockSize100k, align 4
  %cmp37 = icmp slt i32 %25, 1
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then36
  store i32 1, i32* %blockSize100k, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then36
  %26 = load i32, i32* %blockSize100k, align 4
  %cmp41 = icmp sgt i32 %26, 9
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end40
  store i32 9, i32* %blockSize100k, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.end40
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %28 = load i32, i32* %blockSize100k, align 4
  %29 = load i32, i32* %verbosity, align 4
  %30 = load i32, i32* %workFactor, align 4
  %call45 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, %struct._IO_FILE* %27, i32 %28, i32 %29, i32 %30)
  store i8* %call45, i8** %bzfp, align 8
  br label %if.end49

if.else46:                                        ; preds = %if.end34
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %32 = load i32, i32* %verbosity, align 4
  %33 = load i32, i32* %smallMode, align 4
  %arraydecay47 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %34 = load i32, i32* %nUnused, align 4
  %call48 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %31, i32 %32, i32 %33, i8* %arraydecay47, i32 %34)
  store i8* %call48, i8** %bzfp, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.else46, %if.end44
  %35 = load i8*, i8** %bzfp, align 8
  %cmp50 = icmp eq i8* %35, null
  br i1 %cmp50, label %if.then52, label %if.end60

if.then52:                                        ; preds = %if.end49
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %cmp53 = icmp ne %struct._IO_FILE* %36, %37
  br i1 %cmp53, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %if.then52
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %cmp55 = icmp ne %struct._IO_FILE* %38, %39
  br i1 %cmp55, label %if.then57, label %if.end59

if.then57:                                        ; preds = %land.lhs.true
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call58 = call i32 @fclose(%struct._IO_FILE* %40)
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %land.lhs.true, %if.then52
  store i8* null, i8** %retval, align 8
  br label %return

if.end60:                                         ; preds = %if.end49
  %41 = load i8*, i8** %bzfp, align 8
  store i8* %41, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end60, %if.end59, %if.then33, %if.then
  %42 = load i8*, i8** %retval, align 8
  ret i8* %42
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzdopen(i32 %fd, i8* %mode) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %mode.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %mode, i8** %mode.addr, align 8
  %0 = load i32, i32* %fd.addr, align 4
  %1 = load i8*, i8** %mode.addr, align 8
  %call = call i8* @bzopen_or_bzdopen(i8* null, i32 %0, i8* %1, i32 1)
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzread(i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %nread = alloca i32, align 4
  store i8* %b, i8** %b.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %1, i32 0, i32 5
  %2 = load i32, i32* %lastErr, align 8
  %cmp = icmp eq i32 %2, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %b.addr, align 8
  %4 = load i8*, i8** %buf.addr, align 8
  %5 = load i32, i32* %len.addr, align 4
  %call = call i32 @BZ2_bzRead(i32* %bzerr, i8* %3, i8* %4, i32 %5)
  store i32 %call, i32* %nread, align 4
  %6 = load i32, i32* %bzerr, align 4
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp eq i32 %7, 4
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load i32, i32* %nread, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzwrite(i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %bzerr = alloca i32, align 4
  store i8* %b, i8** %b.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load i8*, i8** %b.addr, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %len.addr, align 4
  call void @BZ2_bzWrite(i32* %bzerr, i8* %0, i8* %1, i32 %2)
  %3 = load i32, i32* %bzerr, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %len.addr, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzflush(i8* %b) #0 {
entry:
  %b.addr = alloca i8*, align 8
  store i8* %b, i8** %b.addr, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzclose(i8* %b) #0 {
entry:
  %b.addr = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %fp = alloca %struct._IO_FILE*, align 8
  store i8* %b, i8** %b.addr, align 8
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %handle, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load i8*, i8** %b.addr, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end9

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %b.addr, align 8
  %5 = bitcast i8* %4 to %struct.bzFile*
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 3
  %6 = load i8, i8* %writing, align 4
  %tobool = icmp ne i8 %6, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %7 = load i8*, i8** %b.addr, align 8
  call void @BZ2_bzWriteClose(i32* %bzerr, i8* %7, i32 0, i32* null, i32* null)
  %8 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp ne i32 %8, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.then1
  %9 = load i8*, i8** %b.addr, align 8
  call void @BZ2_bzWriteClose(i32* null, i8* %9, i32 1, i32* null, i32* null)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.then1
  br label %if.end5

if.else:                                          ; preds = %if.end
  %10 = load i8*, i8** %b.addr, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %10)
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end4
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %cmp6 = icmp ne %struct._IO_FILE* %11, %12
  br i1 %cmp6, label %land.lhs.true, label %if.end9

land.lhs.true:                                    ; preds = %if.end5
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %cmp7 = icmp ne %struct._IO_FILE* %13, %14
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call = call i32 @fclose(%struct._IO_FILE* %15)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %if.end5, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzerror(i8* %b, i32* %errnum) #0 {
entry:
  %b.addr = alloca i8*, align 8
  %errnum.addr = alloca i32*, align 8
  %err = alloca i32, align 4
  store i8* %b, i8** %b.addr, align 8
  store i32* %errnum, i32** %errnum.addr, align 8
  %0 = load i8*, i8** %b.addr, align 8
  %1 = bitcast i8* %0 to %struct.bzFile*
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %1, i32 0, i32 5
  %2 = load i32, i32* %lastErr, align 8
  store i32 %2, i32* %err, align 4
  %3 = load i32, i32* %err, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %err, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %err, align 4
  %5 = load i32*, i32** %errnum.addr, align 8
  store i32 %4, i32* %5, align 4
  %6 = load i32, i32* %err, align 4
  %mul = mul nsw i32 %6, -1
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %idxprom
  %7 = load i8*, i8** %arrayidx, align 8
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bsInitWrite(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  store i32 0, i32* %bsLive, align 4
  %1 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %1, i32 0, i32 24
  store i32 0, i32* %bsBuff, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_compressBlock(%struct.EState* %s, i8 zeroext %is_last_block) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %is_last_block.addr = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i8 %is_last_block, i8* %is_last_block.addr, align 1
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %1 = load i32, i32* %nblock, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 26
  %3 = load i32, i32* %blockCRC, align 8
  %neg = xor i32 %3, -1
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC1 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 26
  store i32 %neg, i32* %blockCRC1, align 8
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 27
  %6 = load i32, i32* %combinedCRC, align 4
  %shl = shl i32 %6, 1
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC2 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 27
  %8 = load i32, i32* %combinedCRC2, align 4
  %shr = lshr i32 %8, 31
  %or = or i32 %shl, %shr
  %9 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC3 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 27
  store i32 %or, i32* %combinedCRC3, align 4
  %10 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC4 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 26
  %11 = load i32, i32* %blockCRC4, align 8
  %12 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC5 = getelementptr inbounds %struct.EState, %struct.EState* %12, i32 0, i32 27
  %13 = load i32, i32* %combinedCRC5, align 4
  %xor = xor i32 %13, %11
  store i32 %xor, i32* %combinedCRC5, align 4
  %14 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 29
  %15 = load i32, i32* %blockNo, align 4
  %cmp6 = icmp sgt i32 %15, 1
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %16 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 19
  store i32 0, i32* %numZ, align 4
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then
  %17 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 28
  %18 = load i32, i32* %verbosity, align 8
  %cmp8 = icmp sge i32 %18, 2
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockNo10 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 29
  %21 = load i32, i32* %blockNo10, align 4
  %22 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC11 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 26
  %23 = load i32, i32* %blockCRC11, align 8
  %24 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC12 = getelementptr inbounds %struct.EState, %struct.EState* %24, i32 0, i32 27
  %25 = load i32, i32* %combinedCRC12, align 4
  %26 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock13 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 17
  %27 = load i32, i32* %nblock13, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.143, i64 0, i64 0), i32 %21, i32 %23, i32 %25, i32 %27)
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end
  %28 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @BZ2_blockSort(%struct.EState* %28)
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %entry
  %29 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %29, i32 0, i32 5
  %30 = load i32*, i32** %arr2, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock16 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 17
  %33 = load i32, i32* %nblock16, align 4
  %idxprom = sext i32 %33 to i64
  %arrayidx = getelementptr inbounds i8, i8* %31, i64 %idxprom
  %34 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32 11
  store i8* %arrayidx, i8** %zbits, align 8
  %35 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockNo17 = getelementptr inbounds %struct.EState, %struct.EState* %35, i32 0, i32 29
  %36 = load i32, i32* %blockNo17, align 4
  %cmp18 = icmp eq i32 %36, 1
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end15
  %37 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @BZ2_bsInitWrite(%struct.EState* %37)
  %38 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %38, i8 zeroext 66)
  %39 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %39, i8 zeroext 90)
  %40 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %40, i8 zeroext 104)
  %41 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %42 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockSize100k = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 30
  %43 = load i32, i32* %blockSize100k, align 8
  %add = add nsw i32 48, %43
  %conv = trunc i32 %add to i8
  call void @bsPutUChar(%struct.EState* %41, i8 zeroext %conv)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end15
  %44 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 17
  %45 = load i32, i32* %nblock21, align 4
  %cmp22 = icmp sgt i32 %45, 0
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end20
  %46 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %46, i8 zeroext 49)
  %47 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %47, i8 zeroext 65)
  %48 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %48, i8 zeroext 89)
  %49 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %49, i8 zeroext 38)
  %50 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %50, i8 zeroext 83)
  %51 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %51, i8 zeroext 89)
  %52 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %53 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %blockCRC25 = getelementptr inbounds %struct.EState, %struct.EState* %53, i32 0, i32 26
  %54 = load i32, i32* %blockCRC25, align 8
  call void @bsPutUInt32(%struct.EState* %52, i32 %54)
  %55 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %55, i32 1, i32 0)
  %56 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %57 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %57, i32 0, i32 7
  %58 = load i32, i32* %origPtr, align 8
  call void @bsW(%struct.EState* %56, i32 24, i32 %58)
  %59 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @generateMTFValues(%struct.EState* %59)
  %60 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @sendMTFValues(%struct.EState* %60)
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end20
  %61 = load i8, i8* %is_last_block.addr, align 1
  %tobool = icmp ne i8 %61, 0
  br i1 %tobool, label %if.then27, label %if.end36

if.then27:                                        ; preds = %if.end26
  %62 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %62, i8 zeroext 23)
  %63 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %63, i8 zeroext 114)
  %64 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %64, i8 zeroext 69)
  %65 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %65, i8 zeroext 56)
  %66 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %66, i8 zeroext 80)
  %67 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsPutUChar(%struct.EState* %67, i8 zeroext -112)
  %68 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %69 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC28 = getelementptr inbounds %struct.EState, %struct.EState* %69, i32 0, i32 27
  %70 = load i32, i32* %combinedCRC28, align 4
  call void @bsPutUInt32(%struct.EState* %68, i32 %70)
  %71 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity29 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 28
  %72 = load i32, i32* %verbosity29, align 8
  %cmp30 = icmp sge i32 %72, 2
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %if.then27
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %74 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %combinedCRC33 = getelementptr inbounds %struct.EState, %struct.EState* %74, i32 0, i32 27
  %75 = load i32, i32* %combinedCRC33, align 4
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1.144, i64 0, i64 0), i32 %75)
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.then27
  %76 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsFinishWrite(%struct.EState* %76)
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end26
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsPutUChar(%struct.EState* %s, i8 zeroext %c) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %c.addr = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i8 %c, i8* %c.addr, align 1
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1 = load i8, i8* %c.addr, align 1
  %conv = zext i8 %1 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %conv)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsPutUInt32(%struct.EState* %s, i32 %u) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %u.addr = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i32 %u, i32* %u.addr, align 4
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1 = load i32, i32* %u.addr, align 4
  %shr = lshr i32 %1, 24
  %conv = zext i32 %shr to i64
  %and = and i64 %conv, 255
  %conv1 = trunc i64 %and to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %conv1)
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %3 = load i32, i32* %u.addr, align 4
  %shr2 = lshr i32 %3, 16
  %conv3 = zext i32 %shr2 to i64
  %and4 = and i64 %conv3, 255
  %conv5 = trunc i64 %and4 to i32
  call void @bsW(%struct.EState* %2, i32 8, i32 %conv5)
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %5 = load i32, i32* %u.addr, align 4
  %shr6 = lshr i32 %5, 8
  %conv7 = zext i32 %shr6 to i64
  %and8 = and i64 %conv7, 255
  %conv9 = trunc i64 %and8 to i32
  call void @bsW(%struct.EState* %4, i32 8, i32 %conv9)
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %7 = load i32, i32* %u.addr, align 4
  %conv10 = zext i32 %7 to i64
  %and11 = and i64 %conv10, 255
  %conv12 = trunc i64 %and11 to i32
  call void @bsW(%struct.EState* %6, i32 8, i32 %conv12)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsW(%struct.EState* %s, i32 %n, i32 %v) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %n.addr = alloca i32, align 4
  %v.addr = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  store i32 %v, i32* %v.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %1 = load i32, i32* %bsLive, align 4
  %cmp = icmp sge i32 %1, 8
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 24
  %3 = load i32, i32* %bsBuff, align 8
  %shr = lshr i32 %3, 24
  %conv = trunc i32 %shr to i8
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 11
  %5 = load i8*, i8** %zbits, align 8
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 19
  %7 = load i32, i32* %numZ, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %8 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 19
  %9 = load i32, i32* %numZ1, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %numZ1, align 4
  %10 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff2 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 24
  %11 = load i32, i32* %bsBuff2, align 8
  %shl = shl i32 %11, 8
  store i32 %shl, i32* %bsBuff2, align 8
  %12 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive3 = getelementptr inbounds %struct.EState, %struct.EState* %12, i32 0, i32 25
  %13 = load i32, i32* %bsLive3, align 4
  %sub = sub nsw i32 %13, 8
  store i32 %sub, i32* %bsLive3, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %v.addr, align 4
  %15 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive4 = getelementptr inbounds %struct.EState, %struct.EState* %15, i32 0, i32 25
  %16 = load i32, i32* %bsLive4, align 4
  %sub5 = sub nsw i32 32, %16
  %17 = load i32, i32* %n.addr, align 4
  %sub6 = sub nsw i32 %sub5, %17
  %shl7 = shl i32 %14, %sub6
  %18 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff8 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 24
  %19 = load i32, i32* %bsBuff8, align 8
  %or = or i32 %19, %shl7
  store i32 %or, i32* %bsBuff8, align 8
  %20 = load i32, i32* %n.addr, align 4
  %21 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive9 = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 25
  %22 = load i32, i32* %bsLive9, align 4
  %add = add nsw i32 %22, %20
  store i32 %add, i32* %bsLive9, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @generateMTFValues(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %yy = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %zPend = alloca i32, align 4
  %wr = alloca i32, align 4
  %EOB = alloca i32, align 4
  %ptr = alloca i32*, align 8
  %block = alloca i8*, align 8
  %mtfv = alloca i16*, align 8
  %ll_i = alloca i8, align 1
  %rtmp = alloca i8, align 1
  %ryy_j = alloca i8*, align 8
  %rll_i = alloca i8, align 1
  %rtmp2 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %1 = load i32*, i32** %ptr1, align 8
  store i32* %1, i32** %ptr, align 8
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 9
  %3 = load i8*, i8** %block2, align 8
  store i8* %3, i8** %block, align 8
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfv3 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 10
  %5 = load i16*, i16** %mtfv3, align 8
  store i16* %5, i16** %mtfv, align 8
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @makeMaps_e(%struct.EState* %6)
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 21
  %8 = load i32, i32* %nInUse, align 4
  %add = add nsw i32 %8, 1
  store i32 %add, i32* %EOB, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4
  %10 = load i32, i32* %EOB, align 4
  %cmp = icmp sle i32 %9, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 32
  %12 = load i32, i32* %i, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %wr, align 4
  store i32 0, i32* %zPend, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc10, %for.end
  %14 = load i32, i32* %i, align 4
  %15 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse5 = getelementptr inbounds %struct.EState, %struct.EState* %15, i32 0, i32 21
  %16 = load i32, i32* %nInUse5, align 4
  %cmp6 = icmp slt i32 %14, %16
  br i1 %cmp6, label %for.body7, label %for.end12

for.body7:                                        ; preds = %for.cond4
  %17 = load i32, i32* %i, align 4
  %conv = trunc i32 %17 to i8
  %18 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %18 to i64
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 %idxprom8
  store i8 %conv, i8* %arrayidx9, align 1
  br label %for.inc10

for.inc10:                                        ; preds = %for.body7
  %19 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %19, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond4

for.end12:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc82, %for.end12
  %20 = load i32, i32* %i, align 4
  %21 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 17
  %22 = load i32, i32* %nblock, align 4
  %cmp14 = icmp slt i32 %20, %22
  br i1 %cmp14, label %for.body16, label %for.end84

for.body16:                                       ; preds = %for.cond13
  %23 = load i32*, i32** %ptr, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %24 to i64
  %arrayidx18 = getelementptr inbounds i32, i32* %23, i64 %idxprom17
  %25 = load i32, i32* %arrayidx18, align 4
  %sub = sub i32 %25, 1
  store i32 %sub, i32* %j, align 4
  %26 = load i32, i32* %j, align 4
  %cmp19 = icmp slt i32 %26, 0
  br i1 %cmp19, label %if.then, label %if.end

if.then:                                          ; preds = %for.body16
  %27 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 17
  %28 = load i32, i32* %nblock21, align 4
  %29 = load i32, i32* %j, align 4
  %add22 = add nsw i32 %29, %28
  store i32 %add22, i32* %j, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body16
  %30 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %unseqToSeq = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 23
  %31 = load i8*, i8** %block, align 8
  %32 = load i32, i32* %j, align 4
  %idxprom23 = sext i32 %32 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %31, i64 %idxprom23
  %33 = load i8, i8* %arrayidx24, align 1
  %idxprom25 = zext i8 %33 to i64
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* %unseqToSeq, i64 0, i64 %idxprom25
  %34 = load i8, i8* %arrayidx26, align 1
  store i8 %34, i8* %ll_i, align 1
  %arrayidx27 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %35 = load i8, i8* %arrayidx27, align 16
  %conv28 = zext i8 %35 to i32
  %36 = load i8, i8* %ll_i, align 1
  %conv29 = zext i8 %36 to i32
  %cmp30 = icmp eq i32 %conv28, %conv29
  br i1 %cmp30, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.end
  %37 = load i32, i32* %zPend, align 4
  %inc33 = add nsw i32 %37, 1
  store i32 %inc33, i32* %zPend, align 4
  br label %if.end81

if.else:                                          ; preds = %if.end
  %38 = load i32, i32* %zPend, align 4
  %cmp34 = icmp sgt i32 %38, 0
  br i1 %cmp34, label %if.then36, label %if.end57

if.then36:                                        ; preds = %if.else
  %39 = load i32, i32* %zPend, align 4
  %dec = add nsw i32 %39, -1
  store i32 %dec, i32* %zPend, align 4
  br label %while.body

while.body:                                       ; preds = %if.end55, %if.then36
  %40 = load i32, i32* %zPend, align 4
  %and = and i32 %40, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then37, label %if.else44

if.then37:                                        ; preds = %while.body
  %41 = load i16*, i16** %mtfv, align 8
  %42 = load i32, i32* %wr, align 4
  %idxprom38 = sext i32 %42 to i64
  %arrayidx39 = getelementptr inbounds i16, i16* %41, i64 %idxprom38
  store i16 1, i16* %arrayidx39, align 2
  %43 = load i32, i32* %wr, align 4
  %inc40 = add nsw i32 %43, 1
  store i32 %inc40, i32* %wr, align 4
  %44 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq41 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 32
  %arrayidx42 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq41, i64 0, i64 1
  %45 = load i32, i32* %arrayidx42, align 4
  %inc43 = add nsw i32 %45, 1
  store i32 %inc43, i32* %arrayidx42, align 4
  br label %if.end51

if.else44:                                        ; preds = %while.body
  %46 = load i16*, i16** %mtfv, align 8
  %47 = load i32, i32* %wr, align 4
  %idxprom45 = sext i32 %47 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %46, i64 %idxprom45
  store i16 0, i16* %arrayidx46, align 2
  %48 = load i32, i32* %wr, align 4
  %inc47 = add nsw i32 %48, 1
  store i32 %inc47, i32* %wr, align 4
  %49 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq48 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 32
  %arrayidx49 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq48, i64 0, i64 0
  %50 = load i32, i32* %arrayidx49, align 8
  %inc50 = add nsw i32 %50, 1
  store i32 %inc50, i32* %arrayidx49, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.else44, %if.then37
  %51 = load i32, i32* %zPend, align 4
  %cmp52 = icmp slt i32 %51, 2
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end51
  br label %while.end

if.end55:                                         ; preds = %if.end51
  %52 = load i32, i32* %zPend, align 4
  %sub56 = sub nsw i32 %52, 2
  %div = sdiv i32 %sub56, 2
  store i32 %div, i32* %zPend, align 4
  br label %while.body

while.end:                                        ; preds = %if.then54
  store i32 0, i32* %zPend, align 4
  br label %if.end57

if.end57:                                         ; preds = %while.end, %if.else
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  %53 = load i8, i8* %arrayidx58, align 1
  store i8 %53, i8* %rtmp, align 1
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %54 = load i8, i8* %arrayidx59, align 16
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  store i8 %54, i8* %arrayidx60, align 1
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  store i8* %arrayidx61, i8** %ryy_j, align 8
  %55 = load i8, i8* %ll_i, align 1
  store i8 %55, i8* %rll_i, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body66, %if.end57
  %56 = load i8, i8* %rll_i, align 1
  %conv62 = zext i8 %56 to i32
  %57 = load i8, i8* %rtmp, align 1
  %conv63 = zext i8 %57 to i32
  %cmp64 = icmp ne i32 %conv62, %conv63
  br i1 %cmp64, label %while.body66, label %while.end67

while.body66:                                     ; preds = %while.cond
  %58 = load i8*, i8** %ryy_j, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr, i8** %ryy_j, align 8
  %59 = load i8, i8* %rtmp, align 1
  store i8 %59, i8* %rtmp2, align 1
  %60 = load i8*, i8** %ryy_j, align 8
  %61 = load i8, i8* %60, align 1
  store i8 %61, i8* %rtmp, align 1
  %62 = load i8, i8* %rtmp2, align 1
  %63 = load i8*, i8** %ryy_j, align 8
  store i8 %62, i8* %63, align 1
  br label %while.cond

while.end67:                                      ; preds = %while.cond
  %64 = load i8, i8* %rtmp, align 1
  %arrayidx68 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  store i8 %64, i8* %arrayidx68, align 16
  %65 = load i8*, i8** %ryy_j, align 8
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %sub.ptr.lhs.cast = ptrtoint i8* %65 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arrayidx69 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv70 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv70, i32* %j, align 4
  %66 = load i32, i32* %j, align 4
  %add71 = add nsw i32 %66, 1
  %conv72 = trunc i32 %add71 to i16
  %67 = load i16*, i16** %mtfv, align 8
  %68 = load i32, i32* %wr, align 4
  %idxprom73 = sext i32 %68 to i64
  %arrayidx74 = getelementptr inbounds i16, i16* %67, i64 %idxprom73
  store i16 %conv72, i16* %arrayidx74, align 2
  %69 = load i32, i32* %wr, align 4
  %inc75 = add nsw i32 %69, 1
  store i32 %inc75, i32* %wr, align 4
  %70 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq76 = getelementptr inbounds %struct.EState, %struct.EState* %70, i32 0, i32 32
  %71 = load i32, i32* %j, align 4
  %add77 = add nsw i32 %71, 1
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq76, i64 0, i64 %idxprom78
  %72 = load i32, i32* %arrayidx79, align 4
  %inc80 = add nsw i32 %72, 1
  store i32 %inc80, i32* %arrayidx79, align 4
  br label %if.end81

if.end81:                                         ; preds = %while.end67, %if.then32
  br label %for.inc82

for.inc82:                                        ; preds = %if.end81
  %73 = load i32, i32* %i, align 4
  %inc83 = add nsw i32 %73, 1
  store i32 %inc83, i32* %i, align 4
  br label %for.cond13

for.end84:                                        ; preds = %for.cond13
  %74 = load i32, i32* %zPend, align 4
  %cmp85 = icmp sgt i32 %74, 0
  br i1 %cmp85, label %if.then87, label %if.end115

if.then87:                                        ; preds = %for.end84
  %75 = load i32, i32* %zPend, align 4
  %dec88 = add nsw i32 %75, -1
  store i32 %dec88, i32* %zPend, align 4
  br label %while.body90

while.body90:                                     ; preds = %if.end111, %if.then87
  %76 = load i32, i32* %zPend, align 4
  %and91 = and i32 %76, 1
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %if.then93, label %if.else100

if.then93:                                        ; preds = %while.body90
  %77 = load i16*, i16** %mtfv, align 8
  %78 = load i32, i32* %wr, align 4
  %idxprom94 = sext i32 %78 to i64
  %arrayidx95 = getelementptr inbounds i16, i16* %77, i64 %idxprom94
  store i16 1, i16* %arrayidx95, align 2
  %79 = load i32, i32* %wr, align 4
  %inc96 = add nsw i32 %79, 1
  store i32 %inc96, i32* %wr, align 4
  %80 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq97 = getelementptr inbounds %struct.EState, %struct.EState* %80, i32 0, i32 32
  %arrayidx98 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq97, i64 0, i64 1
  %81 = load i32, i32* %arrayidx98, align 4
  %inc99 = add nsw i32 %81, 1
  store i32 %inc99, i32* %arrayidx98, align 4
  br label %if.end107

if.else100:                                       ; preds = %while.body90
  %82 = load i16*, i16** %mtfv, align 8
  %83 = load i32, i32* %wr, align 4
  %idxprom101 = sext i32 %83 to i64
  %arrayidx102 = getelementptr inbounds i16, i16* %82, i64 %idxprom101
  store i16 0, i16* %arrayidx102, align 2
  %84 = load i32, i32* %wr, align 4
  %inc103 = add nsw i32 %84, 1
  store i32 %inc103, i32* %wr, align 4
  %85 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq104 = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 32
  %arrayidx105 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq104, i64 0, i64 0
  %86 = load i32, i32* %arrayidx105, align 8
  %inc106 = add nsw i32 %86, 1
  store i32 %inc106, i32* %arrayidx105, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.else100, %if.then93
  %87 = load i32, i32* %zPend, align 4
  %cmp108 = icmp slt i32 %87, 2
  br i1 %cmp108, label %if.then110, label %if.end111

if.then110:                                       ; preds = %if.end107
  br label %while.end114

if.end111:                                        ; preds = %if.end107
  %88 = load i32, i32* %zPend, align 4
  %sub112 = sub nsw i32 %88, 2
  %div113 = sdiv i32 %sub112, 2
  store i32 %div113, i32* %zPend, align 4
  br label %while.body90

while.end114:                                     ; preds = %if.then110
  store i32 0, i32* %zPend, align 4
  br label %if.end115

if.end115:                                        ; preds = %while.end114, %for.end84
  %89 = load i32, i32* %EOB, align 4
  %conv116 = trunc i32 %89 to i16
  %90 = load i16*, i16** %mtfv, align 8
  %91 = load i32, i32* %wr, align 4
  %idxprom117 = sext i32 %91 to i64
  %arrayidx118 = getelementptr inbounds i16, i16* %90, i64 %idxprom117
  store i16 %conv116, i16* %arrayidx118, align 2
  %92 = load i32, i32* %wr, align 4
  %inc119 = add nsw i32 %92, 1
  store i32 %inc119, i32* %wr, align 4
  %93 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq120 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 32
  %94 = load i32, i32* %EOB, align 4
  %idxprom121 = sext i32 %94 to i64
  %arrayidx122 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq120, i64 0, i64 %idxprom121
  %95 = load i32, i32* %arrayidx122, align 4
  %inc123 = add nsw i32 %95, 1
  store i32 %inc123, i32* %arrayidx122, align 4
  %96 = load i32, i32* %wr, align 4
  %97 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF = getelementptr inbounds %struct.EState, %struct.EState* %97, i32 0, i32 31
  store i32 %96, i32* %nMTF, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sendMTFValues(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %v = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %gs = alloca i32, align 4
  %ge = alloca i32, align 4
  %totc = alloca i32, align 4
  %bt = alloca i32, align 4
  %bc = alloca i32, align 4
  %iter = alloca i32, align 4
  %nSelectors = alloca i32, align 4
  %alphaSize = alloca i32, align 4
  %minLen = alloca i32, align 4
  %maxLen = alloca i32, align 4
  %selCtr = alloca i32, align 4
  %nGroups = alloca i32, align 4
  %nBytes = alloca i32, align 4
  %cost = alloca [6 x i16], align 2
  %fave = alloca [6 x i32], align 16
  %mtfv = alloca i16*, align 8
  %nPart = alloca i32, align 4
  %remF = alloca i32, align 4
  %tFreq = alloca i32, align 4
  %aFreq = alloca i32, align 4
  %cost01 = alloca i32, align 4
  %cost23 = alloca i32, align 4
  %cost45 = alloca i32, align 4
  %icv = alloca i16, align 2
  %icv1141 = alloca i16, align 2
  %pos = alloca [6 x i8], align 1
  %ll_i = alloca i8, align 1
  %tmp2 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %inUse16 = alloca [16 x i8], align 16
  %curr = alloca i32, align 4
  %mtfv_i = alloca i16, align 2
  %s_len_sel_selCtr = alloca i8*, align 8
  %s_code_sel_selCtr = alloca i32*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfv1 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 10
  %1 = load i16*, i16** %mtfv1, align 8
  store i16* %1, i16** %mtfv, align 8
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 28
  %3 = load i32, i32* %verbosity, align 8
  %cmp = icmp sge i32 %3, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 17
  %6 = load i32, i32* %nblock, align 4
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 31
  %8 = load i32, i32* %nMTF, align 4
  %9 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 21
  %10 = load i32, i32* %nInUse, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.145, i64 0, i64 0), i32 %6, i32 %8, i32 %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse2 = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 21
  %12 = load i32, i32* %nInUse2, align 4
  %add = add nsw i32 %12, 2
  store i32 %add, i32* %alphaSize, align 4
  store i32 0, i32* %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %if.end
  %13 = load i32, i32* %t, align 4
  %cmp3 = icmp slt i32 %13, 6
  br i1 %cmp3, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %v, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %v, align 4
  %15 = load i32, i32* %alphaSize, align 4
  %cmp5 = icmp slt i32 %14, %15
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %16 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 35
  %17 = load i32, i32* %t, align 4
  %idxprom = sext i32 %17 to i64
  %arrayidx = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len, i64 0, i64 %idxprom
  %18 = load i32, i32* %v, align 4
  %idxprom7 = sext i32 %18 to i64
  %arrayidx8 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx, i64 0, i64 %idxprom7
  store i8 15, i8* %arrayidx8, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %19 = load i32, i32* %v, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %v, align 4
  br label %for.cond4

for.end:                                          ; preds = %for.cond4
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %20 = load i32, i32* %t, align 4
  %inc10 = add nsw i32 %20, 1
  store i32 %inc10, i32* %t, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  %21 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF12 = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 31
  %22 = load i32, i32* %nMTF12, align 4
  %cmp13 = icmp sgt i32 %22, 0
  br i1 %cmp13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %for.end11
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %for.end11
  %23 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF16 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 31
  %24 = load i32, i32* %nMTF16, align 4
  %cmp17 = icmp slt i32 %24, 200
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end15
  store i32 2, i32* %nGroups, align 4
  br label %if.end34

if.else:                                          ; preds = %if.end15
  %25 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF19 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 31
  %26 = load i32, i32* %nMTF19, align 4
  %cmp20 = icmp slt i32 %26, 600
  br i1 %cmp20, label %if.then21, label %if.else22

if.then21:                                        ; preds = %if.else
  store i32 3, i32* %nGroups, align 4
  br label %if.end33

if.else22:                                        ; preds = %if.else
  %27 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF23 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 31
  %28 = load i32, i32* %nMTF23, align 4
  %cmp24 = icmp slt i32 %28, 1200
  br i1 %cmp24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else22
  store i32 4, i32* %nGroups, align 4
  br label %if.end32

if.else26:                                        ; preds = %if.else22
  %29 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF27 = getelementptr inbounds %struct.EState, %struct.EState* %29, i32 0, i32 31
  %30 = load i32, i32* %nMTF27, align 4
  %cmp28 = icmp slt i32 %30, 2400
  br i1 %cmp28, label %if.then29, label %if.else30

if.then29:                                        ; preds = %if.else26
  store i32 5, i32* %nGroups, align 4
  br label %if.end31

if.else30:                                        ; preds = %if.else26
  store i32 6, i32* %nGroups, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then29
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then25
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then21
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then18
  %31 = load i32, i32* %nGroups, align 4
  store i32 %31, i32* %nPart, align 4
  %32 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF35 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 31
  %33 = load i32, i32* %nMTF35, align 4
  store i32 %33, i32* %remF, align 4
  store i32 0, i32* %gs, align 4
  br label %while.cond

while.cond:                                       ; preds = %for.end95, %if.end34
  %34 = load i32, i32* %nPart, align 4
  %cmp36 = icmp sgt i32 %34, 0
  br i1 %cmp36, label %while.body, label %while.end99

while.body:                                       ; preds = %while.cond
  %35 = load i32, i32* %remF, align 4
  %36 = load i32, i32* %nPart, align 4
  %div = sdiv i32 %35, %36
  store i32 %div, i32* %tFreq, align 4
  %37 = load i32, i32* %gs, align 4
  %sub = sub nsw i32 %37, 1
  store i32 %sub, i32* %ge, align 4
  store i32 0, i32* %aFreq, align 4
  br label %while.cond37

while.cond37:                                     ; preds = %while.body41, %while.body
  %38 = load i32, i32* %aFreq, align 4
  %39 = load i32, i32* %tFreq, align 4
  %cmp38 = icmp slt i32 %38, %39
  br i1 %cmp38, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond37
  %40 = load i32, i32* %ge, align 4
  %41 = load i32, i32* %alphaSize, align 4
  %sub39 = sub nsw i32 %41, 1
  %cmp40 = icmp slt i32 %40, %sub39
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond37
  %42 = phi i1 [ false, %while.cond37 ], [ %cmp40, %land.rhs ]
  br i1 %42, label %while.body41, label %while.end

while.body41:                                     ; preds = %land.end
  %43 = load i32, i32* %ge, align 4
  %inc42 = add nsw i32 %43, 1
  store i32 %inc42, i32* %ge, align 4
  %44 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 32
  %45 = load i32, i32* %ge, align 4
  %idxprom43 = sext i32 %45 to i64
  %arrayidx44 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq, i64 0, i64 %idxprom43
  %46 = load i32, i32* %arrayidx44, align 4
  %47 = load i32, i32* %aFreq, align 4
  %add45 = add nsw i32 %47, %46
  store i32 %add45, i32* %aFreq, align 4
  br label %while.cond37

while.end:                                        ; preds = %land.end
  %48 = load i32, i32* %ge, align 4
  %49 = load i32, i32* %gs, align 4
  %cmp46 = icmp sgt i32 %48, %49
  br i1 %cmp46, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %while.end
  %50 = load i32, i32* %nPart, align 4
  %51 = load i32, i32* %nGroups, align 4
  %cmp47 = icmp ne i32 %50, %51
  br i1 %cmp47, label %land.lhs.true48, label %if.end58

land.lhs.true48:                                  ; preds = %land.lhs.true
  %52 = load i32, i32* %nPart, align 4
  %cmp49 = icmp ne i32 %52, 1
  br i1 %cmp49, label %land.lhs.true50, label %if.end58

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %53 = load i32, i32* %nGroups, align 4
  %54 = load i32, i32* %nPart, align 4
  %sub51 = sub nsw i32 %53, %54
  %rem = srem i32 %sub51, 2
  %cmp52 = icmp eq i32 %rem, 1
  br i1 %cmp52, label %if.then53, label %if.end58

if.then53:                                        ; preds = %land.lhs.true50
  %55 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %mtfFreq54 = getelementptr inbounds %struct.EState, %struct.EState* %55, i32 0, i32 32
  %56 = load i32, i32* %ge, align 4
  %idxprom55 = sext i32 %56 to i64
  %arrayidx56 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq54, i64 0, i64 %idxprom55
  %57 = load i32, i32* %arrayidx56, align 4
  %58 = load i32, i32* %aFreq, align 4
  %sub57 = sub nsw i32 %58, %57
  store i32 %sub57, i32* %aFreq, align 4
  %59 = load i32, i32* %ge, align 4
  %dec = add nsw i32 %59, -1
  store i32 %dec, i32* %ge, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %land.lhs.true50, %land.lhs.true48, %land.lhs.true, %while.end
  %60 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity59 = getelementptr inbounds %struct.EState, %struct.EState* %60, i32 0, i32 28
  %61 = load i32, i32* %verbosity59, align 8
  %cmp60 = icmp sge i32 %61, 3
  br i1 %cmp60, label %if.then61, label %if.end68

if.then61:                                        ; preds = %if.end58
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %63 = load i32, i32* %nPart, align 4
  %64 = load i32, i32* %gs, align 4
  %65 = load i32, i32* %ge, align 4
  %66 = load i32, i32* %aFreq, align 4
  %67 = load i32, i32* %aFreq, align 4
  %conv = sitofp i32 %67 to float
  %conv62 = fpext float %conv to double
  %mul = fmul double 1.000000e+02, %conv62
  %68 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF63 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 31
  %69 = load i32, i32* %nMTF63, align 4
  %conv64 = sitofp i32 %69 to float
  %conv65 = fpext float %conv64 to double
  %div66 = fdiv double %mul, %conv65
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3.146, i64 0, i64 0), i32 %63, i32 %64, i32 %65, i32 %66, double %div66)
  br label %if.end68

if.end68:                                         ; preds = %if.then61, %if.end58
  store i32 0, i32* %v, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc93, %if.end68
  %70 = load i32, i32* %v, align 4
  %71 = load i32, i32* %alphaSize, align 4
  %cmp70 = icmp slt i32 %70, %71
  br i1 %cmp70, label %for.body72, label %for.end95

for.body72:                                       ; preds = %for.cond69
  %72 = load i32, i32* %v, align 4
  %73 = load i32, i32* %gs, align 4
  %cmp73 = icmp sge i32 %72, %73
  br i1 %cmp73, label %land.lhs.true75, label %if.else85

land.lhs.true75:                                  ; preds = %for.body72
  %74 = load i32, i32* %v, align 4
  %75 = load i32, i32* %ge, align 4
  %cmp76 = icmp sle i32 %74, %75
  br i1 %cmp76, label %if.then78, label %if.else85

if.then78:                                        ; preds = %land.lhs.true75
  %76 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len79 = getelementptr inbounds %struct.EState, %struct.EState* %76, i32 0, i32 35
  %77 = load i32, i32* %nPart, align 4
  %sub80 = sub nsw i32 %77, 1
  %idxprom81 = sext i32 %sub80 to i64
  %arrayidx82 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len79, i64 0, i64 %idxprom81
  %78 = load i32, i32* %v, align 4
  %idxprom83 = sext i32 %78 to i64
  %arrayidx84 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx82, i64 0, i64 %idxprom83
  store i8 0, i8* %arrayidx84, align 1
  br label %if.end92

if.else85:                                        ; preds = %land.lhs.true75, %for.body72
  %79 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len86 = getelementptr inbounds %struct.EState, %struct.EState* %79, i32 0, i32 35
  %80 = load i32, i32* %nPart, align 4
  %sub87 = sub nsw i32 %80, 1
  %idxprom88 = sext i32 %sub87 to i64
  %arrayidx89 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len86, i64 0, i64 %idxprom88
  %81 = load i32, i32* %v, align 4
  %idxprom90 = sext i32 %81 to i64
  %arrayidx91 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx89, i64 0, i64 %idxprom90
  store i8 15, i8* %arrayidx91, align 1
  br label %if.end92

if.end92:                                         ; preds = %if.else85, %if.then78
  br label %for.inc93

for.inc93:                                        ; preds = %if.end92
  %82 = load i32, i32* %v, align 4
  %inc94 = add nsw i32 %82, 1
  store i32 %inc94, i32* %v, align 4
  br label %for.cond69

for.end95:                                        ; preds = %for.cond69
  %83 = load i32, i32* %nPart, align 4
  %dec96 = add nsw i32 %83, -1
  store i32 %dec96, i32* %nPart, align 4
  %84 = load i32, i32* %ge, align 4
  %add97 = add nsw i32 %84, 1
  store i32 %add97, i32* %gs, align 4
  %85 = load i32, i32* %aFreq, align 4
  %86 = load i32, i32* %remF, align 4
  %sub98 = sub nsw i32 %86, %85
  store i32 %sub98, i32* %remF, align 4
  br label %while.cond

while.end99:                                      ; preds = %while.cond
  store i32 0, i32* %iter, align 4
  br label %for.cond100

for.cond100:                                      ; preds = %for.inc1702, %while.end99
  %87 = load i32, i32* %iter, align 4
  %cmp101 = icmp slt i32 %87, 4
  br i1 %cmp101, label %for.body103, label %for.end1704

for.body103:                                      ; preds = %for.cond100
  store i32 0, i32* %t, align 4
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc110, %for.body103
  %88 = load i32, i32* %t, align 4
  %89 = load i32, i32* %nGroups, align 4
  %cmp105 = icmp slt i32 %88, %89
  br i1 %cmp105, label %for.body107, label %for.end112

for.body107:                                      ; preds = %for.cond104
  %90 = load i32, i32* %t, align 4
  %idxprom108 = sext i32 %90 to i64
  %arrayidx109 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom108
  store i32 0, i32* %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body107
  %91 = load i32, i32* %t, align 4
  %inc111 = add nsw i32 %91, 1
  store i32 %inc111, i32* %t, align 4
  br label %for.cond104

for.end112:                                       ; preds = %for.cond104
  store i32 0, i32* %t, align 4
  br label %for.cond113

for.cond113:                                      ; preds = %for.inc128, %for.end112
  %92 = load i32, i32* %t, align 4
  %93 = load i32, i32* %nGroups, align 4
  %cmp114 = icmp slt i32 %92, %93
  br i1 %cmp114, label %for.body116, label %for.end130

for.body116:                                      ; preds = %for.cond113
  store i32 0, i32* %v, align 4
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc125, %for.body116
  %94 = load i32, i32* %v, align 4
  %95 = load i32, i32* %alphaSize, align 4
  %cmp118 = icmp slt i32 %94, %95
  br i1 %cmp118, label %for.body120, label %for.end127

for.body120:                                      ; preds = %for.cond117
  %96 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq = getelementptr inbounds %struct.EState, %struct.EState* %96, i32 0, i32 37
  %97 = load i32, i32* %t, align 4
  %idxprom121 = sext i32 %97 to i64
  %arrayidx122 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq, i64 0, i64 %idxprom121
  %98 = load i32, i32* %v, align 4
  %idxprom123 = sext i32 %98 to i64
  %arrayidx124 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx122, i64 0, i64 %idxprom123
  store i32 0, i32* %arrayidx124, align 4
  br label %for.inc125

for.inc125:                                       ; preds = %for.body120
  %99 = load i32, i32* %v, align 4
  %inc126 = add nsw i32 %99, 1
  store i32 %inc126, i32* %v, align 4
  br label %for.cond117

for.end127:                                       ; preds = %for.cond117
  br label %for.inc128

for.inc128:                                       ; preds = %for.end127
  %100 = load i32, i32* %t, align 4
  %inc129 = add nsw i32 %100, 1
  store i32 %inc129, i32* %t, align 4
  br label %for.cond113

for.end130:                                       ; preds = %for.cond113
  %101 = load i32, i32* %nGroups, align 4
  %cmp131 = icmp eq i32 %101, 6
  br i1 %cmp131, label %if.then133, label %if.end186

if.then133:                                       ; preds = %for.end130
  store i32 0, i32* %v, align 4
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc183, %if.then133
  %102 = load i32, i32* %v, align 4
  %103 = load i32, i32* %alphaSize, align 4
  %cmp135 = icmp slt i32 %102, %103
  br i1 %cmp135, label %for.body137, label %for.end185

for.body137:                                      ; preds = %for.cond134
  %104 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len138 = getelementptr inbounds %struct.EState, %struct.EState* %104, i32 0, i32 35
  %arrayidx139 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len138, i64 0, i64 1
  %105 = load i32, i32* %v, align 4
  %idxprom140 = sext i32 %105 to i64
  %arrayidx141 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx139, i64 0, i64 %idxprom140
  %106 = load i8, i8* %arrayidx141, align 1
  %conv142 = zext i8 %106 to i32
  %shl = shl i32 %conv142, 16
  %107 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len143 = getelementptr inbounds %struct.EState, %struct.EState* %107, i32 0, i32 35
  %arrayidx144 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len143, i64 0, i64 0
  %108 = load i32, i32* %v, align 4
  %idxprom145 = sext i32 %108 to i64
  %arrayidx146 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx144, i64 0, i64 %idxprom145
  %109 = load i8, i8* %arrayidx146, align 1
  %conv147 = zext i8 %109 to i32
  %or = or i32 %shl, %conv147
  %110 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack = getelementptr inbounds %struct.EState, %struct.EState* %110, i32 0, i32 38
  %111 = load i32, i32* %v, align 4
  %idxprom148 = sext i32 %111 to i64
  %arrayidx149 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack, i64 0, i64 %idxprom148
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx149, i64 0, i64 0
  store i32 %or, i32* %arrayidx150, align 8
  %112 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len151 = getelementptr inbounds %struct.EState, %struct.EState* %112, i32 0, i32 35
  %arrayidx152 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len151, i64 0, i64 3
  %113 = load i32, i32* %v, align 4
  %idxprom153 = sext i32 %113 to i64
  %arrayidx154 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx152, i64 0, i64 %idxprom153
  %114 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %114 to i32
  %shl156 = shl i32 %conv155, 16
  %115 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len157 = getelementptr inbounds %struct.EState, %struct.EState* %115, i32 0, i32 35
  %arrayidx158 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len157, i64 0, i64 2
  %116 = load i32, i32* %v, align 4
  %idxprom159 = sext i32 %116 to i64
  %arrayidx160 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx158, i64 0, i64 %idxprom159
  %117 = load i8, i8* %arrayidx160, align 1
  %conv161 = zext i8 %117 to i32
  %or162 = or i32 %shl156, %conv161
  %118 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack163 = getelementptr inbounds %struct.EState, %struct.EState* %118, i32 0, i32 38
  %119 = load i32, i32* %v, align 4
  %idxprom164 = sext i32 %119 to i64
  %arrayidx165 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack163, i64 0, i64 %idxprom164
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx165, i64 0, i64 1
  store i32 %or162, i32* %arrayidx166, align 4
  %120 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len167 = getelementptr inbounds %struct.EState, %struct.EState* %120, i32 0, i32 35
  %arrayidx168 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len167, i64 0, i64 5
  %121 = load i32, i32* %v, align 4
  %idxprom169 = sext i32 %121 to i64
  %arrayidx170 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx168, i64 0, i64 %idxprom169
  %122 = load i8, i8* %arrayidx170, align 1
  %conv171 = zext i8 %122 to i32
  %shl172 = shl i32 %conv171, 16
  %123 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len173 = getelementptr inbounds %struct.EState, %struct.EState* %123, i32 0, i32 35
  %arrayidx174 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len173, i64 0, i64 4
  %124 = load i32, i32* %v, align 4
  %idxprom175 = sext i32 %124 to i64
  %arrayidx176 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx174, i64 0, i64 %idxprom175
  %125 = load i8, i8* %arrayidx176, align 1
  %conv177 = zext i8 %125 to i32
  %or178 = or i32 %shl172, %conv177
  %126 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack179 = getelementptr inbounds %struct.EState, %struct.EState* %126, i32 0, i32 38
  %127 = load i32, i32* %v, align 4
  %idxprom180 = sext i32 %127 to i64
  %arrayidx181 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack179, i64 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx181, i64 0, i64 2
  store i32 %or178, i32* %arrayidx182, align 8
  br label %for.inc183

for.inc183:                                       ; preds = %for.body137
  %128 = load i32, i32* %v, align 4
  %inc184 = add nsw i32 %128, 1
  store i32 %inc184, i32* %v, align 4
  br label %for.cond134

for.end185:                                       ; preds = %for.cond134
  br label %if.end186

if.end186:                                        ; preds = %for.end185, %for.end130
  store i32 0, i32* %nSelectors, align 4
  store i32 0, i32* %totc, align 4
  store i32 0, i32* %gs, align 4
  br label %while.body188

while.body188:                                    ; preds = %if.end1665, %if.end186
  %129 = load i32, i32* %gs, align 4
  %130 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF189 = getelementptr inbounds %struct.EState, %struct.EState* %130, i32 0, i32 31
  %131 = load i32, i32* %nMTF189, align 4
  %cmp190 = icmp sge i32 %129, %131
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %while.body188
  br label %while.end1667

if.end193:                                        ; preds = %while.body188
  %132 = load i32, i32* %gs, align 4
  %add194 = add nsw i32 %132, 50
  %sub195 = sub nsw i32 %add194, 1
  store i32 %sub195, i32* %ge, align 4
  %133 = load i32, i32* %ge, align 4
  %134 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF196 = getelementptr inbounds %struct.EState, %struct.EState* %134, i32 0, i32 31
  %135 = load i32, i32* %nMTF196, align 4
  %cmp197 = icmp sge i32 %133, %135
  br i1 %cmp197, label %if.then199, label %if.end202

if.then199:                                       ; preds = %if.end193
  %136 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF200 = getelementptr inbounds %struct.EState, %struct.EState* %136, i32 0, i32 31
  %137 = load i32, i32* %nMTF200, align 4
  %sub201 = sub nsw i32 %137, 1
  store i32 %sub201, i32* %ge, align 4
  br label %if.end202

if.end202:                                        ; preds = %if.then199, %if.end193
  store i32 0, i32* %t, align 4
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc209, %if.end202
  %138 = load i32, i32* %t, align 4
  %139 = load i32, i32* %nGroups, align 4
  %cmp204 = icmp slt i32 %138, %139
  br i1 %cmp204, label %for.body206, label %for.end211

for.body206:                                      ; preds = %for.cond203
  %140 = load i32, i32* %t, align 4
  %idxprom207 = sext i32 %140 to i64
  %arrayidx208 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom207
  store i16 0, i16* %arrayidx208, align 2
  br label %for.inc209

for.inc209:                                       ; preds = %for.body206
  %141 = load i32, i32* %t, align 4
  %inc210 = add nsw i32 %141, 1
  store i32 %inc210, i32* %t, align 4
  br label %for.cond203

for.end211:                                       ; preds = %for.cond203
  %142 = load i32, i32* %nGroups, align 4
  %cmp212 = icmp eq i32 %142, 6
  br i1 %cmp212, label %land.lhs.true214, label %if.else1136

land.lhs.true214:                                 ; preds = %for.end211
  %143 = load i32, i32* %ge, align 4
  %144 = load i32, i32* %gs, align 4
  %sub215 = sub nsw i32 %143, %144
  %add216 = add nsw i32 %sub215, 1
  %cmp217 = icmp eq i32 50, %add216
  br i1 %cmp217, label %if.then219, label %if.else1136

if.then219:                                       ; preds = %land.lhs.true214
  store i32 0, i32* %cost45, align 4
  store i32 0, i32* %cost23, align 4
  store i32 0, i32* %cost01, align 4
  %145 = load i16*, i16** %mtfv, align 8
  %146 = load i32, i32* %gs, align 4
  %add220 = add nsw i32 %146, 0
  %idxprom221 = sext i32 %add220 to i64
  %arrayidx222 = getelementptr inbounds i16, i16* %145, i64 %idxprom221
  %147 = load i16, i16* %arrayidx222, align 2
  store i16 %147, i16* %icv, align 2
  %148 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack223 = getelementptr inbounds %struct.EState, %struct.EState* %148, i32 0, i32 38
  %149 = load i16, i16* %icv, align 2
  %idxprom224 = zext i16 %149 to i64
  %arrayidx225 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack223, i64 0, i64 %idxprom224
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx225, i64 0, i64 0
  %150 = load i32, i32* %arrayidx226, align 8
  %151 = load i32, i32* %cost01, align 4
  %add227 = add i32 %151, %150
  store i32 %add227, i32* %cost01, align 4
  %152 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack228 = getelementptr inbounds %struct.EState, %struct.EState* %152, i32 0, i32 38
  %153 = load i16, i16* %icv, align 2
  %idxprom229 = zext i16 %153 to i64
  %arrayidx230 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack228, i64 0, i64 %idxprom229
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 1
  %154 = load i32, i32* %arrayidx231, align 4
  %155 = load i32, i32* %cost23, align 4
  %add232 = add i32 %155, %154
  store i32 %add232, i32* %cost23, align 4
  %156 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack233 = getelementptr inbounds %struct.EState, %struct.EState* %156, i32 0, i32 38
  %157 = load i16, i16* %icv, align 2
  %idxprom234 = zext i16 %157 to i64
  %arrayidx235 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack233, i64 0, i64 %idxprom234
  %arrayidx236 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx235, i64 0, i64 2
  %158 = load i32, i32* %arrayidx236, align 8
  %159 = load i32, i32* %cost45, align 4
  %add237 = add i32 %159, %158
  store i32 %add237, i32* %cost45, align 4
  %160 = load i16*, i16** %mtfv, align 8
  %161 = load i32, i32* %gs, align 4
  %add238 = add nsw i32 %161, 1
  %idxprom239 = sext i32 %add238 to i64
  %arrayidx240 = getelementptr inbounds i16, i16* %160, i64 %idxprom239
  %162 = load i16, i16* %arrayidx240, align 2
  store i16 %162, i16* %icv, align 2
  %163 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack241 = getelementptr inbounds %struct.EState, %struct.EState* %163, i32 0, i32 38
  %164 = load i16, i16* %icv, align 2
  %idxprom242 = zext i16 %164 to i64
  %arrayidx243 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack241, i64 0, i64 %idxprom242
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx243, i64 0, i64 0
  %165 = load i32, i32* %arrayidx244, align 8
  %166 = load i32, i32* %cost01, align 4
  %add245 = add i32 %166, %165
  store i32 %add245, i32* %cost01, align 4
  %167 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack246 = getelementptr inbounds %struct.EState, %struct.EState* %167, i32 0, i32 38
  %168 = load i16, i16* %icv, align 2
  %idxprom247 = zext i16 %168 to i64
  %arrayidx248 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack246, i64 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx248, i64 0, i64 1
  %169 = load i32, i32* %arrayidx249, align 4
  %170 = load i32, i32* %cost23, align 4
  %add250 = add i32 %170, %169
  store i32 %add250, i32* %cost23, align 4
  %171 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack251 = getelementptr inbounds %struct.EState, %struct.EState* %171, i32 0, i32 38
  %172 = load i16, i16* %icv, align 2
  %idxprom252 = zext i16 %172 to i64
  %arrayidx253 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack251, i64 0, i64 %idxprom252
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx253, i64 0, i64 2
  %173 = load i32, i32* %arrayidx254, align 8
  %174 = load i32, i32* %cost45, align 4
  %add255 = add i32 %174, %173
  store i32 %add255, i32* %cost45, align 4
  %175 = load i16*, i16** %mtfv, align 8
  %176 = load i32, i32* %gs, align 4
  %add256 = add nsw i32 %176, 2
  %idxprom257 = sext i32 %add256 to i64
  %arrayidx258 = getelementptr inbounds i16, i16* %175, i64 %idxprom257
  %177 = load i16, i16* %arrayidx258, align 2
  store i16 %177, i16* %icv, align 2
  %178 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack259 = getelementptr inbounds %struct.EState, %struct.EState* %178, i32 0, i32 38
  %179 = load i16, i16* %icv, align 2
  %idxprom260 = zext i16 %179 to i64
  %arrayidx261 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack259, i64 0, i64 %idxprom260
  %arrayidx262 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx261, i64 0, i64 0
  %180 = load i32, i32* %arrayidx262, align 8
  %181 = load i32, i32* %cost01, align 4
  %add263 = add i32 %181, %180
  store i32 %add263, i32* %cost01, align 4
  %182 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack264 = getelementptr inbounds %struct.EState, %struct.EState* %182, i32 0, i32 38
  %183 = load i16, i16* %icv, align 2
  %idxprom265 = zext i16 %183 to i64
  %arrayidx266 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack264, i64 0, i64 %idxprom265
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx266, i64 0, i64 1
  %184 = load i32, i32* %arrayidx267, align 4
  %185 = load i32, i32* %cost23, align 4
  %add268 = add i32 %185, %184
  store i32 %add268, i32* %cost23, align 4
  %186 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack269 = getelementptr inbounds %struct.EState, %struct.EState* %186, i32 0, i32 38
  %187 = load i16, i16* %icv, align 2
  %idxprom270 = zext i16 %187 to i64
  %arrayidx271 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack269, i64 0, i64 %idxprom270
  %arrayidx272 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx271, i64 0, i64 2
  %188 = load i32, i32* %arrayidx272, align 8
  %189 = load i32, i32* %cost45, align 4
  %add273 = add i32 %189, %188
  store i32 %add273, i32* %cost45, align 4
  %190 = load i16*, i16** %mtfv, align 8
  %191 = load i32, i32* %gs, align 4
  %add274 = add nsw i32 %191, 3
  %idxprom275 = sext i32 %add274 to i64
  %arrayidx276 = getelementptr inbounds i16, i16* %190, i64 %idxprom275
  %192 = load i16, i16* %arrayidx276, align 2
  store i16 %192, i16* %icv, align 2
  %193 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack277 = getelementptr inbounds %struct.EState, %struct.EState* %193, i32 0, i32 38
  %194 = load i16, i16* %icv, align 2
  %idxprom278 = zext i16 %194 to i64
  %arrayidx279 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack277, i64 0, i64 %idxprom278
  %arrayidx280 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 0
  %195 = load i32, i32* %arrayidx280, align 8
  %196 = load i32, i32* %cost01, align 4
  %add281 = add i32 %196, %195
  store i32 %add281, i32* %cost01, align 4
  %197 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack282 = getelementptr inbounds %struct.EState, %struct.EState* %197, i32 0, i32 38
  %198 = load i16, i16* %icv, align 2
  %idxprom283 = zext i16 %198 to i64
  %arrayidx284 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack282, i64 0, i64 %idxprom283
  %arrayidx285 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx284, i64 0, i64 1
  %199 = load i32, i32* %arrayidx285, align 4
  %200 = load i32, i32* %cost23, align 4
  %add286 = add i32 %200, %199
  store i32 %add286, i32* %cost23, align 4
  %201 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack287 = getelementptr inbounds %struct.EState, %struct.EState* %201, i32 0, i32 38
  %202 = load i16, i16* %icv, align 2
  %idxprom288 = zext i16 %202 to i64
  %arrayidx289 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack287, i64 0, i64 %idxprom288
  %arrayidx290 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 2
  %203 = load i32, i32* %arrayidx290, align 8
  %204 = load i32, i32* %cost45, align 4
  %add291 = add i32 %204, %203
  store i32 %add291, i32* %cost45, align 4
  %205 = load i16*, i16** %mtfv, align 8
  %206 = load i32, i32* %gs, align 4
  %add292 = add nsw i32 %206, 4
  %idxprom293 = sext i32 %add292 to i64
  %arrayidx294 = getelementptr inbounds i16, i16* %205, i64 %idxprom293
  %207 = load i16, i16* %arrayidx294, align 2
  store i16 %207, i16* %icv, align 2
  %208 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack295 = getelementptr inbounds %struct.EState, %struct.EState* %208, i32 0, i32 38
  %209 = load i16, i16* %icv, align 2
  %idxprom296 = zext i16 %209 to i64
  %arrayidx297 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack295, i64 0, i64 %idxprom296
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx297, i64 0, i64 0
  %210 = load i32, i32* %arrayidx298, align 8
  %211 = load i32, i32* %cost01, align 4
  %add299 = add i32 %211, %210
  store i32 %add299, i32* %cost01, align 4
  %212 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack300 = getelementptr inbounds %struct.EState, %struct.EState* %212, i32 0, i32 38
  %213 = load i16, i16* %icv, align 2
  %idxprom301 = zext i16 %213 to i64
  %arrayidx302 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack300, i64 0, i64 %idxprom301
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx302, i64 0, i64 1
  %214 = load i32, i32* %arrayidx303, align 4
  %215 = load i32, i32* %cost23, align 4
  %add304 = add i32 %215, %214
  store i32 %add304, i32* %cost23, align 4
  %216 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack305 = getelementptr inbounds %struct.EState, %struct.EState* %216, i32 0, i32 38
  %217 = load i16, i16* %icv, align 2
  %idxprom306 = zext i16 %217 to i64
  %arrayidx307 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack305, i64 0, i64 %idxprom306
  %arrayidx308 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 2
  %218 = load i32, i32* %arrayidx308, align 8
  %219 = load i32, i32* %cost45, align 4
  %add309 = add i32 %219, %218
  store i32 %add309, i32* %cost45, align 4
  %220 = load i16*, i16** %mtfv, align 8
  %221 = load i32, i32* %gs, align 4
  %add310 = add nsw i32 %221, 5
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %220, i64 %idxprom311
  %222 = load i16, i16* %arrayidx312, align 2
  store i16 %222, i16* %icv, align 2
  %223 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack313 = getelementptr inbounds %struct.EState, %struct.EState* %223, i32 0, i32 38
  %224 = load i16, i16* %icv, align 2
  %idxprom314 = zext i16 %224 to i64
  %arrayidx315 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack313, i64 0, i64 %idxprom314
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx315, i64 0, i64 0
  %225 = load i32, i32* %arrayidx316, align 8
  %226 = load i32, i32* %cost01, align 4
  %add317 = add i32 %226, %225
  store i32 %add317, i32* %cost01, align 4
  %227 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack318 = getelementptr inbounds %struct.EState, %struct.EState* %227, i32 0, i32 38
  %228 = load i16, i16* %icv, align 2
  %idxprom319 = zext i16 %228 to i64
  %arrayidx320 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack318, i64 0, i64 %idxprom319
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx320, i64 0, i64 1
  %229 = load i32, i32* %arrayidx321, align 4
  %230 = load i32, i32* %cost23, align 4
  %add322 = add i32 %230, %229
  store i32 %add322, i32* %cost23, align 4
  %231 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack323 = getelementptr inbounds %struct.EState, %struct.EState* %231, i32 0, i32 38
  %232 = load i16, i16* %icv, align 2
  %idxprom324 = zext i16 %232 to i64
  %arrayidx325 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack323, i64 0, i64 %idxprom324
  %arrayidx326 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx325, i64 0, i64 2
  %233 = load i32, i32* %arrayidx326, align 8
  %234 = load i32, i32* %cost45, align 4
  %add327 = add i32 %234, %233
  store i32 %add327, i32* %cost45, align 4
  %235 = load i16*, i16** %mtfv, align 8
  %236 = load i32, i32* %gs, align 4
  %add328 = add nsw i32 %236, 6
  %idxprom329 = sext i32 %add328 to i64
  %arrayidx330 = getelementptr inbounds i16, i16* %235, i64 %idxprom329
  %237 = load i16, i16* %arrayidx330, align 2
  store i16 %237, i16* %icv, align 2
  %238 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack331 = getelementptr inbounds %struct.EState, %struct.EState* %238, i32 0, i32 38
  %239 = load i16, i16* %icv, align 2
  %idxprom332 = zext i16 %239 to i64
  %arrayidx333 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack331, i64 0, i64 %idxprom332
  %arrayidx334 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx333, i64 0, i64 0
  %240 = load i32, i32* %arrayidx334, align 8
  %241 = load i32, i32* %cost01, align 4
  %add335 = add i32 %241, %240
  store i32 %add335, i32* %cost01, align 4
  %242 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack336 = getelementptr inbounds %struct.EState, %struct.EState* %242, i32 0, i32 38
  %243 = load i16, i16* %icv, align 2
  %idxprom337 = zext i16 %243 to i64
  %arrayidx338 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack336, i64 0, i64 %idxprom337
  %arrayidx339 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx338, i64 0, i64 1
  %244 = load i32, i32* %arrayidx339, align 4
  %245 = load i32, i32* %cost23, align 4
  %add340 = add i32 %245, %244
  store i32 %add340, i32* %cost23, align 4
  %246 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack341 = getelementptr inbounds %struct.EState, %struct.EState* %246, i32 0, i32 38
  %247 = load i16, i16* %icv, align 2
  %idxprom342 = zext i16 %247 to i64
  %arrayidx343 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack341, i64 0, i64 %idxprom342
  %arrayidx344 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx343, i64 0, i64 2
  %248 = load i32, i32* %arrayidx344, align 8
  %249 = load i32, i32* %cost45, align 4
  %add345 = add i32 %249, %248
  store i32 %add345, i32* %cost45, align 4
  %250 = load i16*, i16** %mtfv, align 8
  %251 = load i32, i32* %gs, align 4
  %add346 = add nsw i32 %251, 7
  %idxprom347 = sext i32 %add346 to i64
  %arrayidx348 = getelementptr inbounds i16, i16* %250, i64 %idxprom347
  %252 = load i16, i16* %arrayidx348, align 2
  store i16 %252, i16* %icv, align 2
  %253 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack349 = getelementptr inbounds %struct.EState, %struct.EState* %253, i32 0, i32 38
  %254 = load i16, i16* %icv, align 2
  %idxprom350 = zext i16 %254 to i64
  %arrayidx351 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack349, i64 0, i64 %idxprom350
  %arrayidx352 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx351, i64 0, i64 0
  %255 = load i32, i32* %arrayidx352, align 8
  %256 = load i32, i32* %cost01, align 4
  %add353 = add i32 %256, %255
  store i32 %add353, i32* %cost01, align 4
  %257 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack354 = getelementptr inbounds %struct.EState, %struct.EState* %257, i32 0, i32 38
  %258 = load i16, i16* %icv, align 2
  %idxprom355 = zext i16 %258 to i64
  %arrayidx356 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack354, i64 0, i64 %idxprom355
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx356, i64 0, i64 1
  %259 = load i32, i32* %arrayidx357, align 4
  %260 = load i32, i32* %cost23, align 4
  %add358 = add i32 %260, %259
  store i32 %add358, i32* %cost23, align 4
  %261 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack359 = getelementptr inbounds %struct.EState, %struct.EState* %261, i32 0, i32 38
  %262 = load i16, i16* %icv, align 2
  %idxprom360 = zext i16 %262 to i64
  %arrayidx361 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack359, i64 0, i64 %idxprom360
  %arrayidx362 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx361, i64 0, i64 2
  %263 = load i32, i32* %arrayidx362, align 8
  %264 = load i32, i32* %cost45, align 4
  %add363 = add i32 %264, %263
  store i32 %add363, i32* %cost45, align 4
  %265 = load i16*, i16** %mtfv, align 8
  %266 = load i32, i32* %gs, align 4
  %add364 = add nsw i32 %266, 8
  %idxprom365 = sext i32 %add364 to i64
  %arrayidx366 = getelementptr inbounds i16, i16* %265, i64 %idxprom365
  %267 = load i16, i16* %arrayidx366, align 2
  store i16 %267, i16* %icv, align 2
  %268 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack367 = getelementptr inbounds %struct.EState, %struct.EState* %268, i32 0, i32 38
  %269 = load i16, i16* %icv, align 2
  %idxprom368 = zext i16 %269 to i64
  %arrayidx369 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack367, i64 0, i64 %idxprom368
  %arrayidx370 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx369, i64 0, i64 0
  %270 = load i32, i32* %arrayidx370, align 8
  %271 = load i32, i32* %cost01, align 4
  %add371 = add i32 %271, %270
  store i32 %add371, i32* %cost01, align 4
  %272 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack372 = getelementptr inbounds %struct.EState, %struct.EState* %272, i32 0, i32 38
  %273 = load i16, i16* %icv, align 2
  %idxprom373 = zext i16 %273 to i64
  %arrayidx374 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack372, i64 0, i64 %idxprom373
  %arrayidx375 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx374, i64 0, i64 1
  %274 = load i32, i32* %arrayidx375, align 4
  %275 = load i32, i32* %cost23, align 4
  %add376 = add i32 %275, %274
  store i32 %add376, i32* %cost23, align 4
  %276 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack377 = getelementptr inbounds %struct.EState, %struct.EState* %276, i32 0, i32 38
  %277 = load i16, i16* %icv, align 2
  %idxprom378 = zext i16 %277 to i64
  %arrayidx379 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack377, i64 0, i64 %idxprom378
  %arrayidx380 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx379, i64 0, i64 2
  %278 = load i32, i32* %arrayidx380, align 8
  %279 = load i32, i32* %cost45, align 4
  %add381 = add i32 %279, %278
  store i32 %add381, i32* %cost45, align 4
  %280 = load i16*, i16** %mtfv, align 8
  %281 = load i32, i32* %gs, align 4
  %add382 = add nsw i32 %281, 9
  %idxprom383 = sext i32 %add382 to i64
  %arrayidx384 = getelementptr inbounds i16, i16* %280, i64 %idxprom383
  %282 = load i16, i16* %arrayidx384, align 2
  store i16 %282, i16* %icv, align 2
  %283 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack385 = getelementptr inbounds %struct.EState, %struct.EState* %283, i32 0, i32 38
  %284 = load i16, i16* %icv, align 2
  %idxprom386 = zext i16 %284 to i64
  %arrayidx387 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack385, i64 0, i64 %idxprom386
  %arrayidx388 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx387, i64 0, i64 0
  %285 = load i32, i32* %arrayidx388, align 8
  %286 = load i32, i32* %cost01, align 4
  %add389 = add i32 %286, %285
  store i32 %add389, i32* %cost01, align 4
  %287 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack390 = getelementptr inbounds %struct.EState, %struct.EState* %287, i32 0, i32 38
  %288 = load i16, i16* %icv, align 2
  %idxprom391 = zext i16 %288 to i64
  %arrayidx392 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack390, i64 0, i64 %idxprom391
  %arrayidx393 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx392, i64 0, i64 1
  %289 = load i32, i32* %arrayidx393, align 4
  %290 = load i32, i32* %cost23, align 4
  %add394 = add i32 %290, %289
  store i32 %add394, i32* %cost23, align 4
  %291 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack395 = getelementptr inbounds %struct.EState, %struct.EState* %291, i32 0, i32 38
  %292 = load i16, i16* %icv, align 2
  %idxprom396 = zext i16 %292 to i64
  %arrayidx397 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack395, i64 0, i64 %idxprom396
  %arrayidx398 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx397, i64 0, i64 2
  %293 = load i32, i32* %arrayidx398, align 8
  %294 = load i32, i32* %cost45, align 4
  %add399 = add i32 %294, %293
  store i32 %add399, i32* %cost45, align 4
  %295 = load i16*, i16** %mtfv, align 8
  %296 = load i32, i32* %gs, align 4
  %add400 = add nsw i32 %296, 10
  %idxprom401 = sext i32 %add400 to i64
  %arrayidx402 = getelementptr inbounds i16, i16* %295, i64 %idxprom401
  %297 = load i16, i16* %arrayidx402, align 2
  store i16 %297, i16* %icv, align 2
  %298 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack403 = getelementptr inbounds %struct.EState, %struct.EState* %298, i32 0, i32 38
  %299 = load i16, i16* %icv, align 2
  %idxprom404 = zext i16 %299 to i64
  %arrayidx405 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack403, i64 0, i64 %idxprom404
  %arrayidx406 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx405, i64 0, i64 0
  %300 = load i32, i32* %arrayidx406, align 8
  %301 = load i32, i32* %cost01, align 4
  %add407 = add i32 %301, %300
  store i32 %add407, i32* %cost01, align 4
  %302 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack408 = getelementptr inbounds %struct.EState, %struct.EState* %302, i32 0, i32 38
  %303 = load i16, i16* %icv, align 2
  %idxprom409 = zext i16 %303 to i64
  %arrayidx410 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack408, i64 0, i64 %idxprom409
  %arrayidx411 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 1
  %304 = load i32, i32* %arrayidx411, align 4
  %305 = load i32, i32* %cost23, align 4
  %add412 = add i32 %305, %304
  store i32 %add412, i32* %cost23, align 4
  %306 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack413 = getelementptr inbounds %struct.EState, %struct.EState* %306, i32 0, i32 38
  %307 = load i16, i16* %icv, align 2
  %idxprom414 = zext i16 %307 to i64
  %arrayidx415 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack413, i64 0, i64 %idxprom414
  %arrayidx416 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx415, i64 0, i64 2
  %308 = load i32, i32* %arrayidx416, align 8
  %309 = load i32, i32* %cost45, align 4
  %add417 = add i32 %309, %308
  store i32 %add417, i32* %cost45, align 4
  %310 = load i16*, i16** %mtfv, align 8
  %311 = load i32, i32* %gs, align 4
  %add418 = add nsw i32 %311, 11
  %idxprom419 = sext i32 %add418 to i64
  %arrayidx420 = getelementptr inbounds i16, i16* %310, i64 %idxprom419
  %312 = load i16, i16* %arrayidx420, align 2
  store i16 %312, i16* %icv, align 2
  %313 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack421 = getelementptr inbounds %struct.EState, %struct.EState* %313, i32 0, i32 38
  %314 = load i16, i16* %icv, align 2
  %idxprom422 = zext i16 %314 to i64
  %arrayidx423 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack421, i64 0, i64 %idxprom422
  %arrayidx424 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx423, i64 0, i64 0
  %315 = load i32, i32* %arrayidx424, align 8
  %316 = load i32, i32* %cost01, align 4
  %add425 = add i32 %316, %315
  store i32 %add425, i32* %cost01, align 4
  %317 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack426 = getelementptr inbounds %struct.EState, %struct.EState* %317, i32 0, i32 38
  %318 = load i16, i16* %icv, align 2
  %idxprom427 = zext i16 %318 to i64
  %arrayidx428 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack426, i64 0, i64 %idxprom427
  %arrayidx429 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx428, i64 0, i64 1
  %319 = load i32, i32* %arrayidx429, align 4
  %320 = load i32, i32* %cost23, align 4
  %add430 = add i32 %320, %319
  store i32 %add430, i32* %cost23, align 4
  %321 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack431 = getelementptr inbounds %struct.EState, %struct.EState* %321, i32 0, i32 38
  %322 = load i16, i16* %icv, align 2
  %idxprom432 = zext i16 %322 to i64
  %arrayidx433 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack431, i64 0, i64 %idxprom432
  %arrayidx434 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx433, i64 0, i64 2
  %323 = load i32, i32* %arrayidx434, align 8
  %324 = load i32, i32* %cost45, align 4
  %add435 = add i32 %324, %323
  store i32 %add435, i32* %cost45, align 4
  %325 = load i16*, i16** %mtfv, align 8
  %326 = load i32, i32* %gs, align 4
  %add436 = add nsw i32 %326, 12
  %idxprom437 = sext i32 %add436 to i64
  %arrayidx438 = getelementptr inbounds i16, i16* %325, i64 %idxprom437
  %327 = load i16, i16* %arrayidx438, align 2
  store i16 %327, i16* %icv, align 2
  %328 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack439 = getelementptr inbounds %struct.EState, %struct.EState* %328, i32 0, i32 38
  %329 = load i16, i16* %icv, align 2
  %idxprom440 = zext i16 %329 to i64
  %arrayidx441 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack439, i64 0, i64 %idxprom440
  %arrayidx442 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx441, i64 0, i64 0
  %330 = load i32, i32* %arrayidx442, align 8
  %331 = load i32, i32* %cost01, align 4
  %add443 = add i32 %331, %330
  store i32 %add443, i32* %cost01, align 4
  %332 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack444 = getelementptr inbounds %struct.EState, %struct.EState* %332, i32 0, i32 38
  %333 = load i16, i16* %icv, align 2
  %idxprom445 = zext i16 %333 to i64
  %arrayidx446 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack444, i64 0, i64 %idxprom445
  %arrayidx447 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx446, i64 0, i64 1
  %334 = load i32, i32* %arrayidx447, align 4
  %335 = load i32, i32* %cost23, align 4
  %add448 = add i32 %335, %334
  store i32 %add448, i32* %cost23, align 4
  %336 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack449 = getelementptr inbounds %struct.EState, %struct.EState* %336, i32 0, i32 38
  %337 = load i16, i16* %icv, align 2
  %idxprom450 = zext i16 %337 to i64
  %arrayidx451 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack449, i64 0, i64 %idxprom450
  %arrayidx452 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx451, i64 0, i64 2
  %338 = load i32, i32* %arrayidx452, align 8
  %339 = load i32, i32* %cost45, align 4
  %add453 = add i32 %339, %338
  store i32 %add453, i32* %cost45, align 4
  %340 = load i16*, i16** %mtfv, align 8
  %341 = load i32, i32* %gs, align 4
  %add454 = add nsw i32 %341, 13
  %idxprom455 = sext i32 %add454 to i64
  %arrayidx456 = getelementptr inbounds i16, i16* %340, i64 %idxprom455
  %342 = load i16, i16* %arrayidx456, align 2
  store i16 %342, i16* %icv, align 2
  %343 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack457 = getelementptr inbounds %struct.EState, %struct.EState* %343, i32 0, i32 38
  %344 = load i16, i16* %icv, align 2
  %idxprom458 = zext i16 %344 to i64
  %arrayidx459 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack457, i64 0, i64 %idxprom458
  %arrayidx460 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 0
  %345 = load i32, i32* %arrayidx460, align 8
  %346 = load i32, i32* %cost01, align 4
  %add461 = add i32 %346, %345
  store i32 %add461, i32* %cost01, align 4
  %347 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack462 = getelementptr inbounds %struct.EState, %struct.EState* %347, i32 0, i32 38
  %348 = load i16, i16* %icv, align 2
  %idxprom463 = zext i16 %348 to i64
  %arrayidx464 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack462, i64 0, i64 %idxprom463
  %arrayidx465 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx464, i64 0, i64 1
  %349 = load i32, i32* %arrayidx465, align 4
  %350 = load i32, i32* %cost23, align 4
  %add466 = add i32 %350, %349
  store i32 %add466, i32* %cost23, align 4
  %351 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack467 = getelementptr inbounds %struct.EState, %struct.EState* %351, i32 0, i32 38
  %352 = load i16, i16* %icv, align 2
  %idxprom468 = zext i16 %352 to i64
  %arrayidx469 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack467, i64 0, i64 %idxprom468
  %arrayidx470 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx469, i64 0, i64 2
  %353 = load i32, i32* %arrayidx470, align 8
  %354 = load i32, i32* %cost45, align 4
  %add471 = add i32 %354, %353
  store i32 %add471, i32* %cost45, align 4
  %355 = load i16*, i16** %mtfv, align 8
  %356 = load i32, i32* %gs, align 4
  %add472 = add nsw i32 %356, 14
  %idxprom473 = sext i32 %add472 to i64
  %arrayidx474 = getelementptr inbounds i16, i16* %355, i64 %idxprom473
  %357 = load i16, i16* %arrayidx474, align 2
  store i16 %357, i16* %icv, align 2
  %358 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack475 = getelementptr inbounds %struct.EState, %struct.EState* %358, i32 0, i32 38
  %359 = load i16, i16* %icv, align 2
  %idxprom476 = zext i16 %359 to i64
  %arrayidx477 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack475, i64 0, i64 %idxprom476
  %arrayidx478 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx477, i64 0, i64 0
  %360 = load i32, i32* %arrayidx478, align 8
  %361 = load i32, i32* %cost01, align 4
  %add479 = add i32 %361, %360
  store i32 %add479, i32* %cost01, align 4
  %362 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack480 = getelementptr inbounds %struct.EState, %struct.EState* %362, i32 0, i32 38
  %363 = load i16, i16* %icv, align 2
  %idxprom481 = zext i16 %363 to i64
  %arrayidx482 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack480, i64 0, i64 %idxprom481
  %arrayidx483 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 1
  %364 = load i32, i32* %arrayidx483, align 4
  %365 = load i32, i32* %cost23, align 4
  %add484 = add i32 %365, %364
  store i32 %add484, i32* %cost23, align 4
  %366 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack485 = getelementptr inbounds %struct.EState, %struct.EState* %366, i32 0, i32 38
  %367 = load i16, i16* %icv, align 2
  %idxprom486 = zext i16 %367 to i64
  %arrayidx487 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack485, i64 0, i64 %idxprom486
  %arrayidx488 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx487, i64 0, i64 2
  %368 = load i32, i32* %arrayidx488, align 8
  %369 = load i32, i32* %cost45, align 4
  %add489 = add i32 %369, %368
  store i32 %add489, i32* %cost45, align 4
  %370 = load i16*, i16** %mtfv, align 8
  %371 = load i32, i32* %gs, align 4
  %add490 = add nsw i32 %371, 15
  %idxprom491 = sext i32 %add490 to i64
  %arrayidx492 = getelementptr inbounds i16, i16* %370, i64 %idxprom491
  %372 = load i16, i16* %arrayidx492, align 2
  store i16 %372, i16* %icv, align 2
  %373 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack493 = getelementptr inbounds %struct.EState, %struct.EState* %373, i32 0, i32 38
  %374 = load i16, i16* %icv, align 2
  %idxprom494 = zext i16 %374 to i64
  %arrayidx495 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack493, i64 0, i64 %idxprom494
  %arrayidx496 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx495, i64 0, i64 0
  %375 = load i32, i32* %arrayidx496, align 8
  %376 = load i32, i32* %cost01, align 4
  %add497 = add i32 %376, %375
  store i32 %add497, i32* %cost01, align 4
  %377 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack498 = getelementptr inbounds %struct.EState, %struct.EState* %377, i32 0, i32 38
  %378 = load i16, i16* %icv, align 2
  %idxprom499 = zext i16 %378 to i64
  %arrayidx500 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack498, i64 0, i64 %idxprom499
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx500, i64 0, i64 1
  %379 = load i32, i32* %arrayidx501, align 4
  %380 = load i32, i32* %cost23, align 4
  %add502 = add i32 %380, %379
  store i32 %add502, i32* %cost23, align 4
  %381 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack503 = getelementptr inbounds %struct.EState, %struct.EState* %381, i32 0, i32 38
  %382 = load i16, i16* %icv, align 2
  %idxprom504 = zext i16 %382 to i64
  %arrayidx505 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack503, i64 0, i64 %idxprom504
  %arrayidx506 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx505, i64 0, i64 2
  %383 = load i32, i32* %arrayidx506, align 8
  %384 = load i32, i32* %cost45, align 4
  %add507 = add i32 %384, %383
  store i32 %add507, i32* %cost45, align 4
  %385 = load i16*, i16** %mtfv, align 8
  %386 = load i32, i32* %gs, align 4
  %add508 = add nsw i32 %386, 16
  %idxprom509 = sext i32 %add508 to i64
  %arrayidx510 = getelementptr inbounds i16, i16* %385, i64 %idxprom509
  %387 = load i16, i16* %arrayidx510, align 2
  store i16 %387, i16* %icv, align 2
  %388 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack511 = getelementptr inbounds %struct.EState, %struct.EState* %388, i32 0, i32 38
  %389 = load i16, i16* %icv, align 2
  %idxprom512 = zext i16 %389 to i64
  %arrayidx513 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack511, i64 0, i64 %idxprom512
  %arrayidx514 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx513, i64 0, i64 0
  %390 = load i32, i32* %arrayidx514, align 8
  %391 = load i32, i32* %cost01, align 4
  %add515 = add i32 %391, %390
  store i32 %add515, i32* %cost01, align 4
  %392 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack516 = getelementptr inbounds %struct.EState, %struct.EState* %392, i32 0, i32 38
  %393 = load i16, i16* %icv, align 2
  %idxprom517 = zext i16 %393 to i64
  %arrayidx518 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack516, i64 0, i64 %idxprom517
  %arrayidx519 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx518, i64 0, i64 1
  %394 = load i32, i32* %arrayidx519, align 4
  %395 = load i32, i32* %cost23, align 4
  %add520 = add i32 %395, %394
  store i32 %add520, i32* %cost23, align 4
  %396 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack521 = getelementptr inbounds %struct.EState, %struct.EState* %396, i32 0, i32 38
  %397 = load i16, i16* %icv, align 2
  %idxprom522 = zext i16 %397 to i64
  %arrayidx523 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack521, i64 0, i64 %idxprom522
  %arrayidx524 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx523, i64 0, i64 2
  %398 = load i32, i32* %arrayidx524, align 8
  %399 = load i32, i32* %cost45, align 4
  %add525 = add i32 %399, %398
  store i32 %add525, i32* %cost45, align 4
  %400 = load i16*, i16** %mtfv, align 8
  %401 = load i32, i32* %gs, align 4
  %add526 = add nsw i32 %401, 17
  %idxprom527 = sext i32 %add526 to i64
  %arrayidx528 = getelementptr inbounds i16, i16* %400, i64 %idxprom527
  %402 = load i16, i16* %arrayidx528, align 2
  store i16 %402, i16* %icv, align 2
  %403 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack529 = getelementptr inbounds %struct.EState, %struct.EState* %403, i32 0, i32 38
  %404 = load i16, i16* %icv, align 2
  %idxprom530 = zext i16 %404 to i64
  %arrayidx531 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack529, i64 0, i64 %idxprom530
  %arrayidx532 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 0
  %405 = load i32, i32* %arrayidx532, align 8
  %406 = load i32, i32* %cost01, align 4
  %add533 = add i32 %406, %405
  store i32 %add533, i32* %cost01, align 4
  %407 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack534 = getelementptr inbounds %struct.EState, %struct.EState* %407, i32 0, i32 38
  %408 = load i16, i16* %icv, align 2
  %idxprom535 = zext i16 %408 to i64
  %arrayidx536 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack534, i64 0, i64 %idxprom535
  %arrayidx537 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx536, i64 0, i64 1
  %409 = load i32, i32* %arrayidx537, align 4
  %410 = load i32, i32* %cost23, align 4
  %add538 = add i32 %410, %409
  store i32 %add538, i32* %cost23, align 4
  %411 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack539 = getelementptr inbounds %struct.EState, %struct.EState* %411, i32 0, i32 38
  %412 = load i16, i16* %icv, align 2
  %idxprom540 = zext i16 %412 to i64
  %arrayidx541 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack539, i64 0, i64 %idxprom540
  %arrayidx542 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx541, i64 0, i64 2
  %413 = load i32, i32* %arrayidx542, align 8
  %414 = load i32, i32* %cost45, align 4
  %add543 = add i32 %414, %413
  store i32 %add543, i32* %cost45, align 4
  %415 = load i16*, i16** %mtfv, align 8
  %416 = load i32, i32* %gs, align 4
  %add544 = add nsw i32 %416, 18
  %idxprom545 = sext i32 %add544 to i64
  %arrayidx546 = getelementptr inbounds i16, i16* %415, i64 %idxprom545
  %417 = load i16, i16* %arrayidx546, align 2
  store i16 %417, i16* %icv, align 2
  %418 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack547 = getelementptr inbounds %struct.EState, %struct.EState* %418, i32 0, i32 38
  %419 = load i16, i16* %icv, align 2
  %idxprom548 = zext i16 %419 to i64
  %arrayidx549 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack547, i64 0, i64 %idxprom548
  %arrayidx550 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx549, i64 0, i64 0
  %420 = load i32, i32* %arrayidx550, align 8
  %421 = load i32, i32* %cost01, align 4
  %add551 = add i32 %421, %420
  store i32 %add551, i32* %cost01, align 4
  %422 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack552 = getelementptr inbounds %struct.EState, %struct.EState* %422, i32 0, i32 38
  %423 = load i16, i16* %icv, align 2
  %idxprom553 = zext i16 %423 to i64
  %arrayidx554 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack552, i64 0, i64 %idxprom553
  %arrayidx555 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx554, i64 0, i64 1
  %424 = load i32, i32* %arrayidx555, align 4
  %425 = load i32, i32* %cost23, align 4
  %add556 = add i32 %425, %424
  store i32 %add556, i32* %cost23, align 4
  %426 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack557 = getelementptr inbounds %struct.EState, %struct.EState* %426, i32 0, i32 38
  %427 = load i16, i16* %icv, align 2
  %idxprom558 = zext i16 %427 to i64
  %arrayidx559 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack557, i64 0, i64 %idxprom558
  %arrayidx560 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx559, i64 0, i64 2
  %428 = load i32, i32* %arrayidx560, align 8
  %429 = load i32, i32* %cost45, align 4
  %add561 = add i32 %429, %428
  store i32 %add561, i32* %cost45, align 4
  %430 = load i16*, i16** %mtfv, align 8
  %431 = load i32, i32* %gs, align 4
  %add562 = add nsw i32 %431, 19
  %idxprom563 = sext i32 %add562 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %430, i64 %idxprom563
  %432 = load i16, i16* %arrayidx564, align 2
  store i16 %432, i16* %icv, align 2
  %433 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack565 = getelementptr inbounds %struct.EState, %struct.EState* %433, i32 0, i32 38
  %434 = load i16, i16* %icv, align 2
  %idxprom566 = zext i16 %434 to i64
  %arrayidx567 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack565, i64 0, i64 %idxprom566
  %arrayidx568 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx567, i64 0, i64 0
  %435 = load i32, i32* %arrayidx568, align 8
  %436 = load i32, i32* %cost01, align 4
  %add569 = add i32 %436, %435
  store i32 %add569, i32* %cost01, align 4
  %437 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack570 = getelementptr inbounds %struct.EState, %struct.EState* %437, i32 0, i32 38
  %438 = load i16, i16* %icv, align 2
  %idxprom571 = zext i16 %438 to i64
  %arrayidx572 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack570, i64 0, i64 %idxprom571
  %arrayidx573 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx572, i64 0, i64 1
  %439 = load i32, i32* %arrayidx573, align 4
  %440 = load i32, i32* %cost23, align 4
  %add574 = add i32 %440, %439
  store i32 %add574, i32* %cost23, align 4
  %441 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack575 = getelementptr inbounds %struct.EState, %struct.EState* %441, i32 0, i32 38
  %442 = load i16, i16* %icv, align 2
  %idxprom576 = zext i16 %442 to i64
  %arrayidx577 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack575, i64 0, i64 %idxprom576
  %arrayidx578 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx577, i64 0, i64 2
  %443 = load i32, i32* %arrayidx578, align 8
  %444 = load i32, i32* %cost45, align 4
  %add579 = add i32 %444, %443
  store i32 %add579, i32* %cost45, align 4
  %445 = load i16*, i16** %mtfv, align 8
  %446 = load i32, i32* %gs, align 4
  %add580 = add nsw i32 %446, 20
  %idxprom581 = sext i32 %add580 to i64
  %arrayidx582 = getelementptr inbounds i16, i16* %445, i64 %idxprom581
  %447 = load i16, i16* %arrayidx582, align 2
  store i16 %447, i16* %icv, align 2
  %448 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack583 = getelementptr inbounds %struct.EState, %struct.EState* %448, i32 0, i32 38
  %449 = load i16, i16* %icv, align 2
  %idxprom584 = zext i16 %449 to i64
  %arrayidx585 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack583, i64 0, i64 %idxprom584
  %arrayidx586 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx585, i64 0, i64 0
  %450 = load i32, i32* %arrayidx586, align 8
  %451 = load i32, i32* %cost01, align 4
  %add587 = add i32 %451, %450
  store i32 %add587, i32* %cost01, align 4
  %452 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack588 = getelementptr inbounds %struct.EState, %struct.EState* %452, i32 0, i32 38
  %453 = load i16, i16* %icv, align 2
  %idxprom589 = zext i16 %453 to i64
  %arrayidx590 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack588, i64 0, i64 %idxprom589
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx590, i64 0, i64 1
  %454 = load i32, i32* %arrayidx591, align 4
  %455 = load i32, i32* %cost23, align 4
  %add592 = add i32 %455, %454
  store i32 %add592, i32* %cost23, align 4
  %456 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack593 = getelementptr inbounds %struct.EState, %struct.EState* %456, i32 0, i32 38
  %457 = load i16, i16* %icv, align 2
  %idxprom594 = zext i16 %457 to i64
  %arrayidx595 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack593, i64 0, i64 %idxprom594
  %arrayidx596 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx595, i64 0, i64 2
  %458 = load i32, i32* %arrayidx596, align 8
  %459 = load i32, i32* %cost45, align 4
  %add597 = add i32 %459, %458
  store i32 %add597, i32* %cost45, align 4
  %460 = load i16*, i16** %mtfv, align 8
  %461 = load i32, i32* %gs, align 4
  %add598 = add nsw i32 %461, 21
  %idxprom599 = sext i32 %add598 to i64
  %arrayidx600 = getelementptr inbounds i16, i16* %460, i64 %idxprom599
  %462 = load i16, i16* %arrayidx600, align 2
  store i16 %462, i16* %icv, align 2
  %463 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack601 = getelementptr inbounds %struct.EState, %struct.EState* %463, i32 0, i32 38
  %464 = load i16, i16* %icv, align 2
  %idxprom602 = zext i16 %464 to i64
  %arrayidx603 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack601, i64 0, i64 %idxprom602
  %arrayidx604 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx603, i64 0, i64 0
  %465 = load i32, i32* %arrayidx604, align 8
  %466 = load i32, i32* %cost01, align 4
  %add605 = add i32 %466, %465
  store i32 %add605, i32* %cost01, align 4
  %467 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack606 = getelementptr inbounds %struct.EState, %struct.EState* %467, i32 0, i32 38
  %468 = load i16, i16* %icv, align 2
  %idxprom607 = zext i16 %468 to i64
  %arrayidx608 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack606, i64 0, i64 %idxprom607
  %arrayidx609 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx608, i64 0, i64 1
  %469 = load i32, i32* %arrayidx609, align 4
  %470 = load i32, i32* %cost23, align 4
  %add610 = add i32 %470, %469
  store i32 %add610, i32* %cost23, align 4
  %471 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack611 = getelementptr inbounds %struct.EState, %struct.EState* %471, i32 0, i32 38
  %472 = load i16, i16* %icv, align 2
  %idxprom612 = zext i16 %472 to i64
  %arrayidx613 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack611, i64 0, i64 %idxprom612
  %arrayidx614 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx613, i64 0, i64 2
  %473 = load i32, i32* %arrayidx614, align 8
  %474 = load i32, i32* %cost45, align 4
  %add615 = add i32 %474, %473
  store i32 %add615, i32* %cost45, align 4
  %475 = load i16*, i16** %mtfv, align 8
  %476 = load i32, i32* %gs, align 4
  %add616 = add nsw i32 %476, 22
  %idxprom617 = sext i32 %add616 to i64
  %arrayidx618 = getelementptr inbounds i16, i16* %475, i64 %idxprom617
  %477 = load i16, i16* %arrayidx618, align 2
  store i16 %477, i16* %icv, align 2
  %478 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack619 = getelementptr inbounds %struct.EState, %struct.EState* %478, i32 0, i32 38
  %479 = load i16, i16* %icv, align 2
  %idxprom620 = zext i16 %479 to i64
  %arrayidx621 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack619, i64 0, i64 %idxprom620
  %arrayidx622 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx621, i64 0, i64 0
  %480 = load i32, i32* %arrayidx622, align 8
  %481 = load i32, i32* %cost01, align 4
  %add623 = add i32 %481, %480
  store i32 %add623, i32* %cost01, align 4
  %482 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack624 = getelementptr inbounds %struct.EState, %struct.EState* %482, i32 0, i32 38
  %483 = load i16, i16* %icv, align 2
  %idxprom625 = zext i16 %483 to i64
  %arrayidx626 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack624, i64 0, i64 %idxprom625
  %arrayidx627 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx626, i64 0, i64 1
  %484 = load i32, i32* %arrayidx627, align 4
  %485 = load i32, i32* %cost23, align 4
  %add628 = add i32 %485, %484
  store i32 %add628, i32* %cost23, align 4
  %486 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack629 = getelementptr inbounds %struct.EState, %struct.EState* %486, i32 0, i32 38
  %487 = load i16, i16* %icv, align 2
  %idxprom630 = zext i16 %487 to i64
  %arrayidx631 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack629, i64 0, i64 %idxprom630
  %arrayidx632 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx631, i64 0, i64 2
  %488 = load i32, i32* %arrayidx632, align 8
  %489 = load i32, i32* %cost45, align 4
  %add633 = add i32 %489, %488
  store i32 %add633, i32* %cost45, align 4
  %490 = load i16*, i16** %mtfv, align 8
  %491 = load i32, i32* %gs, align 4
  %add634 = add nsw i32 %491, 23
  %idxprom635 = sext i32 %add634 to i64
  %arrayidx636 = getelementptr inbounds i16, i16* %490, i64 %idxprom635
  %492 = load i16, i16* %arrayidx636, align 2
  store i16 %492, i16* %icv, align 2
  %493 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack637 = getelementptr inbounds %struct.EState, %struct.EState* %493, i32 0, i32 38
  %494 = load i16, i16* %icv, align 2
  %idxprom638 = zext i16 %494 to i64
  %arrayidx639 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack637, i64 0, i64 %idxprom638
  %arrayidx640 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx639, i64 0, i64 0
  %495 = load i32, i32* %arrayidx640, align 8
  %496 = load i32, i32* %cost01, align 4
  %add641 = add i32 %496, %495
  store i32 %add641, i32* %cost01, align 4
  %497 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack642 = getelementptr inbounds %struct.EState, %struct.EState* %497, i32 0, i32 38
  %498 = load i16, i16* %icv, align 2
  %idxprom643 = zext i16 %498 to i64
  %arrayidx644 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack642, i64 0, i64 %idxprom643
  %arrayidx645 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 1
  %499 = load i32, i32* %arrayidx645, align 4
  %500 = load i32, i32* %cost23, align 4
  %add646 = add i32 %500, %499
  store i32 %add646, i32* %cost23, align 4
  %501 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack647 = getelementptr inbounds %struct.EState, %struct.EState* %501, i32 0, i32 38
  %502 = load i16, i16* %icv, align 2
  %idxprom648 = zext i16 %502 to i64
  %arrayidx649 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack647, i64 0, i64 %idxprom648
  %arrayidx650 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx649, i64 0, i64 2
  %503 = load i32, i32* %arrayidx650, align 8
  %504 = load i32, i32* %cost45, align 4
  %add651 = add i32 %504, %503
  store i32 %add651, i32* %cost45, align 4
  %505 = load i16*, i16** %mtfv, align 8
  %506 = load i32, i32* %gs, align 4
  %add652 = add nsw i32 %506, 24
  %idxprom653 = sext i32 %add652 to i64
  %arrayidx654 = getelementptr inbounds i16, i16* %505, i64 %idxprom653
  %507 = load i16, i16* %arrayidx654, align 2
  store i16 %507, i16* %icv, align 2
  %508 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack655 = getelementptr inbounds %struct.EState, %struct.EState* %508, i32 0, i32 38
  %509 = load i16, i16* %icv, align 2
  %idxprom656 = zext i16 %509 to i64
  %arrayidx657 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack655, i64 0, i64 %idxprom656
  %arrayidx658 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx657, i64 0, i64 0
  %510 = load i32, i32* %arrayidx658, align 8
  %511 = load i32, i32* %cost01, align 4
  %add659 = add i32 %511, %510
  store i32 %add659, i32* %cost01, align 4
  %512 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack660 = getelementptr inbounds %struct.EState, %struct.EState* %512, i32 0, i32 38
  %513 = load i16, i16* %icv, align 2
  %idxprom661 = zext i16 %513 to i64
  %arrayidx662 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack660, i64 0, i64 %idxprom661
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx662, i64 0, i64 1
  %514 = load i32, i32* %arrayidx663, align 4
  %515 = load i32, i32* %cost23, align 4
  %add664 = add i32 %515, %514
  store i32 %add664, i32* %cost23, align 4
  %516 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack665 = getelementptr inbounds %struct.EState, %struct.EState* %516, i32 0, i32 38
  %517 = load i16, i16* %icv, align 2
  %idxprom666 = zext i16 %517 to i64
  %arrayidx667 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack665, i64 0, i64 %idxprom666
  %arrayidx668 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx667, i64 0, i64 2
  %518 = load i32, i32* %arrayidx668, align 8
  %519 = load i32, i32* %cost45, align 4
  %add669 = add i32 %519, %518
  store i32 %add669, i32* %cost45, align 4
  %520 = load i16*, i16** %mtfv, align 8
  %521 = load i32, i32* %gs, align 4
  %add670 = add nsw i32 %521, 25
  %idxprom671 = sext i32 %add670 to i64
  %arrayidx672 = getelementptr inbounds i16, i16* %520, i64 %idxprom671
  %522 = load i16, i16* %arrayidx672, align 2
  store i16 %522, i16* %icv, align 2
  %523 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack673 = getelementptr inbounds %struct.EState, %struct.EState* %523, i32 0, i32 38
  %524 = load i16, i16* %icv, align 2
  %idxprom674 = zext i16 %524 to i64
  %arrayidx675 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack673, i64 0, i64 %idxprom674
  %arrayidx676 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx675, i64 0, i64 0
  %525 = load i32, i32* %arrayidx676, align 8
  %526 = load i32, i32* %cost01, align 4
  %add677 = add i32 %526, %525
  store i32 %add677, i32* %cost01, align 4
  %527 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack678 = getelementptr inbounds %struct.EState, %struct.EState* %527, i32 0, i32 38
  %528 = load i16, i16* %icv, align 2
  %idxprom679 = zext i16 %528 to i64
  %arrayidx680 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack678, i64 0, i64 %idxprom679
  %arrayidx681 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx680, i64 0, i64 1
  %529 = load i32, i32* %arrayidx681, align 4
  %530 = load i32, i32* %cost23, align 4
  %add682 = add i32 %530, %529
  store i32 %add682, i32* %cost23, align 4
  %531 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack683 = getelementptr inbounds %struct.EState, %struct.EState* %531, i32 0, i32 38
  %532 = load i16, i16* %icv, align 2
  %idxprom684 = zext i16 %532 to i64
  %arrayidx685 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack683, i64 0, i64 %idxprom684
  %arrayidx686 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx685, i64 0, i64 2
  %533 = load i32, i32* %arrayidx686, align 8
  %534 = load i32, i32* %cost45, align 4
  %add687 = add i32 %534, %533
  store i32 %add687, i32* %cost45, align 4
  %535 = load i16*, i16** %mtfv, align 8
  %536 = load i32, i32* %gs, align 4
  %add688 = add nsw i32 %536, 26
  %idxprom689 = sext i32 %add688 to i64
  %arrayidx690 = getelementptr inbounds i16, i16* %535, i64 %idxprom689
  %537 = load i16, i16* %arrayidx690, align 2
  store i16 %537, i16* %icv, align 2
  %538 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack691 = getelementptr inbounds %struct.EState, %struct.EState* %538, i32 0, i32 38
  %539 = load i16, i16* %icv, align 2
  %idxprom692 = zext i16 %539 to i64
  %arrayidx693 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack691, i64 0, i64 %idxprom692
  %arrayidx694 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx693, i64 0, i64 0
  %540 = load i32, i32* %arrayidx694, align 8
  %541 = load i32, i32* %cost01, align 4
  %add695 = add i32 %541, %540
  store i32 %add695, i32* %cost01, align 4
  %542 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack696 = getelementptr inbounds %struct.EState, %struct.EState* %542, i32 0, i32 38
  %543 = load i16, i16* %icv, align 2
  %idxprom697 = zext i16 %543 to i64
  %arrayidx698 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack696, i64 0, i64 %idxprom697
  %arrayidx699 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx698, i64 0, i64 1
  %544 = load i32, i32* %arrayidx699, align 4
  %545 = load i32, i32* %cost23, align 4
  %add700 = add i32 %545, %544
  store i32 %add700, i32* %cost23, align 4
  %546 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack701 = getelementptr inbounds %struct.EState, %struct.EState* %546, i32 0, i32 38
  %547 = load i16, i16* %icv, align 2
  %idxprom702 = zext i16 %547 to i64
  %arrayidx703 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack701, i64 0, i64 %idxprom702
  %arrayidx704 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx703, i64 0, i64 2
  %548 = load i32, i32* %arrayidx704, align 8
  %549 = load i32, i32* %cost45, align 4
  %add705 = add i32 %549, %548
  store i32 %add705, i32* %cost45, align 4
  %550 = load i16*, i16** %mtfv, align 8
  %551 = load i32, i32* %gs, align 4
  %add706 = add nsw i32 %551, 27
  %idxprom707 = sext i32 %add706 to i64
  %arrayidx708 = getelementptr inbounds i16, i16* %550, i64 %idxprom707
  %552 = load i16, i16* %arrayidx708, align 2
  store i16 %552, i16* %icv, align 2
  %553 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack709 = getelementptr inbounds %struct.EState, %struct.EState* %553, i32 0, i32 38
  %554 = load i16, i16* %icv, align 2
  %idxprom710 = zext i16 %554 to i64
  %arrayidx711 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack709, i64 0, i64 %idxprom710
  %arrayidx712 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx711, i64 0, i64 0
  %555 = load i32, i32* %arrayidx712, align 8
  %556 = load i32, i32* %cost01, align 4
  %add713 = add i32 %556, %555
  store i32 %add713, i32* %cost01, align 4
  %557 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack714 = getelementptr inbounds %struct.EState, %struct.EState* %557, i32 0, i32 38
  %558 = load i16, i16* %icv, align 2
  %idxprom715 = zext i16 %558 to i64
  %arrayidx716 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack714, i64 0, i64 %idxprom715
  %arrayidx717 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx716, i64 0, i64 1
  %559 = load i32, i32* %arrayidx717, align 4
  %560 = load i32, i32* %cost23, align 4
  %add718 = add i32 %560, %559
  store i32 %add718, i32* %cost23, align 4
  %561 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack719 = getelementptr inbounds %struct.EState, %struct.EState* %561, i32 0, i32 38
  %562 = load i16, i16* %icv, align 2
  %idxprom720 = zext i16 %562 to i64
  %arrayidx721 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack719, i64 0, i64 %idxprom720
  %arrayidx722 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx721, i64 0, i64 2
  %563 = load i32, i32* %arrayidx722, align 8
  %564 = load i32, i32* %cost45, align 4
  %add723 = add i32 %564, %563
  store i32 %add723, i32* %cost45, align 4
  %565 = load i16*, i16** %mtfv, align 8
  %566 = load i32, i32* %gs, align 4
  %add724 = add nsw i32 %566, 28
  %idxprom725 = sext i32 %add724 to i64
  %arrayidx726 = getelementptr inbounds i16, i16* %565, i64 %idxprom725
  %567 = load i16, i16* %arrayidx726, align 2
  store i16 %567, i16* %icv, align 2
  %568 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack727 = getelementptr inbounds %struct.EState, %struct.EState* %568, i32 0, i32 38
  %569 = load i16, i16* %icv, align 2
  %idxprom728 = zext i16 %569 to i64
  %arrayidx729 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack727, i64 0, i64 %idxprom728
  %arrayidx730 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx729, i64 0, i64 0
  %570 = load i32, i32* %arrayidx730, align 8
  %571 = load i32, i32* %cost01, align 4
  %add731 = add i32 %571, %570
  store i32 %add731, i32* %cost01, align 4
  %572 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack732 = getelementptr inbounds %struct.EState, %struct.EState* %572, i32 0, i32 38
  %573 = load i16, i16* %icv, align 2
  %idxprom733 = zext i16 %573 to i64
  %arrayidx734 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack732, i64 0, i64 %idxprom733
  %arrayidx735 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx734, i64 0, i64 1
  %574 = load i32, i32* %arrayidx735, align 4
  %575 = load i32, i32* %cost23, align 4
  %add736 = add i32 %575, %574
  store i32 %add736, i32* %cost23, align 4
  %576 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack737 = getelementptr inbounds %struct.EState, %struct.EState* %576, i32 0, i32 38
  %577 = load i16, i16* %icv, align 2
  %idxprom738 = zext i16 %577 to i64
  %arrayidx739 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack737, i64 0, i64 %idxprom738
  %arrayidx740 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx739, i64 0, i64 2
  %578 = load i32, i32* %arrayidx740, align 8
  %579 = load i32, i32* %cost45, align 4
  %add741 = add i32 %579, %578
  store i32 %add741, i32* %cost45, align 4
  %580 = load i16*, i16** %mtfv, align 8
  %581 = load i32, i32* %gs, align 4
  %add742 = add nsw i32 %581, 29
  %idxprom743 = sext i32 %add742 to i64
  %arrayidx744 = getelementptr inbounds i16, i16* %580, i64 %idxprom743
  %582 = load i16, i16* %arrayidx744, align 2
  store i16 %582, i16* %icv, align 2
  %583 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack745 = getelementptr inbounds %struct.EState, %struct.EState* %583, i32 0, i32 38
  %584 = load i16, i16* %icv, align 2
  %idxprom746 = zext i16 %584 to i64
  %arrayidx747 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack745, i64 0, i64 %idxprom746
  %arrayidx748 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx747, i64 0, i64 0
  %585 = load i32, i32* %arrayidx748, align 8
  %586 = load i32, i32* %cost01, align 4
  %add749 = add i32 %586, %585
  store i32 %add749, i32* %cost01, align 4
  %587 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack750 = getelementptr inbounds %struct.EState, %struct.EState* %587, i32 0, i32 38
  %588 = load i16, i16* %icv, align 2
  %idxprom751 = zext i16 %588 to i64
  %arrayidx752 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack750, i64 0, i64 %idxprom751
  %arrayidx753 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx752, i64 0, i64 1
  %589 = load i32, i32* %arrayidx753, align 4
  %590 = load i32, i32* %cost23, align 4
  %add754 = add i32 %590, %589
  store i32 %add754, i32* %cost23, align 4
  %591 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack755 = getelementptr inbounds %struct.EState, %struct.EState* %591, i32 0, i32 38
  %592 = load i16, i16* %icv, align 2
  %idxprom756 = zext i16 %592 to i64
  %arrayidx757 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack755, i64 0, i64 %idxprom756
  %arrayidx758 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx757, i64 0, i64 2
  %593 = load i32, i32* %arrayidx758, align 8
  %594 = load i32, i32* %cost45, align 4
  %add759 = add i32 %594, %593
  store i32 %add759, i32* %cost45, align 4
  %595 = load i16*, i16** %mtfv, align 8
  %596 = load i32, i32* %gs, align 4
  %add760 = add nsw i32 %596, 30
  %idxprom761 = sext i32 %add760 to i64
  %arrayidx762 = getelementptr inbounds i16, i16* %595, i64 %idxprom761
  %597 = load i16, i16* %arrayidx762, align 2
  store i16 %597, i16* %icv, align 2
  %598 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack763 = getelementptr inbounds %struct.EState, %struct.EState* %598, i32 0, i32 38
  %599 = load i16, i16* %icv, align 2
  %idxprom764 = zext i16 %599 to i64
  %arrayidx765 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack763, i64 0, i64 %idxprom764
  %arrayidx766 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx765, i64 0, i64 0
  %600 = load i32, i32* %arrayidx766, align 8
  %601 = load i32, i32* %cost01, align 4
  %add767 = add i32 %601, %600
  store i32 %add767, i32* %cost01, align 4
  %602 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack768 = getelementptr inbounds %struct.EState, %struct.EState* %602, i32 0, i32 38
  %603 = load i16, i16* %icv, align 2
  %idxprom769 = zext i16 %603 to i64
  %arrayidx770 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack768, i64 0, i64 %idxprom769
  %arrayidx771 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx770, i64 0, i64 1
  %604 = load i32, i32* %arrayidx771, align 4
  %605 = load i32, i32* %cost23, align 4
  %add772 = add i32 %605, %604
  store i32 %add772, i32* %cost23, align 4
  %606 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack773 = getelementptr inbounds %struct.EState, %struct.EState* %606, i32 0, i32 38
  %607 = load i16, i16* %icv, align 2
  %idxprom774 = zext i16 %607 to i64
  %arrayidx775 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack773, i64 0, i64 %idxprom774
  %arrayidx776 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx775, i64 0, i64 2
  %608 = load i32, i32* %arrayidx776, align 8
  %609 = load i32, i32* %cost45, align 4
  %add777 = add i32 %609, %608
  store i32 %add777, i32* %cost45, align 4
  %610 = load i16*, i16** %mtfv, align 8
  %611 = load i32, i32* %gs, align 4
  %add778 = add nsw i32 %611, 31
  %idxprom779 = sext i32 %add778 to i64
  %arrayidx780 = getelementptr inbounds i16, i16* %610, i64 %idxprom779
  %612 = load i16, i16* %arrayidx780, align 2
  store i16 %612, i16* %icv, align 2
  %613 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack781 = getelementptr inbounds %struct.EState, %struct.EState* %613, i32 0, i32 38
  %614 = load i16, i16* %icv, align 2
  %idxprom782 = zext i16 %614 to i64
  %arrayidx783 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack781, i64 0, i64 %idxprom782
  %arrayidx784 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx783, i64 0, i64 0
  %615 = load i32, i32* %arrayidx784, align 8
  %616 = load i32, i32* %cost01, align 4
  %add785 = add i32 %616, %615
  store i32 %add785, i32* %cost01, align 4
  %617 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack786 = getelementptr inbounds %struct.EState, %struct.EState* %617, i32 0, i32 38
  %618 = load i16, i16* %icv, align 2
  %idxprom787 = zext i16 %618 to i64
  %arrayidx788 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack786, i64 0, i64 %idxprom787
  %arrayidx789 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx788, i64 0, i64 1
  %619 = load i32, i32* %arrayidx789, align 4
  %620 = load i32, i32* %cost23, align 4
  %add790 = add i32 %620, %619
  store i32 %add790, i32* %cost23, align 4
  %621 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack791 = getelementptr inbounds %struct.EState, %struct.EState* %621, i32 0, i32 38
  %622 = load i16, i16* %icv, align 2
  %idxprom792 = zext i16 %622 to i64
  %arrayidx793 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack791, i64 0, i64 %idxprom792
  %arrayidx794 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx793, i64 0, i64 2
  %623 = load i32, i32* %arrayidx794, align 8
  %624 = load i32, i32* %cost45, align 4
  %add795 = add i32 %624, %623
  store i32 %add795, i32* %cost45, align 4
  %625 = load i16*, i16** %mtfv, align 8
  %626 = load i32, i32* %gs, align 4
  %add796 = add nsw i32 %626, 32
  %idxprom797 = sext i32 %add796 to i64
  %arrayidx798 = getelementptr inbounds i16, i16* %625, i64 %idxprom797
  %627 = load i16, i16* %arrayidx798, align 2
  store i16 %627, i16* %icv, align 2
  %628 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack799 = getelementptr inbounds %struct.EState, %struct.EState* %628, i32 0, i32 38
  %629 = load i16, i16* %icv, align 2
  %idxprom800 = zext i16 %629 to i64
  %arrayidx801 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack799, i64 0, i64 %idxprom800
  %arrayidx802 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx801, i64 0, i64 0
  %630 = load i32, i32* %arrayidx802, align 8
  %631 = load i32, i32* %cost01, align 4
  %add803 = add i32 %631, %630
  store i32 %add803, i32* %cost01, align 4
  %632 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack804 = getelementptr inbounds %struct.EState, %struct.EState* %632, i32 0, i32 38
  %633 = load i16, i16* %icv, align 2
  %idxprom805 = zext i16 %633 to i64
  %arrayidx806 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack804, i64 0, i64 %idxprom805
  %arrayidx807 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx806, i64 0, i64 1
  %634 = load i32, i32* %arrayidx807, align 4
  %635 = load i32, i32* %cost23, align 4
  %add808 = add i32 %635, %634
  store i32 %add808, i32* %cost23, align 4
  %636 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack809 = getelementptr inbounds %struct.EState, %struct.EState* %636, i32 0, i32 38
  %637 = load i16, i16* %icv, align 2
  %idxprom810 = zext i16 %637 to i64
  %arrayidx811 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack809, i64 0, i64 %idxprom810
  %arrayidx812 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx811, i64 0, i64 2
  %638 = load i32, i32* %arrayidx812, align 8
  %639 = load i32, i32* %cost45, align 4
  %add813 = add i32 %639, %638
  store i32 %add813, i32* %cost45, align 4
  %640 = load i16*, i16** %mtfv, align 8
  %641 = load i32, i32* %gs, align 4
  %add814 = add nsw i32 %641, 33
  %idxprom815 = sext i32 %add814 to i64
  %arrayidx816 = getelementptr inbounds i16, i16* %640, i64 %idxprom815
  %642 = load i16, i16* %arrayidx816, align 2
  store i16 %642, i16* %icv, align 2
  %643 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack817 = getelementptr inbounds %struct.EState, %struct.EState* %643, i32 0, i32 38
  %644 = load i16, i16* %icv, align 2
  %idxprom818 = zext i16 %644 to i64
  %arrayidx819 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack817, i64 0, i64 %idxprom818
  %arrayidx820 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx819, i64 0, i64 0
  %645 = load i32, i32* %arrayidx820, align 8
  %646 = load i32, i32* %cost01, align 4
  %add821 = add i32 %646, %645
  store i32 %add821, i32* %cost01, align 4
  %647 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack822 = getelementptr inbounds %struct.EState, %struct.EState* %647, i32 0, i32 38
  %648 = load i16, i16* %icv, align 2
  %idxprom823 = zext i16 %648 to i64
  %arrayidx824 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack822, i64 0, i64 %idxprom823
  %arrayidx825 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx824, i64 0, i64 1
  %649 = load i32, i32* %arrayidx825, align 4
  %650 = load i32, i32* %cost23, align 4
  %add826 = add i32 %650, %649
  store i32 %add826, i32* %cost23, align 4
  %651 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack827 = getelementptr inbounds %struct.EState, %struct.EState* %651, i32 0, i32 38
  %652 = load i16, i16* %icv, align 2
  %idxprom828 = zext i16 %652 to i64
  %arrayidx829 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack827, i64 0, i64 %idxprom828
  %arrayidx830 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx829, i64 0, i64 2
  %653 = load i32, i32* %arrayidx830, align 8
  %654 = load i32, i32* %cost45, align 4
  %add831 = add i32 %654, %653
  store i32 %add831, i32* %cost45, align 4
  %655 = load i16*, i16** %mtfv, align 8
  %656 = load i32, i32* %gs, align 4
  %add832 = add nsw i32 %656, 34
  %idxprom833 = sext i32 %add832 to i64
  %arrayidx834 = getelementptr inbounds i16, i16* %655, i64 %idxprom833
  %657 = load i16, i16* %arrayidx834, align 2
  store i16 %657, i16* %icv, align 2
  %658 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack835 = getelementptr inbounds %struct.EState, %struct.EState* %658, i32 0, i32 38
  %659 = load i16, i16* %icv, align 2
  %idxprom836 = zext i16 %659 to i64
  %arrayidx837 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack835, i64 0, i64 %idxprom836
  %arrayidx838 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx837, i64 0, i64 0
  %660 = load i32, i32* %arrayidx838, align 8
  %661 = load i32, i32* %cost01, align 4
  %add839 = add i32 %661, %660
  store i32 %add839, i32* %cost01, align 4
  %662 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack840 = getelementptr inbounds %struct.EState, %struct.EState* %662, i32 0, i32 38
  %663 = load i16, i16* %icv, align 2
  %idxprom841 = zext i16 %663 to i64
  %arrayidx842 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack840, i64 0, i64 %idxprom841
  %arrayidx843 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx842, i64 0, i64 1
  %664 = load i32, i32* %arrayidx843, align 4
  %665 = load i32, i32* %cost23, align 4
  %add844 = add i32 %665, %664
  store i32 %add844, i32* %cost23, align 4
  %666 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack845 = getelementptr inbounds %struct.EState, %struct.EState* %666, i32 0, i32 38
  %667 = load i16, i16* %icv, align 2
  %idxprom846 = zext i16 %667 to i64
  %arrayidx847 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack845, i64 0, i64 %idxprom846
  %arrayidx848 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx847, i64 0, i64 2
  %668 = load i32, i32* %arrayidx848, align 8
  %669 = load i32, i32* %cost45, align 4
  %add849 = add i32 %669, %668
  store i32 %add849, i32* %cost45, align 4
  %670 = load i16*, i16** %mtfv, align 8
  %671 = load i32, i32* %gs, align 4
  %add850 = add nsw i32 %671, 35
  %idxprom851 = sext i32 %add850 to i64
  %arrayidx852 = getelementptr inbounds i16, i16* %670, i64 %idxprom851
  %672 = load i16, i16* %arrayidx852, align 2
  store i16 %672, i16* %icv, align 2
  %673 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack853 = getelementptr inbounds %struct.EState, %struct.EState* %673, i32 0, i32 38
  %674 = load i16, i16* %icv, align 2
  %idxprom854 = zext i16 %674 to i64
  %arrayidx855 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack853, i64 0, i64 %idxprom854
  %arrayidx856 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx855, i64 0, i64 0
  %675 = load i32, i32* %arrayidx856, align 8
  %676 = load i32, i32* %cost01, align 4
  %add857 = add i32 %676, %675
  store i32 %add857, i32* %cost01, align 4
  %677 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack858 = getelementptr inbounds %struct.EState, %struct.EState* %677, i32 0, i32 38
  %678 = load i16, i16* %icv, align 2
  %idxprom859 = zext i16 %678 to i64
  %arrayidx860 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack858, i64 0, i64 %idxprom859
  %arrayidx861 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx860, i64 0, i64 1
  %679 = load i32, i32* %arrayidx861, align 4
  %680 = load i32, i32* %cost23, align 4
  %add862 = add i32 %680, %679
  store i32 %add862, i32* %cost23, align 4
  %681 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack863 = getelementptr inbounds %struct.EState, %struct.EState* %681, i32 0, i32 38
  %682 = load i16, i16* %icv, align 2
  %idxprom864 = zext i16 %682 to i64
  %arrayidx865 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack863, i64 0, i64 %idxprom864
  %arrayidx866 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx865, i64 0, i64 2
  %683 = load i32, i32* %arrayidx866, align 8
  %684 = load i32, i32* %cost45, align 4
  %add867 = add i32 %684, %683
  store i32 %add867, i32* %cost45, align 4
  %685 = load i16*, i16** %mtfv, align 8
  %686 = load i32, i32* %gs, align 4
  %add868 = add nsw i32 %686, 36
  %idxprom869 = sext i32 %add868 to i64
  %arrayidx870 = getelementptr inbounds i16, i16* %685, i64 %idxprom869
  %687 = load i16, i16* %arrayidx870, align 2
  store i16 %687, i16* %icv, align 2
  %688 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack871 = getelementptr inbounds %struct.EState, %struct.EState* %688, i32 0, i32 38
  %689 = load i16, i16* %icv, align 2
  %idxprom872 = zext i16 %689 to i64
  %arrayidx873 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack871, i64 0, i64 %idxprom872
  %arrayidx874 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx873, i64 0, i64 0
  %690 = load i32, i32* %arrayidx874, align 8
  %691 = load i32, i32* %cost01, align 4
  %add875 = add i32 %691, %690
  store i32 %add875, i32* %cost01, align 4
  %692 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack876 = getelementptr inbounds %struct.EState, %struct.EState* %692, i32 0, i32 38
  %693 = load i16, i16* %icv, align 2
  %idxprom877 = zext i16 %693 to i64
  %arrayidx878 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack876, i64 0, i64 %idxprom877
  %arrayidx879 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx878, i64 0, i64 1
  %694 = load i32, i32* %arrayidx879, align 4
  %695 = load i32, i32* %cost23, align 4
  %add880 = add i32 %695, %694
  store i32 %add880, i32* %cost23, align 4
  %696 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack881 = getelementptr inbounds %struct.EState, %struct.EState* %696, i32 0, i32 38
  %697 = load i16, i16* %icv, align 2
  %idxprom882 = zext i16 %697 to i64
  %arrayidx883 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack881, i64 0, i64 %idxprom882
  %arrayidx884 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx883, i64 0, i64 2
  %698 = load i32, i32* %arrayidx884, align 8
  %699 = load i32, i32* %cost45, align 4
  %add885 = add i32 %699, %698
  store i32 %add885, i32* %cost45, align 4
  %700 = load i16*, i16** %mtfv, align 8
  %701 = load i32, i32* %gs, align 4
  %add886 = add nsw i32 %701, 37
  %idxprom887 = sext i32 %add886 to i64
  %arrayidx888 = getelementptr inbounds i16, i16* %700, i64 %idxprom887
  %702 = load i16, i16* %arrayidx888, align 2
  store i16 %702, i16* %icv, align 2
  %703 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack889 = getelementptr inbounds %struct.EState, %struct.EState* %703, i32 0, i32 38
  %704 = load i16, i16* %icv, align 2
  %idxprom890 = zext i16 %704 to i64
  %arrayidx891 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack889, i64 0, i64 %idxprom890
  %arrayidx892 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx891, i64 0, i64 0
  %705 = load i32, i32* %arrayidx892, align 8
  %706 = load i32, i32* %cost01, align 4
  %add893 = add i32 %706, %705
  store i32 %add893, i32* %cost01, align 4
  %707 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack894 = getelementptr inbounds %struct.EState, %struct.EState* %707, i32 0, i32 38
  %708 = load i16, i16* %icv, align 2
  %idxprom895 = zext i16 %708 to i64
  %arrayidx896 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack894, i64 0, i64 %idxprom895
  %arrayidx897 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx896, i64 0, i64 1
  %709 = load i32, i32* %arrayidx897, align 4
  %710 = load i32, i32* %cost23, align 4
  %add898 = add i32 %710, %709
  store i32 %add898, i32* %cost23, align 4
  %711 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack899 = getelementptr inbounds %struct.EState, %struct.EState* %711, i32 0, i32 38
  %712 = load i16, i16* %icv, align 2
  %idxprom900 = zext i16 %712 to i64
  %arrayidx901 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack899, i64 0, i64 %idxprom900
  %arrayidx902 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx901, i64 0, i64 2
  %713 = load i32, i32* %arrayidx902, align 8
  %714 = load i32, i32* %cost45, align 4
  %add903 = add i32 %714, %713
  store i32 %add903, i32* %cost45, align 4
  %715 = load i16*, i16** %mtfv, align 8
  %716 = load i32, i32* %gs, align 4
  %add904 = add nsw i32 %716, 38
  %idxprom905 = sext i32 %add904 to i64
  %arrayidx906 = getelementptr inbounds i16, i16* %715, i64 %idxprom905
  %717 = load i16, i16* %arrayidx906, align 2
  store i16 %717, i16* %icv, align 2
  %718 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack907 = getelementptr inbounds %struct.EState, %struct.EState* %718, i32 0, i32 38
  %719 = load i16, i16* %icv, align 2
  %idxprom908 = zext i16 %719 to i64
  %arrayidx909 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack907, i64 0, i64 %idxprom908
  %arrayidx910 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx909, i64 0, i64 0
  %720 = load i32, i32* %arrayidx910, align 8
  %721 = load i32, i32* %cost01, align 4
  %add911 = add i32 %721, %720
  store i32 %add911, i32* %cost01, align 4
  %722 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack912 = getelementptr inbounds %struct.EState, %struct.EState* %722, i32 0, i32 38
  %723 = load i16, i16* %icv, align 2
  %idxprom913 = zext i16 %723 to i64
  %arrayidx914 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack912, i64 0, i64 %idxprom913
  %arrayidx915 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx914, i64 0, i64 1
  %724 = load i32, i32* %arrayidx915, align 4
  %725 = load i32, i32* %cost23, align 4
  %add916 = add i32 %725, %724
  store i32 %add916, i32* %cost23, align 4
  %726 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack917 = getelementptr inbounds %struct.EState, %struct.EState* %726, i32 0, i32 38
  %727 = load i16, i16* %icv, align 2
  %idxprom918 = zext i16 %727 to i64
  %arrayidx919 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack917, i64 0, i64 %idxprom918
  %arrayidx920 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx919, i64 0, i64 2
  %728 = load i32, i32* %arrayidx920, align 8
  %729 = load i32, i32* %cost45, align 4
  %add921 = add i32 %729, %728
  store i32 %add921, i32* %cost45, align 4
  %730 = load i16*, i16** %mtfv, align 8
  %731 = load i32, i32* %gs, align 4
  %add922 = add nsw i32 %731, 39
  %idxprom923 = sext i32 %add922 to i64
  %arrayidx924 = getelementptr inbounds i16, i16* %730, i64 %idxprom923
  %732 = load i16, i16* %arrayidx924, align 2
  store i16 %732, i16* %icv, align 2
  %733 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack925 = getelementptr inbounds %struct.EState, %struct.EState* %733, i32 0, i32 38
  %734 = load i16, i16* %icv, align 2
  %idxprom926 = zext i16 %734 to i64
  %arrayidx927 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack925, i64 0, i64 %idxprom926
  %arrayidx928 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx927, i64 0, i64 0
  %735 = load i32, i32* %arrayidx928, align 8
  %736 = load i32, i32* %cost01, align 4
  %add929 = add i32 %736, %735
  store i32 %add929, i32* %cost01, align 4
  %737 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack930 = getelementptr inbounds %struct.EState, %struct.EState* %737, i32 0, i32 38
  %738 = load i16, i16* %icv, align 2
  %idxprom931 = zext i16 %738 to i64
  %arrayidx932 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack930, i64 0, i64 %idxprom931
  %arrayidx933 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx932, i64 0, i64 1
  %739 = load i32, i32* %arrayidx933, align 4
  %740 = load i32, i32* %cost23, align 4
  %add934 = add i32 %740, %739
  store i32 %add934, i32* %cost23, align 4
  %741 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack935 = getelementptr inbounds %struct.EState, %struct.EState* %741, i32 0, i32 38
  %742 = load i16, i16* %icv, align 2
  %idxprom936 = zext i16 %742 to i64
  %arrayidx937 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack935, i64 0, i64 %idxprom936
  %arrayidx938 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx937, i64 0, i64 2
  %743 = load i32, i32* %arrayidx938, align 8
  %744 = load i32, i32* %cost45, align 4
  %add939 = add i32 %744, %743
  store i32 %add939, i32* %cost45, align 4
  %745 = load i16*, i16** %mtfv, align 8
  %746 = load i32, i32* %gs, align 4
  %add940 = add nsw i32 %746, 40
  %idxprom941 = sext i32 %add940 to i64
  %arrayidx942 = getelementptr inbounds i16, i16* %745, i64 %idxprom941
  %747 = load i16, i16* %arrayidx942, align 2
  store i16 %747, i16* %icv, align 2
  %748 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack943 = getelementptr inbounds %struct.EState, %struct.EState* %748, i32 0, i32 38
  %749 = load i16, i16* %icv, align 2
  %idxprom944 = zext i16 %749 to i64
  %arrayidx945 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack943, i64 0, i64 %idxprom944
  %arrayidx946 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx945, i64 0, i64 0
  %750 = load i32, i32* %arrayidx946, align 8
  %751 = load i32, i32* %cost01, align 4
  %add947 = add i32 %751, %750
  store i32 %add947, i32* %cost01, align 4
  %752 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack948 = getelementptr inbounds %struct.EState, %struct.EState* %752, i32 0, i32 38
  %753 = load i16, i16* %icv, align 2
  %idxprom949 = zext i16 %753 to i64
  %arrayidx950 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack948, i64 0, i64 %idxprom949
  %arrayidx951 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx950, i64 0, i64 1
  %754 = load i32, i32* %arrayidx951, align 4
  %755 = load i32, i32* %cost23, align 4
  %add952 = add i32 %755, %754
  store i32 %add952, i32* %cost23, align 4
  %756 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack953 = getelementptr inbounds %struct.EState, %struct.EState* %756, i32 0, i32 38
  %757 = load i16, i16* %icv, align 2
  %idxprom954 = zext i16 %757 to i64
  %arrayidx955 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack953, i64 0, i64 %idxprom954
  %arrayidx956 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx955, i64 0, i64 2
  %758 = load i32, i32* %arrayidx956, align 8
  %759 = load i32, i32* %cost45, align 4
  %add957 = add i32 %759, %758
  store i32 %add957, i32* %cost45, align 4
  %760 = load i16*, i16** %mtfv, align 8
  %761 = load i32, i32* %gs, align 4
  %add958 = add nsw i32 %761, 41
  %idxprom959 = sext i32 %add958 to i64
  %arrayidx960 = getelementptr inbounds i16, i16* %760, i64 %idxprom959
  %762 = load i16, i16* %arrayidx960, align 2
  store i16 %762, i16* %icv, align 2
  %763 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack961 = getelementptr inbounds %struct.EState, %struct.EState* %763, i32 0, i32 38
  %764 = load i16, i16* %icv, align 2
  %idxprom962 = zext i16 %764 to i64
  %arrayidx963 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack961, i64 0, i64 %idxprom962
  %arrayidx964 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx963, i64 0, i64 0
  %765 = load i32, i32* %arrayidx964, align 8
  %766 = load i32, i32* %cost01, align 4
  %add965 = add i32 %766, %765
  store i32 %add965, i32* %cost01, align 4
  %767 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack966 = getelementptr inbounds %struct.EState, %struct.EState* %767, i32 0, i32 38
  %768 = load i16, i16* %icv, align 2
  %idxprom967 = zext i16 %768 to i64
  %arrayidx968 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack966, i64 0, i64 %idxprom967
  %arrayidx969 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx968, i64 0, i64 1
  %769 = load i32, i32* %arrayidx969, align 4
  %770 = load i32, i32* %cost23, align 4
  %add970 = add i32 %770, %769
  store i32 %add970, i32* %cost23, align 4
  %771 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack971 = getelementptr inbounds %struct.EState, %struct.EState* %771, i32 0, i32 38
  %772 = load i16, i16* %icv, align 2
  %idxprom972 = zext i16 %772 to i64
  %arrayidx973 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack971, i64 0, i64 %idxprom972
  %arrayidx974 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx973, i64 0, i64 2
  %773 = load i32, i32* %arrayidx974, align 8
  %774 = load i32, i32* %cost45, align 4
  %add975 = add i32 %774, %773
  store i32 %add975, i32* %cost45, align 4
  %775 = load i16*, i16** %mtfv, align 8
  %776 = load i32, i32* %gs, align 4
  %add976 = add nsw i32 %776, 42
  %idxprom977 = sext i32 %add976 to i64
  %arrayidx978 = getelementptr inbounds i16, i16* %775, i64 %idxprom977
  %777 = load i16, i16* %arrayidx978, align 2
  store i16 %777, i16* %icv, align 2
  %778 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack979 = getelementptr inbounds %struct.EState, %struct.EState* %778, i32 0, i32 38
  %779 = load i16, i16* %icv, align 2
  %idxprom980 = zext i16 %779 to i64
  %arrayidx981 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack979, i64 0, i64 %idxprom980
  %arrayidx982 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx981, i64 0, i64 0
  %780 = load i32, i32* %arrayidx982, align 8
  %781 = load i32, i32* %cost01, align 4
  %add983 = add i32 %781, %780
  store i32 %add983, i32* %cost01, align 4
  %782 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack984 = getelementptr inbounds %struct.EState, %struct.EState* %782, i32 0, i32 38
  %783 = load i16, i16* %icv, align 2
  %idxprom985 = zext i16 %783 to i64
  %arrayidx986 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack984, i64 0, i64 %idxprom985
  %arrayidx987 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx986, i64 0, i64 1
  %784 = load i32, i32* %arrayidx987, align 4
  %785 = load i32, i32* %cost23, align 4
  %add988 = add i32 %785, %784
  store i32 %add988, i32* %cost23, align 4
  %786 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack989 = getelementptr inbounds %struct.EState, %struct.EState* %786, i32 0, i32 38
  %787 = load i16, i16* %icv, align 2
  %idxprom990 = zext i16 %787 to i64
  %arrayidx991 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack989, i64 0, i64 %idxprom990
  %arrayidx992 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx991, i64 0, i64 2
  %788 = load i32, i32* %arrayidx992, align 8
  %789 = load i32, i32* %cost45, align 4
  %add993 = add i32 %789, %788
  store i32 %add993, i32* %cost45, align 4
  %790 = load i16*, i16** %mtfv, align 8
  %791 = load i32, i32* %gs, align 4
  %add994 = add nsw i32 %791, 43
  %idxprom995 = sext i32 %add994 to i64
  %arrayidx996 = getelementptr inbounds i16, i16* %790, i64 %idxprom995
  %792 = load i16, i16* %arrayidx996, align 2
  store i16 %792, i16* %icv, align 2
  %793 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack997 = getelementptr inbounds %struct.EState, %struct.EState* %793, i32 0, i32 38
  %794 = load i16, i16* %icv, align 2
  %idxprom998 = zext i16 %794 to i64
  %arrayidx999 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack997, i64 0, i64 %idxprom998
  %arrayidx1000 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx999, i64 0, i64 0
  %795 = load i32, i32* %arrayidx1000, align 8
  %796 = load i32, i32* %cost01, align 4
  %add1001 = add i32 %796, %795
  store i32 %add1001, i32* %cost01, align 4
  %797 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1002 = getelementptr inbounds %struct.EState, %struct.EState* %797, i32 0, i32 38
  %798 = load i16, i16* %icv, align 2
  %idxprom1003 = zext i16 %798 to i64
  %arrayidx1004 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1002, i64 0, i64 %idxprom1003
  %arrayidx1005 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1004, i64 0, i64 1
  %799 = load i32, i32* %arrayidx1005, align 4
  %800 = load i32, i32* %cost23, align 4
  %add1006 = add i32 %800, %799
  store i32 %add1006, i32* %cost23, align 4
  %801 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1007 = getelementptr inbounds %struct.EState, %struct.EState* %801, i32 0, i32 38
  %802 = load i16, i16* %icv, align 2
  %idxprom1008 = zext i16 %802 to i64
  %arrayidx1009 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1007, i64 0, i64 %idxprom1008
  %arrayidx1010 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1009, i64 0, i64 2
  %803 = load i32, i32* %arrayidx1010, align 8
  %804 = load i32, i32* %cost45, align 4
  %add1011 = add i32 %804, %803
  store i32 %add1011, i32* %cost45, align 4
  %805 = load i16*, i16** %mtfv, align 8
  %806 = load i32, i32* %gs, align 4
  %add1012 = add nsw i32 %806, 44
  %idxprom1013 = sext i32 %add1012 to i64
  %arrayidx1014 = getelementptr inbounds i16, i16* %805, i64 %idxprom1013
  %807 = load i16, i16* %arrayidx1014, align 2
  store i16 %807, i16* %icv, align 2
  %808 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1015 = getelementptr inbounds %struct.EState, %struct.EState* %808, i32 0, i32 38
  %809 = load i16, i16* %icv, align 2
  %idxprom1016 = zext i16 %809 to i64
  %arrayidx1017 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1015, i64 0, i64 %idxprom1016
  %arrayidx1018 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1017, i64 0, i64 0
  %810 = load i32, i32* %arrayidx1018, align 8
  %811 = load i32, i32* %cost01, align 4
  %add1019 = add i32 %811, %810
  store i32 %add1019, i32* %cost01, align 4
  %812 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1020 = getelementptr inbounds %struct.EState, %struct.EState* %812, i32 0, i32 38
  %813 = load i16, i16* %icv, align 2
  %idxprom1021 = zext i16 %813 to i64
  %arrayidx1022 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1020, i64 0, i64 %idxprom1021
  %arrayidx1023 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1022, i64 0, i64 1
  %814 = load i32, i32* %arrayidx1023, align 4
  %815 = load i32, i32* %cost23, align 4
  %add1024 = add i32 %815, %814
  store i32 %add1024, i32* %cost23, align 4
  %816 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1025 = getelementptr inbounds %struct.EState, %struct.EState* %816, i32 0, i32 38
  %817 = load i16, i16* %icv, align 2
  %idxprom1026 = zext i16 %817 to i64
  %arrayidx1027 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1025, i64 0, i64 %idxprom1026
  %arrayidx1028 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1027, i64 0, i64 2
  %818 = load i32, i32* %arrayidx1028, align 8
  %819 = load i32, i32* %cost45, align 4
  %add1029 = add i32 %819, %818
  store i32 %add1029, i32* %cost45, align 4
  %820 = load i16*, i16** %mtfv, align 8
  %821 = load i32, i32* %gs, align 4
  %add1030 = add nsw i32 %821, 45
  %idxprom1031 = sext i32 %add1030 to i64
  %arrayidx1032 = getelementptr inbounds i16, i16* %820, i64 %idxprom1031
  %822 = load i16, i16* %arrayidx1032, align 2
  store i16 %822, i16* %icv, align 2
  %823 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1033 = getelementptr inbounds %struct.EState, %struct.EState* %823, i32 0, i32 38
  %824 = load i16, i16* %icv, align 2
  %idxprom1034 = zext i16 %824 to i64
  %arrayidx1035 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1033, i64 0, i64 %idxprom1034
  %arrayidx1036 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1035, i64 0, i64 0
  %825 = load i32, i32* %arrayidx1036, align 8
  %826 = load i32, i32* %cost01, align 4
  %add1037 = add i32 %826, %825
  store i32 %add1037, i32* %cost01, align 4
  %827 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1038 = getelementptr inbounds %struct.EState, %struct.EState* %827, i32 0, i32 38
  %828 = load i16, i16* %icv, align 2
  %idxprom1039 = zext i16 %828 to i64
  %arrayidx1040 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1038, i64 0, i64 %idxprom1039
  %arrayidx1041 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1040, i64 0, i64 1
  %829 = load i32, i32* %arrayidx1041, align 4
  %830 = load i32, i32* %cost23, align 4
  %add1042 = add i32 %830, %829
  store i32 %add1042, i32* %cost23, align 4
  %831 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1043 = getelementptr inbounds %struct.EState, %struct.EState* %831, i32 0, i32 38
  %832 = load i16, i16* %icv, align 2
  %idxprom1044 = zext i16 %832 to i64
  %arrayidx1045 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1043, i64 0, i64 %idxprom1044
  %arrayidx1046 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1045, i64 0, i64 2
  %833 = load i32, i32* %arrayidx1046, align 8
  %834 = load i32, i32* %cost45, align 4
  %add1047 = add i32 %834, %833
  store i32 %add1047, i32* %cost45, align 4
  %835 = load i16*, i16** %mtfv, align 8
  %836 = load i32, i32* %gs, align 4
  %add1048 = add nsw i32 %836, 46
  %idxprom1049 = sext i32 %add1048 to i64
  %arrayidx1050 = getelementptr inbounds i16, i16* %835, i64 %idxprom1049
  %837 = load i16, i16* %arrayidx1050, align 2
  store i16 %837, i16* %icv, align 2
  %838 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1051 = getelementptr inbounds %struct.EState, %struct.EState* %838, i32 0, i32 38
  %839 = load i16, i16* %icv, align 2
  %idxprom1052 = zext i16 %839 to i64
  %arrayidx1053 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1051, i64 0, i64 %idxprom1052
  %arrayidx1054 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1053, i64 0, i64 0
  %840 = load i32, i32* %arrayidx1054, align 8
  %841 = load i32, i32* %cost01, align 4
  %add1055 = add i32 %841, %840
  store i32 %add1055, i32* %cost01, align 4
  %842 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1056 = getelementptr inbounds %struct.EState, %struct.EState* %842, i32 0, i32 38
  %843 = load i16, i16* %icv, align 2
  %idxprom1057 = zext i16 %843 to i64
  %arrayidx1058 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1056, i64 0, i64 %idxprom1057
  %arrayidx1059 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1058, i64 0, i64 1
  %844 = load i32, i32* %arrayidx1059, align 4
  %845 = load i32, i32* %cost23, align 4
  %add1060 = add i32 %845, %844
  store i32 %add1060, i32* %cost23, align 4
  %846 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1061 = getelementptr inbounds %struct.EState, %struct.EState* %846, i32 0, i32 38
  %847 = load i16, i16* %icv, align 2
  %idxprom1062 = zext i16 %847 to i64
  %arrayidx1063 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1061, i64 0, i64 %idxprom1062
  %arrayidx1064 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1063, i64 0, i64 2
  %848 = load i32, i32* %arrayidx1064, align 8
  %849 = load i32, i32* %cost45, align 4
  %add1065 = add i32 %849, %848
  store i32 %add1065, i32* %cost45, align 4
  %850 = load i16*, i16** %mtfv, align 8
  %851 = load i32, i32* %gs, align 4
  %add1066 = add nsw i32 %851, 47
  %idxprom1067 = sext i32 %add1066 to i64
  %arrayidx1068 = getelementptr inbounds i16, i16* %850, i64 %idxprom1067
  %852 = load i16, i16* %arrayidx1068, align 2
  store i16 %852, i16* %icv, align 2
  %853 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1069 = getelementptr inbounds %struct.EState, %struct.EState* %853, i32 0, i32 38
  %854 = load i16, i16* %icv, align 2
  %idxprom1070 = zext i16 %854 to i64
  %arrayidx1071 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1069, i64 0, i64 %idxprom1070
  %arrayidx1072 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1071, i64 0, i64 0
  %855 = load i32, i32* %arrayidx1072, align 8
  %856 = load i32, i32* %cost01, align 4
  %add1073 = add i32 %856, %855
  store i32 %add1073, i32* %cost01, align 4
  %857 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1074 = getelementptr inbounds %struct.EState, %struct.EState* %857, i32 0, i32 38
  %858 = load i16, i16* %icv, align 2
  %idxprom1075 = zext i16 %858 to i64
  %arrayidx1076 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1074, i64 0, i64 %idxprom1075
  %arrayidx1077 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1076, i64 0, i64 1
  %859 = load i32, i32* %arrayidx1077, align 4
  %860 = load i32, i32* %cost23, align 4
  %add1078 = add i32 %860, %859
  store i32 %add1078, i32* %cost23, align 4
  %861 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1079 = getelementptr inbounds %struct.EState, %struct.EState* %861, i32 0, i32 38
  %862 = load i16, i16* %icv, align 2
  %idxprom1080 = zext i16 %862 to i64
  %arrayidx1081 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1079, i64 0, i64 %idxprom1080
  %arrayidx1082 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1081, i64 0, i64 2
  %863 = load i32, i32* %arrayidx1082, align 8
  %864 = load i32, i32* %cost45, align 4
  %add1083 = add i32 %864, %863
  store i32 %add1083, i32* %cost45, align 4
  %865 = load i16*, i16** %mtfv, align 8
  %866 = load i32, i32* %gs, align 4
  %add1084 = add nsw i32 %866, 48
  %idxprom1085 = sext i32 %add1084 to i64
  %arrayidx1086 = getelementptr inbounds i16, i16* %865, i64 %idxprom1085
  %867 = load i16, i16* %arrayidx1086, align 2
  store i16 %867, i16* %icv, align 2
  %868 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1087 = getelementptr inbounds %struct.EState, %struct.EState* %868, i32 0, i32 38
  %869 = load i16, i16* %icv, align 2
  %idxprom1088 = zext i16 %869 to i64
  %arrayidx1089 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1087, i64 0, i64 %idxprom1088
  %arrayidx1090 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1089, i64 0, i64 0
  %870 = load i32, i32* %arrayidx1090, align 8
  %871 = load i32, i32* %cost01, align 4
  %add1091 = add i32 %871, %870
  store i32 %add1091, i32* %cost01, align 4
  %872 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1092 = getelementptr inbounds %struct.EState, %struct.EState* %872, i32 0, i32 38
  %873 = load i16, i16* %icv, align 2
  %idxprom1093 = zext i16 %873 to i64
  %arrayidx1094 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1092, i64 0, i64 %idxprom1093
  %arrayidx1095 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1094, i64 0, i64 1
  %874 = load i32, i32* %arrayidx1095, align 4
  %875 = load i32, i32* %cost23, align 4
  %add1096 = add i32 %875, %874
  store i32 %add1096, i32* %cost23, align 4
  %876 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1097 = getelementptr inbounds %struct.EState, %struct.EState* %876, i32 0, i32 38
  %877 = load i16, i16* %icv, align 2
  %idxprom1098 = zext i16 %877 to i64
  %arrayidx1099 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1097, i64 0, i64 %idxprom1098
  %arrayidx1100 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1099, i64 0, i64 2
  %878 = load i32, i32* %arrayidx1100, align 8
  %879 = load i32, i32* %cost45, align 4
  %add1101 = add i32 %879, %878
  store i32 %add1101, i32* %cost45, align 4
  %880 = load i16*, i16** %mtfv, align 8
  %881 = load i32, i32* %gs, align 4
  %add1102 = add nsw i32 %881, 49
  %idxprom1103 = sext i32 %add1102 to i64
  %arrayidx1104 = getelementptr inbounds i16, i16* %880, i64 %idxprom1103
  %882 = load i16, i16* %arrayidx1104, align 2
  store i16 %882, i16* %icv, align 2
  %883 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1105 = getelementptr inbounds %struct.EState, %struct.EState* %883, i32 0, i32 38
  %884 = load i16, i16* %icv, align 2
  %idxprom1106 = zext i16 %884 to i64
  %arrayidx1107 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1105, i64 0, i64 %idxprom1106
  %arrayidx1108 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1107, i64 0, i64 0
  %885 = load i32, i32* %arrayidx1108, align 8
  %886 = load i32, i32* %cost01, align 4
  %add1109 = add i32 %886, %885
  store i32 %add1109, i32* %cost01, align 4
  %887 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1110 = getelementptr inbounds %struct.EState, %struct.EState* %887, i32 0, i32 38
  %888 = load i16, i16* %icv, align 2
  %idxprom1111 = zext i16 %888 to i64
  %arrayidx1112 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1110, i64 0, i64 %idxprom1111
  %arrayidx1113 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1112, i64 0, i64 1
  %889 = load i32, i32* %arrayidx1113, align 4
  %890 = load i32, i32* %cost23, align 4
  %add1114 = add i32 %890, %889
  store i32 %add1114, i32* %cost23, align 4
  %891 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len_pack1115 = getelementptr inbounds %struct.EState, %struct.EState* %891, i32 0, i32 38
  %892 = load i16, i16* %icv, align 2
  %idxprom1116 = zext i16 %892 to i64
  %arrayidx1117 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1115, i64 0, i64 %idxprom1116
  %arrayidx1118 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1117, i64 0, i64 2
  %893 = load i32, i32* %arrayidx1118, align 8
  %894 = load i32, i32* %cost45, align 4
  %add1119 = add i32 %894, %893
  store i32 %add1119, i32* %cost45, align 4
  %895 = load i32, i32* %cost01, align 4
  %and = and i32 %895, 65535
  %conv1120 = trunc i32 %and to i16
  %arrayidx1121 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 0
  store i16 %conv1120, i16* %arrayidx1121, align 2
  %896 = load i32, i32* %cost01, align 4
  %shr = lshr i32 %896, 16
  %conv1122 = trunc i32 %shr to i16
  %arrayidx1123 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 1
  store i16 %conv1122, i16* %arrayidx1123, align 2
  %897 = load i32, i32* %cost23, align 4
  %and1124 = and i32 %897, 65535
  %conv1125 = trunc i32 %and1124 to i16
  %arrayidx1126 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 2
  store i16 %conv1125, i16* %arrayidx1126, align 2
  %898 = load i32, i32* %cost23, align 4
  %shr1127 = lshr i32 %898, 16
  %conv1128 = trunc i32 %shr1127 to i16
  %arrayidx1129 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 3
  store i16 %conv1128, i16* %arrayidx1129, align 2
  %899 = load i32, i32* %cost45, align 4
  %and1130 = and i32 %899, 65535
  %conv1131 = trunc i32 %and1130 to i16
  %arrayidx1132 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 4
  store i16 %conv1131, i16* %arrayidx1132, align 2
  %900 = load i32, i32* %cost45, align 4
  %shr1133 = lshr i32 %900, 16
  %conv1134 = trunc i32 %shr1133 to i16
  %arrayidx1135 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 5
  store i16 %conv1134, i16* %arrayidx1135, align 2
  br label %if.end1165

if.else1136:                                      ; preds = %land.lhs.true214, %for.end211
  %901 = load i32, i32* %gs, align 4
  store i32 %901, i32* %i, align 4
  br label %for.cond1137

for.cond1137:                                     ; preds = %for.inc1162, %if.else1136
  %902 = load i32, i32* %i, align 4
  %903 = load i32, i32* %ge, align 4
  %cmp1138 = icmp sle i32 %902, %903
  br i1 %cmp1138, label %for.body1140, label %for.end1164

for.body1140:                                     ; preds = %for.cond1137
  %904 = load i16*, i16** %mtfv, align 8
  %905 = load i32, i32* %i, align 4
  %idxprom1142 = sext i32 %905 to i64
  %arrayidx1143 = getelementptr inbounds i16, i16* %904, i64 %idxprom1142
  %906 = load i16, i16* %arrayidx1143, align 2
  store i16 %906, i16* %icv1141, align 2
  store i32 0, i32* %t, align 4
  br label %for.cond1144

for.cond1144:                                     ; preds = %for.inc1159, %for.body1140
  %907 = load i32, i32* %t, align 4
  %908 = load i32, i32* %nGroups, align 4
  %cmp1145 = icmp slt i32 %907, %908
  br i1 %cmp1145, label %for.body1147, label %for.end1161

for.body1147:                                     ; preds = %for.cond1144
  %909 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1148 = getelementptr inbounds %struct.EState, %struct.EState* %909, i32 0, i32 35
  %910 = load i32, i32* %t, align 4
  %idxprom1149 = sext i32 %910 to i64
  %arrayidx1150 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1148, i64 0, i64 %idxprom1149
  %911 = load i16, i16* %icv1141, align 2
  %idxprom1151 = zext i16 %911 to i64
  %arrayidx1152 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1150, i64 0, i64 %idxprom1151
  %912 = load i8, i8* %arrayidx1152, align 1
  %conv1153 = zext i8 %912 to i32
  %913 = load i32, i32* %t, align 4
  %idxprom1154 = sext i32 %913 to i64
  %arrayidx1155 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1154
  %914 = load i16, i16* %arrayidx1155, align 2
  %conv1156 = zext i16 %914 to i32
  %add1157 = add nsw i32 %conv1156, %conv1153
  %conv1158 = trunc i32 %add1157 to i16
  store i16 %conv1158, i16* %arrayidx1155, align 2
  br label %for.inc1159

for.inc1159:                                      ; preds = %for.body1147
  %915 = load i32, i32* %t, align 4
  %inc1160 = add nsw i32 %915, 1
  store i32 %inc1160, i32* %t, align 4
  br label %for.cond1144

for.end1161:                                      ; preds = %for.cond1144
  br label %for.inc1162

for.inc1162:                                      ; preds = %for.end1161
  %916 = load i32, i32* %i, align 4
  %inc1163 = add nsw i32 %916, 1
  store i32 %inc1163, i32* %i, align 4
  br label %for.cond1137

for.end1164:                                      ; preds = %for.cond1137
  br label %if.end1165

if.end1165:                                       ; preds = %for.end1164, %if.then219
  store i32 999999999, i32* %bc, align 4
  store i32 -1, i32* %bt, align 4
  store i32 0, i32* %t, align 4
  br label %for.cond1166

for.cond1166:                                     ; preds = %for.inc1180, %if.end1165
  %917 = load i32, i32* %t, align 4
  %918 = load i32, i32* %nGroups, align 4
  %cmp1167 = icmp slt i32 %917, %918
  br i1 %cmp1167, label %for.body1169, label %for.end1182

for.body1169:                                     ; preds = %for.cond1166
  %919 = load i32, i32* %t, align 4
  %idxprom1170 = sext i32 %919 to i64
  %arrayidx1171 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1170
  %920 = load i16, i16* %arrayidx1171, align 2
  %conv1172 = zext i16 %920 to i32
  %921 = load i32, i32* %bc, align 4
  %cmp1173 = icmp slt i32 %conv1172, %921
  br i1 %cmp1173, label %if.then1175, label %if.end1179

if.then1175:                                      ; preds = %for.body1169
  %922 = load i32, i32* %t, align 4
  %idxprom1176 = sext i32 %922 to i64
  %arrayidx1177 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1176
  %923 = load i16, i16* %arrayidx1177, align 2
  %conv1178 = zext i16 %923 to i32
  store i32 %conv1178, i32* %bc, align 4
  %924 = load i32, i32* %t, align 4
  store i32 %924, i32* %bt, align 4
  br label %if.end1179

if.end1179:                                       ; preds = %if.then1175, %for.body1169
  br label %for.inc1180

for.inc1180:                                      ; preds = %if.end1179
  %925 = load i32, i32* %t, align 4
  %inc1181 = add nsw i32 %925, 1
  store i32 %inc1181, i32* %t, align 4
  br label %for.cond1166

for.end1182:                                      ; preds = %for.cond1166
  %926 = load i32, i32* %bc, align 4
  %927 = load i32, i32* %totc, align 4
  %add1183 = add nsw i32 %927, %926
  store i32 %add1183, i32* %totc, align 4
  %928 = load i32, i32* %bt, align 4
  %idxprom1184 = sext i32 %928 to i64
  %arrayidx1185 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom1184
  %929 = load i32, i32* %arrayidx1185, align 4
  %inc1186 = add nsw i32 %929, 1
  store i32 %inc1186, i32* %arrayidx1185, align 4
  %930 = load i32, i32* %bt, align 4
  %conv1187 = trunc i32 %930 to i8
  %931 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector = getelementptr inbounds %struct.EState, %struct.EState* %931, i32 0, i32 33
  %932 = load i32, i32* %nSelectors, align 4
  %idxprom1188 = sext i32 %932 to i64
  %arrayidx1189 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector, i64 0, i64 %idxprom1188
  store i8 %conv1187, i8* %arrayidx1189, align 1
  %933 = load i32, i32* %nSelectors, align 4
  %inc1190 = add nsw i32 %933, 1
  store i32 %inc1190, i32* %nSelectors, align 4
  %934 = load i32, i32* %nGroups, align 4
  %cmp1191 = icmp eq i32 %934, 6
  br i1 %cmp1191, label %land.lhs.true1193, label %if.else1649

land.lhs.true1193:                                ; preds = %for.end1182
  %935 = load i32, i32* %ge, align 4
  %936 = load i32, i32* %gs, align 4
  %sub1194 = sub nsw i32 %935, %936
  %add1195 = add nsw i32 %sub1194, 1
  %cmp1196 = icmp eq i32 50, %add1195
  br i1 %cmp1196, label %if.then1198, label %if.else1649

if.then1198:                                      ; preds = %land.lhs.true1193
  %937 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1199 = getelementptr inbounds %struct.EState, %struct.EState* %937, i32 0, i32 37
  %938 = load i32, i32* %bt, align 4
  %idxprom1200 = sext i32 %938 to i64
  %arrayidx1201 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1199, i64 0, i64 %idxprom1200
  %939 = load i16*, i16** %mtfv, align 8
  %940 = load i32, i32* %gs, align 4
  %add1202 = add nsw i32 %940, 0
  %idxprom1203 = sext i32 %add1202 to i64
  %arrayidx1204 = getelementptr inbounds i16, i16* %939, i64 %idxprom1203
  %941 = load i16, i16* %arrayidx1204, align 2
  %idxprom1205 = zext i16 %941 to i64
  %arrayidx1206 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1201, i64 0, i64 %idxprom1205
  %942 = load i32, i32* %arrayidx1206, align 4
  %inc1207 = add nsw i32 %942, 1
  store i32 %inc1207, i32* %arrayidx1206, align 4
  %943 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1208 = getelementptr inbounds %struct.EState, %struct.EState* %943, i32 0, i32 37
  %944 = load i32, i32* %bt, align 4
  %idxprom1209 = sext i32 %944 to i64
  %arrayidx1210 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1208, i64 0, i64 %idxprom1209
  %945 = load i16*, i16** %mtfv, align 8
  %946 = load i32, i32* %gs, align 4
  %add1211 = add nsw i32 %946, 1
  %idxprom1212 = sext i32 %add1211 to i64
  %arrayidx1213 = getelementptr inbounds i16, i16* %945, i64 %idxprom1212
  %947 = load i16, i16* %arrayidx1213, align 2
  %idxprom1214 = zext i16 %947 to i64
  %arrayidx1215 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1210, i64 0, i64 %idxprom1214
  %948 = load i32, i32* %arrayidx1215, align 4
  %inc1216 = add nsw i32 %948, 1
  store i32 %inc1216, i32* %arrayidx1215, align 4
  %949 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1217 = getelementptr inbounds %struct.EState, %struct.EState* %949, i32 0, i32 37
  %950 = load i32, i32* %bt, align 4
  %idxprom1218 = sext i32 %950 to i64
  %arrayidx1219 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1217, i64 0, i64 %idxprom1218
  %951 = load i16*, i16** %mtfv, align 8
  %952 = load i32, i32* %gs, align 4
  %add1220 = add nsw i32 %952, 2
  %idxprom1221 = sext i32 %add1220 to i64
  %arrayidx1222 = getelementptr inbounds i16, i16* %951, i64 %idxprom1221
  %953 = load i16, i16* %arrayidx1222, align 2
  %idxprom1223 = zext i16 %953 to i64
  %arrayidx1224 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1219, i64 0, i64 %idxprom1223
  %954 = load i32, i32* %arrayidx1224, align 4
  %inc1225 = add nsw i32 %954, 1
  store i32 %inc1225, i32* %arrayidx1224, align 4
  %955 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1226 = getelementptr inbounds %struct.EState, %struct.EState* %955, i32 0, i32 37
  %956 = load i32, i32* %bt, align 4
  %idxprom1227 = sext i32 %956 to i64
  %arrayidx1228 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1226, i64 0, i64 %idxprom1227
  %957 = load i16*, i16** %mtfv, align 8
  %958 = load i32, i32* %gs, align 4
  %add1229 = add nsw i32 %958, 3
  %idxprom1230 = sext i32 %add1229 to i64
  %arrayidx1231 = getelementptr inbounds i16, i16* %957, i64 %idxprom1230
  %959 = load i16, i16* %arrayidx1231, align 2
  %idxprom1232 = zext i16 %959 to i64
  %arrayidx1233 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1228, i64 0, i64 %idxprom1232
  %960 = load i32, i32* %arrayidx1233, align 4
  %inc1234 = add nsw i32 %960, 1
  store i32 %inc1234, i32* %arrayidx1233, align 4
  %961 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1235 = getelementptr inbounds %struct.EState, %struct.EState* %961, i32 0, i32 37
  %962 = load i32, i32* %bt, align 4
  %idxprom1236 = sext i32 %962 to i64
  %arrayidx1237 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1235, i64 0, i64 %idxprom1236
  %963 = load i16*, i16** %mtfv, align 8
  %964 = load i32, i32* %gs, align 4
  %add1238 = add nsw i32 %964, 4
  %idxprom1239 = sext i32 %add1238 to i64
  %arrayidx1240 = getelementptr inbounds i16, i16* %963, i64 %idxprom1239
  %965 = load i16, i16* %arrayidx1240, align 2
  %idxprom1241 = zext i16 %965 to i64
  %arrayidx1242 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1237, i64 0, i64 %idxprom1241
  %966 = load i32, i32* %arrayidx1242, align 4
  %inc1243 = add nsw i32 %966, 1
  store i32 %inc1243, i32* %arrayidx1242, align 4
  %967 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1244 = getelementptr inbounds %struct.EState, %struct.EState* %967, i32 0, i32 37
  %968 = load i32, i32* %bt, align 4
  %idxprom1245 = sext i32 %968 to i64
  %arrayidx1246 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1244, i64 0, i64 %idxprom1245
  %969 = load i16*, i16** %mtfv, align 8
  %970 = load i32, i32* %gs, align 4
  %add1247 = add nsw i32 %970, 5
  %idxprom1248 = sext i32 %add1247 to i64
  %arrayidx1249 = getelementptr inbounds i16, i16* %969, i64 %idxprom1248
  %971 = load i16, i16* %arrayidx1249, align 2
  %idxprom1250 = zext i16 %971 to i64
  %arrayidx1251 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1246, i64 0, i64 %idxprom1250
  %972 = load i32, i32* %arrayidx1251, align 4
  %inc1252 = add nsw i32 %972, 1
  store i32 %inc1252, i32* %arrayidx1251, align 4
  %973 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1253 = getelementptr inbounds %struct.EState, %struct.EState* %973, i32 0, i32 37
  %974 = load i32, i32* %bt, align 4
  %idxprom1254 = sext i32 %974 to i64
  %arrayidx1255 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1253, i64 0, i64 %idxprom1254
  %975 = load i16*, i16** %mtfv, align 8
  %976 = load i32, i32* %gs, align 4
  %add1256 = add nsw i32 %976, 6
  %idxprom1257 = sext i32 %add1256 to i64
  %arrayidx1258 = getelementptr inbounds i16, i16* %975, i64 %idxprom1257
  %977 = load i16, i16* %arrayidx1258, align 2
  %idxprom1259 = zext i16 %977 to i64
  %arrayidx1260 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1255, i64 0, i64 %idxprom1259
  %978 = load i32, i32* %arrayidx1260, align 4
  %inc1261 = add nsw i32 %978, 1
  store i32 %inc1261, i32* %arrayidx1260, align 4
  %979 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1262 = getelementptr inbounds %struct.EState, %struct.EState* %979, i32 0, i32 37
  %980 = load i32, i32* %bt, align 4
  %idxprom1263 = sext i32 %980 to i64
  %arrayidx1264 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1262, i64 0, i64 %idxprom1263
  %981 = load i16*, i16** %mtfv, align 8
  %982 = load i32, i32* %gs, align 4
  %add1265 = add nsw i32 %982, 7
  %idxprom1266 = sext i32 %add1265 to i64
  %arrayidx1267 = getelementptr inbounds i16, i16* %981, i64 %idxprom1266
  %983 = load i16, i16* %arrayidx1267, align 2
  %idxprom1268 = zext i16 %983 to i64
  %arrayidx1269 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1264, i64 0, i64 %idxprom1268
  %984 = load i32, i32* %arrayidx1269, align 4
  %inc1270 = add nsw i32 %984, 1
  store i32 %inc1270, i32* %arrayidx1269, align 4
  %985 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1271 = getelementptr inbounds %struct.EState, %struct.EState* %985, i32 0, i32 37
  %986 = load i32, i32* %bt, align 4
  %idxprom1272 = sext i32 %986 to i64
  %arrayidx1273 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1271, i64 0, i64 %idxprom1272
  %987 = load i16*, i16** %mtfv, align 8
  %988 = load i32, i32* %gs, align 4
  %add1274 = add nsw i32 %988, 8
  %idxprom1275 = sext i32 %add1274 to i64
  %arrayidx1276 = getelementptr inbounds i16, i16* %987, i64 %idxprom1275
  %989 = load i16, i16* %arrayidx1276, align 2
  %idxprom1277 = zext i16 %989 to i64
  %arrayidx1278 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1273, i64 0, i64 %idxprom1277
  %990 = load i32, i32* %arrayidx1278, align 4
  %inc1279 = add nsw i32 %990, 1
  store i32 %inc1279, i32* %arrayidx1278, align 4
  %991 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1280 = getelementptr inbounds %struct.EState, %struct.EState* %991, i32 0, i32 37
  %992 = load i32, i32* %bt, align 4
  %idxprom1281 = sext i32 %992 to i64
  %arrayidx1282 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1280, i64 0, i64 %idxprom1281
  %993 = load i16*, i16** %mtfv, align 8
  %994 = load i32, i32* %gs, align 4
  %add1283 = add nsw i32 %994, 9
  %idxprom1284 = sext i32 %add1283 to i64
  %arrayidx1285 = getelementptr inbounds i16, i16* %993, i64 %idxprom1284
  %995 = load i16, i16* %arrayidx1285, align 2
  %idxprom1286 = zext i16 %995 to i64
  %arrayidx1287 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1282, i64 0, i64 %idxprom1286
  %996 = load i32, i32* %arrayidx1287, align 4
  %inc1288 = add nsw i32 %996, 1
  store i32 %inc1288, i32* %arrayidx1287, align 4
  %997 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1289 = getelementptr inbounds %struct.EState, %struct.EState* %997, i32 0, i32 37
  %998 = load i32, i32* %bt, align 4
  %idxprom1290 = sext i32 %998 to i64
  %arrayidx1291 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1289, i64 0, i64 %idxprom1290
  %999 = load i16*, i16** %mtfv, align 8
  %1000 = load i32, i32* %gs, align 4
  %add1292 = add nsw i32 %1000, 10
  %idxprom1293 = sext i32 %add1292 to i64
  %arrayidx1294 = getelementptr inbounds i16, i16* %999, i64 %idxprom1293
  %1001 = load i16, i16* %arrayidx1294, align 2
  %idxprom1295 = zext i16 %1001 to i64
  %arrayidx1296 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1291, i64 0, i64 %idxprom1295
  %1002 = load i32, i32* %arrayidx1296, align 4
  %inc1297 = add nsw i32 %1002, 1
  store i32 %inc1297, i32* %arrayidx1296, align 4
  %1003 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1298 = getelementptr inbounds %struct.EState, %struct.EState* %1003, i32 0, i32 37
  %1004 = load i32, i32* %bt, align 4
  %idxprom1299 = sext i32 %1004 to i64
  %arrayidx1300 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1298, i64 0, i64 %idxprom1299
  %1005 = load i16*, i16** %mtfv, align 8
  %1006 = load i32, i32* %gs, align 4
  %add1301 = add nsw i32 %1006, 11
  %idxprom1302 = sext i32 %add1301 to i64
  %arrayidx1303 = getelementptr inbounds i16, i16* %1005, i64 %idxprom1302
  %1007 = load i16, i16* %arrayidx1303, align 2
  %idxprom1304 = zext i16 %1007 to i64
  %arrayidx1305 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1300, i64 0, i64 %idxprom1304
  %1008 = load i32, i32* %arrayidx1305, align 4
  %inc1306 = add nsw i32 %1008, 1
  store i32 %inc1306, i32* %arrayidx1305, align 4
  %1009 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1307 = getelementptr inbounds %struct.EState, %struct.EState* %1009, i32 0, i32 37
  %1010 = load i32, i32* %bt, align 4
  %idxprom1308 = sext i32 %1010 to i64
  %arrayidx1309 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1307, i64 0, i64 %idxprom1308
  %1011 = load i16*, i16** %mtfv, align 8
  %1012 = load i32, i32* %gs, align 4
  %add1310 = add nsw i32 %1012, 12
  %idxprom1311 = sext i32 %add1310 to i64
  %arrayidx1312 = getelementptr inbounds i16, i16* %1011, i64 %idxprom1311
  %1013 = load i16, i16* %arrayidx1312, align 2
  %idxprom1313 = zext i16 %1013 to i64
  %arrayidx1314 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1309, i64 0, i64 %idxprom1313
  %1014 = load i32, i32* %arrayidx1314, align 4
  %inc1315 = add nsw i32 %1014, 1
  store i32 %inc1315, i32* %arrayidx1314, align 4
  %1015 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1316 = getelementptr inbounds %struct.EState, %struct.EState* %1015, i32 0, i32 37
  %1016 = load i32, i32* %bt, align 4
  %idxprom1317 = sext i32 %1016 to i64
  %arrayidx1318 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1316, i64 0, i64 %idxprom1317
  %1017 = load i16*, i16** %mtfv, align 8
  %1018 = load i32, i32* %gs, align 4
  %add1319 = add nsw i32 %1018, 13
  %idxprom1320 = sext i32 %add1319 to i64
  %arrayidx1321 = getelementptr inbounds i16, i16* %1017, i64 %idxprom1320
  %1019 = load i16, i16* %arrayidx1321, align 2
  %idxprom1322 = zext i16 %1019 to i64
  %arrayidx1323 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1318, i64 0, i64 %idxprom1322
  %1020 = load i32, i32* %arrayidx1323, align 4
  %inc1324 = add nsw i32 %1020, 1
  store i32 %inc1324, i32* %arrayidx1323, align 4
  %1021 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1325 = getelementptr inbounds %struct.EState, %struct.EState* %1021, i32 0, i32 37
  %1022 = load i32, i32* %bt, align 4
  %idxprom1326 = sext i32 %1022 to i64
  %arrayidx1327 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1325, i64 0, i64 %idxprom1326
  %1023 = load i16*, i16** %mtfv, align 8
  %1024 = load i32, i32* %gs, align 4
  %add1328 = add nsw i32 %1024, 14
  %idxprom1329 = sext i32 %add1328 to i64
  %arrayidx1330 = getelementptr inbounds i16, i16* %1023, i64 %idxprom1329
  %1025 = load i16, i16* %arrayidx1330, align 2
  %idxprom1331 = zext i16 %1025 to i64
  %arrayidx1332 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1327, i64 0, i64 %idxprom1331
  %1026 = load i32, i32* %arrayidx1332, align 4
  %inc1333 = add nsw i32 %1026, 1
  store i32 %inc1333, i32* %arrayidx1332, align 4
  %1027 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1334 = getelementptr inbounds %struct.EState, %struct.EState* %1027, i32 0, i32 37
  %1028 = load i32, i32* %bt, align 4
  %idxprom1335 = sext i32 %1028 to i64
  %arrayidx1336 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1334, i64 0, i64 %idxprom1335
  %1029 = load i16*, i16** %mtfv, align 8
  %1030 = load i32, i32* %gs, align 4
  %add1337 = add nsw i32 %1030, 15
  %idxprom1338 = sext i32 %add1337 to i64
  %arrayidx1339 = getelementptr inbounds i16, i16* %1029, i64 %idxprom1338
  %1031 = load i16, i16* %arrayidx1339, align 2
  %idxprom1340 = zext i16 %1031 to i64
  %arrayidx1341 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1336, i64 0, i64 %idxprom1340
  %1032 = load i32, i32* %arrayidx1341, align 4
  %inc1342 = add nsw i32 %1032, 1
  store i32 %inc1342, i32* %arrayidx1341, align 4
  %1033 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1343 = getelementptr inbounds %struct.EState, %struct.EState* %1033, i32 0, i32 37
  %1034 = load i32, i32* %bt, align 4
  %idxprom1344 = sext i32 %1034 to i64
  %arrayidx1345 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1343, i64 0, i64 %idxprom1344
  %1035 = load i16*, i16** %mtfv, align 8
  %1036 = load i32, i32* %gs, align 4
  %add1346 = add nsw i32 %1036, 16
  %idxprom1347 = sext i32 %add1346 to i64
  %arrayidx1348 = getelementptr inbounds i16, i16* %1035, i64 %idxprom1347
  %1037 = load i16, i16* %arrayidx1348, align 2
  %idxprom1349 = zext i16 %1037 to i64
  %arrayidx1350 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1345, i64 0, i64 %idxprom1349
  %1038 = load i32, i32* %arrayidx1350, align 4
  %inc1351 = add nsw i32 %1038, 1
  store i32 %inc1351, i32* %arrayidx1350, align 4
  %1039 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1352 = getelementptr inbounds %struct.EState, %struct.EState* %1039, i32 0, i32 37
  %1040 = load i32, i32* %bt, align 4
  %idxprom1353 = sext i32 %1040 to i64
  %arrayidx1354 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1352, i64 0, i64 %idxprom1353
  %1041 = load i16*, i16** %mtfv, align 8
  %1042 = load i32, i32* %gs, align 4
  %add1355 = add nsw i32 %1042, 17
  %idxprom1356 = sext i32 %add1355 to i64
  %arrayidx1357 = getelementptr inbounds i16, i16* %1041, i64 %idxprom1356
  %1043 = load i16, i16* %arrayidx1357, align 2
  %idxprom1358 = zext i16 %1043 to i64
  %arrayidx1359 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1354, i64 0, i64 %idxprom1358
  %1044 = load i32, i32* %arrayidx1359, align 4
  %inc1360 = add nsw i32 %1044, 1
  store i32 %inc1360, i32* %arrayidx1359, align 4
  %1045 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1361 = getelementptr inbounds %struct.EState, %struct.EState* %1045, i32 0, i32 37
  %1046 = load i32, i32* %bt, align 4
  %idxprom1362 = sext i32 %1046 to i64
  %arrayidx1363 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1361, i64 0, i64 %idxprom1362
  %1047 = load i16*, i16** %mtfv, align 8
  %1048 = load i32, i32* %gs, align 4
  %add1364 = add nsw i32 %1048, 18
  %idxprom1365 = sext i32 %add1364 to i64
  %arrayidx1366 = getelementptr inbounds i16, i16* %1047, i64 %idxprom1365
  %1049 = load i16, i16* %arrayidx1366, align 2
  %idxprom1367 = zext i16 %1049 to i64
  %arrayidx1368 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1363, i64 0, i64 %idxprom1367
  %1050 = load i32, i32* %arrayidx1368, align 4
  %inc1369 = add nsw i32 %1050, 1
  store i32 %inc1369, i32* %arrayidx1368, align 4
  %1051 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1370 = getelementptr inbounds %struct.EState, %struct.EState* %1051, i32 0, i32 37
  %1052 = load i32, i32* %bt, align 4
  %idxprom1371 = sext i32 %1052 to i64
  %arrayidx1372 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1370, i64 0, i64 %idxprom1371
  %1053 = load i16*, i16** %mtfv, align 8
  %1054 = load i32, i32* %gs, align 4
  %add1373 = add nsw i32 %1054, 19
  %idxprom1374 = sext i32 %add1373 to i64
  %arrayidx1375 = getelementptr inbounds i16, i16* %1053, i64 %idxprom1374
  %1055 = load i16, i16* %arrayidx1375, align 2
  %idxprom1376 = zext i16 %1055 to i64
  %arrayidx1377 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1372, i64 0, i64 %idxprom1376
  %1056 = load i32, i32* %arrayidx1377, align 4
  %inc1378 = add nsw i32 %1056, 1
  store i32 %inc1378, i32* %arrayidx1377, align 4
  %1057 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1379 = getelementptr inbounds %struct.EState, %struct.EState* %1057, i32 0, i32 37
  %1058 = load i32, i32* %bt, align 4
  %idxprom1380 = sext i32 %1058 to i64
  %arrayidx1381 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1379, i64 0, i64 %idxprom1380
  %1059 = load i16*, i16** %mtfv, align 8
  %1060 = load i32, i32* %gs, align 4
  %add1382 = add nsw i32 %1060, 20
  %idxprom1383 = sext i32 %add1382 to i64
  %arrayidx1384 = getelementptr inbounds i16, i16* %1059, i64 %idxprom1383
  %1061 = load i16, i16* %arrayidx1384, align 2
  %idxprom1385 = zext i16 %1061 to i64
  %arrayidx1386 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1381, i64 0, i64 %idxprom1385
  %1062 = load i32, i32* %arrayidx1386, align 4
  %inc1387 = add nsw i32 %1062, 1
  store i32 %inc1387, i32* %arrayidx1386, align 4
  %1063 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1388 = getelementptr inbounds %struct.EState, %struct.EState* %1063, i32 0, i32 37
  %1064 = load i32, i32* %bt, align 4
  %idxprom1389 = sext i32 %1064 to i64
  %arrayidx1390 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1388, i64 0, i64 %idxprom1389
  %1065 = load i16*, i16** %mtfv, align 8
  %1066 = load i32, i32* %gs, align 4
  %add1391 = add nsw i32 %1066, 21
  %idxprom1392 = sext i32 %add1391 to i64
  %arrayidx1393 = getelementptr inbounds i16, i16* %1065, i64 %idxprom1392
  %1067 = load i16, i16* %arrayidx1393, align 2
  %idxprom1394 = zext i16 %1067 to i64
  %arrayidx1395 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1390, i64 0, i64 %idxprom1394
  %1068 = load i32, i32* %arrayidx1395, align 4
  %inc1396 = add nsw i32 %1068, 1
  store i32 %inc1396, i32* %arrayidx1395, align 4
  %1069 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1397 = getelementptr inbounds %struct.EState, %struct.EState* %1069, i32 0, i32 37
  %1070 = load i32, i32* %bt, align 4
  %idxprom1398 = sext i32 %1070 to i64
  %arrayidx1399 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1397, i64 0, i64 %idxprom1398
  %1071 = load i16*, i16** %mtfv, align 8
  %1072 = load i32, i32* %gs, align 4
  %add1400 = add nsw i32 %1072, 22
  %idxprom1401 = sext i32 %add1400 to i64
  %arrayidx1402 = getelementptr inbounds i16, i16* %1071, i64 %idxprom1401
  %1073 = load i16, i16* %arrayidx1402, align 2
  %idxprom1403 = zext i16 %1073 to i64
  %arrayidx1404 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1399, i64 0, i64 %idxprom1403
  %1074 = load i32, i32* %arrayidx1404, align 4
  %inc1405 = add nsw i32 %1074, 1
  store i32 %inc1405, i32* %arrayidx1404, align 4
  %1075 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1406 = getelementptr inbounds %struct.EState, %struct.EState* %1075, i32 0, i32 37
  %1076 = load i32, i32* %bt, align 4
  %idxprom1407 = sext i32 %1076 to i64
  %arrayidx1408 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1406, i64 0, i64 %idxprom1407
  %1077 = load i16*, i16** %mtfv, align 8
  %1078 = load i32, i32* %gs, align 4
  %add1409 = add nsw i32 %1078, 23
  %idxprom1410 = sext i32 %add1409 to i64
  %arrayidx1411 = getelementptr inbounds i16, i16* %1077, i64 %idxprom1410
  %1079 = load i16, i16* %arrayidx1411, align 2
  %idxprom1412 = zext i16 %1079 to i64
  %arrayidx1413 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1408, i64 0, i64 %idxprom1412
  %1080 = load i32, i32* %arrayidx1413, align 4
  %inc1414 = add nsw i32 %1080, 1
  store i32 %inc1414, i32* %arrayidx1413, align 4
  %1081 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1415 = getelementptr inbounds %struct.EState, %struct.EState* %1081, i32 0, i32 37
  %1082 = load i32, i32* %bt, align 4
  %idxprom1416 = sext i32 %1082 to i64
  %arrayidx1417 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1415, i64 0, i64 %idxprom1416
  %1083 = load i16*, i16** %mtfv, align 8
  %1084 = load i32, i32* %gs, align 4
  %add1418 = add nsw i32 %1084, 24
  %idxprom1419 = sext i32 %add1418 to i64
  %arrayidx1420 = getelementptr inbounds i16, i16* %1083, i64 %idxprom1419
  %1085 = load i16, i16* %arrayidx1420, align 2
  %idxprom1421 = zext i16 %1085 to i64
  %arrayidx1422 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1417, i64 0, i64 %idxprom1421
  %1086 = load i32, i32* %arrayidx1422, align 4
  %inc1423 = add nsw i32 %1086, 1
  store i32 %inc1423, i32* %arrayidx1422, align 4
  %1087 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1424 = getelementptr inbounds %struct.EState, %struct.EState* %1087, i32 0, i32 37
  %1088 = load i32, i32* %bt, align 4
  %idxprom1425 = sext i32 %1088 to i64
  %arrayidx1426 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1424, i64 0, i64 %idxprom1425
  %1089 = load i16*, i16** %mtfv, align 8
  %1090 = load i32, i32* %gs, align 4
  %add1427 = add nsw i32 %1090, 25
  %idxprom1428 = sext i32 %add1427 to i64
  %arrayidx1429 = getelementptr inbounds i16, i16* %1089, i64 %idxprom1428
  %1091 = load i16, i16* %arrayidx1429, align 2
  %idxprom1430 = zext i16 %1091 to i64
  %arrayidx1431 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1426, i64 0, i64 %idxprom1430
  %1092 = load i32, i32* %arrayidx1431, align 4
  %inc1432 = add nsw i32 %1092, 1
  store i32 %inc1432, i32* %arrayidx1431, align 4
  %1093 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1433 = getelementptr inbounds %struct.EState, %struct.EState* %1093, i32 0, i32 37
  %1094 = load i32, i32* %bt, align 4
  %idxprom1434 = sext i32 %1094 to i64
  %arrayidx1435 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1433, i64 0, i64 %idxprom1434
  %1095 = load i16*, i16** %mtfv, align 8
  %1096 = load i32, i32* %gs, align 4
  %add1436 = add nsw i32 %1096, 26
  %idxprom1437 = sext i32 %add1436 to i64
  %arrayidx1438 = getelementptr inbounds i16, i16* %1095, i64 %idxprom1437
  %1097 = load i16, i16* %arrayidx1438, align 2
  %idxprom1439 = zext i16 %1097 to i64
  %arrayidx1440 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1435, i64 0, i64 %idxprom1439
  %1098 = load i32, i32* %arrayidx1440, align 4
  %inc1441 = add nsw i32 %1098, 1
  store i32 %inc1441, i32* %arrayidx1440, align 4
  %1099 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1442 = getelementptr inbounds %struct.EState, %struct.EState* %1099, i32 0, i32 37
  %1100 = load i32, i32* %bt, align 4
  %idxprom1443 = sext i32 %1100 to i64
  %arrayidx1444 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1442, i64 0, i64 %idxprom1443
  %1101 = load i16*, i16** %mtfv, align 8
  %1102 = load i32, i32* %gs, align 4
  %add1445 = add nsw i32 %1102, 27
  %idxprom1446 = sext i32 %add1445 to i64
  %arrayidx1447 = getelementptr inbounds i16, i16* %1101, i64 %idxprom1446
  %1103 = load i16, i16* %arrayidx1447, align 2
  %idxprom1448 = zext i16 %1103 to i64
  %arrayidx1449 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1444, i64 0, i64 %idxprom1448
  %1104 = load i32, i32* %arrayidx1449, align 4
  %inc1450 = add nsw i32 %1104, 1
  store i32 %inc1450, i32* %arrayidx1449, align 4
  %1105 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1451 = getelementptr inbounds %struct.EState, %struct.EState* %1105, i32 0, i32 37
  %1106 = load i32, i32* %bt, align 4
  %idxprom1452 = sext i32 %1106 to i64
  %arrayidx1453 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1451, i64 0, i64 %idxprom1452
  %1107 = load i16*, i16** %mtfv, align 8
  %1108 = load i32, i32* %gs, align 4
  %add1454 = add nsw i32 %1108, 28
  %idxprom1455 = sext i32 %add1454 to i64
  %arrayidx1456 = getelementptr inbounds i16, i16* %1107, i64 %idxprom1455
  %1109 = load i16, i16* %arrayidx1456, align 2
  %idxprom1457 = zext i16 %1109 to i64
  %arrayidx1458 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1453, i64 0, i64 %idxprom1457
  %1110 = load i32, i32* %arrayidx1458, align 4
  %inc1459 = add nsw i32 %1110, 1
  store i32 %inc1459, i32* %arrayidx1458, align 4
  %1111 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1460 = getelementptr inbounds %struct.EState, %struct.EState* %1111, i32 0, i32 37
  %1112 = load i32, i32* %bt, align 4
  %idxprom1461 = sext i32 %1112 to i64
  %arrayidx1462 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1460, i64 0, i64 %idxprom1461
  %1113 = load i16*, i16** %mtfv, align 8
  %1114 = load i32, i32* %gs, align 4
  %add1463 = add nsw i32 %1114, 29
  %idxprom1464 = sext i32 %add1463 to i64
  %arrayidx1465 = getelementptr inbounds i16, i16* %1113, i64 %idxprom1464
  %1115 = load i16, i16* %arrayidx1465, align 2
  %idxprom1466 = zext i16 %1115 to i64
  %arrayidx1467 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1462, i64 0, i64 %idxprom1466
  %1116 = load i32, i32* %arrayidx1467, align 4
  %inc1468 = add nsw i32 %1116, 1
  store i32 %inc1468, i32* %arrayidx1467, align 4
  %1117 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1469 = getelementptr inbounds %struct.EState, %struct.EState* %1117, i32 0, i32 37
  %1118 = load i32, i32* %bt, align 4
  %idxprom1470 = sext i32 %1118 to i64
  %arrayidx1471 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1469, i64 0, i64 %idxprom1470
  %1119 = load i16*, i16** %mtfv, align 8
  %1120 = load i32, i32* %gs, align 4
  %add1472 = add nsw i32 %1120, 30
  %idxprom1473 = sext i32 %add1472 to i64
  %arrayidx1474 = getelementptr inbounds i16, i16* %1119, i64 %idxprom1473
  %1121 = load i16, i16* %arrayidx1474, align 2
  %idxprom1475 = zext i16 %1121 to i64
  %arrayidx1476 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1471, i64 0, i64 %idxprom1475
  %1122 = load i32, i32* %arrayidx1476, align 4
  %inc1477 = add nsw i32 %1122, 1
  store i32 %inc1477, i32* %arrayidx1476, align 4
  %1123 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1478 = getelementptr inbounds %struct.EState, %struct.EState* %1123, i32 0, i32 37
  %1124 = load i32, i32* %bt, align 4
  %idxprom1479 = sext i32 %1124 to i64
  %arrayidx1480 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1478, i64 0, i64 %idxprom1479
  %1125 = load i16*, i16** %mtfv, align 8
  %1126 = load i32, i32* %gs, align 4
  %add1481 = add nsw i32 %1126, 31
  %idxprom1482 = sext i32 %add1481 to i64
  %arrayidx1483 = getelementptr inbounds i16, i16* %1125, i64 %idxprom1482
  %1127 = load i16, i16* %arrayidx1483, align 2
  %idxprom1484 = zext i16 %1127 to i64
  %arrayidx1485 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1480, i64 0, i64 %idxprom1484
  %1128 = load i32, i32* %arrayidx1485, align 4
  %inc1486 = add nsw i32 %1128, 1
  store i32 %inc1486, i32* %arrayidx1485, align 4
  %1129 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1487 = getelementptr inbounds %struct.EState, %struct.EState* %1129, i32 0, i32 37
  %1130 = load i32, i32* %bt, align 4
  %idxprom1488 = sext i32 %1130 to i64
  %arrayidx1489 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1487, i64 0, i64 %idxprom1488
  %1131 = load i16*, i16** %mtfv, align 8
  %1132 = load i32, i32* %gs, align 4
  %add1490 = add nsw i32 %1132, 32
  %idxprom1491 = sext i32 %add1490 to i64
  %arrayidx1492 = getelementptr inbounds i16, i16* %1131, i64 %idxprom1491
  %1133 = load i16, i16* %arrayidx1492, align 2
  %idxprom1493 = zext i16 %1133 to i64
  %arrayidx1494 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1489, i64 0, i64 %idxprom1493
  %1134 = load i32, i32* %arrayidx1494, align 4
  %inc1495 = add nsw i32 %1134, 1
  store i32 %inc1495, i32* %arrayidx1494, align 4
  %1135 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1496 = getelementptr inbounds %struct.EState, %struct.EState* %1135, i32 0, i32 37
  %1136 = load i32, i32* %bt, align 4
  %idxprom1497 = sext i32 %1136 to i64
  %arrayidx1498 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1496, i64 0, i64 %idxprom1497
  %1137 = load i16*, i16** %mtfv, align 8
  %1138 = load i32, i32* %gs, align 4
  %add1499 = add nsw i32 %1138, 33
  %idxprom1500 = sext i32 %add1499 to i64
  %arrayidx1501 = getelementptr inbounds i16, i16* %1137, i64 %idxprom1500
  %1139 = load i16, i16* %arrayidx1501, align 2
  %idxprom1502 = zext i16 %1139 to i64
  %arrayidx1503 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1498, i64 0, i64 %idxprom1502
  %1140 = load i32, i32* %arrayidx1503, align 4
  %inc1504 = add nsw i32 %1140, 1
  store i32 %inc1504, i32* %arrayidx1503, align 4
  %1141 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1505 = getelementptr inbounds %struct.EState, %struct.EState* %1141, i32 0, i32 37
  %1142 = load i32, i32* %bt, align 4
  %idxprom1506 = sext i32 %1142 to i64
  %arrayidx1507 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1505, i64 0, i64 %idxprom1506
  %1143 = load i16*, i16** %mtfv, align 8
  %1144 = load i32, i32* %gs, align 4
  %add1508 = add nsw i32 %1144, 34
  %idxprom1509 = sext i32 %add1508 to i64
  %arrayidx1510 = getelementptr inbounds i16, i16* %1143, i64 %idxprom1509
  %1145 = load i16, i16* %arrayidx1510, align 2
  %idxprom1511 = zext i16 %1145 to i64
  %arrayidx1512 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1507, i64 0, i64 %idxprom1511
  %1146 = load i32, i32* %arrayidx1512, align 4
  %inc1513 = add nsw i32 %1146, 1
  store i32 %inc1513, i32* %arrayidx1512, align 4
  %1147 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1514 = getelementptr inbounds %struct.EState, %struct.EState* %1147, i32 0, i32 37
  %1148 = load i32, i32* %bt, align 4
  %idxprom1515 = sext i32 %1148 to i64
  %arrayidx1516 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1514, i64 0, i64 %idxprom1515
  %1149 = load i16*, i16** %mtfv, align 8
  %1150 = load i32, i32* %gs, align 4
  %add1517 = add nsw i32 %1150, 35
  %idxprom1518 = sext i32 %add1517 to i64
  %arrayidx1519 = getelementptr inbounds i16, i16* %1149, i64 %idxprom1518
  %1151 = load i16, i16* %arrayidx1519, align 2
  %idxprom1520 = zext i16 %1151 to i64
  %arrayidx1521 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1516, i64 0, i64 %idxprom1520
  %1152 = load i32, i32* %arrayidx1521, align 4
  %inc1522 = add nsw i32 %1152, 1
  store i32 %inc1522, i32* %arrayidx1521, align 4
  %1153 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1523 = getelementptr inbounds %struct.EState, %struct.EState* %1153, i32 0, i32 37
  %1154 = load i32, i32* %bt, align 4
  %idxprom1524 = sext i32 %1154 to i64
  %arrayidx1525 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1523, i64 0, i64 %idxprom1524
  %1155 = load i16*, i16** %mtfv, align 8
  %1156 = load i32, i32* %gs, align 4
  %add1526 = add nsw i32 %1156, 36
  %idxprom1527 = sext i32 %add1526 to i64
  %arrayidx1528 = getelementptr inbounds i16, i16* %1155, i64 %idxprom1527
  %1157 = load i16, i16* %arrayidx1528, align 2
  %idxprom1529 = zext i16 %1157 to i64
  %arrayidx1530 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1525, i64 0, i64 %idxprom1529
  %1158 = load i32, i32* %arrayidx1530, align 4
  %inc1531 = add nsw i32 %1158, 1
  store i32 %inc1531, i32* %arrayidx1530, align 4
  %1159 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1532 = getelementptr inbounds %struct.EState, %struct.EState* %1159, i32 0, i32 37
  %1160 = load i32, i32* %bt, align 4
  %idxprom1533 = sext i32 %1160 to i64
  %arrayidx1534 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1532, i64 0, i64 %idxprom1533
  %1161 = load i16*, i16** %mtfv, align 8
  %1162 = load i32, i32* %gs, align 4
  %add1535 = add nsw i32 %1162, 37
  %idxprom1536 = sext i32 %add1535 to i64
  %arrayidx1537 = getelementptr inbounds i16, i16* %1161, i64 %idxprom1536
  %1163 = load i16, i16* %arrayidx1537, align 2
  %idxprom1538 = zext i16 %1163 to i64
  %arrayidx1539 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1534, i64 0, i64 %idxprom1538
  %1164 = load i32, i32* %arrayidx1539, align 4
  %inc1540 = add nsw i32 %1164, 1
  store i32 %inc1540, i32* %arrayidx1539, align 4
  %1165 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1541 = getelementptr inbounds %struct.EState, %struct.EState* %1165, i32 0, i32 37
  %1166 = load i32, i32* %bt, align 4
  %idxprom1542 = sext i32 %1166 to i64
  %arrayidx1543 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1541, i64 0, i64 %idxprom1542
  %1167 = load i16*, i16** %mtfv, align 8
  %1168 = load i32, i32* %gs, align 4
  %add1544 = add nsw i32 %1168, 38
  %idxprom1545 = sext i32 %add1544 to i64
  %arrayidx1546 = getelementptr inbounds i16, i16* %1167, i64 %idxprom1545
  %1169 = load i16, i16* %arrayidx1546, align 2
  %idxprom1547 = zext i16 %1169 to i64
  %arrayidx1548 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1543, i64 0, i64 %idxprom1547
  %1170 = load i32, i32* %arrayidx1548, align 4
  %inc1549 = add nsw i32 %1170, 1
  store i32 %inc1549, i32* %arrayidx1548, align 4
  %1171 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1550 = getelementptr inbounds %struct.EState, %struct.EState* %1171, i32 0, i32 37
  %1172 = load i32, i32* %bt, align 4
  %idxprom1551 = sext i32 %1172 to i64
  %arrayidx1552 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1550, i64 0, i64 %idxprom1551
  %1173 = load i16*, i16** %mtfv, align 8
  %1174 = load i32, i32* %gs, align 4
  %add1553 = add nsw i32 %1174, 39
  %idxprom1554 = sext i32 %add1553 to i64
  %arrayidx1555 = getelementptr inbounds i16, i16* %1173, i64 %idxprom1554
  %1175 = load i16, i16* %arrayidx1555, align 2
  %idxprom1556 = zext i16 %1175 to i64
  %arrayidx1557 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1552, i64 0, i64 %idxprom1556
  %1176 = load i32, i32* %arrayidx1557, align 4
  %inc1558 = add nsw i32 %1176, 1
  store i32 %inc1558, i32* %arrayidx1557, align 4
  %1177 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1559 = getelementptr inbounds %struct.EState, %struct.EState* %1177, i32 0, i32 37
  %1178 = load i32, i32* %bt, align 4
  %idxprom1560 = sext i32 %1178 to i64
  %arrayidx1561 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1559, i64 0, i64 %idxprom1560
  %1179 = load i16*, i16** %mtfv, align 8
  %1180 = load i32, i32* %gs, align 4
  %add1562 = add nsw i32 %1180, 40
  %idxprom1563 = sext i32 %add1562 to i64
  %arrayidx1564 = getelementptr inbounds i16, i16* %1179, i64 %idxprom1563
  %1181 = load i16, i16* %arrayidx1564, align 2
  %idxprom1565 = zext i16 %1181 to i64
  %arrayidx1566 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1561, i64 0, i64 %idxprom1565
  %1182 = load i32, i32* %arrayidx1566, align 4
  %inc1567 = add nsw i32 %1182, 1
  store i32 %inc1567, i32* %arrayidx1566, align 4
  %1183 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1568 = getelementptr inbounds %struct.EState, %struct.EState* %1183, i32 0, i32 37
  %1184 = load i32, i32* %bt, align 4
  %idxprom1569 = sext i32 %1184 to i64
  %arrayidx1570 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1568, i64 0, i64 %idxprom1569
  %1185 = load i16*, i16** %mtfv, align 8
  %1186 = load i32, i32* %gs, align 4
  %add1571 = add nsw i32 %1186, 41
  %idxprom1572 = sext i32 %add1571 to i64
  %arrayidx1573 = getelementptr inbounds i16, i16* %1185, i64 %idxprom1572
  %1187 = load i16, i16* %arrayidx1573, align 2
  %idxprom1574 = zext i16 %1187 to i64
  %arrayidx1575 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1570, i64 0, i64 %idxprom1574
  %1188 = load i32, i32* %arrayidx1575, align 4
  %inc1576 = add nsw i32 %1188, 1
  store i32 %inc1576, i32* %arrayidx1575, align 4
  %1189 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1577 = getelementptr inbounds %struct.EState, %struct.EState* %1189, i32 0, i32 37
  %1190 = load i32, i32* %bt, align 4
  %idxprom1578 = sext i32 %1190 to i64
  %arrayidx1579 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1577, i64 0, i64 %idxprom1578
  %1191 = load i16*, i16** %mtfv, align 8
  %1192 = load i32, i32* %gs, align 4
  %add1580 = add nsw i32 %1192, 42
  %idxprom1581 = sext i32 %add1580 to i64
  %arrayidx1582 = getelementptr inbounds i16, i16* %1191, i64 %idxprom1581
  %1193 = load i16, i16* %arrayidx1582, align 2
  %idxprom1583 = zext i16 %1193 to i64
  %arrayidx1584 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1579, i64 0, i64 %idxprom1583
  %1194 = load i32, i32* %arrayidx1584, align 4
  %inc1585 = add nsw i32 %1194, 1
  store i32 %inc1585, i32* %arrayidx1584, align 4
  %1195 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1586 = getelementptr inbounds %struct.EState, %struct.EState* %1195, i32 0, i32 37
  %1196 = load i32, i32* %bt, align 4
  %idxprom1587 = sext i32 %1196 to i64
  %arrayidx1588 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1586, i64 0, i64 %idxprom1587
  %1197 = load i16*, i16** %mtfv, align 8
  %1198 = load i32, i32* %gs, align 4
  %add1589 = add nsw i32 %1198, 43
  %idxprom1590 = sext i32 %add1589 to i64
  %arrayidx1591 = getelementptr inbounds i16, i16* %1197, i64 %idxprom1590
  %1199 = load i16, i16* %arrayidx1591, align 2
  %idxprom1592 = zext i16 %1199 to i64
  %arrayidx1593 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1588, i64 0, i64 %idxprom1592
  %1200 = load i32, i32* %arrayidx1593, align 4
  %inc1594 = add nsw i32 %1200, 1
  store i32 %inc1594, i32* %arrayidx1593, align 4
  %1201 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1595 = getelementptr inbounds %struct.EState, %struct.EState* %1201, i32 0, i32 37
  %1202 = load i32, i32* %bt, align 4
  %idxprom1596 = sext i32 %1202 to i64
  %arrayidx1597 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1595, i64 0, i64 %idxprom1596
  %1203 = load i16*, i16** %mtfv, align 8
  %1204 = load i32, i32* %gs, align 4
  %add1598 = add nsw i32 %1204, 44
  %idxprom1599 = sext i32 %add1598 to i64
  %arrayidx1600 = getelementptr inbounds i16, i16* %1203, i64 %idxprom1599
  %1205 = load i16, i16* %arrayidx1600, align 2
  %idxprom1601 = zext i16 %1205 to i64
  %arrayidx1602 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1597, i64 0, i64 %idxprom1601
  %1206 = load i32, i32* %arrayidx1602, align 4
  %inc1603 = add nsw i32 %1206, 1
  store i32 %inc1603, i32* %arrayidx1602, align 4
  %1207 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1604 = getelementptr inbounds %struct.EState, %struct.EState* %1207, i32 0, i32 37
  %1208 = load i32, i32* %bt, align 4
  %idxprom1605 = sext i32 %1208 to i64
  %arrayidx1606 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1604, i64 0, i64 %idxprom1605
  %1209 = load i16*, i16** %mtfv, align 8
  %1210 = load i32, i32* %gs, align 4
  %add1607 = add nsw i32 %1210, 45
  %idxprom1608 = sext i32 %add1607 to i64
  %arrayidx1609 = getelementptr inbounds i16, i16* %1209, i64 %idxprom1608
  %1211 = load i16, i16* %arrayidx1609, align 2
  %idxprom1610 = zext i16 %1211 to i64
  %arrayidx1611 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1606, i64 0, i64 %idxprom1610
  %1212 = load i32, i32* %arrayidx1611, align 4
  %inc1612 = add nsw i32 %1212, 1
  store i32 %inc1612, i32* %arrayidx1611, align 4
  %1213 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1613 = getelementptr inbounds %struct.EState, %struct.EState* %1213, i32 0, i32 37
  %1214 = load i32, i32* %bt, align 4
  %idxprom1614 = sext i32 %1214 to i64
  %arrayidx1615 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1613, i64 0, i64 %idxprom1614
  %1215 = load i16*, i16** %mtfv, align 8
  %1216 = load i32, i32* %gs, align 4
  %add1616 = add nsw i32 %1216, 46
  %idxprom1617 = sext i32 %add1616 to i64
  %arrayidx1618 = getelementptr inbounds i16, i16* %1215, i64 %idxprom1617
  %1217 = load i16, i16* %arrayidx1618, align 2
  %idxprom1619 = zext i16 %1217 to i64
  %arrayidx1620 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1615, i64 0, i64 %idxprom1619
  %1218 = load i32, i32* %arrayidx1620, align 4
  %inc1621 = add nsw i32 %1218, 1
  store i32 %inc1621, i32* %arrayidx1620, align 4
  %1219 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1622 = getelementptr inbounds %struct.EState, %struct.EState* %1219, i32 0, i32 37
  %1220 = load i32, i32* %bt, align 4
  %idxprom1623 = sext i32 %1220 to i64
  %arrayidx1624 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1622, i64 0, i64 %idxprom1623
  %1221 = load i16*, i16** %mtfv, align 8
  %1222 = load i32, i32* %gs, align 4
  %add1625 = add nsw i32 %1222, 47
  %idxprom1626 = sext i32 %add1625 to i64
  %arrayidx1627 = getelementptr inbounds i16, i16* %1221, i64 %idxprom1626
  %1223 = load i16, i16* %arrayidx1627, align 2
  %idxprom1628 = zext i16 %1223 to i64
  %arrayidx1629 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1624, i64 0, i64 %idxprom1628
  %1224 = load i32, i32* %arrayidx1629, align 4
  %inc1630 = add nsw i32 %1224, 1
  store i32 %inc1630, i32* %arrayidx1629, align 4
  %1225 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1631 = getelementptr inbounds %struct.EState, %struct.EState* %1225, i32 0, i32 37
  %1226 = load i32, i32* %bt, align 4
  %idxprom1632 = sext i32 %1226 to i64
  %arrayidx1633 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1631, i64 0, i64 %idxprom1632
  %1227 = load i16*, i16** %mtfv, align 8
  %1228 = load i32, i32* %gs, align 4
  %add1634 = add nsw i32 %1228, 48
  %idxprom1635 = sext i32 %add1634 to i64
  %arrayidx1636 = getelementptr inbounds i16, i16* %1227, i64 %idxprom1635
  %1229 = load i16, i16* %arrayidx1636, align 2
  %idxprom1637 = zext i16 %1229 to i64
  %arrayidx1638 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1633, i64 0, i64 %idxprom1637
  %1230 = load i32, i32* %arrayidx1638, align 4
  %inc1639 = add nsw i32 %1230, 1
  store i32 %inc1639, i32* %arrayidx1638, align 4
  %1231 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1640 = getelementptr inbounds %struct.EState, %struct.EState* %1231, i32 0, i32 37
  %1232 = load i32, i32* %bt, align 4
  %idxprom1641 = sext i32 %1232 to i64
  %arrayidx1642 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1640, i64 0, i64 %idxprom1641
  %1233 = load i16*, i16** %mtfv, align 8
  %1234 = load i32, i32* %gs, align 4
  %add1643 = add nsw i32 %1234, 49
  %idxprom1644 = sext i32 %add1643 to i64
  %arrayidx1645 = getelementptr inbounds i16, i16* %1233, i64 %idxprom1644
  %1235 = load i16, i16* %arrayidx1645, align 2
  %idxprom1646 = zext i16 %1235 to i64
  %arrayidx1647 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1642, i64 0, i64 %idxprom1646
  %1236 = load i32, i32* %arrayidx1647, align 4
  %inc1648 = add nsw i32 %1236, 1
  store i32 %inc1648, i32* %arrayidx1647, align 4
  br label %if.end1665

if.else1649:                                      ; preds = %land.lhs.true1193, %for.end1182
  %1237 = load i32, i32* %gs, align 4
  store i32 %1237, i32* %i, align 4
  br label %for.cond1650

for.cond1650:                                     ; preds = %for.inc1662, %if.else1649
  %1238 = load i32, i32* %i, align 4
  %1239 = load i32, i32* %ge, align 4
  %cmp1651 = icmp sle i32 %1238, %1239
  br i1 %cmp1651, label %for.body1653, label %for.end1664

for.body1653:                                     ; preds = %for.cond1650
  %1240 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1654 = getelementptr inbounds %struct.EState, %struct.EState* %1240, i32 0, i32 37
  %1241 = load i32, i32* %bt, align 4
  %idxprom1655 = sext i32 %1241 to i64
  %arrayidx1656 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1654, i64 0, i64 %idxprom1655
  %1242 = load i16*, i16** %mtfv, align 8
  %1243 = load i32, i32* %i, align 4
  %idxprom1657 = sext i32 %1243 to i64
  %arrayidx1658 = getelementptr inbounds i16, i16* %1242, i64 %idxprom1657
  %1244 = load i16, i16* %arrayidx1658, align 2
  %idxprom1659 = zext i16 %1244 to i64
  %arrayidx1660 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1656, i64 0, i64 %idxprom1659
  %1245 = load i32, i32* %arrayidx1660, align 4
  %inc1661 = add nsw i32 %1245, 1
  store i32 %inc1661, i32* %arrayidx1660, align 4
  br label %for.inc1662

for.inc1662:                                      ; preds = %for.body1653
  %1246 = load i32, i32* %i, align 4
  %inc1663 = add nsw i32 %1246, 1
  store i32 %inc1663, i32* %i, align 4
  br label %for.cond1650

for.end1664:                                      ; preds = %for.cond1650
  br label %if.end1665

if.end1665:                                       ; preds = %for.end1664, %if.then1198
  %1247 = load i32, i32* %ge, align 4
  %add1666 = add nsw i32 %1247, 1
  store i32 %add1666, i32* %gs, align 4
  br label %while.body188

while.end1667:                                    ; preds = %if.then192
  %1248 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity1668 = getelementptr inbounds %struct.EState, %struct.EState* %1248, i32 0, i32 28
  %1249 = load i32, i32* %verbosity1668, align 8
  %cmp1669 = icmp sge i32 %1249, 3
  br i1 %cmp1669, label %if.then1671, label %if.end1686

if.then1671:                                      ; preds = %while.end1667
  %1250 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1251 = load i32, i32* %iter, align 4
  %add1672 = add nsw i32 %1251, 1
  %1252 = load i32, i32* %totc, align 4
  %div1673 = sdiv i32 %1252, 8
  %call1674 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1250, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.147, i64 0, i64 0), i32 %add1672, i32 %div1673)
  store i32 0, i32* %t, align 4
  br label %for.cond1675

for.cond1675:                                     ; preds = %for.inc1682, %if.then1671
  %1253 = load i32, i32* %t, align 4
  %1254 = load i32, i32* %nGroups, align 4
  %cmp1676 = icmp slt i32 %1253, %1254
  br i1 %cmp1676, label %for.body1678, label %for.end1684

for.body1678:                                     ; preds = %for.cond1675
  %1255 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1256 = load i32, i32* %t, align 4
  %idxprom1679 = sext i32 %1256 to i64
  %arrayidx1680 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom1679
  %1257 = load i32, i32* %arrayidx1680, align 4
  %call1681 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1255, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.148, i64 0, i64 0), i32 %1257)
  br label %for.inc1682

for.inc1682:                                      ; preds = %for.body1678
  %1258 = load i32, i32* %t, align 4
  %inc1683 = add nsw i32 %1258, 1
  store i32 %inc1683, i32* %t, align 4
  br label %for.cond1675

for.end1684:                                      ; preds = %for.cond1675
  %1259 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call1685 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.149, i64 0, i64 0))
  br label %if.end1686

if.end1686:                                       ; preds = %for.end1684, %while.end1667
  store i32 0, i32* %t, align 4
  br label %for.cond1687

for.cond1687:                                     ; preds = %for.inc1699, %if.end1686
  %1260 = load i32, i32* %t, align 4
  %1261 = load i32, i32* %nGroups, align 4
  %cmp1688 = icmp slt i32 %1260, %1261
  br i1 %cmp1688, label %for.body1690, label %for.end1701

for.body1690:                                     ; preds = %for.cond1687
  %1262 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1691 = getelementptr inbounds %struct.EState, %struct.EState* %1262, i32 0, i32 35
  %1263 = load i32, i32* %t, align 4
  %idxprom1692 = sext i32 %1263 to i64
  %arrayidx1693 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1691, i64 0, i64 %idxprom1692
  %arrayidx1694 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1693, i64 0, i64 0
  %1264 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %rfreq1695 = getelementptr inbounds %struct.EState, %struct.EState* %1264, i32 0, i32 37
  %1265 = load i32, i32* %t, align 4
  %idxprom1696 = sext i32 %1265 to i64
  %arrayidx1697 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1695, i64 0, i64 %idxprom1696
  %arrayidx1698 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1697, i64 0, i64 0
  %1266 = load i32, i32* %alphaSize, align 4
  call void @BZ2_hbMakeCodeLengths(i8* %arrayidx1694, i32* %arrayidx1698, i32 %1266, i32 17)
  br label %for.inc1699

for.inc1699:                                      ; preds = %for.body1690
  %1267 = load i32, i32* %t, align 4
  %inc1700 = add nsw i32 %1267, 1
  store i32 %inc1700, i32* %t, align 4
  br label %for.cond1687

for.end1701:                                      ; preds = %for.cond1687
  br label %for.inc1702

for.inc1702:                                      ; preds = %for.end1701
  %1268 = load i32, i32* %iter, align 4
  %inc1703 = add nsw i32 %1268, 1
  store i32 %inc1703, i32* %iter, align 4
  br label %for.cond100

for.end1704:                                      ; preds = %for.cond100
  %1269 = load i32, i32* %nGroups, align 4
  %cmp1705 = icmp slt i32 %1269, 8
  br i1 %cmp1705, label %if.end1708, label %if.then1707

if.then1707:                                      ; preds = %for.end1704
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %if.end1708

if.end1708:                                       ; preds = %if.then1707, %for.end1704
  %1270 = load i32, i32* %nSelectors, align 4
  %cmp1709 = icmp slt i32 %1270, 32768
  br i1 %cmp1709, label %land.lhs.true1711, label %if.then1714

land.lhs.true1711:                                ; preds = %if.end1708
  %1271 = load i32, i32* %nSelectors, align 4
  %cmp1712 = icmp sle i32 %1271, 18002
  br i1 %cmp1712, label %if.end1715, label %if.then1714

if.then1714:                                      ; preds = %land.lhs.true1711, %if.end1708
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %if.end1715

if.end1715:                                       ; preds = %if.then1714, %land.lhs.true1711
  store i32 0, i32* %i, align 4
  br label %for.cond1716

for.cond1716:                                     ; preds = %for.inc1723, %if.end1715
  %1272 = load i32, i32* %i, align 4
  %1273 = load i32, i32* %nGroups, align 4
  %cmp1717 = icmp slt i32 %1272, %1273
  br i1 %cmp1717, label %for.body1719, label %for.end1725

for.body1719:                                     ; preds = %for.cond1716
  %1274 = load i32, i32* %i, align 4
  %conv1720 = trunc i32 %1274 to i8
  %1275 = load i32, i32* %i, align 4
  %idxprom1721 = sext i32 %1275 to i64
  %arrayidx1722 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1721
  store i8 %conv1720, i8* %arrayidx1722, align 1
  br label %for.inc1723

for.inc1723:                                      ; preds = %for.body1719
  %1276 = load i32, i32* %i, align 4
  %inc1724 = add nsw i32 %1276, 1
  store i32 %inc1724, i32* %i, align 4
  br label %for.cond1716

for.end1725:                                      ; preds = %for.cond1716
  store i32 0, i32* %i, align 4
  br label %for.cond1726

for.cond1726:                                     ; preds = %for.inc1751, %for.end1725
  %1277 = load i32, i32* %i, align 4
  %1278 = load i32, i32* %nSelectors, align 4
  %cmp1727 = icmp slt i32 %1277, %1278
  br i1 %cmp1727, label %for.body1729, label %for.end1753

for.body1729:                                     ; preds = %for.cond1726
  %1279 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector1730 = getelementptr inbounds %struct.EState, %struct.EState* %1279, i32 0, i32 33
  %1280 = load i32, i32* %i, align 4
  %idxprom1731 = sext i32 %1280 to i64
  %arrayidx1732 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1730, i64 0, i64 %idxprom1731
  %1281 = load i8, i8* %arrayidx1732, align 1
  store i8 %1281, i8* %ll_i, align 1
  store i32 0, i32* %j, align 4
  %1282 = load i32, i32* %j, align 4
  %idxprom1733 = sext i32 %1282 to i64
  %arrayidx1734 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1733
  %1283 = load i8, i8* %arrayidx1734, align 1
  store i8 %1283, i8* %tmp, align 1
  br label %while.cond1735

while.cond1735:                                   ; preds = %while.body1740, %for.body1729
  %1284 = load i8, i8* %ll_i, align 1
  %conv1736 = zext i8 %1284 to i32
  %1285 = load i8, i8* %tmp, align 1
  %conv1737 = zext i8 %1285 to i32
  %cmp1738 = icmp ne i32 %conv1736, %conv1737
  br i1 %cmp1738, label %while.body1740, label %while.end1746

while.body1740:                                   ; preds = %while.cond1735
  %1286 = load i32, i32* %j, align 4
  %inc1741 = add nsw i32 %1286, 1
  store i32 %inc1741, i32* %j, align 4
  %1287 = load i8, i8* %tmp, align 1
  store i8 %1287, i8* %tmp2, align 1
  %1288 = load i32, i32* %j, align 4
  %idxprom1742 = sext i32 %1288 to i64
  %arrayidx1743 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1742
  %1289 = load i8, i8* %arrayidx1743, align 1
  store i8 %1289, i8* %tmp, align 1
  %1290 = load i8, i8* %tmp2, align 1
  %1291 = load i32, i32* %j, align 4
  %idxprom1744 = sext i32 %1291 to i64
  %arrayidx1745 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1744
  store i8 %1290, i8* %arrayidx1745, align 1
  br label %while.cond1735

while.end1746:                                    ; preds = %while.cond1735
  %1292 = load i8, i8* %tmp, align 1
  %arrayidx1747 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  store i8 %1292, i8* %arrayidx1747, align 1
  %1293 = load i32, i32* %j, align 4
  %conv1748 = trunc i32 %1293 to i8
  %1294 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selectorMtf = getelementptr inbounds %struct.EState, %struct.EState* %1294, i32 0, i32 34
  %1295 = load i32, i32* %i, align 4
  %idxprom1749 = sext i32 %1295 to i64
  %arrayidx1750 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf, i64 0, i64 %idxprom1749
  store i8 %conv1748, i8* %arrayidx1750, align 1
  br label %for.inc1751

for.inc1751:                                      ; preds = %while.end1746
  %1296 = load i32, i32* %i, align 4
  %inc1752 = add nsw i32 %1296, 1
  store i32 %inc1752, i32* %i, align 4
  br label %for.cond1726

for.end1753:                                      ; preds = %for.cond1726
  store i32 0, i32* %t, align 4
  br label %for.cond1754

for.cond1754:                                     ; preds = %for.inc1812, %for.end1753
  %1297 = load i32, i32* %t, align 4
  %1298 = load i32, i32* %nGroups, align 4
  %cmp1755 = icmp slt i32 %1297, %1298
  br i1 %cmp1755, label %for.body1757, label %for.end1814

for.body1757:                                     ; preds = %for.cond1754
  store i32 32, i32* %minLen, align 4
  store i32 0, i32* %maxLen, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1758

for.cond1758:                                     ; preds = %for.inc1794, %for.body1757
  %1299 = load i32, i32* %i, align 4
  %1300 = load i32, i32* %alphaSize, align 4
  %cmp1759 = icmp slt i32 %1299, %1300
  br i1 %cmp1759, label %for.body1761, label %for.end1796

for.body1761:                                     ; preds = %for.cond1758
  %1301 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1762 = getelementptr inbounds %struct.EState, %struct.EState* %1301, i32 0, i32 35
  %1302 = load i32, i32* %t, align 4
  %idxprom1763 = sext i32 %1302 to i64
  %arrayidx1764 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1762, i64 0, i64 %idxprom1763
  %1303 = load i32, i32* %i, align 4
  %idxprom1765 = sext i32 %1303 to i64
  %arrayidx1766 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1764, i64 0, i64 %idxprom1765
  %1304 = load i8, i8* %arrayidx1766, align 1
  %conv1767 = zext i8 %1304 to i32
  %1305 = load i32, i32* %maxLen, align 4
  %cmp1768 = icmp sgt i32 %conv1767, %1305
  br i1 %cmp1768, label %if.then1770, label %if.end1777

if.then1770:                                      ; preds = %for.body1761
  %1306 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1771 = getelementptr inbounds %struct.EState, %struct.EState* %1306, i32 0, i32 35
  %1307 = load i32, i32* %t, align 4
  %idxprom1772 = sext i32 %1307 to i64
  %arrayidx1773 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1771, i64 0, i64 %idxprom1772
  %1308 = load i32, i32* %i, align 4
  %idxprom1774 = sext i32 %1308 to i64
  %arrayidx1775 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1773, i64 0, i64 %idxprom1774
  %1309 = load i8, i8* %arrayidx1775, align 1
  %conv1776 = zext i8 %1309 to i32
  store i32 %conv1776, i32* %maxLen, align 4
  br label %if.end1777

if.end1777:                                       ; preds = %if.then1770, %for.body1761
  %1310 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1778 = getelementptr inbounds %struct.EState, %struct.EState* %1310, i32 0, i32 35
  %1311 = load i32, i32* %t, align 4
  %idxprom1779 = sext i32 %1311 to i64
  %arrayidx1780 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1778, i64 0, i64 %idxprom1779
  %1312 = load i32, i32* %i, align 4
  %idxprom1781 = sext i32 %1312 to i64
  %arrayidx1782 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1780, i64 0, i64 %idxprom1781
  %1313 = load i8, i8* %arrayidx1782, align 1
  %conv1783 = zext i8 %1313 to i32
  %1314 = load i32, i32* %minLen, align 4
  %cmp1784 = icmp slt i32 %conv1783, %1314
  br i1 %cmp1784, label %if.then1786, label %if.end1793

if.then1786:                                      ; preds = %if.end1777
  %1315 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1787 = getelementptr inbounds %struct.EState, %struct.EState* %1315, i32 0, i32 35
  %1316 = load i32, i32* %t, align 4
  %idxprom1788 = sext i32 %1316 to i64
  %arrayidx1789 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1787, i64 0, i64 %idxprom1788
  %1317 = load i32, i32* %i, align 4
  %idxprom1790 = sext i32 %1317 to i64
  %arrayidx1791 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1789, i64 0, i64 %idxprom1790
  %1318 = load i8, i8* %arrayidx1791, align 1
  %conv1792 = zext i8 %1318 to i32
  store i32 %conv1792, i32* %minLen, align 4
  br label %if.end1793

if.end1793:                                       ; preds = %if.then1786, %if.end1777
  br label %for.inc1794

for.inc1794:                                      ; preds = %if.end1793
  %1319 = load i32, i32* %i, align 4
  %inc1795 = add nsw i32 %1319, 1
  store i32 %inc1795, i32* %i, align 4
  br label %for.cond1758

for.end1796:                                      ; preds = %for.cond1758
  %1320 = load i32, i32* %maxLen, align 4
  %cmp1797 = icmp sgt i32 %1320, 17
  br i1 %cmp1797, label %if.then1799, label %if.end1800

if.then1799:                                      ; preds = %for.end1796
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %if.end1800

if.end1800:                                       ; preds = %if.then1799, %for.end1796
  %1321 = load i32, i32* %minLen, align 4
  %cmp1801 = icmp slt i32 %1321, 1
  br i1 %cmp1801, label %if.then1803, label %if.end1804

if.then1803:                                      ; preds = %if.end1800
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %if.end1804

if.end1804:                                       ; preds = %if.then1803, %if.end1800
  %1322 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %code = getelementptr inbounds %struct.EState, %struct.EState* %1322, i32 0, i32 36
  %1323 = load i32, i32* %t, align 4
  %idxprom1805 = sext i32 %1323 to i64
  %arrayidx1806 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code, i64 0, i64 %idxprom1805
  %arrayidx1807 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1806, i64 0, i64 0
  %1324 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1808 = getelementptr inbounds %struct.EState, %struct.EState* %1324, i32 0, i32 35
  %1325 = load i32, i32* %t, align 4
  %idxprom1809 = sext i32 %1325 to i64
  %arrayidx1810 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1808, i64 0, i64 %idxprom1809
  %arrayidx1811 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1810, i64 0, i64 0
  %1326 = load i32, i32* %minLen, align 4
  %1327 = load i32, i32* %maxLen, align 4
  %1328 = load i32, i32* %alphaSize, align 4
  call void @BZ2_hbAssignCodes(i32* %arrayidx1807, i8* %arrayidx1811, i32 %1326, i32 %1327, i32 %1328)
  br label %for.inc1812

for.inc1812:                                      ; preds = %if.end1804
  %1329 = load i32, i32* %t, align 4
  %inc1813 = add nsw i32 %1329, 1
  store i32 %inc1813, i32* %t, align 4
  br label %for.cond1754

for.end1814:                                      ; preds = %for.cond1754
  store i32 0, i32* %i, align 4
  br label %for.cond1815

for.cond1815:                                     ; preds = %for.inc1836, %for.end1814
  %1330 = load i32, i32* %i, align 4
  %cmp1816 = icmp slt i32 %1330, 16
  br i1 %cmp1816, label %for.body1818, label %for.end1838

for.body1818:                                     ; preds = %for.cond1815
  %1331 = load i32, i32* %i, align 4
  %idxprom1819 = sext i32 %1331 to i64
  %arrayidx1820 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1819
  store i8 0, i8* %arrayidx1820, align 1
  store i32 0, i32* %j, align 4
  br label %for.cond1821

for.cond1821:                                     ; preds = %for.inc1833, %for.body1818
  %1332 = load i32, i32* %j, align 4
  %cmp1822 = icmp slt i32 %1332, 16
  br i1 %cmp1822, label %for.body1824, label %for.end1835

for.body1824:                                     ; preds = %for.cond1821
  %1333 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %1333, i32 0, i32 22
  %1334 = load i32, i32* %i, align 4
  %mul1825 = mul nsw i32 %1334, 16
  %1335 = load i32, i32* %j, align 4
  %add1826 = add nsw i32 %mul1825, %1335
  %idxprom1827 = sext i32 %add1826 to i64
  %arrayidx1828 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom1827
  %1336 = load i8, i8* %arrayidx1828, align 1
  %tobool = icmp ne i8 %1336, 0
  br i1 %tobool, label %if.then1829, label %if.end1832

if.then1829:                                      ; preds = %for.body1824
  %1337 = load i32, i32* %i, align 4
  %idxprom1830 = sext i32 %1337 to i64
  %arrayidx1831 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1830
  store i8 1, i8* %arrayidx1831, align 1
  br label %if.end1832

if.end1832:                                       ; preds = %if.then1829, %for.body1824
  br label %for.inc1833

for.inc1833:                                      ; preds = %if.end1832
  %1338 = load i32, i32* %j, align 4
  %inc1834 = add nsw i32 %1338, 1
  store i32 %inc1834, i32* %j, align 4
  br label %for.cond1821

for.end1835:                                      ; preds = %for.cond1821
  br label %for.inc1836

for.inc1836:                                      ; preds = %for.end1835
  %1339 = load i32, i32* %i, align 4
  %inc1837 = add nsw i32 %1339, 1
  store i32 %inc1837, i32* %i, align 4
  br label %for.cond1815

for.end1838:                                      ; preds = %for.cond1815
  %1340 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %1340, i32 0, i32 19
  %1341 = load i32, i32* %numZ, align 4
  store i32 %1341, i32* %nBytes, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1839

for.cond1839:                                     ; preds = %for.inc1849, %for.end1838
  %1342 = load i32, i32* %i, align 4
  %cmp1840 = icmp slt i32 %1342, 16
  br i1 %cmp1840, label %for.body1842, label %for.end1851

for.body1842:                                     ; preds = %for.cond1839
  %1343 = load i32, i32* %i, align 4
  %idxprom1843 = sext i32 %1343 to i64
  %arrayidx1844 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1843
  %1344 = load i8, i8* %arrayidx1844, align 1
  %tobool1845 = icmp ne i8 %1344, 0
  br i1 %tobool1845, label %if.then1846, label %if.else1847

if.then1846:                                      ; preds = %for.body1842
  %1345 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1345, i32 1, i32 1)
  br label %if.end1848

if.else1847:                                      ; preds = %for.body1842
  %1346 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1346, i32 1, i32 0)
  br label %if.end1848

if.end1848:                                       ; preds = %if.else1847, %if.then1846
  br label %for.inc1849

for.inc1849:                                      ; preds = %if.end1848
  %1347 = load i32, i32* %i, align 4
  %inc1850 = add nsw i32 %1347, 1
  store i32 %inc1850, i32* %i, align 4
  br label %for.cond1839

for.end1851:                                      ; preds = %for.cond1839
  store i32 0, i32* %i, align 4
  br label %for.cond1852

for.cond1852:                                     ; preds = %for.inc1877, %for.end1851
  %1348 = load i32, i32* %i, align 4
  %cmp1853 = icmp slt i32 %1348, 16
  br i1 %cmp1853, label %for.body1855, label %for.end1879

for.body1855:                                     ; preds = %for.cond1852
  %1349 = load i32, i32* %i, align 4
  %idxprom1856 = sext i32 %1349 to i64
  %arrayidx1857 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1856
  %1350 = load i8, i8* %arrayidx1857, align 1
  %tobool1858 = icmp ne i8 %1350, 0
  br i1 %tobool1858, label %if.then1859, label %if.end1876

if.then1859:                                      ; preds = %for.body1855
  store i32 0, i32* %j, align 4
  br label %for.cond1860

for.cond1860:                                     ; preds = %for.inc1873, %if.then1859
  %1351 = load i32, i32* %j, align 4
  %cmp1861 = icmp slt i32 %1351, 16
  br i1 %cmp1861, label %for.body1863, label %for.end1875

for.body1863:                                     ; preds = %for.cond1860
  %1352 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse1864 = getelementptr inbounds %struct.EState, %struct.EState* %1352, i32 0, i32 22
  %1353 = load i32, i32* %i, align 4
  %mul1865 = mul nsw i32 %1353, 16
  %1354 = load i32, i32* %j, align 4
  %add1866 = add nsw i32 %mul1865, %1354
  %idxprom1867 = sext i32 %add1866 to i64
  %arrayidx1868 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse1864, i64 0, i64 %idxprom1867
  %1355 = load i8, i8* %arrayidx1868, align 1
  %tobool1869 = icmp ne i8 %1355, 0
  br i1 %tobool1869, label %if.then1870, label %if.else1871

if.then1870:                                      ; preds = %for.body1863
  %1356 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1356, i32 1, i32 1)
  br label %if.end1872

if.else1871:                                      ; preds = %for.body1863
  %1357 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1357, i32 1, i32 0)
  br label %if.end1872

if.end1872:                                       ; preds = %if.else1871, %if.then1870
  br label %for.inc1873

for.inc1873:                                      ; preds = %if.end1872
  %1358 = load i32, i32* %j, align 4
  %inc1874 = add nsw i32 %1358, 1
  store i32 %inc1874, i32* %j, align 4
  br label %for.cond1860

for.end1875:                                      ; preds = %for.cond1860
  br label %if.end1876

if.end1876:                                       ; preds = %for.end1875, %for.body1855
  br label %for.inc1877

for.inc1877:                                      ; preds = %if.end1876
  %1359 = load i32, i32* %i, align 4
  %inc1878 = add nsw i32 %1359, 1
  store i32 %inc1878, i32* %i, align 4
  br label %for.cond1852

for.end1879:                                      ; preds = %for.cond1852
  %1360 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity1880 = getelementptr inbounds %struct.EState, %struct.EState* %1360, i32 0, i32 28
  %1361 = load i32, i32* %verbosity1880, align 8
  %cmp1881 = icmp sge i32 %1361, 3
  br i1 %cmp1881, label %if.then1883, label %if.end1887

if.then1883:                                      ; preds = %for.end1879
  %1362 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1363 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1884 = getelementptr inbounds %struct.EState, %struct.EState* %1363, i32 0, i32 19
  %1364 = load i32, i32* %numZ1884, align 4
  %1365 = load i32, i32* %nBytes, align 4
  %sub1885 = sub nsw i32 %1364, %1365
  %call1886 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1362, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7.150, i64 0, i64 0), i32 %sub1885)
  br label %if.end1887

if.end1887:                                       ; preds = %if.then1883, %for.end1879
  %1366 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1888 = getelementptr inbounds %struct.EState, %struct.EState* %1366, i32 0, i32 19
  %1367 = load i32, i32* %numZ1888, align 4
  store i32 %1367, i32* %nBytes, align 4
  %1368 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1369 = load i32, i32* %nGroups, align 4
  call void @bsW(%struct.EState* %1368, i32 3, i32 %1369)
  %1370 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1371 = load i32, i32* %nSelectors, align 4
  call void @bsW(%struct.EState* %1370, i32 15, i32 %1371)
  store i32 0, i32* %i, align 4
  br label %for.cond1889

for.cond1889:                                     ; preds = %for.inc1904, %if.end1887
  %1372 = load i32, i32* %i, align 4
  %1373 = load i32, i32* %nSelectors, align 4
  %cmp1890 = icmp slt i32 %1372, %1373
  br i1 %cmp1890, label %for.body1892, label %for.end1906

for.body1892:                                     ; preds = %for.cond1889
  store i32 0, i32* %j, align 4
  br label %for.cond1893

for.cond1893:                                     ; preds = %for.inc1901, %for.body1892
  %1374 = load i32, i32* %j, align 4
  %1375 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selectorMtf1894 = getelementptr inbounds %struct.EState, %struct.EState* %1375, i32 0, i32 34
  %1376 = load i32, i32* %i, align 4
  %idxprom1895 = sext i32 %1376 to i64
  %arrayidx1896 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf1894, i64 0, i64 %idxprom1895
  %1377 = load i8, i8* %arrayidx1896, align 1
  %conv1897 = zext i8 %1377 to i32
  %cmp1898 = icmp slt i32 %1374, %conv1897
  br i1 %cmp1898, label %for.body1900, label %for.end1903

for.body1900:                                     ; preds = %for.cond1893
  %1378 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1378, i32 1, i32 1)
  br label %for.inc1901

for.inc1901:                                      ; preds = %for.body1900
  %1379 = load i32, i32* %j, align 4
  %inc1902 = add nsw i32 %1379, 1
  store i32 %inc1902, i32* %j, align 4
  br label %for.cond1893

for.end1903:                                      ; preds = %for.cond1893
  %1380 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1380, i32 1, i32 0)
  br label %for.inc1904

for.inc1904:                                      ; preds = %for.end1903
  %1381 = load i32, i32* %i, align 4
  %inc1905 = add nsw i32 %1381, 1
  store i32 %inc1905, i32* %i, align 4
  br label %for.cond1889

for.end1906:                                      ; preds = %for.cond1889
  %1382 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity1907 = getelementptr inbounds %struct.EState, %struct.EState* %1382, i32 0, i32 28
  %1383 = load i32, i32* %verbosity1907, align 8
  %cmp1908 = icmp sge i32 %1383, 3
  br i1 %cmp1908, label %if.then1910, label %if.end1914

if.then1910:                                      ; preds = %for.end1906
  %1384 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1385 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1911 = getelementptr inbounds %struct.EState, %struct.EState* %1385, i32 0, i32 19
  %1386 = load i32, i32* %numZ1911, align 4
  %1387 = load i32, i32* %nBytes, align 4
  %sub1912 = sub nsw i32 %1386, %1387
  %call1913 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1384, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.151, i64 0, i64 0), i32 %sub1912)
  br label %if.end1914

if.end1914:                                       ; preds = %if.then1910, %for.end1906
  %1388 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1915 = getelementptr inbounds %struct.EState, %struct.EState* %1388, i32 0, i32 19
  %1389 = load i32, i32* %numZ1915, align 4
  store i32 %1389, i32* %nBytes, align 4
  store i32 0, i32* %t, align 4
  br label %for.cond1916

for.cond1916:                                     ; preds = %for.inc1956, %if.end1914
  %1390 = load i32, i32* %t, align 4
  %1391 = load i32, i32* %nGroups, align 4
  %cmp1917 = icmp slt i32 %1390, %1391
  br i1 %cmp1917, label %for.body1919, label %for.end1958

for.body1919:                                     ; preds = %for.cond1916
  %1392 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1920 = getelementptr inbounds %struct.EState, %struct.EState* %1392, i32 0, i32 35
  %1393 = load i32, i32* %t, align 4
  %idxprom1921 = sext i32 %1393 to i64
  %arrayidx1922 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1920, i64 0, i64 %idxprom1921
  %arrayidx1923 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1922, i64 0, i64 0
  %1394 = load i8, i8* %arrayidx1923, align 2
  %conv1924 = zext i8 %1394 to i32
  store i32 %conv1924, i32* %curr, align 4
  %1395 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1396 = load i32, i32* %curr, align 4
  call void @bsW(%struct.EState* %1395, i32 5, i32 %1396)
  store i32 0, i32* %i, align 4
  br label %for.cond1925

for.cond1925:                                     ; preds = %for.inc1953, %for.body1919
  %1397 = load i32, i32* %i, align 4
  %1398 = load i32, i32* %alphaSize, align 4
  %cmp1926 = icmp slt i32 %1397, %1398
  br i1 %cmp1926, label %for.body1928, label %for.end1955

for.body1928:                                     ; preds = %for.cond1925
  br label %while.cond1929

while.cond1929:                                   ; preds = %while.body1938, %for.body1928
  %1399 = load i32, i32* %curr, align 4
  %1400 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1930 = getelementptr inbounds %struct.EState, %struct.EState* %1400, i32 0, i32 35
  %1401 = load i32, i32* %t, align 4
  %idxprom1931 = sext i32 %1401 to i64
  %arrayidx1932 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1930, i64 0, i64 %idxprom1931
  %1402 = load i32, i32* %i, align 4
  %idxprom1933 = sext i32 %1402 to i64
  %arrayidx1934 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1932, i64 0, i64 %idxprom1933
  %1403 = load i8, i8* %arrayidx1934, align 1
  %conv1935 = zext i8 %1403 to i32
  %cmp1936 = icmp slt i32 %1399, %conv1935
  br i1 %cmp1936, label %while.body1938, label %while.end1940

while.body1938:                                   ; preds = %while.cond1929
  %1404 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1404, i32 2, i32 2)
  %1405 = load i32, i32* %curr, align 4
  %inc1939 = add nsw i32 %1405, 1
  store i32 %inc1939, i32* %curr, align 4
  br label %while.cond1929

while.end1940:                                    ; preds = %while.cond1929
  br label %while.cond1941

while.cond1941:                                   ; preds = %while.body1950, %while.end1940
  %1406 = load i32, i32* %curr, align 4
  %1407 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len1942 = getelementptr inbounds %struct.EState, %struct.EState* %1407, i32 0, i32 35
  %1408 = load i32, i32* %t, align 4
  %idxprom1943 = sext i32 %1408 to i64
  %arrayidx1944 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1942, i64 0, i64 %idxprom1943
  %1409 = load i32, i32* %i, align 4
  %idxprom1945 = sext i32 %1409 to i64
  %arrayidx1946 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1944, i64 0, i64 %idxprom1945
  %1410 = load i8, i8* %arrayidx1946, align 1
  %conv1947 = zext i8 %1410 to i32
  %cmp1948 = icmp sgt i32 %1406, %conv1947
  br i1 %cmp1948, label %while.body1950, label %while.end1952

while.body1950:                                   ; preds = %while.cond1941
  %1411 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1411, i32 2, i32 3)
  %1412 = load i32, i32* %curr, align 4
  %dec1951 = add nsw i32 %1412, -1
  store i32 %dec1951, i32* %curr, align 4
  br label %while.cond1941

while.end1952:                                    ; preds = %while.cond1941
  %1413 = load %struct.EState*, %struct.EState** %s.addr, align 8
  call void @bsW(%struct.EState* %1413, i32 1, i32 0)
  br label %for.inc1953

for.inc1953:                                      ; preds = %while.end1952
  %1414 = load i32, i32* %i, align 4
  %inc1954 = add nsw i32 %1414, 1
  store i32 %inc1954, i32* %i, align 4
  br label %for.cond1925

for.end1955:                                      ; preds = %for.cond1925
  br label %for.inc1956

for.inc1956:                                      ; preds = %for.end1955
  %1415 = load i32, i32* %t, align 4
  %inc1957 = add nsw i32 %1415, 1
  store i32 %inc1957, i32* %t, align 4
  br label %for.cond1916

for.end1958:                                      ; preds = %for.cond1916
  %1416 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity1959 = getelementptr inbounds %struct.EState, %struct.EState* %1416, i32 0, i32 28
  %1417 = load i32, i32* %verbosity1959, align 8
  %cmp1960 = icmp sge i32 %1417, 3
  br i1 %cmp1960, label %if.then1962, label %if.end1966

if.then1962:                                      ; preds = %for.end1958
  %1418 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1419 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1963 = getelementptr inbounds %struct.EState, %struct.EState* %1419, i32 0, i32 19
  %1420 = load i32, i32* %numZ1963, align 4
  %1421 = load i32, i32* %nBytes, align 4
  %sub1964 = sub nsw i32 %1420, %1421
  %call1965 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1418, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.152, i64 0, i64 0), i32 %sub1964)
  br label %if.end1966

if.end1966:                                       ; preds = %if.then1962, %for.end1958
  %1422 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1967 = getelementptr inbounds %struct.EState, %struct.EState* %1422, i32 0, i32 19
  %1423 = load i32, i32* %numZ1967, align 4
  store i32 %1423, i32* %nBytes, align 4
  store i32 0, i32* %selCtr, align 4
  store i32 0, i32* %gs, align 4
  br label %while.body1969

while.body1969:                                   ; preds = %if.end2443, %if.end1966
  %1424 = load i32, i32* %gs, align 4
  %1425 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF1970 = getelementptr inbounds %struct.EState, %struct.EState* %1425, i32 0, i32 31
  %1426 = load i32, i32* %nMTF1970, align 4
  %cmp1971 = icmp sge i32 %1424, %1426
  br i1 %cmp1971, label %if.then1973, label %if.end1974

if.then1973:                                      ; preds = %while.body1969
  br label %while.end2446

if.end1974:                                       ; preds = %while.body1969
  %1427 = load i32, i32* %gs, align 4
  %add1975 = add nsw i32 %1427, 50
  %sub1976 = sub nsw i32 %add1975, 1
  store i32 %sub1976, i32* %ge, align 4
  %1428 = load i32, i32* %ge, align 4
  %1429 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF1977 = getelementptr inbounds %struct.EState, %struct.EState* %1429, i32 0, i32 31
  %1430 = load i32, i32* %nMTF1977, align 4
  %cmp1978 = icmp sge i32 %1428, %1430
  br i1 %cmp1978, label %if.then1980, label %if.end1983

if.then1980:                                      ; preds = %if.end1974
  %1431 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nMTF1981 = getelementptr inbounds %struct.EState, %struct.EState* %1431, i32 0, i32 31
  %1432 = load i32, i32* %nMTF1981, align 4
  %sub1982 = sub nsw i32 %1432, 1
  store i32 %sub1982, i32* %ge, align 4
  br label %if.end1983

if.end1983:                                       ; preds = %if.then1980, %if.end1974
  %1433 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector1984 = getelementptr inbounds %struct.EState, %struct.EState* %1433, i32 0, i32 33
  %1434 = load i32, i32* %selCtr, align 4
  %idxprom1985 = sext i32 %1434 to i64
  %arrayidx1986 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1984, i64 0, i64 %idxprom1985
  %1435 = load i8, i8* %arrayidx1986, align 1
  %conv1987 = zext i8 %1435 to i32
  %1436 = load i32, i32* %nGroups, align 4
  %cmp1988 = icmp slt i32 %conv1987, %1436
  br i1 %cmp1988, label %if.end1991, label %if.then1990

if.then1990:                                      ; preds = %if.end1983
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %if.end1991

if.end1991:                                       ; preds = %if.then1990, %if.end1983
  %1437 = load i32, i32* %nGroups, align 4
  %cmp1992 = icmp eq i32 %1437, 6
  br i1 %cmp1992, label %land.lhs.true1994, label %if.else2414

land.lhs.true1994:                                ; preds = %if.end1991
  %1438 = load i32, i32* %ge, align 4
  %1439 = load i32, i32* %gs, align 4
  %sub1995 = sub nsw i32 %1438, %1439
  %add1996 = add nsw i32 %sub1995, 1
  %cmp1997 = icmp eq i32 50, %add1996
  br i1 %cmp1997, label %if.then1999, label %if.else2414

if.then1999:                                      ; preds = %land.lhs.true1994
  %1440 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len2000 = getelementptr inbounds %struct.EState, %struct.EState* %1440, i32 0, i32 35
  %1441 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector2001 = getelementptr inbounds %struct.EState, %struct.EState* %1441, i32 0, i32 33
  %1442 = load i32, i32* %selCtr, align 4
  %idxprom2002 = sext i32 %1442 to i64
  %arrayidx2003 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2001, i64 0, i64 %idxprom2002
  %1443 = load i8, i8* %arrayidx2003, align 1
  %idxprom2004 = zext i8 %1443 to i64
  %arrayidx2005 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len2000, i64 0, i64 %idxprom2004
  %arrayidx2006 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx2005, i64 0, i64 0
  store i8* %arrayidx2006, i8** %s_len_sel_selCtr, align 8
  %1444 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %code2007 = getelementptr inbounds %struct.EState, %struct.EState* %1444, i32 0, i32 36
  %1445 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector2008 = getelementptr inbounds %struct.EState, %struct.EState* %1445, i32 0, i32 33
  %1446 = load i32, i32* %selCtr, align 4
  %idxprom2009 = sext i32 %1446 to i64
  %arrayidx2010 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2008, i64 0, i64 %idxprom2009
  %1447 = load i8, i8* %arrayidx2010, align 1
  %idxprom2011 = zext i8 %1447 to i64
  %arrayidx2012 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code2007, i64 0, i64 %idxprom2011
  %arrayidx2013 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2012, i64 0, i64 0
  store i32* %arrayidx2013, i32** %s_code_sel_selCtr, align 8
  %1448 = load i16*, i16** %mtfv, align 8
  %1449 = load i32, i32* %gs, align 4
  %add2014 = add nsw i32 %1449, 0
  %idxprom2015 = sext i32 %add2014 to i64
  %arrayidx2016 = getelementptr inbounds i16, i16* %1448, i64 %idxprom2015
  %1450 = load i16, i16* %arrayidx2016, align 2
  store i16 %1450, i16* %mtfv_i, align 2
  %1451 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1452 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1453 = load i16, i16* %mtfv_i, align 2
  %idxprom2017 = zext i16 %1453 to i64
  %arrayidx2018 = getelementptr inbounds i8, i8* %1452, i64 %idxprom2017
  %1454 = load i8, i8* %arrayidx2018, align 1
  %conv2019 = zext i8 %1454 to i32
  %1455 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1456 = load i16, i16* %mtfv_i, align 2
  %idxprom2020 = zext i16 %1456 to i64
  %arrayidx2021 = getelementptr inbounds i32, i32* %1455, i64 %idxprom2020
  %1457 = load i32, i32* %arrayidx2021, align 4
  call void @bsW(%struct.EState* %1451, i32 %conv2019, i32 %1457)
  %1458 = load i16*, i16** %mtfv, align 8
  %1459 = load i32, i32* %gs, align 4
  %add2022 = add nsw i32 %1459, 1
  %idxprom2023 = sext i32 %add2022 to i64
  %arrayidx2024 = getelementptr inbounds i16, i16* %1458, i64 %idxprom2023
  %1460 = load i16, i16* %arrayidx2024, align 2
  store i16 %1460, i16* %mtfv_i, align 2
  %1461 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1462 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1463 = load i16, i16* %mtfv_i, align 2
  %idxprom2025 = zext i16 %1463 to i64
  %arrayidx2026 = getelementptr inbounds i8, i8* %1462, i64 %idxprom2025
  %1464 = load i8, i8* %arrayidx2026, align 1
  %conv2027 = zext i8 %1464 to i32
  %1465 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1466 = load i16, i16* %mtfv_i, align 2
  %idxprom2028 = zext i16 %1466 to i64
  %arrayidx2029 = getelementptr inbounds i32, i32* %1465, i64 %idxprom2028
  %1467 = load i32, i32* %arrayidx2029, align 4
  call void @bsW(%struct.EState* %1461, i32 %conv2027, i32 %1467)
  %1468 = load i16*, i16** %mtfv, align 8
  %1469 = load i32, i32* %gs, align 4
  %add2030 = add nsw i32 %1469, 2
  %idxprom2031 = sext i32 %add2030 to i64
  %arrayidx2032 = getelementptr inbounds i16, i16* %1468, i64 %idxprom2031
  %1470 = load i16, i16* %arrayidx2032, align 2
  store i16 %1470, i16* %mtfv_i, align 2
  %1471 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1472 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1473 = load i16, i16* %mtfv_i, align 2
  %idxprom2033 = zext i16 %1473 to i64
  %arrayidx2034 = getelementptr inbounds i8, i8* %1472, i64 %idxprom2033
  %1474 = load i8, i8* %arrayidx2034, align 1
  %conv2035 = zext i8 %1474 to i32
  %1475 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1476 = load i16, i16* %mtfv_i, align 2
  %idxprom2036 = zext i16 %1476 to i64
  %arrayidx2037 = getelementptr inbounds i32, i32* %1475, i64 %idxprom2036
  %1477 = load i32, i32* %arrayidx2037, align 4
  call void @bsW(%struct.EState* %1471, i32 %conv2035, i32 %1477)
  %1478 = load i16*, i16** %mtfv, align 8
  %1479 = load i32, i32* %gs, align 4
  %add2038 = add nsw i32 %1479, 3
  %idxprom2039 = sext i32 %add2038 to i64
  %arrayidx2040 = getelementptr inbounds i16, i16* %1478, i64 %idxprom2039
  %1480 = load i16, i16* %arrayidx2040, align 2
  store i16 %1480, i16* %mtfv_i, align 2
  %1481 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1482 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1483 = load i16, i16* %mtfv_i, align 2
  %idxprom2041 = zext i16 %1483 to i64
  %arrayidx2042 = getelementptr inbounds i8, i8* %1482, i64 %idxprom2041
  %1484 = load i8, i8* %arrayidx2042, align 1
  %conv2043 = zext i8 %1484 to i32
  %1485 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1486 = load i16, i16* %mtfv_i, align 2
  %idxprom2044 = zext i16 %1486 to i64
  %arrayidx2045 = getelementptr inbounds i32, i32* %1485, i64 %idxprom2044
  %1487 = load i32, i32* %arrayidx2045, align 4
  call void @bsW(%struct.EState* %1481, i32 %conv2043, i32 %1487)
  %1488 = load i16*, i16** %mtfv, align 8
  %1489 = load i32, i32* %gs, align 4
  %add2046 = add nsw i32 %1489, 4
  %idxprom2047 = sext i32 %add2046 to i64
  %arrayidx2048 = getelementptr inbounds i16, i16* %1488, i64 %idxprom2047
  %1490 = load i16, i16* %arrayidx2048, align 2
  store i16 %1490, i16* %mtfv_i, align 2
  %1491 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1492 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1493 = load i16, i16* %mtfv_i, align 2
  %idxprom2049 = zext i16 %1493 to i64
  %arrayidx2050 = getelementptr inbounds i8, i8* %1492, i64 %idxprom2049
  %1494 = load i8, i8* %arrayidx2050, align 1
  %conv2051 = zext i8 %1494 to i32
  %1495 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1496 = load i16, i16* %mtfv_i, align 2
  %idxprom2052 = zext i16 %1496 to i64
  %arrayidx2053 = getelementptr inbounds i32, i32* %1495, i64 %idxprom2052
  %1497 = load i32, i32* %arrayidx2053, align 4
  call void @bsW(%struct.EState* %1491, i32 %conv2051, i32 %1497)
  %1498 = load i16*, i16** %mtfv, align 8
  %1499 = load i32, i32* %gs, align 4
  %add2054 = add nsw i32 %1499, 5
  %idxprom2055 = sext i32 %add2054 to i64
  %arrayidx2056 = getelementptr inbounds i16, i16* %1498, i64 %idxprom2055
  %1500 = load i16, i16* %arrayidx2056, align 2
  store i16 %1500, i16* %mtfv_i, align 2
  %1501 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1502 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1503 = load i16, i16* %mtfv_i, align 2
  %idxprom2057 = zext i16 %1503 to i64
  %arrayidx2058 = getelementptr inbounds i8, i8* %1502, i64 %idxprom2057
  %1504 = load i8, i8* %arrayidx2058, align 1
  %conv2059 = zext i8 %1504 to i32
  %1505 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1506 = load i16, i16* %mtfv_i, align 2
  %idxprom2060 = zext i16 %1506 to i64
  %arrayidx2061 = getelementptr inbounds i32, i32* %1505, i64 %idxprom2060
  %1507 = load i32, i32* %arrayidx2061, align 4
  call void @bsW(%struct.EState* %1501, i32 %conv2059, i32 %1507)
  %1508 = load i16*, i16** %mtfv, align 8
  %1509 = load i32, i32* %gs, align 4
  %add2062 = add nsw i32 %1509, 6
  %idxprom2063 = sext i32 %add2062 to i64
  %arrayidx2064 = getelementptr inbounds i16, i16* %1508, i64 %idxprom2063
  %1510 = load i16, i16* %arrayidx2064, align 2
  store i16 %1510, i16* %mtfv_i, align 2
  %1511 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1512 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1513 = load i16, i16* %mtfv_i, align 2
  %idxprom2065 = zext i16 %1513 to i64
  %arrayidx2066 = getelementptr inbounds i8, i8* %1512, i64 %idxprom2065
  %1514 = load i8, i8* %arrayidx2066, align 1
  %conv2067 = zext i8 %1514 to i32
  %1515 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1516 = load i16, i16* %mtfv_i, align 2
  %idxprom2068 = zext i16 %1516 to i64
  %arrayidx2069 = getelementptr inbounds i32, i32* %1515, i64 %idxprom2068
  %1517 = load i32, i32* %arrayidx2069, align 4
  call void @bsW(%struct.EState* %1511, i32 %conv2067, i32 %1517)
  %1518 = load i16*, i16** %mtfv, align 8
  %1519 = load i32, i32* %gs, align 4
  %add2070 = add nsw i32 %1519, 7
  %idxprom2071 = sext i32 %add2070 to i64
  %arrayidx2072 = getelementptr inbounds i16, i16* %1518, i64 %idxprom2071
  %1520 = load i16, i16* %arrayidx2072, align 2
  store i16 %1520, i16* %mtfv_i, align 2
  %1521 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1522 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1523 = load i16, i16* %mtfv_i, align 2
  %idxprom2073 = zext i16 %1523 to i64
  %arrayidx2074 = getelementptr inbounds i8, i8* %1522, i64 %idxprom2073
  %1524 = load i8, i8* %arrayidx2074, align 1
  %conv2075 = zext i8 %1524 to i32
  %1525 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1526 = load i16, i16* %mtfv_i, align 2
  %idxprom2076 = zext i16 %1526 to i64
  %arrayidx2077 = getelementptr inbounds i32, i32* %1525, i64 %idxprom2076
  %1527 = load i32, i32* %arrayidx2077, align 4
  call void @bsW(%struct.EState* %1521, i32 %conv2075, i32 %1527)
  %1528 = load i16*, i16** %mtfv, align 8
  %1529 = load i32, i32* %gs, align 4
  %add2078 = add nsw i32 %1529, 8
  %idxprom2079 = sext i32 %add2078 to i64
  %arrayidx2080 = getelementptr inbounds i16, i16* %1528, i64 %idxprom2079
  %1530 = load i16, i16* %arrayidx2080, align 2
  store i16 %1530, i16* %mtfv_i, align 2
  %1531 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1532 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1533 = load i16, i16* %mtfv_i, align 2
  %idxprom2081 = zext i16 %1533 to i64
  %arrayidx2082 = getelementptr inbounds i8, i8* %1532, i64 %idxprom2081
  %1534 = load i8, i8* %arrayidx2082, align 1
  %conv2083 = zext i8 %1534 to i32
  %1535 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1536 = load i16, i16* %mtfv_i, align 2
  %idxprom2084 = zext i16 %1536 to i64
  %arrayidx2085 = getelementptr inbounds i32, i32* %1535, i64 %idxprom2084
  %1537 = load i32, i32* %arrayidx2085, align 4
  call void @bsW(%struct.EState* %1531, i32 %conv2083, i32 %1537)
  %1538 = load i16*, i16** %mtfv, align 8
  %1539 = load i32, i32* %gs, align 4
  %add2086 = add nsw i32 %1539, 9
  %idxprom2087 = sext i32 %add2086 to i64
  %arrayidx2088 = getelementptr inbounds i16, i16* %1538, i64 %idxprom2087
  %1540 = load i16, i16* %arrayidx2088, align 2
  store i16 %1540, i16* %mtfv_i, align 2
  %1541 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1542 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1543 = load i16, i16* %mtfv_i, align 2
  %idxprom2089 = zext i16 %1543 to i64
  %arrayidx2090 = getelementptr inbounds i8, i8* %1542, i64 %idxprom2089
  %1544 = load i8, i8* %arrayidx2090, align 1
  %conv2091 = zext i8 %1544 to i32
  %1545 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1546 = load i16, i16* %mtfv_i, align 2
  %idxprom2092 = zext i16 %1546 to i64
  %arrayidx2093 = getelementptr inbounds i32, i32* %1545, i64 %idxprom2092
  %1547 = load i32, i32* %arrayidx2093, align 4
  call void @bsW(%struct.EState* %1541, i32 %conv2091, i32 %1547)
  %1548 = load i16*, i16** %mtfv, align 8
  %1549 = load i32, i32* %gs, align 4
  %add2094 = add nsw i32 %1549, 10
  %idxprom2095 = sext i32 %add2094 to i64
  %arrayidx2096 = getelementptr inbounds i16, i16* %1548, i64 %idxprom2095
  %1550 = load i16, i16* %arrayidx2096, align 2
  store i16 %1550, i16* %mtfv_i, align 2
  %1551 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1552 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1553 = load i16, i16* %mtfv_i, align 2
  %idxprom2097 = zext i16 %1553 to i64
  %arrayidx2098 = getelementptr inbounds i8, i8* %1552, i64 %idxprom2097
  %1554 = load i8, i8* %arrayidx2098, align 1
  %conv2099 = zext i8 %1554 to i32
  %1555 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1556 = load i16, i16* %mtfv_i, align 2
  %idxprom2100 = zext i16 %1556 to i64
  %arrayidx2101 = getelementptr inbounds i32, i32* %1555, i64 %idxprom2100
  %1557 = load i32, i32* %arrayidx2101, align 4
  call void @bsW(%struct.EState* %1551, i32 %conv2099, i32 %1557)
  %1558 = load i16*, i16** %mtfv, align 8
  %1559 = load i32, i32* %gs, align 4
  %add2102 = add nsw i32 %1559, 11
  %idxprom2103 = sext i32 %add2102 to i64
  %arrayidx2104 = getelementptr inbounds i16, i16* %1558, i64 %idxprom2103
  %1560 = load i16, i16* %arrayidx2104, align 2
  store i16 %1560, i16* %mtfv_i, align 2
  %1561 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1562 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1563 = load i16, i16* %mtfv_i, align 2
  %idxprom2105 = zext i16 %1563 to i64
  %arrayidx2106 = getelementptr inbounds i8, i8* %1562, i64 %idxprom2105
  %1564 = load i8, i8* %arrayidx2106, align 1
  %conv2107 = zext i8 %1564 to i32
  %1565 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1566 = load i16, i16* %mtfv_i, align 2
  %idxprom2108 = zext i16 %1566 to i64
  %arrayidx2109 = getelementptr inbounds i32, i32* %1565, i64 %idxprom2108
  %1567 = load i32, i32* %arrayidx2109, align 4
  call void @bsW(%struct.EState* %1561, i32 %conv2107, i32 %1567)
  %1568 = load i16*, i16** %mtfv, align 8
  %1569 = load i32, i32* %gs, align 4
  %add2110 = add nsw i32 %1569, 12
  %idxprom2111 = sext i32 %add2110 to i64
  %arrayidx2112 = getelementptr inbounds i16, i16* %1568, i64 %idxprom2111
  %1570 = load i16, i16* %arrayidx2112, align 2
  store i16 %1570, i16* %mtfv_i, align 2
  %1571 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1572 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1573 = load i16, i16* %mtfv_i, align 2
  %idxprom2113 = zext i16 %1573 to i64
  %arrayidx2114 = getelementptr inbounds i8, i8* %1572, i64 %idxprom2113
  %1574 = load i8, i8* %arrayidx2114, align 1
  %conv2115 = zext i8 %1574 to i32
  %1575 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1576 = load i16, i16* %mtfv_i, align 2
  %idxprom2116 = zext i16 %1576 to i64
  %arrayidx2117 = getelementptr inbounds i32, i32* %1575, i64 %idxprom2116
  %1577 = load i32, i32* %arrayidx2117, align 4
  call void @bsW(%struct.EState* %1571, i32 %conv2115, i32 %1577)
  %1578 = load i16*, i16** %mtfv, align 8
  %1579 = load i32, i32* %gs, align 4
  %add2118 = add nsw i32 %1579, 13
  %idxprom2119 = sext i32 %add2118 to i64
  %arrayidx2120 = getelementptr inbounds i16, i16* %1578, i64 %idxprom2119
  %1580 = load i16, i16* %arrayidx2120, align 2
  store i16 %1580, i16* %mtfv_i, align 2
  %1581 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1582 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1583 = load i16, i16* %mtfv_i, align 2
  %idxprom2121 = zext i16 %1583 to i64
  %arrayidx2122 = getelementptr inbounds i8, i8* %1582, i64 %idxprom2121
  %1584 = load i8, i8* %arrayidx2122, align 1
  %conv2123 = zext i8 %1584 to i32
  %1585 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1586 = load i16, i16* %mtfv_i, align 2
  %idxprom2124 = zext i16 %1586 to i64
  %arrayidx2125 = getelementptr inbounds i32, i32* %1585, i64 %idxprom2124
  %1587 = load i32, i32* %arrayidx2125, align 4
  call void @bsW(%struct.EState* %1581, i32 %conv2123, i32 %1587)
  %1588 = load i16*, i16** %mtfv, align 8
  %1589 = load i32, i32* %gs, align 4
  %add2126 = add nsw i32 %1589, 14
  %idxprom2127 = sext i32 %add2126 to i64
  %arrayidx2128 = getelementptr inbounds i16, i16* %1588, i64 %idxprom2127
  %1590 = load i16, i16* %arrayidx2128, align 2
  store i16 %1590, i16* %mtfv_i, align 2
  %1591 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1592 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1593 = load i16, i16* %mtfv_i, align 2
  %idxprom2129 = zext i16 %1593 to i64
  %arrayidx2130 = getelementptr inbounds i8, i8* %1592, i64 %idxprom2129
  %1594 = load i8, i8* %arrayidx2130, align 1
  %conv2131 = zext i8 %1594 to i32
  %1595 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1596 = load i16, i16* %mtfv_i, align 2
  %idxprom2132 = zext i16 %1596 to i64
  %arrayidx2133 = getelementptr inbounds i32, i32* %1595, i64 %idxprom2132
  %1597 = load i32, i32* %arrayidx2133, align 4
  call void @bsW(%struct.EState* %1591, i32 %conv2131, i32 %1597)
  %1598 = load i16*, i16** %mtfv, align 8
  %1599 = load i32, i32* %gs, align 4
  %add2134 = add nsw i32 %1599, 15
  %idxprom2135 = sext i32 %add2134 to i64
  %arrayidx2136 = getelementptr inbounds i16, i16* %1598, i64 %idxprom2135
  %1600 = load i16, i16* %arrayidx2136, align 2
  store i16 %1600, i16* %mtfv_i, align 2
  %1601 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1602 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1603 = load i16, i16* %mtfv_i, align 2
  %idxprom2137 = zext i16 %1603 to i64
  %arrayidx2138 = getelementptr inbounds i8, i8* %1602, i64 %idxprom2137
  %1604 = load i8, i8* %arrayidx2138, align 1
  %conv2139 = zext i8 %1604 to i32
  %1605 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1606 = load i16, i16* %mtfv_i, align 2
  %idxprom2140 = zext i16 %1606 to i64
  %arrayidx2141 = getelementptr inbounds i32, i32* %1605, i64 %idxprom2140
  %1607 = load i32, i32* %arrayidx2141, align 4
  call void @bsW(%struct.EState* %1601, i32 %conv2139, i32 %1607)
  %1608 = load i16*, i16** %mtfv, align 8
  %1609 = load i32, i32* %gs, align 4
  %add2142 = add nsw i32 %1609, 16
  %idxprom2143 = sext i32 %add2142 to i64
  %arrayidx2144 = getelementptr inbounds i16, i16* %1608, i64 %idxprom2143
  %1610 = load i16, i16* %arrayidx2144, align 2
  store i16 %1610, i16* %mtfv_i, align 2
  %1611 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1612 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1613 = load i16, i16* %mtfv_i, align 2
  %idxprom2145 = zext i16 %1613 to i64
  %arrayidx2146 = getelementptr inbounds i8, i8* %1612, i64 %idxprom2145
  %1614 = load i8, i8* %arrayidx2146, align 1
  %conv2147 = zext i8 %1614 to i32
  %1615 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1616 = load i16, i16* %mtfv_i, align 2
  %idxprom2148 = zext i16 %1616 to i64
  %arrayidx2149 = getelementptr inbounds i32, i32* %1615, i64 %idxprom2148
  %1617 = load i32, i32* %arrayidx2149, align 4
  call void @bsW(%struct.EState* %1611, i32 %conv2147, i32 %1617)
  %1618 = load i16*, i16** %mtfv, align 8
  %1619 = load i32, i32* %gs, align 4
  %add2150 = add nsw i32 %1619, 17
  %idxprom2151 = sext i32 %add2150 to i64
  %arrayidx2152 = getelementptr inbounds i16, i16* %1618, i64 %idxprom2151
  %1620 = load i16, i16* %arrayidx2152, align 2
  store i16 %1620, i16* %mtfv_i, align 2
  %1621 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1622 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1623 = load i16, i16* %mtfv_i, align 2
  %idxprom2153 = zext i16 %1623 to i64
  %arrayidx2154 = getelementptr inbounds i8, i8* %1622, i64 %idxprom2153
  %1624 = load i8, i8* %arrayidx2154, align 1
  %conv2155 = zext i8 %1624 to i32
  %1625 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1626 = load i16, i16* %mtfv_i, align 2
  %idxprom2156 = zext i16 %1626 to i64
  %arrayidx2157 = getelementptr inbounds i32, i32* %1625, i64 %idxprom2156
  %1627 = load i32, i32* %arrayidx2157, align 4
  call void @bsW(%struct.EState* %1621, i32 %conv2155, i32 %1627)
  %1628 = load i16*, i16** %mtfv, align 8
  %1629 = load i32, i32* %gs, align 4
  %add2158 = add nsw i32 %1629, 18
  %idxprom2159 = sext i32 %add2158 to i64
  %arrayidx2160 = getelementptr inbounds i16, i16* %1628, i64 %idxprom2159
  %1630 = load i16, i16* %arrayidx2160, align 2
  store i16 %1630, i16* %mtfv_i, align 2
  %1631 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1632 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1633 = load i16, i16* %mtfv_i, align 2
  %idxprom2161 = zext i16 %1633 to i64
  %arrayidx2162 = getelementptr inbounds i8, i8* %1632, i64 %idxprom2161
  %1634 = load i8, i8* %arrayidx2162, align 1
  %conv2163 = zext i8 %1634 to i32
  %1635 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1636 = load i16, i16* %mtfv_i, align 2
  %idxprom2164 = zext i16 %1636 to i64
  %arrayidx2165 = getelementptr inbounds i32, i32* %1635, i64 %idxprom2164
  %1637 = load i32, i32* %arrayidx2165, align 4
  call void @bsW(%struct.EState* %1631, i32 %conv2163, i32 %1637)
  %1638 = load i16*, i16** %mtfv, align 8
  %1639 = load i32, i32* %gs, align 4
  %add2166 = add nsw i32 %1639, 19
  %idxprom2167 = sext i32 %add2166 to i64
  %arrayidx2168 = getelementptr inbounds i16, i16* %1638, i64 %idxprom2167
  %1640 = load i16, i16* %arrayidx2168, align 2
  store i16 %1640, i16* %mtfv_i, align 2
  %1641 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1642 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1643 = load i16, i16* %mtfv_i, align 2
  %idxprom2169 = zext i16 %1643 to i64
  %arrayidx2170 = getelementptr inbounds i8, i8* %1642, i64 %idxprom2169
  %1644 = load i8, i8* %arrayidx2170, align 1
  %conv2171 = zext i8 %1644 to i32
  %1645 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1646 = load i16, i16* %mtfv_i, align 2
  %idxprom2172 = zext i16 %1646 to i64
  %arrayidx2173 = getelementptr inbounds i32, i32* %1645, i64 %idxprom2172
  %1647 = load i32, i32* %arrayidx2173, align 4
  call void @bsW(%struct.EState* %1641, i32 %conv2171, i32 %1647)
  %1648 = load i16*, i16** %mtfv, align 8
  %1649 = load i32, i32* %gs, align 4
  %add2174 = add nsw i32 %1649, 20
  %idxprom2175 = sext i32 %add2174 to i64
  %arrayidx2176 = getelementptr inbounds i16, i16* %1648, i64 %idxprom2175
  %1650 = load i16, i16* %arrayidx2176, align 2
  store i16 %1650, i16* %mtfv_i, align 2
  %1651 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1652 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1653 = load i16, i16* %mtfv_i, align 2
  %idxprom2177 = zext i16 %1653 to i64
  %arrayidx2178 = getelementptr inbounds i8, i8* %1652, i64 %idxprom2177
  %1654 = load i8, i8* %arrayidx2178, align 1
  %conv2179 = zext i8 %1654 to i32
  %1655 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1656 = load i16, i16* %mtfv_i, align 2
  %idxprom2180 = zext i16 %1656 to i64
  %arrayidx2181 = getelementptr inbounds i32, i32* %1655, i64 %idxprom2180
  %1657 = load i32, i32* %arrayidx2181, align 4
  call void @bsW(%struct.EState* %1651, i32 %conv2179, i32 %1657)
  %1658 = load i16*, i16** %mtfv, align 8
  %1659 = load i32, i32* %gs, align 4
  %add2182 = add nsw i32 %1659, 21
  %idxprom2183 = sext i32 %add2182 to i64
  %arrayidx2184 = getelementptr inbounds i16, i16* %1658, i64 %idxprom2183
  %1660 = load i16, i16* %arrayidx2184, align 2
  store i16 %1660, i16* %mtfv_i, align 2
  %1661 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1662 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1663 = load i16, i16* %mtfv_i, align 2
  %idxprom2185 = zext i16 %1663 to i64
  %arrayidx2186 = getelementptr inbounds i8, i8* %1662, i64 %idxprom2185
  %1664 = load i8, i8* %arrayidx2186, align 1
  %conv2187 = zext i8 %1664 to i32
  %1665 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1666 = load i16, i16* %mtfv_i, align 2
  %idxprom2188 = zext i16 %1666 to i64
  %arrayidx2189 = getelementptr inbounds i32, i32* %1665, i64 %idxprom2188
  %1667 = load i32, i32* %arrayidx2189, align 4
  call void @bsW(%struct.EState* %1661, i32 %conv2187, i32 %1667)
  %1668 = load i16*, i16** %mtfv, align 8
  %1669 = load i32, i32* %gs, align 4
  %add2190 = add nsw i32 %1669, 22
  %idxprom2191 = sext i32 %add2190 to i64
  %arrayidx2192 = getelementptr inbounds i16, i16* %1668, i64 %idxprom2191
  %1670 = load i16, i16* %arrayidx2192, align 2
  store i16 %1670, i16* %mtfv_i, align 2
  %1671 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1672 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1673 = load i16, i16* %mtfv_i, align 2
  %idxprom2193 = zext i16 %1673 to i64
  %arrayidx2194 = getelementptr inbounds i8, i8* %1672, i64 %idxprom2193
  %1674 = load i8, i8* %arrayidx2194, align 1
  %conv2195 = zext i8 %1674 to i32
  %1675 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1676 = load i16, i16* %mtfv_i, align 2
  %idxprom2196 = zext i16 %1676 to i64
  %arrayidx2197 = getelementptr inbounds i32, i32* %1675, i64 %idxprom2196
  %1677 = load i32, i32* %arrayidx2197, align 4
  call void @bsW(%struct.EState* %1671, i32 %conv2195, i32 %1677)
  %1678 = load i16*, i16** %mtfv, align 8
  %1679 = load i32, i32* %gs, align 4
  %add2198 = add nsw i32 %1679, 23
  %idxprom2199 = sext i32 %add2198 to i64
  %arrayidx2200 = getelementptr inbounds i16, i16* %1678, i64 %idxprom2199
  %1680 = load i16, i16* %arrayidx2200, align 2
  store i16 %1680, i16* %mtfv_i, align 2
  %1681 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1682 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1683 = load i16, i16* %mtfv_i, align 2
  %idxprom2201 = zext i16 %1683 to i64
  %arrayidx2202 = getelementptr inbounds i8, i8* %1682, i64 %idxprom2201
  %1684 = load i8, i8* %arrayidx2202, align 1
  %conv2203 = zext i8 %1684 to i32
  %1685 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1686 = load i16, i16* %mtfv_i, align 2
  %idxprom2204 = zext i16 %1686 to i64
  %arrayidx2205 = getelementptr inbounds i32, i32* %1685, i64 %idxprom2204
  %1687 = load i32, i32* %arrayidx2205, align 4
  call void @bsW(%struct.EState* %1681, i32 %conv2203, i32 %1687)
  %1688 = load i16*, i16** %mtfv, align 8
  %1689 = load i32, i32* %gs, align 4
  %add2206 = add nsw i32 %1689, 24
  %idxprom2207 = sext i32 %add2206 to i64
  %arrayidx2208 = getelementptr inbounds i16, i16* %1688, i64 %idxprom2207
  %1690 = load i16, i16* %arrayidx2208, align 2
  store i16 %1690, i16* %mtfv_i, align 2
  %1691 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1692 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1693 = load i16, i16* %mtfv_i, align 2
  %idxprom2209 = zext i16 %1693 to i64
  %arrayidx2210 = getelementptr inbounds i8, i8* %1692, i64 %idxprom2209
  %1694 = load i8, i8* %arrayidx2210, align 1
  %conv2211 = zext i8 %1694 to i32
  %1695 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1696 = load i16, i16* %mtfv_i, align 2
  %idxprom2212 = zext i16 %1696 to i64
  %arrayidx2213 = getelementptr inbounds i32, i32* %1695, i64 %idxprom2212
  %1697 = load i32, i32* %arrayidx2213, align 4
  call void @bsW(%struct.EState* %1691, i32 %conv2211, i32 %1697)
  %1698 = load i16*, i16** %mtfv, align 8
  %1699 = load i32, i32* %gs, align 4
  %add2214 = add nsw i32 %1699, 25
  %idxprom2215 = sext i32 %add2214 to i64
  %arrayidx2216 = getelementptr inbounds i16, i16* %1698, i64 %idxprom2215
  %1700 = load i16, i16* %arrayidx2216, align 2
  store i16 %1700, i16* %mtfv_i, align 2
  %1701 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1702 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1703 = load i16, i16* %mtfv_i, align 2
  %idxprom2217 = zext i16 %1703 to i64
  %arrayidx2218 = getelementptr inbounds i8, i8* %1702, i64 %idxprom2217
  %1704 = load i8, i8* %arrayidx2218, align 1
  %conv2219 = zext i8 %1704 to i32
  %1705 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1706 = load i16, i16* %mtfv_i, align 2
  %idxprom2220 = zext i16 %1706 to i64
  %arrayidx2221 = getelementptr inbounds i32, i32* %1705, i64 %idxprom2220
  %1707 = load i32, i32* %arrayidx2221, align 4
  call void @bsW(%struct.EState* %1701, i32 %conv2219, i32 %1707)
  %1708 = load i16*, i16** %mtfv, align 8
  %1709 = load i32, i32* %gs, align 4
  %add2222 = add nsw i32 %1709, 26
  %idxprom2223 = sext i32 %add2222 to i64
  %arrayidx2224 = getelementptr inbounds i16, i16* %1708, i64 %idxprom2223
  %1710 = load i16, i16* %arrayidx2224, align 2
  store i16 %1710, i16* %mtfv_i, align 2
  %1711 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1712 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1713 = load i16, i16* %mtfv_i, align 2
  %idxprom2225 = zext i16 %1713 to i64
  %arrayidx2226 = getelementptr inbounds i8, i8* %1712, i64 %idxprom2225
  %1714 = load i8, i8* %arrayidx2226, align 1
  %conv2227 = zext i8 %1714 to i32
  %1715 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1716 = load i16, i16* %mtfv_i, align 2
  %idxprom2228 = zext i16 %1716 to i64
  %arrayidx2229 = getelementptr inbounds i32, i32* %1715, i64 %idxprom2228
  %1717 = load i32, i32* %arrayidx2229, align 4
  call void @bsW(%struct.EState* %1711, i32 %conv2227, i32 %1717)
  %1718 = load i16*, i16** %mtfv, align 8
  %1719 = load i32, i32* %gs, align 4
  %add2230 = add nsw i32 %1719, 27
  %idxprom2231 = sext i32 %add2230 to i64
  %arrayidx2232 = getelementptr inbounds i16, i16* %1718, i64 %idxprom2231
  %1720 = load i16, i16* %arrayidx2232, align 2
  store i16 %1720, i16* %mtfv_i, align 2
  %1721 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1722 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1723 = load i16, i16* %mtfv_i, align 2
  %idxprom2233 = zext i16 %1723 to i64
  %arrayidx2234 = getelementptr inbounds i8, i8* %1722, i64 %idxprom2233
  %1724 = load i8, i8* %arrayidx2234, align 1
  %conv2235 = zext i8 %1724 to i32
  %1725 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1726 = load i16, i16* %mtfv_i, align 2
  %idxprom2236 = zext i16 %1726 to i64
  %arrayidx2237 = getelementptr inbounds i32, i32* %1725, i64 %idxprom2236
  %1727 = load i32, i32* %arrayidx2237, align 4
  call void @bsW(%struct.EState* %1721, i32 %conv2235, i32 %1727)
  %1728 = load i16*, i16** %mtfv, align 8
  %1729 = load i32, i32* %gs, align 4
  %add2238 = add nsw i32 %1729, 28
  %idxprom2239 = sext i32 %add2238 to i64
  %arrayidx2240 = getelementptr inbounds i16, i16* %1728, i64 %idxprom2239
  %1730 = load i16, i16* %arrayidx2240, align 2
  store i16 %1730, i16* %mtfv_i, align 2
  %1731 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1732 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1733 = load i16, i16* %mtfv_i, align 2
  %idxprom2241 = zext i16 %1733 to i64
  %arrayidx2242 = getelementptr inbounds i8, i8* %1732, i64 %idxprom2241
  %1734 = load i8, i8* %arrayidx2242, align 1
  %conv2243 = zext i8 %1734 to i32
  %1735 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1736 = load i16, i16* %mtfv_i, align 2
  %idxprom2244 = zext i16 %1736 to i64
  %arrayidx2245 = getelementptr inbounds i32, i32* %1735, i64 %idxprom2244
  %1737 = load i32, i32* %arrayidx2245, align 4
  call void @bsW(%struct.EState* %1731, i32 %conv2243, i32 %1737)
  %1738 = load i16*, i16** %mtfv, align 8
  %1739 = load i32, i32* %gs, align 4
  %add2246 = add nsw i32 %1739, 29
  %idxprom2247 = sext i32 %add2246 to i64
  %arrayidx2248 = getelementptr inbounds i16, i16* %1738, i64 %idxprom2247
  %1740 = load i16, i16* %arrayidx2248, align 2
  store i16 %1740, i16* %mtfv_i, align 2
  %1741 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1742 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1743 = load i16, i16* %mtfv_i, align 2
  %idxprom2249 = zext i16 %1743 to i64
  %arrayidx2250 = getelementptr inbounds i8, i8* %1742, i64 %idxprom2249
  %1744 = load i8, i8* %arrayidx2250, align 1
  %conv2251 = zext i8 %1744 to i32
  %1745 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1746 = load i16, i16* %mtfv_i, align 2
  %idxprom2252 = zext i16 %1746 to i64
  %arrayidx2253 = getelementptr inbounds i32, i32* %1745, i64 %idxprom2252
  %1747 = load i32, i32* %arrayidx2253, align 4
  call void @bsW(%struct.EState* %1741, i32 %conv2251, i32 %1747)
  %1748 = load i16*, i16** %mtfv, align 8
  %1749 = load i32, i32* %gs, align 4
  %add2254 = add nsw i32 %1749, 30
  %idxprom2255 = sext i32 %add2254 to i64
  %arrayidx2256 = getelementptr inbounds i16, i16* %1748, i64 %idxprom2255
  %1750 = load i16, i16* %arrayidx2256, align 2
  store i16 %1750, i16* %mtfv_i, align 2
  %1751 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1752 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1753 = load i16, i16* %mtfv_i, align 2
  %idxprom2257 = zext i16 %1753 to i64
  %arrayidx2258 = getelementptr inbounds i8, i8* %1752, i64 %idxprom2257
  %1754 = load i8, i8* %arrayidx2258, align 1
  %conv2259 = zext i8 %1754 to i32
  %1755 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1756 = load i16, i16* %mtfv_i, align 2
  %idxprom2260 = zext i16 %1756 to i64
  %arrayidx2261 = getelementptr inbounds i32, i32* %1755, i64 %idxprom2260
  %1757 = load i32, i32* %arrayidx2261, align 4
  call void @bsW(%struct.EState* %1751, i32 %conv2259, i32 %1757)
  %1758 = load i16*, i16** %mtfv, align 8
  %1759 = load i32, i32* %gs, align 4
  %add2262 = add nsw i32 %1759, 31
  %idxprom2263 = sext i32 %add2262 to i64
  %arrayidx2264 = getelementptr inbounds i16, i16* %1758, i64 %idxprom2263
  %1760 = load i16, i16* %arrayidx2264, align 2
  store i16 %1760, i16* %mtfv_i, align 2
  %1761 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1762 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1763 = load i16, i16* %mtfv_i, align 2
  %idxprom2265 = zext i16 %1763 to i64
  %arrayidx2266 = getelementptr inbounds i8, i8* %1762, i64 %idxprom2265
  %1764 = load i8, i8* %arrayidx2266, align 1
  %conv2267 = zext i8 %1764 to i32
  %1765 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1766 = load i16, i16* %mtfv_i, align 2
  %idxprom2268 = zext i16 %1766 to i64
  %arrayidx2269 = getelementptr inbounds i32, i32* %1765, i64 %idxprom2268
  %1767 = load i32, i32* %arrayidx2269, align 4
  call void @bsW(%struct.EState* %1761, i32 %conv2267, i32 %1767)
  %1768 = load i16*, i16** %mtfv, align 8
  %1769 = load i32, i32* %gs, align 4
  %add2270 = add nsw i32 %1769, 32
  %idxprom2271 = sext i32 %add2270 to i64
  %arrayidx2272 = getelementptr inbounds i16, i16* %1768, i64 %idxprom2271
  %1770 = load i16, i16* %arrayidx2272, align 2
  store i16 %1770, i16* %mtfv_i, align 2
  %1771 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1772 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1773 = load i16, i16* %mtfv_i, align 2
  %idxprom2273 = zext i16 %1773 to i64
  %arrayidx2274 = getelementptr inbounds i8, i8* %1772, i64 %idxprom2273
  %1774 = load i8, i8* %arrayidx2274, align 1
  %conv2275 = zext i8 %1774 to i32
  %1775 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1776 = load i16, i16* %mtfv_i, align 2
  %idxprom2276 = zext i16 %1776 to i64
  %arrayidx2277 = getelementptr inbounds i32, i32* %1775, i64 %idxprom2276
  %1777 = load i32, i32* %arrayidx2277, align 4
  call void @bsW(%struct.EState* %1771, i32 %conv2275, i32 %1777)
  %1778 = load i16*, i16** %mtfv, align 8
  %1779 = load i32, i32* %gs, align 4
  %add2278 = add nsw i32 %1779, 33
  %idxprom2279 = sext i32 %add2278 to i64
  %arrayidx2280 = getelementptr inbounds i16, i16* %1778, i64 %idxprom2279
  %1780 = load i16, i16* %arrayidx2280, align 2
  store i16 %1780, i16* %mtfv_i, align 2
  %1781 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1782 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1783 = load i16, i16* %mtfv_i, align 2
  %idxprom2281 = zext i16 %1783 to i64
  %arrayidx2282 = getelementptr inbounds i8, i8* %1782, i64 %idxprom2281
  %1784 = load i8, i8* %arrayidx2282, align 1
  %conv2283 = zext i8 %1784 to i32
  %1785 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1786 = load i16, i16* %mtfv_i, align 2
  %idxprom2284 = zext i16 %1786 to i64
  %arrayidx2285 = getelementptr inbounds i32, i32* %1785, i64 %idxprom2284
  %1787 = load i32, i32* %arrayidx2285, align 4
  call void @bsW(%struct.EState* %1781, i32 %conv2283, i32 %1787)
  %1788 = load i16*, i16** %mtfv, align 8
  %1789 = load i32, i32* %gs, align 4
  %add2286 = add nsw i32 %1789, 34
  %idxprom2287 = sext i32 %add2286 to i64
  %arrayidx2288 = getelementptr inbounds i16, i16* %1788, i64 %idxprom2287
  %1790 = load i16, i16* %arrayidx2288, align 2
  store i16 %1790, i16* %mtfv_i, align 2
  %1791 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1792 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1793 = load i16, i16* %mtfv_i, align 2
  %idxprom2289 = zext i16 %1793 to i64
  %arrayidx2290 = getelementptr inbounds i8, i8* %1792, i64 %idxprom2289
  %1794 = load i8, i8* %arrayidx2290, align 1
  %conv2291 = zext i8 %1794 to i32
  %1795 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1796 = load i16, i16* %mtfv_i, align 2
  %idxprom2292 = zext i16 %1796 to i64
  %arrayidx2293 = getelementptr inbounds i32, i32* %1795, i64 %idxprom2292
  %1797 = load i32, i32* %arrayidx2293, align 4
  call void @bsW(%struct.EState* %1791, i32 %conv2291, i32 %1797)
  %1798 = load i16*, i16** %mtfv, align 8
  %1799 = load i32, i32* %gs, align 4
  %add2294 = add nsw i32 %1799, 35
  %idxprom2295 = sext i32 %add2294 to i64
  %arrayidx2296 = getelementptr inbounds i16, i16* %1798, i64 %idxprom2295
  %1800 = load i16, i16* %arrayidx2296, align 2
  store i16 %1800, i16* %mtfv_i, align 2
  %1801 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1802 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1803 = load i16, i16* %mtfv_i, align 2
  %idxprom2297 = zext i16 %1803 to i64
  %arrayidx2298 = getelementptr inbounds i8, i8* %1802, i64 %idxprom2297
  %1804 = load i8, i8* %arrayidx2298, align 1
  %conv2299 = zext i8 %1804 to i32
  %1805 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1806 = load i16, i16* %mtfv_i, align 2
  %idxprom2300 = zext i16 %1806 to i64
  %arrayidx2301 = getelementptr inbounds i32, i32* %1805, i64 %idxprom2300
  %1807 = load i32, i32* %arrayidx2301, align 4
  call void @bsW(%struct.EState* %1801, i32 %conv2299, i32 %1807)
  %1808 = load i16*, i16** %mtfv, align 8
  %1809 = load i32, i32* %gs, align 4
  %add2302 = add nsw i32 %1809, 36
  %idxprom2303 = sext i32 %add2302 to i64
  %arrayidx2304 = getelementptr inbounds i16, i16* %1808, i64 %idxprom2303
  %1810 = load i16, i16* %arrayidx2304, align 2
  store i16 %1810, i16* %mtfv_i, align 2
  %1811 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1812 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1813 = load i16, i16* %mtfv_i, align 2
  %idxprom2305 = zext i16 %1813 to i64
  %arrayidx2306 = getelementptr inbounds i8, i8* %1812, i64 %idxprom2305
  %1814 = load i8, i8* %arrayidx2306, align 1
  %conv2307 = zext i8 %1814 to i32
  %1815 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1816 = load i16, i16* %mtfv_i, align 2
  %idxprom2308 = zext i16 %1816 to i64
  %arrayidx2309 = getelementptr inbounds i32, i32* %1815, i64 %idxprom2308
  %1817 = load i32, i32* %arrayidx2309, align 4
  call void @bsW(%struct.EState* %1811, i32 %conv2307, i32 %1817)
  %1818 = load i16*, i16** %mtfv, align 8
  %1819 = load i32, i32* %gs, align 4
  %add2310 = add nsw i32 %1819, 37
  %idxprom2311 = sext i32 %add2310 to i64
  %arrayidx2312 = getelementptr inbounds i16, i16* %1818, i64 %idxprom2311
  %1820 = load i16, i16* %arrayidx2312, align 2
  store i16 %1820, i16* %mtfv_i, align 2
  %1821 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1822 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1823 = load i16, i16* %mtfv_i, align 2
  %idxprom2313 = zext i16 %1823 to i64
  %arrayidx2314 = getelementptr inbounds i8, i8* %1822, i64 %idxprom2313
  %1824 = load i8, i8* %arrayidx2314, align 1
  %conv2315 = zext i8 %1824 to i32
  %1825 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1826 = load i16, i16* %mtfv_i, align 2
  %idxprom2316 = zext i16 %1826 to i64
  %arrayidx2317 = getelementptr inbounds i32, i32* %1825, i64 %idxprom2316
  %1827 = load i32, i32* %arrayidx2317, align 4
  call void @bsW(%struct.EState* %1821, i32 %conv2315, i32 %1827)
  %1828 = load i16*, i16** %mtfv, align 8
  %1829 = load i32, i32* %gs, align 4
  %add2318 = add nsw i32 %1829, 38
  %idxprom2319 = sext i32 %add2318 to i64
  %arrayidx2320 = getelementptr inbounds i16, i16* %1828, i64 %idxprom2319
  %1830 = load i16, i16* %arrayidx2320, align 2
  store i16 %1830, i16* %mtfv_i, align 2
  %1831 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1832 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1833 = load i16, i16* %mtfv_i, align 2
  %idxprom2321 = zext i16 %1833 to i64
  %arrayidx2322 = getelementptr inbounds i8, i8* %1832, i64 %idxprom2321
  %1834 = load i8, i8* %arrayidx2322, align 1
  %conv2323 = zext i8 %1834 to i32
  %1835 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1836 = load i16, i16* %mtfv_i, align 2
  %idxprom2324 = zext i16 %1836 to i64
  %arrayidx2325 = getelementptr inbounds i32, i32* %1835, i64 %idxprom2324
  %1837 = load i32, i32* %arrayidx2325, align 4
  call void @bsW(%struct.EState* %1831, i32 %conv2323, i32 %1837)
  %1838 = load i16*, i16** %mtfv, align 8
  %1839 = load i32, i32* %gs, align 4
  %add2326 = add nsw i32 %1839, 39
  %idxprom2327 = sext i32 %add2326 to i64
  %arrayidx2328 = getelementptr inbounds i16, i16* %1838, i64 %idxprom2327
  %1840 = load i16, i16* %arrayidx2328, align 2
  store i16 %1840, i16* %mtfv_i, align 2
  %1841 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1842 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1843 = load i16, i16* %mtfv_i, align 2
  %idxprom2329 = zext i16 %1843 to i64
  %arrayidx2330 = getelementptr inbounds i8, i8* %1842, i64 %idxprom2329
  %1844 = load i8, i8* %arrayidx2330, align 1
  %conv2331 = zext i8 %1844 to i32
  %1845 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1846 = load i16, i16* %mtfv_i, align 2
  %idxprom2332 = zext i16 %1846 to i64
  %arrayidx2333 = getelementptr inbounds i32, i32* %1845, i64 %idxprom2332
  %1847 = load i32, i32* %arrayidx2333, align 4
  call void @bsW(%struct.EState* %1841, i32 %conv2331, i32 %1847)
  %1848 = load i16*, i16** %mtfv, align 8
  %1849 = load i32, i32* %gs, align 4
  %add2334 = add nsw i32 %1849, 40
  %idxprom2335 = sext i32 %add2334 to i64
  %arrayidx2336 = getelementptr inbounds i16, i16* %1848, i64 %idxprom2335
  %1850 = load i16, i16* %arrayidx2336, align 2
  store i16 %1850, i16* %mtfv_i, align 2
  %1851 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1852 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1853 = load i16, i16* %mtfv_i, align 2
  %idxprom2337 = zext i16 %1853 to i64
  %arrayidx2338 = getelementptr inbounds i8, i8* %1852, i64 %idxprom2337
  %1854 = load i8, i8* %arrayidx2338, align 1
  %conv2339 = zext i8 %1854 to i32
  %1855 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1856 = load i16, i16* %mtfv_i, align 2
  %idxprom2340 = zext i16 %1856 to i64
  %arrayidx2341 = getelementptr inbounds i32, i32* %1855, i64 %idxprom2340
  %1857 = load i32, i32* %arrayidx2341, align 4
  call void @bsW(%struct.EState* %1851, i32 %conv2339, i32 %1857)
  %1858 = load i16*, i16** %mtfv, align 8
  %1859 = load i32, i32* %gs, align 4
  %add2342 = add nsw i32 %1859, 41
  %idxprom2343 = sext i32 %add2342 to i64
  %arrayidx2344 = getelementptr inbounds i16, i16* %1858, i64 %idxprom2343
  %1860 = load i16, i16* %arrayidx2344, align 2
  store i16 %1860, i16* %mtfv_i, align 2
  %1861 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1862 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1863 = load i16, i16* %mtfv_i, align 2
  %idxprom2345 = zext i16 %1863 to i64
  %arrayidx2346 = getelementptr inbounds i8, i8* %1862, i64 %idxprom2345
  %1864 = load i8, i8* %arrayidx2346, align 1
  %conv2347 = zext i8 %1864 to i32
  %1865 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1866 = load i16, i16* %mtfv_i, align 2
  %idxprom2348 = zext i16 %1866 to i64
  %arrayidx2349 = getelementptr inbounds i32, i32* %1865, i64 %idxprom2348
  %1867 = load i32, i32* %arrayidx2349, align 4
  call void @bsW(%struct.EState* %1861, i32 %conv2347, i32 %1867)
  %1868 = load i16*, i16** %mtfv, align 8
  %1869 = load i32, i32* %gs, align 4
  %add2350 = add nsw i32 %1869, 42
  %idxprom2351 = sext i32 %add2350 to i64
  %arrayidx2352 = getelementptr inbounds i16, i16* %1868, i64 %idxprom2351
  %1870 = load i16, i16* %arrayidx2352, align 2
  store i16 %1870, i16* %mtfv_i, align 2
  %1871 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1872 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1873 = load i16, i16* %mtfv_i, align 2
  %idxprom2353 = zext i16 %1873 to i64
  %arrayidx2354 = getelementptr inbounds i8, i8* %1872, i64 %idxprom2353
  %1874 = load i8, i8* %arrayidx2354, align 1
  %conv2355 = zext i8 %1874 to i32
  %1875 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1876 = load i16, i16* %mtfv_i, align 2
  %idxprom2356 = zext i16 %1876 to i64
  %arrayidx2357 = getelementptr inbounds i32, i32* %1875, i64 %idxprom2356
  %1877 = load i32, i32* %arrayidx2357, align 4
  call void @bsW(%struct.EState* %1871, i32 %conv2355, i32 %1877)
  %1878 = load i16*, i16** %mtfv, align 8
  %1879 = load i32, i32* %gs, align 4
  %add2358 = add nsw i32 %1879, 43
  %idxprom2359 = sext i32 %add2358 to i64
  %arrayidx2360 = getelementptr inbounds i16, i16* %1878, i64 %idxprom2359
  %1880 = load i16, i16* %arrayidx2360, align 2
  store i16 %1880, i16* %mtfv_i, align 2
  %1881 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1882 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1883 = load i16, i16* %mtfv_i, align 2
  %idxprom2361 = zext i16 %1883 to i64
  %arrayidx2362 = getelementptr inbounds i8, i8* %1882, i64 %idxprom2361
  %1884 = load i8, i8* %arrayidx2362, align 1
  %conv2363 = zext i8 %1884 to i32
  %1885 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1886 = load i16, i16* %mtfv_i, align 2
  %idxprom2364 = zext i16 %1886 to i64
  %arrayidx2365 = getelementptr inbounds i32, i32* %1885, i64 %idxprom2364
  %1887 = load i32, i32* %arrayidx2365, align 4
  call void @bsW(%struct.EState* %1881, i32 %conv2363, i32 %1887)
  %1888 = load i16*, i16** %mtfv, align 8
  %1889 = load i32, i32* %gs, align 4
  %add2366 = add nsw i32 %1889, 44
  %idxprom2367 = sext i32 %add2366 to i64
  %arrayidx2368 = getelementptr inbounds i16, i16* %1888, i64 %idxprom2367
  %1890 = load i16, i16* %arrayidx2368, align 2
  store i16 %1890, i16* %mtfv_i, align 2
  %1891 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1892 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1893 = load i16, i16* %mtfv_i, align 2
  %idxprom2369 = zext i16 %1893 to i64
  %arrayidx2370 = getelementptr inbounds i8, i8* %1892, i64 %idxprom2369
  %1894 = load i8, i8* %arrayidx2370, align 1
  %conv2371 = zext i8 %1894 to i32
  %1895 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1896 = load i16, i16* %mtfv_i, align 2
  %idxprom2372 = zext i16 %1896 to i64
  %arrayidx2373 = getelementptr inbounds i32, i32* %1895, i64 %idxprom2372
  %1897 = load i32, i32* %arrayidx2373, align 4
  call void @bsW(%struct.EState* %1891, i32 %conv2371, i32 %1897)
  %1898 = load i16*, i16** %mtfv, align 8
  %1899 = load i32, i32* %gs, align 4
  %add2374 = add nsw i32 %1899, 45
  %idxprom2375 = sext i32 %add2374 to i64
  %arrayidx2376 = getelementptr inbounds i16, i16* %1898, i64 %idxprom2375
  %1900 = load i16, i16* %arrayidx2376, align 2
  store i16 %1900, i16* %mtfv_i, align 2
  %1901 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1902 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1903 = load i16, i16* %mtfv_i, align 2
  %idxprom2377 = zext i16 %1903 to i64
  %arrayidx2378 = getelementptr inbounds i8, i8* %1902, i64 %idxprom2377
  %1904 = load i8, i8* %arrayidx2378, align 1
  %conv2379 = zext i8 %1904 to i32
  %1905 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1906 = load i16, i16* %mtfv_i, align 2
  %idxprom2380 = zext i16 %1906 to i64
  %arrayidx2381 = getelementptr inbounds i32, i32* %1905, i64 %idxprom2380
  %1907 = load i32, i32* %arrayidx2381, align 4
  call void @bsW(%struct.EState* %1901, i32 %conv2379, i32 %1907)
  %1908 = load i16*, i16** %mtfv, align 8
  %1909 = load i32, i32* %gs, align 4
  %add2382 = add nsw i32 %1909, 46
  %idxprom2383 = sext i32 %add2382 to i64
  %arrayidx2384 = getelementptr inbounds i16, i16* %1908, i64 %idxprom2383
  %1910 = load i16, i16* %arrayidx2384, align 2
  store i16 %1910, i16* %mtfv_i, align 2
  %1911 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1912 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1913 = load i16, i16* %mtfv_i, align 2
  %idxprom2385 = zext i16 %1913 to i64
  %arrayidx2386 = getelementptr inbounds i8, i8* %1912, i64 %idxprom2385
  %1914 = load i8, i8* %arrayidx2386, align 1
  %conv2387 = zext i8 %1914 to i32
  %1915 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1916 = load i16, i16* %mtfv_i, align 2
  %idxprom2388 = zext i16 %1916 to i64
  %arrayidx2389 = getelementptr inbounds i32, i32* %1915, i64 %idxprom2388
  %1917 = load i32, i32* %arrayidx2389, align 4
  call void @bsW(%struct.EState* %1911, i32 %conv2387, i32 %1917)
  %1918 = load i16*, i16** %mtfv, align 8
  %1919 = load i32, i32* %gs, align 4
  %add2390 = add nsw i32 %1919, 47
  %idxprom2391 = sext i32 %add2390 to i64
  %arrayidx2392 = getelementptr inbounds i16, i16* %1918, i64 %idxprom2391
  %1920 = load i16, i16* %arrayidx2392, align 2
  store i16 %1920, i16* %mtfv_i, align 2
  %1921 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1922 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1923 = load i16, i16* %mtfv_i, align 2
  %idxprom2393 = zext i16 %1923 to i64
  %arrayidx2394 = getelementptr inbounds i8, i8* %1922, i64 %idxprom2393
  %1924 = load i8, i8* %arrayidx2394, align 1
  %conv2395 = zext i8 %1924 to i32
  %1925 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1926 = load i16, i16* %mtfv_i, align 2
  %idxprom2396 = zext i16 %1926 to i64
  %arrayidx2397 = getelementptr inbounds i32, i32* %1925, i64 %idxprom2396
  %1927 = load i32, i32* %arrayidx2397, align 4
  call void @bsW(%struct.EState* %1921, i32 %conv2395, i32 %1927)
  %1928 = load i16*, i16** %mtfv, align 8
  %1929 = load i32, i32* %gs, align 4
  %add2398 = add nsw i32 %1929, 48
  %idxprom2399 = sext i32 %add2398 to i64
  %arrayidx2400 = getelementptr inbounds i16, i16* %1928, i64 %idxprom2399
  %1930 = load i16, i16* %arrayidx2400, align 2
  store i16 %1930, i16* %mtfv_i, align 2
  %1931 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1932 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1933 = load i16, i16* %mtfv_i, align 2
  %idxprom2401 = zext i16 %1933 to i64
  %arrayidx2402 = getelementptr inbounds i8, i8* %1932, i64 %idxprom2401
  %1934 = load i8, i8* %arrayidx2402, align 1
  %conv2403 = zext i8 %1934 to i32
  %1935 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1936 = load i16, i16* %mtfv_i, align 2
  %idxprom2404 = zext i16 %1936 to i64
  %arrayidx2405 = getelementptr inbounds i32, i32* %1935, i64 %idxprom2404
  %1937 = load i32, i32* %arrayidx2405, align 4
  call void @bsW(%struct.EState* %1931, i32 %conv2403, i32 %1937)
  %1938 = load i16*, i16** %mtfv, align 8
  %1939 = load i32, i32* %gs, align 4
  %add2406 = add nsw i32 %1939, 49
  %idxprom2407 = sext i32 %add2406 to i64
  %arrayidx2408 = getelementptr inbounds i16, i16* %1938, i64 %idxprom2407
  %1940 = load i16, i16* %arrayidx2408, align 2
  store i16 %1940, i16* %mtfv_i, align 2
  %1941 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1942 = load i8*, i8** %s_len_sel_selCtr, align 8
  %1943 = load i16, i16* %mtfv_i, align 2
  %idxprom2409 = zext i16 %1943 to i64
  %arrayidx2410 = getelementptr inbounds i8, i8* %1942, i64 %idxprom2409
  %1944 = load i8, i8* %arrayidx2410, align 1
  %conv2411 = zext i8 %1944 to i32
  %1945 = load i32*, i32** %s_code_sel_selCtr, align 8
  %1946 = load i16, i16* %mtfv_i, align 2
  %idxprom2412 = zext i16 %1946 to i64
  %arrayidx2413 = getelementptr inbounds i32, i32* %1945, i64 %idxprom2412
  %1947 = load i32, i32* %arrayidx2413, align 4
  call void @bsW(%struct.EState* %1941, i32 %conv2411, i32 %1947)
  br label %if.end2443

if.else2414:                                      ; preds = %land.lhs.true1994, %if.end1991
  %1948 = load i32, i32* %gs, align 4
  store i32 %1948, i32* %i, align 4
  br label %for.cond2415

for.cond2415:                                     ; preds = %for.inc2440, %if.else2414
  %1949 = load i32, i32* %i, align 4
  %1950 = load i32, i32* %ge, align 4
  %cmp2416 = icmp sle i32 %1949, %1950
  br i1 %cmp2416, label %for.body2418, label %for.end2442

for.body2418:                                     ; preds = %for.cond2415
  %1951 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %1952 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %len2419 = getelementptr inbounds %struct.EState, %struct.EState* %1952, i32 0, i32 35
  %1953 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector2420 = getelementptr inbounds %struct.EState, %struct.EState* %1953, i32 0, i32 33
  %1954 = load i32, i32* %selCtr, align 4
  %idxprom2421 = sext i32 %1954 to i64
  %arrayidx2422 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2420, i64 0, i64 %idxprom2421
  %1955 = load i8, i8* %arrayidx2422, align 1
  %idxprom2423 = zext i8 %1955 to i64
  %arrayidx2424 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len2419, i64 0, i64 %idxprom2423
  %1956 = load i16*, i16** %mtfv, align 8
  %1957 = load i32, i32* %i, align 4
  %idxprom2425 = sext i32 %1957 to i64
  %arrayidx2426 = getelementptr inbounds i16, i16* %1956, i64 %idxprom2425
  %1958 = load i16, i16* %arrayidx2426, align 2
  %idxprom2427 = zext i16 %1958 to i64
  %arrayidx2428 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx2424, i64 0, i64 %idxprom2427
  %1959 = load i8, i8* %arrayidx2428, align 1
  %conv2429 = zext i8 %1959 to i32
  %1960 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %code2430 = getelementptr inbounds %struct.EState, %struct.EState* %1960, i32 0, i32 36
  %1961 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %selector2431 = getelementptr inbounds %struct.EState, %struct.EState* %1961, i32 0, i32 33
  %1962 = load i32, i32* %selCtr, align 4
  %idxprom2432 = sext i32 %1962 to i64
  %arrayidx2433 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2431, i64 0, i64 %idxprom2432
  %1963 = load i8, i8* %arrayidx2433, align 1
  %idxprom2434 = zext i8 %1963 to i64
  %arrayidx2435 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code2430, i64 0, i64 %idxprom2434
  %1964 = load i16*, i16** %mtfv, align 8
  %1965 = load i32, i32* %i, align 4
  %idxprom2436 = sext i32 %1965 to i64
  %arrayidx2437 = getelementptr inbounds i16, i16* %1964, i64 %idxprom2436
  %1966 = load i16, i16* %arrayidx2437, align 2
  %idxprom2438 = zext i16 %1966 to i64
  %arrayidx2439 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2435, i64 0, i64 %idxprom2438
  %1967 = load i32, i32* %arrayidx2439, align 4
  call void @bsW(%struct.EState* %1951, i32 %conv2429, i32 %1967)
  br label %for.inc2440

for.inc2440:                                      ; preds = %for.body2418
  %1968 = load i32, i32* %i, align 4
  %inc2441 = add nsw i32 %1968, 1
  store i32 %inc2441, i32* %i, align 4
  br label %for.cond2415

for.end2442:                                      ; preds = %for.cond2415
  br label %if.end2443

if.end2443:                                       ; preds = %for.end2442, %if.then1999
  %1969 = load i32, i32* %ge, align 4
  %add2444 = add nsw i32 %1969, 1
  store i32 %add2444, i32* %gs, align 4
  %1970 = load i32, i32* %selCtr, align 4
  %inc2445 = add nsw i32 %1970, 1
  store i32 %inc2445, i32* %selCtr, align 4
  br label %while.body1969

while.end2446:                                    ; preds = %if.then1973
  %1971 = load i32, i32* %selCtr, align 4
  %1972 = load i32, i32* %nSelectors, align 4
  %cmp2447 = icmp eq i32 %1971, %1972
  br i1 %cmp2447, label %if.end2450, label %if.then2449

if.then2449:                                      ; preds = %while.end2446
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %if.end2450

if.end2450:                                       ; preds = %if.then2449, %while.end2446
  %1973 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %verbosity2451 = getelementptr inbounds %struct.EState, %struct.EState* %1973, i32 0, i32 28
  %1974 = load i32, i32* %verbosity2451, align 8
  %cmp2452 = icmp sge i32 %1974, 3
  br i1 %cmp2452, label %if.then2454, label %if.end2458

if.then2454:                                      ; preds = %if.end2450
  %1975 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1976 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ2455 = getelementptr inbounds %struct.EState, %struct.EState* %1976, i32 0, i32 19
  %1977 = load i32, i32* %numZ2455, align 4
  %1978 = load i32, i32* %nBytes, align 4
  %sub2456 = sub nsw i32 %1977, %1978
  %call2457 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1975, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.153, i64 0, i64 0), i32 %sub2456)
  br label %if.end2458

if.end2458:                                       ; preds = %if.then2454, %if.end2450
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsFinishWrite(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %1 = load i32, i32* %bsLive, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 24
  %3 = load i32, i32* %bsBuff, align 8
  %shr = lshr i32 %3, 24
  %conv = trunc i32 %shr to i8
  %4 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 11
  %5 = load i8*, i8** %zbits, align 8
  %6 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 19
  %7 = load i32, i32* %numZ, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %8 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %numZ1 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 19
  %9 = load i32, i32* %numZ1, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %numZ1, align 4
  %10 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsBuff2 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 24
  %11 = load i32, i32* %bsBuff2, align 8
  %shl = shl i32 %11, 8
  store i32 %shl, i32* %bsBuff2, align 8
  %12 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %bsLive3 = getelementptr inbounds %struct.EState, %struct.EState* %12, i32 0, i32 25
  %13 = load i32, i32* %bsLive3, align 4
  %sub = sub nsw i32 %13, 8
  store i32 %sub, i32* %bsLive3, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @makeMaps_e(%struct.EState* %s) #0 {
entry:
  %s.addr = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %s.addr, align 8
  %0 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  store i32 0, i32* %nInUse, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %2, i32 0, i32 22
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse1 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 21
  %6 = load i32, i32* %nInUse1, align 4
  %conv = trunc i32 %6 to i8
  %7 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %unseqToSeq = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 23
  %8 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %8 to i64
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %unseqToSeq, i64 0, i64 %idxprom2
  store i8 %conv, i8* %arrayidx3, align 1
  %9 = load %struct.EState*, %struct.EState** %s.addr, align 8
  %nInUse4 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 21
  %10 = load i32, i32* %nInUse4, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %nInUse4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  %inc5 = add nsw i32 %11, 1
  store i32 %inc5, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_decompress(%struct.DState* %s) #0 {
entry:
  %s.addr = alloca %struct.DState*, align 8
  %uc = alloca i8, align 1
  %retVal = alloca i32, align 4
  %minLen = alloca i32, align 4
  %maxLen = alloca i32, align 4
  %strm = alloca %struct.bz_stream*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca i32, align 4
  %alphaSize = alloca i32, align 4
  %nGroups = alloca i32, align 4
  %nSelectors = alloca i32, align 4
  %EOB = alloca i32, align 4
  %groupNo = alloca i32, align 4
  %groupPos = alloca i32, align 4
  %nextSym = alloca i32, align 4
  %nblockMAX = alloca i32, align 4
  %nblock = alloca i32, align 4
  %es = alloca i32, align 4
  %N = alloca i32, align 4
  %curr = alloca i32, align 4
  %zt = alloca i32, align 4
  %zn = alloca i32, align 4
  %zvec = alloca i32, align 4
  %zj = alloca i32, align 4
  %gSel = alloca i32, align 4
  %gMinlen = alloca i32, align 4
  %gLimit = alloca i32*, align 8
  %gBase = alloca i32*, align 8
  %gPerm = alloca i32*, align 8
  %v = alloca i32, align 4
  %v69 = alloca i32, align 4
  %v125 = alloca i32, align 4
  %v181 = alloca i32, align 4
  %v279 = alloca i32, align 4
  %v340 = alloca i32, align 4
  %v396 = alloca i32, align 4
  %v452 = alloca i32, align 4
  %v508 = alloca i32, align 4
  %v564 = alloca i32, align 4
  %v627 = alloca i32, align 4
  %v683 = alloca i32, align 4
  %v739 = alloca i32, align 4
  %v795 = alloca i32, align 4
  %v851 = alloca i32, align 4
  %v902 = alloca i32, align 4
  %v958 = alloca i32, align 4
  %v1014 = alloca i32, align 4
  %v1085 = alloca i32, align 4
  %v1168 = alloca i32, align 4
  %v1242 = alloca i32, align 4
  %v1299 = alloca i32, align 4
  %v1359 = alloca i32, align 4
  %pos = alloca [6 x i8], align 1
  %tmp = alloca i8, align 1
  %v1420 = alloca i8, align 1
  %v1470 = alloca i32, align 4
  %v1534 = alloca i32, align 4
  %v1591 = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %kk = alloca i32, align 4
  %v1789 = alloca i32, align 4
  %v1855 = alloca i32, align 4
  %v1982 = alloca i32, align 4
  %v2048 = alloca i32, align 4
  %ii2168 = alloca i32, align 4
  %jj2169 = alloca i32, align 4
  %kk2170 = alloca i32, align 4
  %pp = alloca i32, align 4
  %lno = alloca i32, align 4
  %off = alloca i32, align 4
  %nn = alloca i32, align 4
  %z = alloca i32, align 4
  %v2398 = alloca i32, align 4
  %v2464 = alloca i32, align 4
  %tmp2689 = alloca i32, align 4
  %v2928 = alloca i32, align 4
  %v2985 = alloca i32, align 4
  %v3042 = alloca i32, align 4
  %v3099 = alloca i32, align 4
  %v3156 = alloca i32, align 4
  %v3213 = alloca i32, align 4
  %v3270 = alloca i32, align 4
  %v3327 = alloca i32, align 4
  %v3384 = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %s.addr, align 8
  %0 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8
  store %struct.bz_stream* %1, %struct.bz_stream** %strm, align 8
  %2 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state = getelementptr inbounds %struct.DState, %struct.DState* %2, i32 0, i32 1
  %3 = load i32, i32* %state, align 8
  %cmp = icmp eq i32 %3, 10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_i = getelementptr inbounds %struct.DState, %struct.DState* %4, i32 0, i32 40
  store i32 0, i32* %save_i, align 4
  %5 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_j = getelementptr inbounds %struct.DState, %struct.DState* %5, i32 0, i32 41
  store i32 0, i32* %save_j, align 8
  %6 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_t = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 42
  store i32 0, i32* %save_t, align 4
  %7 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_alphaSize = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 43
  store i32 0, i32* %save_alphaSize, align 8
  %8 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nGroups = getelementptr inbounds %struct.DState, %struct.DState* %8, i32 0, i32 44
  store i32 0, i32* %save_nGroups, align 4
  %9 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nSelectors = getelementptr inbounds %struct.DState, %struct.DState* %9, i32 0, i32 45
  store i32 0, i32* %save_nSelectors, align 8
  %10 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_EOB = getelementptr inbounds %struct.DState, %struct.DState* %10, i32 0, i32 46
  store i32 0, i32* %save_EOB, align 4
  %11 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupNo = getelementptr inbounds %struct.DState, %struct.DState* %11, i32 0, i32 47
  store i32 0, i32* %save_groupNo, align 8
  %12 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupPos = getelementptr inbounds %struct.DState, %struct.DState* %12, i32 0, i32 48
  store i32 0, i32* %save_groupPos, align 4
  %13 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nextSym = getelementptr inbounds %struct.DState, %struct.DState* %13, i32 0, i32 49
  store i32 0, i32* %save_nextSym, align 8
  %14 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblockMAX = getelementptr inbounds %struct.DState, %struct.DState* %14, i32 0, i32 50
  store i32 0, i32* %save_nblockMAX, align 4
  %15 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %15, i32 0, i32 51
  store i32 0, i32* %save_nblock, align 8
  %16 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_es = getelementptr inbounds %struct.DState, %struct.DState* %16, i32 0, i32 52
  store i32 0, i32* %save_es, align 4
  %17 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_N = getelementptr inbounds %struct.DState, %struct.DState* %17, i32 0, i32 53
  store i32 0, i32* %save_N, align 8
  %18 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_curr = getelementptr inbounds %struct.DState, %struct.DState* %18, i32 0, i32 54
  store i32 0, i32* %save_curr, align 4
  %19 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zt = getelementptr inbounds %struct.DState, %struct.DState* %19, i32 0, i32 55
  store i32 0, i32* %save_zt, align 8
  %20 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zn = getelementptr inbounds %struct.DState, %struct.DState* %20, i32 0, i32 56
  store i32 0, i32* %save_zn, align 4
  %21 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zvec = getelementptr inbounds %struct.DState, %struct.DState* %21, i32 0, i32 57
  store i32 0, i32* %save_zvec, align 8
  %22 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zj = getelementptr inbounds %struct.DState, %struct.DState* %22, i32 0, i32 58
  store i32 0, i32* %save_zj, align 4
  %23 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gSel = getelementptr inbounds %struct.DState, %struct.DState* %23, i32 0, i32 59
  store i32 0, i32* %save_gSel, align 8
  %24 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gMinlen = getelementptr inbounds %struct.DState, %struct.DState* %24, i32 0, i32 60
  store i32 0, i32* %save_gMinlen, align 4
  %25 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gLimit = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 61
  store i32* null, i32** %save_gLimit, align 8
  %26 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gBase = getelementptr inbounds %struct.DState, %struct.DState* %26, i32 0, i32 62
  store i32* null, i32** %save_gBase, align 8
  %27 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gPerm = getelementptr inbounds %struct.DState, %struct.DState* %27, i32 0, i32 63
  store i32* null, i32** %save_gPerm, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %28 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_i2 = getelementptr inbounds %struct.DState, %struct.DState* %28, i32 0, i32 40
  %29 = load i32, i32* %save_i2, align 4
  store i32 %29, i32* %i, align 4
  %30 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_j3 = getelementptr inbounds %struct.DState, %struct.DState* %30, i32 0, i32 41
  %31 = load i32, i32* %save_j3, align 8
  store i32 %31, i32* %j, align 4
  %32 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_t4 = getelementptr inbounds %struct.DState, %struct.DState* %32, i32 0, i32 42
  %33 = load i32, i32* %save_t4, align 4
  store i32 %33, i32* %t, align 4
  %34 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_alphaSize5 = getelementptr inbounds %struct.DState, %struct.DState* %34, i32 0, i32 43
  %35 = load i32, i32* %save_alphaSize5, align 8
  store i32 %35, i32* %alphaSize, align 4
  %36 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nGroups6 = getelementptr inbounds %struct.DState, %struct.DState* %36, i32 0, i32 44
  %37 = load i32, i32* %save_nGroups6, align 4
  store i32 %37, i32* %nGroups, align 4
  %38 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nSelectors7 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 45
  %39 = load i32, i32* %save_nSelectors7, align 8
  store i32 %39, i32* %nSelectors, align 4
  %40 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_EOB8 = getelementptr inbounds %struct.DState, %struct.DState* %40, i32 0, i32 46
  %41 = load i32, i32* %save_EOB8, align 4
  store i32 %41, i32* %EOB, align 4
  %42 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupNo9 = getelementptr inbounds %struct.DState, %struct.DState* %42, i32 0, i32 47
  %43 = load i32, i32* %save_groupNo9, align 8
  store i32 %43, i32* %groupNo, align 4
  %44 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupPos10 = getelementptr inbounds %struct.DState, %struct.DState* %44, i32 0, i32 48
  %45 = load i32, i32* %save_groupPos10, align 4
  store i32 %45, i32* %groupPos, align 4
  %46 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nextSym11 = getelementptr inbounds %struct.DState, %struct.DState* %46, i32 0, i32 49
  %47 = load i32, i32* %save_nextSym11, align 8
  store i32 %47, i32* %nextSym, align 4
  %48 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblockMAX12 = getelementptr inbounds %struct.DState, %struct.DState* %48, i32 0, i32 50
  %49 = load i32, i32* %save_nblockMAX12, align 4
  store i32 %49, i32* %nblockMAX, align 4
  %50 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock13 = getelementptr inbounds %struct.DState, %struct.DState* %50, i32 0, i32 51
  %51 = load i32, i32* %save_nblock13, align 8
  store i32 %51, i32* %nblock, align 4
  %52 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_es14 = getelementptr inbounds %struct.DState, %struct.DState* %52, i32 0, i32 52
  %53 = load i32, i32* %save_es14, align 4
  store i32 %53, i32* %es, align 4
  %54 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_N15 = getelementptr inbounds %struct.DState, %struct.DState* %54, i32 0, i32 53
  %55 = load i32, i32* %save_N15, align 8
  store i32 %55, i32* %N, align 4
  %56 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_curr16 = getelementptr inbounds %struct.DState, %struct.DState* %56, i32 0, i32 54
  %57 = load i32, i32* %save_curr16, align 4
  store i32 %57, i32* %curr, align 4
  %58 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zt17 = getelementptr inbounds %struct.DState, %struct.DState* %58, i32 0, i32 55
  %59 = load i32, i32* %save_zt17, align 8
  store i32 %59, i32* %zt, align 4
  %60 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zn18 = getelementptr inbounds %struct.DState, %struct.DState* %60, i32 0, i32 56
  %61 = load i32, i32* %save_zn18, align 4
  store i32 %61, i32* %zn, align 4
  %62 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zvec19 = getelementptr inbounds %struct.DState, %struct.DState* %62, i32 0, i32 57
  %63 = load i32, i32* %save_zvec19, align 8
  store i32 %63, i32* %zvec, align 4
  %64 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zj20 = getelementptr inbounds %struct.DState, %struct.DState* %64, i32 0, i32 58
  %65 = load i32, i32* %save_zj20, align 4
  store i32 %65, i32* %zj, align 4
  %66 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gSel21 = getelementptr inbounds %struct.DState, %struct.DState* %66, i32 0, i32 59
  %67 = load i32, i32* %save_gSel21, align 8
  store i32 %67, i32* %gSel, align 4
  %68 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gMinlen22 = getelementptr inbounds %struct.DState, %struct.DState* %68, i32 0, i32 60
  %69 = load i32, i32* %save_gMinlen22, align 4
  store i32 %69, i32* %gMinlen, align 4
  %70 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gLimit23 = getelementptr inbounds %struct.DState, %struct.DState* %70, i32 0, i32 61
  %71 = load i32*, i32** %save_gLimit23, align 8
  store i32* %71, i32** %gLimit, align 8
  %72 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gBase24 = getelementptr inbounds %struct.DState, %struct.DState* %72, i32 0, i32 62
  %73 = load i32*, i32** %save_gBase24, align 8
  store i32* %73, i32** %gBase, align 8
  %74 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gPerm25 = getelementptr inbounds %struct.DState, %struct.DState* %74, i32 0, i32 63
  %75 = load i32*, i32** %save_gPerm25, align 8
  store i32* %75, i32** %gPerm, align 8
  store i32 0, i32* %retVal, align 4
  %76 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state26 = getelementptr inbounds %struct.DState, %struct.DState* %76, i32 0, i32 1
  %77 = load i32, i32* %state26, align 8
  switch i32 %77, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb62
    i32 12, label %sw.bb118
    i32 13, label %sw.bb174
    i32 14, label %sw.bb272
    i32 15, label %sw.bb333
    i32 16, label %sw.bb389
    i32 17, label %sw.bb445
    i32 18, label %sw.bb501
    i32 19, label %sw.bb557
    i32 20, label %sw.bb620
    i32 21, label %sw.bb676
    i32 22, label %sw.bb732
    i32 23, label %sw.bb788
    i32 24, label %sw.bb844
    i32 25, label %sw.bb895
    i32 26, label %sw.bb951
    i32 27, label %sw.bb1007
    i32 28, label %sw.bb1078
    i32 29, label %sw.bb1161
    i32 30, label %sw.bb1235
    i32 31, label %sw.bb1292
    i32 32, label %sw.bb1351
    i32 33, label %sw.bb1462
    i32 34, label %sw.bb1526
    i32 35, label %sw.bb1583
    i32 36, label %sw.bb1781
    i32 37, label %sw.bb1847
    i32 38, label %sw.bb1974
    i32 39, label %sw.bb2040
    i32 40, label %sw.bb2390
    i32 41, label %sw.bb2456
    i32 42, label %sw.bb2920
    i32 43, label %sw.bb2977
    i32 44, label %sw.bb3034
    i32 45, label %sw.bb3091
    i32 46, label %sw.bb3148
    i32 47, label %sw.bb3205
    i32 48, label %sw.bb3262
    i32 49, label %sw.bb3319
    i32 50, label %sw.bb3376
  ]

sw.bb:                                            ; preds = %if.end
  %78 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state27 = getelementptr inbounds %struct.DState, %struct.DState* %78, i32 0, i32 1
  store i32 10, i32* %state27, align 8
  br label %while.body

while.body:                                       ; preds = %if.end56, %sw.bb
  %79 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive = getelementptr inbounds %struct.DState, %struct.DState* %79, i32 0, i32 8
  %80 = load i32, i32* %bsLive, align 4
  %cmp28 = icmp sge i32 %80, 8
  br i1 %cmp28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %while.body
  %81 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff = getelementptr inbounds %struct.DState, %struct.DState* %81, i32 0, i32 7
  %82 = load i32, i32* %bsBuff, align 8
  %83 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive30 = getelementptr inbounds %struct.DState, %struct.DState* %83, i32 0, i32 8
  %84 = load i32, i32* %bsLive30, align 4
  %sub = sub nsw i32 %84, 8
  %shr = lshr i32 %82, %sub
  %and = and i32 %shr, 255
  store i32 %and, i32* %v, align 4
  %85 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive31 = getelementptr inbounds %struct.DState, %struct.DState* %85, i32 0, i32 8
  %86 = load i32, i32* %bsLive31, align 4
  %sub32 = sub nsw i32 %86, 8
  store i32 %sub32, i32* %bsLive31, align 4
  %87 = load i32, i32* %v, align 4
  %conv = trunc i32 %87 to i8
  store i8 %conv, i8* %uc, align 1
  br label %while.end

if.end33:                                         ; preds = %while.body
  %88 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm34 = getelementptr inbounds %struct.DState, %struct.DState* %88, i32 0, i32 0
  %89 = load %struct.bz_stream*, %struct.bz_stream** %strm34, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %89, i32 0, i32 1
  %90 = load i32, i32* %avail_in, align 8
  %cmp35 = icmp eq i32 %90, 0
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end33
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end38:                                         ; preds = %if.end33
  %91 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff39 = getelementptr inbounds %struct.DState, %struct.DState* %91, i32 0, i32 7
  %92 = load i32, i32* %bsBuff39, align 8
  %shl = shl i32 %92, 8
  %93 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm40 = getelementptr inbounds %struct.DState, %struct.DState* %93, i32 0, i32 0
  %94 = load %struct.bz_stream*, %struct.bz_stream** %strm40, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %94, i32 0, i32 0
  %95 = load i8*, i8** %next_in, align 8
  %96 = load i8, i8* %95, align 1
  %conv41 = zext i8 %96 to i32
  %or = or i32 %shl, %conv41
  %97 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff42 = getelementptr inbounds %struct.DState, %struct.DState* %97, i32 0, i32 7
  store i32 %or, i32* %bsBuff42, align 8
  %98 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive43 = getelementptr inbounds %struct.DState, %struct.DState* %98, i32 0, i32 8
  %99 = load i32, i32* %bsLive43, align 4
  %add = add nsw i32 %99, 8
  store i32 %add, i32* %bsLive43, align 4
  %100 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm44 = getelementptr inbounds %struct.DState, %struct.DState* %100, i32 0, i32 0
  %101 = load %struct.bz_stream*, %struct.bz_stream** %strm44, align 8
  %next_in45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %101, i32 0, i32 0
  %102 = load i8*, i8** %next_in45, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %incdec.ptr, i8** %next_in45, align 8
  %103 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm46 = getelementptr inbounds %struct.DState, %struct.DState* %103, i32 0, i32 0
  %104 = load %struct.bz_stream*, %struct.bz_stream** %strm46, align 8
  %avail_in47 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %104, i32 0, i32 1
  %105 = load i32, i32* %avail_in47, align 8
  %dec = add i32 %105, -1
  store i32 %dec, i32* %avail_in47, align 8
  %106 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm48 = getelementptr inbounds %struct.DState, %struct.DState* %106, i32 0, i32 0
  %107 = load %struct.bz_stream*, %struct.bz_stream** %strm48, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %107, i32 0, i32 2
  %108 = load i32, i32* %total_in_lo32, align 4
  %inc = add i32 %108, 1
  store i32 %inc, i32* %total_in_lo32, align 4
  %109 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm49 = getelementptr inbounds %struct.DState, %struct.DState* %109, i32 0, i32 0
  %110 = load %struct.bz_stream*, %struct.bz_stream** %strm49, align 8
  %total_in_lo3250 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %110, i32 0, i32 2
  %111 = load i32, i32* %total_in_lo3250, align 4
  %cmp51 = icmp eq i32 %111, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end38
  %112 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm54 = getelementptr inbounds %struct.DState, %struct.DState* %112, i32 0, i32 0
  %113 = load %struct.bz_stream*, %struct.bz_stream** %strm54, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %113, i32 0, i32 3
  %114 = load i32, i32* %total_in_hi32, align 8
  %inc55 = add i32 %114, 1
  store i32 %inc55, i32* %total_in_hi32, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end38
  br label %while.body

while.end:                                        ; preds = %if.then29
  %115 = load i8, i8* %uc, align 1
  %conv57 = zext i8 %115 to i32
  %cmp58 = icmp ne i32 %conv57, 66
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %while.end
  store i32 -5, i32* %retVal, align 4
  br label %save_state_and_return

if.end61:                                         ; preds = %while.end
  br label %sw.bb62

sw.bb62:                                          ; preds = %if.end61, %if.end
  %116 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state63 = getelementptr inbounds %struct.DState, %struct.DState* %116, i32 0, i32 1
  store i32 11, i32* %state63, align 8
  br label %while.body64

while.body64:                                     ; preds = %if.end111, %sw.bb62
  %117 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive65 = getelementptr inbounds %struct.DState, %struct.DState* %117, i32 0, i32 8
  %118 = load i32, i32* %bsLive65, align 4
  %cmp66 = icmp sge i32 %118, 8
  br i1 %cmp66, label %if.then68, label %if.end78

if.then68:                                        ; preds = %while.body64
  %119 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff70 = getelementptr inbounds %struct.DState, %struct.DState* %119, i32 0, i32 7
  %120 = load i32, i32* %bsBuff70, align 8
  %121 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive71 = getelementptr inbounds %struct.DState, %struct.DState* %121, i32 0, i32 8
  %122 = load i32, i32* %bsLive71, align 4
  %sub72 = sub nsw i32 %122, 8
  %shr73 = lshr i32 %120, %sub72
  %and74 = and i32 %shr73, 255
  store i32 %and74, i32* %v69, align 4
  %123 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive75 = getelementptr inbounds %struct.DState, %struct.DState* %123, i32 0, i32 8
  %124 = load i32, i32* %bsLive75, align 4
  %sub76 = sub nsw i32 %124, 8
  store i32 %sub76, i32* %bsLive75, align 4
  %125 = load i32, i32* %v69, align 4
  %conv77 = trunc i32 %125 to i8
  store i8 %conv77, i8* %uc, align 1
  br label %while.end112

if.end78:                                         ; preds = %while.body64
  %126 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm79 = getelementptr inbounds %struct.DState, %struct.DState* %126, i32 0, i32 0
  %127 = load %struct.bz_stream*, %struct.bz_stream** %strm79, align 8
  %avail_in80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %127, i32 0, i32 1
  %128 = load i32, i32* %avail_in80, align 8
  %cmp81 = icmp eq i32 %128, 0
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end78
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end84:                                         ; preds = %if.end78
  %129 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff85 = getelementptr inbounds %struct.DState, %struct.DState* %129, i32 0, i32 7
  %130 = load i32, i32* %bsBuff85, align 8
  %shl86 = shl i32 %130, 8
  %131 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm87 = getelementptr inbounds %struct.DState, %struct.DState* %131, i32 0, i32 0
  %132 = load %struct.bz_stream*, %struct.bz_stream** %strm87, align 8
  %next_in88 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %132, i32 0, i32 0
  %133 = load i8*, i8** %next_in88, align 8
  %134 = load i8, i8* %133, align 1
  %conv89 = zext i8 %134 to i32
  %or90 = or i32 %shl86, %conv89
  %135 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff91 = getelementptr inbounds %struct.DState, %struct.DState* %135, i32 0, i32 7
  store i32 %or90, i32* %bsBuff91, align 8
  %136 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive92 = getelementptr inbounds %struct.DState, %struct.DState* %136, i32 0, i32 8
  %137 = load i32, i32* %bsLive92, align 4
  %add93 = add nsw i32 %137, 8
  store i32 %add93, i32* %bsLive92, align 4
  %138 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm94 = getelementptr inbounds %struct.DState, %struct.DState* %138, i32 0, i32 0
  %139 = load %struct.bz_stream*, %struct.bz_stream** %strm94, align 8
  %next_in95 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i32 0, i32 0
  %140 = load i8*, i8** %next_in95, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %incdec.ptr96, i8** %next_in95, align 8
  %141 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm97 = getelementptr inbounds %struct.DState, %struct.DState* %141, i32 0, i32 0
  %142 = load %struct.bz_stream*, %struct.bz_stream** %strm97, align 8
  %avail_in98 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %142, i32 0, i32 1
  %143 = load i32, i32* %avail_in98, align 8
  %dec99 = add i32 %143, -1
  store i32 %dec99, i32* %avail_in98, align 8
  %144 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm100 = getelementptr inbounds %struct.DState, %struct.DState* %144, i32 0, i32 0
  %145 = load %struct.bz_stream*, %struct.bz_stream** %strm100, align 8
  %total_in_lo32101 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %145, i32 0, i32 2
  %146 = load i32, i32* %total_in_lo32101, align 4
  %inc102 = add i32 %146, 1
  store i32 %inc102, i32* %total_in_lo32101, align 4
  %147 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm103 = getelementptr inbounds %struct.DState, %struct.DState* %147, i32 0, i32 0
  %148 = load %struct.bz_stream*, %struct.bz_stream** %strm103, align 8
  %total_in_lo32104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %148, i32 0, i32 2
  %149 = load i32, i32* %total_in_lo32104, align 4
  %cmp105 = icmp eq i32 %149, 0
  br i1 %cmp105, label %if.then107, label %if.end111

if.then107:                                       ; preds = %if.end84
  %150 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm108 = getelementptr inbounds %struct.DState, %struct.DState* %150, i32 0, i32 0
  %151 = load %struct.bz_stream*, %struct.bz_stream** %strm108, align 8
  %total_in_hi32109 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %151, i32 0, i32 3
  %152 = load i32, i32* %total_in_hi32109, align 8
  %inc110 = add i32 %152, 1
  store i32 %inc110, i32* %total_in_hi32109, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then107, %if.end84
  br label %while.body64

while.end112:                                     ; preds = %if.then68
  %153 = load i8, i8* %uc, align 1
  %conv113 = zext i8 %153 to i32
  %cmp114 = icmp ne i32 %conv113, 90
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %while.end112
  store i32 -5, i32* %retVal, align 4
  br label %save_state_and_return

if.end117:                                        ; preds = %while.end112
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.end117, %if.end
  %154 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state119 = getelementptr inbounds %struct.DState, %struct.DState* %154, i32 0, i32 1
  store i32 12, i32* %state119, align 8
  br label %while.body120

while.body120:                                    ; preds = %if.end167, %sw.bb118
  %155 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive121 = getelementptr inbounds %struct.DState, %struct.DState* %155, i32 0, i32 8
  %156 = load i32, i32* %bsLive121, align 4
  %cmp122 = icmp sge i32 %156, 8
  br i1 %cmp122, label %if.then124, label %if.end134

if.then124:                                       ; preds = %while.body120
  %157 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff126 = getelementptr inbounds %struct.DState, %struct.DState* %157, i32 0, i32 7
  %158 = load i32, i32* %bsBuff126, align 8
  %159 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive127 = getelementptr inbounds %struct.DState, %struct.DState* %159, i32 0, i32 8
  %160 = load i32, i32* %bsLive127, align 4
  %sub128 = sub nsw i32 %160, 8
  %shr129 = lshr i32 %158, %sub128
  %and130 = and i32 %shr129, 255
  store i32 %and130, i32* %v125, align 4
  %161 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive131 = getelementptr inbounds %struct.DState, %struct.DState* %161, i32 0, i32 8
  %162 = load i32, i32* %bsLive131, align 4
  %sub132 = sub nsw i32 %162, 8
  store i32 %sub132, i32* %bsLive131, align 4
  %163 = load i32, i32* %v125, align 4
  %conv133 = trunc i32 %163 to i8
  store i8 %conv133, i8* %uc, align 1
  br label %while.end168

if.end134:                                        ; preds = %while.body120
  %164 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm135 = getelementptr inbounds %struct.DState, %struct.DState* %164, i32 0, i32 0
  %165 = load %struct.bz_stream*, %struct.bz_stream** %strm135, align 8
  %avail_in136 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %165, i32 0, i32 1
  %166 = load i32, i32* %avail_in136, align 8
  %cmp137 = icmp eq i32 %166, 0
  br i1 %cmp137, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.end134
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end140:                                        ; preds = %if.end134
  %167 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff141 = getelementptr inbounds %struct.DState, %struct.DState* %167, i32 0, i32 7
  %168 = load i32, i32* %bsBuff141, align 8
  %shl142 = shl i32 %168, 8
  %169 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm143 = getelementptr inbounds %struct.DState, %struct.DState* %169, i32 0, i32 0
  %170 = load %struct.bz_stream*, %struct.bz_stream** %strm143, align 8
  %next_in144 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %170, i32 0, i32 0
  %171 = load i8*, i8** %next_in144, align 8
  %172 = load i8, i8* %171, align 1
  %conv145 = zext i8 %172 to i32
  %or146 = or i32 %shl142, %conv145
  %173 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff147 = getelementptr inbounds %struct.DState, %struct.DState* %173, i32 0, i32 7
  store i32 %or146, i32* %bsBuff147, align 8
  %174 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive148 = getelementptr inbounds %struct.DState, %struct.DState* %174, i32 0, i32 8
  %175 = load i32, i32* %bsLive148, align 4
  %add149 = add nsw i32 %175, 8
  store i32 %add149, i32* %bsLive148, align 4
  %176 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm150 = getelementptr inbounds %struct.DState, %struct.DState* %176, i32 0, i32 0
  %177 = load %struct.bz_stream*, %struct.bz_stream** %strm150, align 8
  %next_in151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %177, i32 0, i32 0
  %178 = load i8*, i8** %next_in151, align 8
  %incdec.ptr152 = getelementptr inbounds i8, i8* %178, i32 1
  store i8* %incdec.ptr152, i8** %next_in151, align 8
  %179 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm153 = getelementptr inbounds %struct.DState, %struct.DState* %179, i32 0, i32 0
  %180 = load %struct.bz_stream*, %struct.bz_stream** %strm153, align 8
  %avail_in154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %180, i32 0, i32 1
  %181 = load i32, i32* %avail_in154, align 8
  %dec155 = add i32 %181, -1
  store i32 %dec155, i32* %avail_in154, align 8
  %182 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm156 = getelementptr inbounds %struct.DState, %struct.DState* %182, i32 0, i32 0
  %183 = load %struct.bz_stream*, %struct.bz_stream** %strm156, align 8
  %total_in_lo32157 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %183, i32 0, i32 2
  %184 = load i32, i32* %total_in_lo32157, align 4
  %inc158 = add i32 %184, 1
  store i32 %inc158, i32* %total_in_lo32157, align 4
  %185 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm159 = getelementptr inbounds %struct.DState, %struct.DState* %185, i32 0, i32 0
  %186 = load %struct.bz_stream*, %struct.bz_stream** %strm159, align 8
  %total_in_lo32160 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %186, i32 0, i32 2
  %187 = load i32, i32* %total_in_lo32160, align 4
  %cmp161 = icmp eq i32 %187, 0
  br i1 %cmp161, label %if.then163, label %if.end167

if.then163:                                       ; preds = %if.end140
  %188 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm164 = getelementptr inbounds %struct.DState, %struct.DState* %188, i32 0, i32 0
  %189 = load %struct.bz_stream*, %struct.bz_stream** %strm164, align 8
  %total_in_hi32165 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %189, i32 0, i32 3
  %190 = load i32, i32* %total_in_hi32165, align 8
  %inc166 = add i32 %190, 1
  store i32 %inc166, i32* %total_in_hi32165, align 8
  br label %if.end167

if.end167:                                        ; preds = %if.then163, %if.end140
  br label %while.body120

while.end168:                                     ; preds = %if.then124
  %191 = load i8, i8* %uc, align 1
  %conv169 = zext i8 %191 to i32
  %cmp170 = icmp ne i32 %conv169, 104
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %while.end168
  store i32 -5, i32* %retVal, align 4
  br label %save_state_and_return

if.end173:                                        ; preds = %while.end168
  br label %sw.bb174

sw.bb174:                                         ; preds = %if.end173, %if.end
  %192 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state175 = getelementptr inbounds %struct.DState, %struct.DState* %192, i32 0, i32 1
  store i32 13, i32* %state175, align 8
  br label %while.body176

while.body176:                                    ; preds = %if.end222, %sw.bb174
  %193 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive177 = getelementptr inbounds %struct.DState, %struct.DState* %193, i32 0, i32 8
  %194 = load i32, i32* %bsLive177, align 4
  %cmp178 = icmp sge i32 %194, 8
  br i1 %cmp178, label %if.then180, label %if.end189

if.then180:                                       ; preds = %while.body176
  %195 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff182 = getelementptr inbounds %struct.DState, %struct.DState* %195, i32 0, i32 7
  %196 = load i32, i32* %bsBuff182, align 8
  %197 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive183 = getelementptr inbounds %struct.DState, %struct.DState* %197, i32 0, i32 8
  %198 = load i32, i32* %bsLive183, align 4
  %sub184 = sub nsw i32 %198, 8
  %shr185 = lshr i32 %196, %sub184
  %and186 = and i32 %shr185, 255
  store i32 %and186, i32* %v181, align 4
  %199 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive187 = getelementptr inbounds %struct.DState, %struct.DState* %199, i32 0, i32 8
  %200 = load i32, i32* %bsLive187, align 4
  %sub188 = sub nsw i32 %200, 8
  store i32 %sub188, i32* %bsLive187, align 4
  %201 = load i32, i32* %v181, align 4
  %202 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k = getelementptr inbounds %struct.DState, %struct.DState* %202, i32 0, i32 9
  store i32 %201, i32* %blockSize100k, align 8
  br label %while.end223

if.end189:                                        ; preds = %while.body176
  %203 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm190 = getelementptr inbounds %struct.DState, %struct.DState* %203, i32 0, i32 0
  %204 = load %struct.bz_stream*, %struct.bz_stream** %strm190, align 8
  %avail_in191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %204, i32 0, i32 1
  %205 = load i32, i32* %avail_in191, align 8
  %cmp192 = icmp eq i32 %205, 0
  br i1 %cmp192, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.end189
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end195:                                        ; preds = %if.end189
  %206 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff196 = getelementptr inbounds %struct.DState, %struct.DState* %206, i32 0, i32 7
  %207 = load i32, i32* %bsBuff196, align 8
  %shl197 = shl i32 %207, 8
  %208 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm198 = getelementptr inbounds %struct.DState, %struct.DState* %208, i32 0, i32 0
  %209 = load %struct.bz_stream*, %struct.bz_stream** %strm198, align 8
  %next_in199 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %209, i32 0, i32 0
  %210 = load i8*, i8** %next_in199, align 8
  %211 = load i8, i8* %210, align 1
  %conv200 = zext i8 %211 to i32
  %or201 = or i32 %shl197, %conv200
  %212 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff202 = getelementptr inbounds %struct.DState, %struct.DState* %212, i32 0, i32 7
  store i32 %or201, i32* %bsBuff202, align 8
  %213 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive203 = getelementptr inbounds %struct.DState, %struct.DState* %213, i32 0, i32 8
  %214 = load i32, i32* %bsLive203, align 4
  %add204 = add nsw i32 %214, 8
  store i32 %add204, i32* %bsLive203, align 4
  %215 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm205 = getelementptr inbounds %struct.DState, %struct.DState* %215, i32 0, i32 0
  %216 = load %struct.bz_stream*, %struct.bz_stream** %strm205, align 8
  %next_in206 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %216, i32 0, i32 0
  %217 = load i8*, i8** %next_in206, align 8
  %incdec.ptr207 = getelementptr inbounds i8, i8* %217, i32 1
  store i8* %incdec.ptr207, i8** %next_in206, align 8
  %218 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm208 = getelementptr inbounds %struct.DState, %struct.DState* %218, i32 0, i32 0
  %219 = load %struct.bz_stream*, %struct.bz_stream** %strm208, align 8
  %avail_in209 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %219, i32 0, i32 1
  %220 = load i32, i32* %avail_in209, align 8
  %dec210 = add i32 %220, -1
  store i32 %dec210, i32* %avail_in209, align 8
  %221 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm211 = getelementptr inbounds %struct.DState, %struct.DState* %221, i32 0, i32 0
  %222 = load %struct.bz_stream*, %struct.bz_stream** %strm211, align 8
  %total_in_lo32212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %222, i32 0, i32 2
  %223 = load i32, i32* %total_in_lo32212, align 4
  %inc213 = add i32 %223, 1
  store i32 %inc213, i32* %total_in_lo32212, align 4
  %224 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm214 = getelementptr inbounds %struct.DState, %struct.DState* %224, i32 0, i32 0
  %225 = load %struct.bz_stream*, %struct.bz_stream** %strm214, align 8
  %total_in_lo32215 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %225, i32 0, i32 2
  %226 = load i32, i32* %total_in_lo32215, align 4
  %cmp216 = icmp eq i32 %226, 0
  br i1 %cmp216, label %if.then218, label %if.end222

if.then218:                                       ; preds = %if.end195
  %227 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm219 = getelementptr inbounds %struct.DState, %struct.DState* %227, i32 0, i32 0
  %228 = load %struct.bz_stream*, %struct.bz_stream** %strm219, align 8
  %total_in_hi32220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %228, i32 0, i32 3
  %229 = load i32, i32* %total_in_hi32220, align 8
  %inc221 = add i32 %229, 1
  store i32 %inc221, i32* %total_in_hi32220, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.then218, %if.end195
  br label %while.body176

while.end223:                                     ; preds = %if.then180
  %230 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k224 = getelementptr inbounds %struct.DState, %struct.DState* %230, i32 0, i32 9
  %231 = load i32, i32* %blockSize100k224, align 8
  %cmp225 = icmp slt i32 %231, 49
  br i1 %cmp225, label %if.then230, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end223
  %232 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k227 = getelementptr inbounds %struct.DState, %struct.DState* %232, i32 0, i32 9
  %233 = load i32, i32* %blockSize100k227, align 8
  %cmp228 = icmp sgt i32 %233, 57
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %lor.lhs.false, %while.end223
  store i32 -5, i32* %retVal, align 4
  br label %save_state_and_return

if.end231:                                        ; preds = %lor.lhs.false
  %234 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k232 = getelementptr inbounds %struct.DState, %struct.DState* %234, i32 0, i32 9
  %235 = load i32, i32* %blockSize100k232, align 8
  %sub233 = sub nsw i32 %235, 48
  store i32 %sub233, i32* %blockSize100k232, align 8
  %236 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %236, i32 0, i32 10
  %237 = load i8, i8* %smallDecompress, align 4
  %tobool = icmp ne i8 %237, 0
  br i1 %tobool, label %if.then234, label %if.else

if.then234:                                       ; preds = %if.end231
  %238 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %238, i32 0, i32 9
  %239 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %240 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %240, i32 0, i32 11
  %241 = load i8*, i8** %opaque, align 8
  %242 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k235 = getelementptr inbounds %struct.DState, %struct.DState* %242, i32 0, i32 9
  %243 = load i32, i32* %blockSize100k235, align 8
  %mul = mul nsw i32 %243, 100000
  %conv236 = sext i32 %mul to i64
  %mul237 = mul i64 %conv236, 2
  %conv238 = trunc i64 %mul237 to i32
  %call = call i8* %239(i8* %241, i32 %conv238, i32 1)
  %244 = bitcast i8* %call to i16*
  %245 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %245, i32 0, i32 21
  store i16* %244, i16** %ll16, align 8
  %246 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %bzalloc239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %246, i32 0, i32 9
  %247 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc239, align 8
  %248 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %opaque240 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %248, i32 0, i32 11
  %249 = load i8*, i8** %opaque240, align 8
  %250 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k241 = getelementptr inbounds %struct.DState, %struct.DState* %250, i32 0, i32 9
  %251 = load i32, i32* %blockSize100k241, align 8
  %mul242 = mul nsw i32 %251, 100000
  %add243 = add nsw i32 1, %mul242
  %shr244 = ashr i32 %add243, 1
  %conv245 = sext i32 %shr244 to i64
  %mul246 = mul i64 %conv245, 1
  %conv247 = trunc i64 %mul246 to i32
  %call248 = call i8* %247(i8* %249, i32 %conv247, i32 1)
  %252 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %252, i32 0, i32 22
  store i8* %call248, i8** %ll4, align 8
  %253 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll16249 = getelementptr inbounds %struct.DState, %struct.DState* %253, i32 0, i32 21
  %254 = load i16*, i16** %ll16249, align 8
  %cmp250 = icmp eq i16* %254, null
  br i1 %cmp250, label %if.then256, label %lor.lhs.false252

lor.lhs.false252:                                 ; preds = %if.then234
  %255 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll4253 = getelementptr inbounds %struct.DState, %struct.DState* %255, i32 0, i32 22
  %256 = load i8*, i8** %ll4253, align 8
  %cmp254 = icmp eq i8* %256, null
  br i1 %cmp254, label %if.then256, label %if.end257

if.then256:                                       ; preds = %lor.lhs.false252, %if.then234
  store i32 -3, i32* %retVal, align 4
  br label %save_state_and_return

if.end257:                                        ; preds = %lor.lhs.false252
  br label %if.end271

if.else:                                          ; preds = %if.end231
  %257 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %bzalloc258 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %257, i32 0, i32 9
  %258 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc258, align 8
  %259 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %opaque259 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %259, i32 0, i32 11
  %260 = load i8*, i8** %opaque259, align 8
  %261 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k260 = getelementptr inbounds %struct.DState, %struct.DState* %261, i32 0, i32 9
  %262 = load i32, i32* %blockSize100k260, align 8
  %mul261 = mul nsw i32 %262, 100000
  %conv262 = sext i32 %mul261 to i64
  %mul263 = mul i64 %conv262, 4
  %conv264 = trunc i64 %mul263 to i32
  %call265 = call i8* %258(i8* %260, i32 %conv264, i32 1)
  %263 = bitcast i8* %call265 to i32*
  %264 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %264, i32 0, i32 20
  store i32* %263, i32** %tt, align 8
  %265 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt266 = getelementptr inbounds %struct.DState, %struct.DState* %265, i32 0, i32 20
  %266 = load i32*, i32** %tt266, align 8
  %cmp267 = icmp eq i32* %266, null
  br i1 %cmp267, label %if.then269, label %if.end270

if.then269:                                       ; preds = %if.else
  store i32 -3, i32* %retVal, align 4
  br label %save_state_and_return

if.end270:                                        ; preds = %if.else
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end257
  br label %sw.bb272

sw.bb272:                                         ; preds = %if.end271, %if.end
  %267 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state273 = getelementptr inbounds %struct.DState, %struct.DState* %267, i32 0, i32 1
  store i32 14, i32* %state273, align 8
  br label %while.body274

while.body274:                                    ; preds = %if.end321, %sw.bb272
  %268 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive275 = getelementptr inbounds %struct.DState, %struct.DState* %268, i32 0, i32 8
  %269 = load i32, i32* %bsLive275, align 4
  %cmp276 = icmp sge i32 %269, 8
  br i1 %cmp276, label %if.then278, label %if.end288

if.then278:                                       ; preds = %while.body274
  %270 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff280 = getelementptr inbounds %struct.DState, %struct.DState* %270, i32 0, i32 7
  %271 = load i32, i32* %bsBuff280, align 8
  %272 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive281 = getelementptr inbounds %struct.DState, %struct.DState* %272, i32 0, i32 8
  %273 = load i32, i32* %bsLive281, align 4
  %sub282 = sub nsw i32 %273, 8
  %shr283 = lshr i32 %271, %sub282
  %and284 = and i32 %shr283, 255
  store i32 %and284, i32* %v279, align 4
  %274 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive285 = getelementptr inbounds %struct.DState, %struct.DState* %274, i32 0, i32 8
  %275 = load i32, i32* %bsLive285, align 4
  %sub286 = sub nsw i32 %275, 8
  store i32 %sub286, i32* %bsLive285, align 4
  %276 = load i32, i32* %v279, align 4
  %conv287 = trunc i32 %276 to i8
  store i8 %conv287, i8* %uc, align 1
  br label %while.end322

if.end288:                                        ; preds = %while.body274
  %277 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm289 = getelementptr inbounds %struct.DState, %struct.DState* %277, i32 0, i32 0
  %278 = load %struct.bz_stream*, %struct.bz_stream** %strm289, align 8
  %avail_in290 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %278, i32 0, i32 1
  %279 = load i32, i32* %avail_in290, align 8
  %cmp291 = icmp eq i32 %279, 0
  br i1 %cmp291, label %if.then293, label %if.end294

if.then293:                                       ; preds = %if.end288
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end294:                                        ; preds = %if.end288
  %280 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff295 = getelementptr inbounds %struct.DState, %struct.DState* %280, i32 0, i32 7
  %281 = load i32, i32* %bsBuff295, align 8
  %shl296 = shl i32 %281, 8
  %282 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm297 = getelementptr inbounds %struct.DState, %struct.DState* %282, i32 0, i32 0
  %283 = load %struct.bz_stream*, %struct.bz_stream** %strm297, align 8
  %next_in298 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %283, i32 0, i32 0
  %284 = load i8*, i8** %next_in298, align 8
  %285 = load i8, i8* %284, align 1
  %conv299 = zext i8 %285 to i32
  %or300 = or i32 %shl296, %conv299
  %286 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff301 = getelementptr inbounds %struct.DState, %struct.DState* %286, i32 0, i32 7
  store i32 %or300, i32* %bsBuff301, align 8
  %287 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive302 = getelementptr inbounds %struct.DState, %struct.DState* %287, i32 0, i32 8
  %288 = load i32, i32* %bsLive302, align 4
  %add303 = add nsw i32 %288, 8
  store i32 %add303, i32* %bsLive302, align 4
  %289 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm304 = getelementptr inbounds %struct.DState, %struct.DState* %289, i32 0, i32 0
  %290 = load %struct.bz_stream*, %struct.bz_stream** %strm304, align 8
  %next_in305 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %290, i32 0, i32 0
  %291 = load i8*, i8** %next_in305, align 8
  %incdec.ptr306 = getelementptr inbounds i8, i8* %291, i32 1
  store i8* %incdec.ptr306, i8** %next_in305, align 8
  %292 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm307 = getelementptr inbounds %struct.DState, %struct.DState* %292, i32 0, i32 0
  %293 = load %struct.bz_stream*, %struct.bz_stream** %strm307, align 8
  %avail_in308 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %293, i32 0, i32 1
  %294 = load i32, i32* %avail_in308, align 8
  %dec309 = add i32 %294, -1
  store i32 %dec309, i32* %avail_in308, align 8
  %295 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm310 = getelementptr inbounds %struct.DState, %struct.DState* %295, i32 0, i32 0
  %296 = load %struct.bz_stream*, %struct.bz_stream** %strm310, align 8
  %total_in_lo32311 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %296, i32 0, i32 2
  %297 = load i32, i32* %total_in_lo32311, align 4
  %inc312 = add i32 %297, 1
  store i32 %inc312, i32* %total_in_lo32311, align 4
  %298 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm313 = getelementptr inbounds %struct.DState, %struct.DState* %298, i32 0, i32 0
  %299 = load %struct.bz_stream*, %struct.bz_stream** %strm313, align 8
  %total_in_lo32314 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %299, i32 0, i32 2
  %300 = load i32, i32* %total_in_lo32314, align 4
  %cmp315 = icmp eq i32 %300, 0
  br i1 %cmp315, label %if.then317, label %if.end321

if.then317:                                       ; preds = %if.end294
  %301 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm318 = getelementptr inbounds %struct.DState, %struct.DState* %301, i32 0, i32 0
  %302 = load %struct.bz_stream*, %struct.bz_stream** %strm318, align 8
  %total_in_hi32319 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %302, i32 0, i32 3
  %303 = load i32, i32* %total_in_hi32319, align 8
  %inc320 = add i32 %303, 1
  store i32 %inc320, i32* %total_in_hi32319, align 8
  br label %if.end321

if.end321:                                        ; preds = %if.then317, %if.end294
  br label %while.body274

while.end322:                                     ; preds = %if.then278
  %304 = load i8, i8* %uc, align 1
  %conv323 = zext i8 %304 to i32
  %cmp324 = icmp eq i32 %conv323, 23
  br i1 %cmp324, label %if.then326, label %if.end327

if.then326:                                       ; preds = %while.end322
  br label %endhdr_2

if.end327:                                        ; preds = %while.end322
  %305 = load i8, i8* %uc, align 1
  %conv328 = zext i8 %305 to i32
  %cmp329 = icmp ne i32 %conv328, 49
  br i1 %cmp329, label %if.then331, label %if.end332

if.then331:                                       ; preds = %if.end327
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end332:                                        ; preds = %if.end327
  br label %sw.bb333

sw.bb333:                                         ; preds = %if.end332, %if.end
  %306 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state334 = getelementptr inbounds %struct.DState, %struct.DState* %306, i32 0, i32 1
  store i32 15, i32* %state334, align 8
  br label %while.body335

while.body335:                                    ; preds = %if.end382, %sw.bb333
  %307 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive336 = getelementptr inbounds %struct.DState, %struct.DState* %307, i32 0, i32 8
  %308 = load i32, i32* %bsLive336, align 4
  %cmp337 = icmp sge i32 %308, 8
  br i1 %cmp337, label %if.then339, label %if.end349

if.then339:                                       ; preds = %while.body335
  %309 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff341 = getelementptr inbounds %struct.DState, %struct.DState* %309, i32 0, i32 7
  %310 = load i32, i32* %bsBuff341, align 8
  %311 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive342 = getelementptr inbounds %struct.DState, %struct.DState* %311, i32 0, i32 8
  %312 = load i32, i32* %bsLive342, align 4
  %sub343 = sub nsw i32 %312, 8
  %shr344 = lshr i32 %310, %sub343
  %and345 = and i32 %shr344, 255
  store i32 %and345, i32* %v340, align 4
  %313 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive346 = getelementptr inbounds %struct.DState, %struct.DState* %313, i32 0, i32 8
  %314 = load i32, i32* %bsLive346, align 4
  %sub347 = sub nsw i32 %314, 8
  store i32 %sub347, i32* %bsLive346, align 4
  %315 = load i32, i32* %v340, align 4
  %conv348 = trunc i32 %315 to i8
  store i8 %conv348, i8* %uc, align 1
  br label %while.end383

if.end349:                                        ; preds = %while.body335
  %316 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm350 = getelementptr inbounds %struct.DState, %struct.DState* %316, i32 0, i32 0
  %317 = load %struct.bz_stream*, %struct.bz_stream** %strm350, align 8
  %avail_in351 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %317, i32 0, i32 1
  %318 = load i32, i32* %avail_in351, align 8
  %cmp352 = icmp eq i32 %318, 0
  br i1 %cmp352, label %if.then354, label %if.end355

if.then354:                                       ; preds = %if.end349
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end355:                                        ; preds = %if.end349
  %319 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff356 = getelementptr inbounds %struct.DState, %struct.DState* %319, i32 0, i32 7
  %320 = load i32, i32* %bsBuff356, align 8
  %shl357 = shl i32 %320, 8
  %321 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm358 = getelementptr inbounds %struct.DState, %struct.DState* %321, i32 0, i32 0
  %322 = load %struct.bz_stream*, %struct.bz_stream** %strm358, align 8
  %next_in359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %322, i32 0, i32 0
  %323 = load i8*, i8** %next_in359, align 8
  %324 = load i8, i8* %323, align 1
  %conv360 = zext i8 %324 to i32
  %or361 = or i32 %shl357, %conv360
  %325 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff362 = getelementptr inbounds %struct.DState, %struct.DState* %325, i32 0, i32 7
  store i32 %or361, i32* %bsBuff362, align 8
  %326 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive363 = getelementptr inbounds %struct.DState, %struct.DState* %326, i32 0, i32 8
  %327 = load i32, i32* %bsLive363, align 4
  %add364 = add nsw i32 %327, 8
  store i32 %add364, i32* %bsLive363, align 4
  %328 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm365 = getelementptr inbounds %struct.DState, %struct.DState* %328, i32 0, i32 0
  %329 = load %struct.bz_stream*, %struct.bz_stream** %strm365, align 8
  %next_in366 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %329, i32 0, i32 0
  %330 = load i8*, i8** %next_in366, align 8
  %incdec.ptr367 = getelementptr inbounds i8, i8* %330, i32 1
  store i8* %incdec.ptr367, i8** %next_in366, align 8
  %331 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm368 = getelementptr inbounds %struct.DState, %struct.DState* %331, i32 0, i32 0
  %332 = load %struct.bz_stream*, %struct.bz_stream** %strm368, align 8
  %avail_in369 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %332, i32 0, i32 1
  %333 = load i32, i32* %avail_in369, align 8
  %dec370 = add i32 %333, -1
  store i32 %dec370, i32* %avail_in369, align 8
  %334 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm371 = getelementptr inbounds %struct.DState, %struct.DState* %334, i32 0, i32 0
  %335 = load %struct.bz_stream*, %struct.bz_stream** %strm371, align 8
  %total_in_lo32372 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %335, i32 0, i32 2
  %336 = load i32, i32* %total_in_lo32372, align 4
  %inc373 = add i32 %336, 1
  store i32 %inc373, i32* %total_in_lo32372, align 4
  %337 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm374 = getelementptr inbounds %struct.DState, %struct.DState* %337, i32 0, i32 0
  %338 = load %struct.bz_stream*, %struct.bz_stream** %strm374, align 8
  %total_in_lo32375 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %338, i32 0, i32 2
  %339 = load i32, i32* %total_in_lo32375, align 4
  %cmp376 = icmp eq i32 %339, 0
  br i1 %cmp376, label %if.then378, label %if.end382

if.then378:                                       ; preds = %if.end355
  %340 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm379 = getelementptr inbounds %struct.DState, %struct.DState* %340, i32 0, i32 0
  %341 = load %struct.bz_stream*, %struct.bz_stream** %strm379, align 8
  %total_in_hi32380 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %341, i32 0, i32 3
  %342 = load i32, i32* %total_in_hi32380, align 8
  %inc381 = add i32 %342, 1
  store i32 %inc381, i32* %total_in_hi32380, align 8
  br label %if.end382

if.end382:                                        ; preds = %if.then378, %if.end355
  br label %while.body335

while.end383:                                     ; preds = %if.then339
  %343 = load i8, i8* %uc, align 1
  %conv384 = zext i8 %343 to i32
  %cmp385 = icmp ne i32 %conv384, 65
  br i1 %cmp385, label %if.then387, label %if.end388

if.then387:                                       ; preds = %while.end383
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end388:                                        ; preds = %while.end383
  br label %sw.bb389

sw.bb389:                                         ; preds = %if.end388, %if.end
  %344 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state390 = getelementptr inbounds %struct.DState, %struct.DState* %344, i32 0, i32 1
  store i32 16, i32* %state390, align 8
  br label %while.body391

while.body391:                                    ; preds = %if.end438, %sw.bb389
  %345 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive392 = getelementptr inbounds %struct.DState, %struct.DState* %345, i32 0, i32 8
  %346 = load i32, i32* %bsLive392, align 4
  %cmp393 = icmp sge i32 %346, 8
  br i1 %cmp393, label %if.then395, label %if.end405

if.then395:                                       ; preds = %while.body391
  %347 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff397 = getelementptr inbounds %struct.DState, %struct.DState* %347, i32 0, i32 7
  %348 = load i32, i32* %bsBuff397, align 8
  %349 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive398 = getelementptr inbounds %struct.DState, %struct.DState* %349, i32 0, i32 8
  %350 = load i32, i32* %bsLive398, align 4
  %sub399 = sub nsw i32 %350, 8
  %shr400 = lshr i32 %348, %sub399
  %and401 = and i32 %shr400, 255
  store i32 %and401, i32* %v396, align 4
  %351 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive402 = getelementptr inbounds %struct.DState, %struct.DState* %351, i32 0, i32 8
  %352 = load i32, i32* %bsLive402, align 4
  %sub403 = sub nsw i32 %352, 8
  store i32 %sub403, i32* %bsLive402, align 4
  %353 = load i32, i32* %v396, align 4
  %conv404 = trunc i32 %353 to i8
  store i8 %conv404, i8* %uc, align 1
  br label %while.end439

if.end405:                                        ; preds = %while.body391
  %354 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm406 = getelementptr inbounds %struct.DState, %struct.DState* %354, i32 0, i32 0
  %355 = load %struct.bz_stream*, %struct.bz_stream** %strm406, align 8
  %avail_in407 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %355, i32 0, i32 1
  %356 = load i32, i32* %avail_in407, align 8
  %cmp408 = icmp eq i32 %356, 0
  br i1 %cmp408, label %if.then410, label %if.end411

if.then410:                                       ; preds = %if.end405
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end411:                                        ; preds = %if.end405
  %357 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff412 = getelementptr inbounds %struct.DState, %struct.DState* %357, i32 0, i32 7
  %358 = load i32, i32* %bsBuff412, align 8
  %shl413 = shl i32 %358, 8
  %359 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm414 = getelementptr inbounds %struct.DState, %struct.DState* %359, i32 0, i32 0
  %360 = load %struct.bz_stream*, %struct.bz_stream** %strm414, align 8
  %next_in415 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %360, i32 0, i32 0
  %361 = load i8*, i8** %next_in415, align 8
  %362 = load i8, i8* %361, align 1
  %conv416 = zext i8 %362 to i32
  %or417 = or i32 %shl413, %conv416
  %363 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff418 = getelementptr inbounds %struct.DState, %struct.DState* %363, i32 0, i32 7
  store i32 %or417, i32* %bsBuff418, align 8
  %364 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive419 = getelementptr inbounds %struct.DState, %struct.DState* %364, i32 0, i32 8
  %365 = load i32, i32* %bsLive419, align 4
  %add420 = add nsw i32 %365, 8
  store i32 %add420, i32* %bsLive419, align 4
  %366 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm421 = getelementptr inbounds %struct.DState, %struct.DState* %366, i32 0, i32 0
  %367 = load %struct.bz_stream*, %struct.bz_stream** %strm421, align 8
  %next_in422 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %367, i32 0, i32 0
  %368 = load i8*, i8** %next_in422, align 8
  %incdec.ptr423 = getelementptr inbounds i8, i8* %368, i32 1
  store i8* %incdec.ptr423, i8** %next_in422, align 8
  %369 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm424 = getelementptr inbounds %struct.DState, %struct.DState* %369, i32 0, i32 0
  %370 = load %struct.bz_stream*, %struct.bz_stream** %strm424, align 8
  %avail_in425 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %370, i32 0, i32 1
  %371 = load i32, i32* %avail_in425, align 8
  %dec426 = add i32 %371, -1
  store i32 %dec426, i32* %avail_in425, align 8
  %372 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm427 = getelementptr inbounds %struct.DState, %struct.DState* %372, i32 0, i32 0
  %373 = load %struct.bz_stream*, %struct.bz_stream** %strm427, align 8
  %total_in_lo32428 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %373, i32 0, i32 2
  %374 = load i32, i32* %total_in_lo32428, align 4
  %inc429 = add i32 %374, 1
  store i32 %inc429, i32* %total_in_lo32428, align 4
  %375 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm430 = getelementptr inbounds %struct.DState, %struct.DState* %375, i32 0, i32 0
  %376 = load %struct.bz_stream*, %struct.bz_stream** %strm430, align 8
  %total_in_lo32431 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %376, i32 0, i32 2
  %377 = load i32, i32* %total_in_lo32431, align 4
  %cmp432 = icmp eq i32 %377, 0
  br i1 %cmp432, label %if.then434, label %if.end438

if.then434:                                       ; preds = %if.end411
  %378 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm435 = getelementptr inbounds %struct.DState, %struct.DState* %378, i32 0, i32 0
  %379 = load %struct.bz_stream*, %struct.bz_stream** %strm435, align 8
  %total_in_hi32436 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %379, i32 0, i32 3
  %380 = load i32, i32* %total_in_hi32436, align 8
  %inc437 = add i32 %380, 1
  store i32 %inc437, i32* %total_in_hi32436, align 8
  br label %if.end438

if.end438:                                        ; preds = %if.then434, %if.end411
  br label %while.body391

while.end439:                                     ; preds = %if.then395
  %381 = load i8, i8* %uc, align 1
  %conv440 = zext i8 %381 to i32
  %cmp441 = icmp ne i32 %conv440, 89
  br i1 %cmp441, label %if.then443, label %if.end444

if.then443:                                       ; preds = %while.end439
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end444:                                        ; preds = %while.end439
  br label %sw.bb445

sw.bb445:                                         ; preds = %if.end444, %if.end
  %382 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state446 = getelementptr inbounds %struct.DState, %struct.DState* %382, i32 0, i32 1
  store i32 17, i32* %state446, align 8
  br label %while.body447

while.body447:                                    ; preds = %if.end494, %sw.bb445
  %383 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive448 = getelementptr inbounds %struct.DState, %struct.DState* %383, i32 0, i32 8
  %384 = load i32, i32* %bsLive448, align 4
  %cmp449 = icmp sge i32 %384, 8
  br i1 %cmp449, label %if.then451, label %if.end461

if.then451:                                       ; preds = %while.body447
  %385 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff453 = getelementptr inbounds %struct.DState, %struct.DState* %385, i32 0, i32 7
  %386 = load i32, i32* %bsBuff453, align 8
  %387 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive454 = getelementptr inbounds %struct.DState, %struct.DState* %387, i32 0, i32 8
  %388 = load i32, i32* %bsLive454, align 4
  %sub455 = sub nsw i32 %388, 8
  %shr456 = lshr i32 %386, %sub455
  %and457 = and i32 %shr456, 255
  store i32 %and457, i32* %v452, align 4
  %389 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive458 = getelementptr inbounds %struct.DState, %struct.DState* %389, i32 0, i32 8
  %390 = load i32, i32* %bsLive458, align 4
  %sub459 = sub nsw i32 %390, 8
  store i32 %sub459, i32* %bsLive458, align 4
  %391 = load i32, i32* %v452, align 4
  %conv460 = trunc i32 %391 to i8
  store i8 %conv460, i8* %uc, align 1
  br label %while.end495

if.end461:                                        ; preds = %while.body447
  %392 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm462 = getelementptr inbounds %struct.DState, %struct.DState* %392, i32 0, i32 0
  %393 = load %struct.bz_stream*, %struct.bz_stream** %strm462, align 8
  %avail_in463 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %393, i32 0, i32 1
  %394 = load i32, i32* %avail_in463, align 8
  %cmp464 = icmp eq i32 %394, 0
  br i1 %cmp464, label %if.then466, label %if.end467

if.then466:                                       ; preds = %if.end461
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end467:                                        ; preds = %if.end461
  %395 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff468 = getelementptr inbounds %struct.DState, %struct.DState* %395, i32 0, i32 7
  %396 = load i32, i32* %bsBuff468, align 8
  %shl469 = shl i32 %396, 8
  %397 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm470 = getelementptr inbounds %struct.DState, %struct.DState* %397, i32 0, i32 0
  %398 = load %struct.bz_stream*, %struct.bz_stream** %strm470, align 8
  %next_in471 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %398, i32 0, i32 0
  %399 = load i8*, i8** %next_in471, align 8
  %400 = load i8, i8* %399, align 1
  %conv472 = zext i8 %400 to i32
  %or473 = or i32 %shl469, %conv472
  %401 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff474 = getelementptr inbounds %struct.DState, %struct.DState* %401, i32 0, i32 7
  store i32 %or473, i32* %bsBuff474, align 8
  %402 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive475 = getelementptr inbounds %struct.DState, %struct.DState* %402, i32 0, i32 8
  %403 = load i32, i32* %bsLive475, align 4
  %add476 = add nsw i32 %403, 8
  store i32 %add476, i32* %bsLive475, align 4
  %404 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm477 = getelementptr inbounds %struct.DState, %struct.DState* %404, i32 0, i32 0
  %405 = load %struct.bz_stream*, %struct.bz_stream** %strm477, align 8
  %next_in478 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %405, i32 0, i32 0
  %406 = load i8*, i8** %next_in478, align 8
  %incdec.ptr479 = getelementptr inbounds i8, i8* %406, i32 1
  store i8* %incdec.ptr479, i8** %next_in478, align 8
  %407 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm480 = getelementptr inbounds %struct.DState, %struct.DState* %407, i32 0, i32 0
  %408 = load %struct.bz_stream*, %struct.bz_stream** %strm480, align 8
  %avail_in481 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %408, i32 0, i32 1
  %409 = load i32, i32* %avail_in481, align 8
  %dec482 = add i32 %409, -1
  store i32 %dec482, i32* %avail_in481, align 8
  %410 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm483 = getelementptr inbounds %struct.DState, %struct.DState* %410, i32 0, i32 0
  %411 = load %struct.bz_stream*, %struct.bz_stream** %strm483, align 8
  %total_in_lo32484 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %411, i32 0, i32 2
  %412 = load i32, i32* %total_in_lo32484, align 4
  %inc485 = add i32 %412, 1
  store i32 %inc485, i32* %total_in_lo32484, align 4
  %413 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm486 = getelementptr inbounds %struct.DState, %struct.DState* %413, i32 0, i32 0
  %414 = load %struct.bz_stream*, %struct.bz_stream** %strm486, align 8
  %total_in_lo32487 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %414, i32 0, i32 2
  %415 = load i32, i32* %total_in_lo32487, align 4
  %cmp488 = icmp eq i32 %415, 0
  br i1 %cmp488, label %if.then490, label %if.end494

if.then490:                                       ; preds = %if.end467
  %416 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm491 = getelementptr inbounds %struct.DState, %struct.DState* %416, i32 0, i32 0
  %417 = load %struct.bz_stream*, %struct.bz_stream** %strm491, align 8
  %total_in_hi32492 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %417, i32 0, i32 3
  %418 = load i32, i32* %total_in_hi32492, align 8
  %inc493 = add i32 %418, 1
  store i32 %inc493, i32* %total_in_hi32492, align 8
  br label %if.end494

if.end494:                                        ; preds = %if.then490, %if.end467
  br label %while.body447

while.end495:                                     ; preds = %if.then451
  %419 = load i8, i8* %uc, align 1
  %conv496 = zext i8 %419 to i32
  %cmp497 = icmp ne i32 %conv496, 38
  br i1 %cmp497, label %if.then499, label %if.end500

if.then499:                                       ; preds = %while.end495
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end500:                                        ; preds = %while.end495
  br label %sw.bb501

sw.bb501:                                         ; preds = %if.end500, %if.end
  %420 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state502 = getelementptr inbounds %struct.DState, %struct.DState* %420, i32 0, i32 1
  store i32 18, i32* %state502, align 8
  br label %while.body503

while.body503:                                    ; preds = %if.end550, %sw.bb501
  %421 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive504 = getelementptr inbounds %struct.DState, %struct.DState* %421, i32 0, i32 8
  %422 = load i32, i32* %bsLive504, align 4
  %cmp505 = icmp sge i32 %422, 8
  br i1 %cmp505, label %if.then507, label %if.end517

if.then507:                                       ; preds = %while.body503
  %423 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff509 = getelementptr inbounds %struct.DState, %struct.DState* %423, i32 0, i32 7
  %424 = load i32, i32* %bsBuff509, align 8
  %425 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive510 = getelementptr inbounds %struct.DState, %struct.DState* %425, i32 0, i32 8
  %426 = load i32, i32* %bsLive510, align 4
  %sub511 = sub nsw i32 %426, 8
  %shr512 = lshr i32 %424, %sub511
  %and513 = and i32 %shr512, 255
  store i32 %and513, i32* %v508, align 4
  %427 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive514 = getelementptr inbounds %struct.DState, %struct.DState* %427, i32 0, i32 8
  %428 = load i32, i32* %bsLive514, align 4
  %sub515 = sub nsw i32 %428, 8
  store i32 %sub515, i32* %bsLive514, align 4
  %429 = load i32, i32* %v508, align 4
  %conv516 = trunc i32 %429 to i8
  store i8 %conv516, i8* %uc, align 1
  br label %while.end551

if.end517:                                        ; preds = %while.body503
  %430 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm518 = getelementptr inbounds %struct.DState, %struct.DState* %430, i32 0, i32 0
  %431 = load %struct.bz_stream*, %struct.bz_stream** %strm518, align 8
  %avail_in519 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %431, i32 0, i32 1
  %432 = load i32, i32* %avail_in519, align 8
  %cmp520 = icmp eq i32 %432, 0
  br i1 %cmp520, label %if.then522, label %if.end523

if.then522:                                       ; preds = %if.end517
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end523:                                        ; preds = %if.end517
  %433 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff524 = getelementptr inbounds %struct.DState, %struct.DState* %433, i32 0, i32 7
  %434 = load i32, i32* %bsBuff524, align 8
  %shl525 = shl i32 %434, 8
  %435 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm526 = getelementptr inbounds %struct.DState, %struct.DState* %435, i32 0, i32 0
  %436 = load %struct.bz_stream*, %struct.bz_stream** %strm526, align 8
  %next_in527 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %436, i32 0, i32 0
  %437 = load i8*, i8** %next_in527, align 8
  %438 = load i8, i8* %437, align 1
  %conv528 = zext i8 %438 to i32
  %or529 = or i32 %shl525, %conv528
  %439 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff530 = getelementptr inbounds %struct.DState, %struct.DState* %439, i32 0, i32 7
  store i32 %or529, i32* %bsBuff530, align 8
  %440 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive531 = getelementptr inbounds %struct.DState, %struct.DState* %440, i32 0, i32 8
  %441 = load i32, i32* %bsLive531, align 4
  %add532 = add nsw i32 %441, 8
  store i32 %add532, i32* %bsLive531, align 4
  %442 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm533 = getelementptr inbounds %struct.DState, %struct.DState* %442, i32 0, i32 0
  %443 = load %struct.bz_stream*, %struct.bz_stream** %strm533, align 8
  %next_in534 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %443, i32 0, i32 0
  %444 = load i8*, i8** %next_in534, align 8
  %incdec.ptr535 = getelementptr inbounds i8, i8* %444, i32 1
  store i8* %incdec.ptr535, i8** %next_in534, align 8
  %445 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm536 = getelementptr inbounds %struct.DState, %struct.DState* %445, i32 0, i32 0
  %446 = load %struct.bz_stream*, %struct.bz_stream** %strm536, align 8
  %avail_in537 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %446, i32 0, i32 1
  %447 = load i32, i32* %avail_in537, align 8
  %dec538 = add i32 %447, -1
  store i32 %dec538, i32* %avail_in537, align 8
  %448 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm539 = getelementptr inbounds %struct.DState, %struct.DState* %448, i32 0, i32 0
  %449 = load %struct.bz_stream*, %struct.bz_stream** %strm539, align 8
  %total_in_lo32540 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %449, i32 0, i32 2
  %450 = load i32, i32* %total_in_lo32540, align 4
  %inc541 = add i32 %450, 1
  store i32 %inc541, i32* %total_in_lo32540, align 4
  %451 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm542 = getelementptr inbounds %struct.DState, %struct.DState* %451, i32 0, i32 0
  %452 = load %struct.bz_stream*, %struct.bz_stream** %strm542, align 8
  %total_in_lo32543 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %452, i32 0, i32 2
  %453 = load i32, i32* %total_in_lo32543, align 4
  %cmp544 = icmp eq i32 %453, 0
  br i1 %cmp544, label %if.then546, label %if.end550

if.then546:                                       ; preds = %if.end523
  %454 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm547 = getelementptr inbounds %struct.DState, %struct.DState* %454, i32 0, i32 0
  %455 = load %struct.bz_stream*, %struct.bz_stream** %strm547, align 8
  %total_in_hi32548 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %455, i32 0, i32 3
  %456 = load i32, i32* %total_in_hi32548, align 8
  %inc549 = add i32 %456, 1
  store i32 %inc549, i32* %total_in_hi32548, align 8
  br label %if.end550

if.end550:                                        ; preds = %if.then546, %if.end523
  br label %while.body503

while.end551:                                     ; preds = %if.then507
  %457 = load i8, i8* %uc, align 1
  %conv552 = zext i8 %457 to i32
  %cmp553 = icmp ne i32 %conv552, 83
  br i1 %cmp553, label %if.then555, label %if.end556

if.then555:                                       ; preds = %while.end551
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end556:                                        ; preds = %while.end551
  br label %sw.bb557

sw.bb557:                                         ; preds = %if.end556, %if.end
  %458 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state558 = getelementptr inbounds %struct.DState, %struct.DState* %458, i32 0, i32 1
  store i32 19, i32* %state558, align 8
  br label %while.body559

while.body559:                                    ; preds = %if.end606, %sw.bb557
  %459 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive560 = getelementptr inbounds %struct.DState, %struct.DState* %459, i32 0, i32 8
  %460 = load i32, i32* %bsLive560, align 4
  %cmp561 = icmp sge i32 %460, 8
  br i1 %cmp561, label %if.then563, label %if.end573

if.then563:                                       ; preds = %while.body559
  %461 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff565 = getelementptr inbounds %struct.DState, %struct.DState* %461, i32 0, i32 7
  %462 = load i32, i32* %bsBuff565, align 8
  %463 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive566 = getelementptr inbounds %struct.DState, %struct.DState* %463, i32 0, i32 8
  %464 = load i32, i32* %bsLive566, align 4
  %sub567 = sub nsw i32 %464, 8
  %shr568 = lshr i32 %462, %sub567
  %and569 = and i32 %shr568, 255
  store i32 %and569, i32* %v564, align 4
  %465 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive570 = getelementptr inbounds %struct.DState, %struct.DState* %465, i32 0, i32 8
  %466 = load i32, i32* %bsLive570, align 4
  %sub571 = sub nsw i32 %466, 8
  store i32 %sub571, i32* %bsLive570, align 4
  %467 = load i32, i32* %v564, align 4
  %conv572 = trunc i32 %467 to i8
  store i8 %conv572, i8* %uc, align 1
  br label %while.end607

if.end573:                                        ; preds = %while.body559
  %468 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm574 = getelementptr inbounds %struct.DState, %struct.DState* %468, i32 0, i32 0
  %469 = load %struct.bz_stream*, %struct.bz_stream** %strm574, align 8
  %avail_in575 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %469, i32 0, i32 1
  %470 = load i32, i32* %avail_in575, align 8
  %cmp576 = icmp eq i32 %470, 0
  br i1 %cmp576, label %if.then578, label %if.end579

if.then578:                                       ; preds = %if.end573
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end579:                                        ; preds = %if.end573
  %471 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff580 = getelementptr inbounds %struct.DState, %struct.DState* %471, i32 0, i32 7
  %472 = load i32, i32* %bsBuff580, align 8
  %shl581 = shl i32 %472, 8
  %473 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm582 = getelementptr inbounds %struct.DState, %struct.DState* %473, i32 0, i32 0
  %474 = load %struct.bz_stream*, %struct.bz_stream** %strm582, align 8
  %next_in583 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %474, i32 0, i32 0
  %475 = load i8*, i8** %next_in583, align 8
  %476 = load i8, i8* %475, align 1
  %conv584 = zext i8 %476 to i32
  %or585 = or i32 %shl581, %conv584
  %477 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff586 = getelementptr inbounds %struct.DState, %struct.DState* %477, i32 0, i32 7
  store i32 %or585, i32* %bsBuff586, align 8
  %478 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive587 = getelementptr inbounds %struct.DState, %struct.DState* %478, i32 0, i32 8
  %479 = load i32, i32* %bsLive587, align 4
  %add588 = add nsw i32 %479, 8
  store i32 %add588, i32* %bsLive587, align 4
  %480 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm589 = getelementptr inbounds %struct.DState, %struct.DState* %480, i32 0, i32 0
  %481 = load %struct.bz_stream*, %struct.bz_stream** %strm589, align 8
  %next_in590 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %481, i32 0, i32 0
  %482 = load i8*, i8** %next_in590, align 8
  %incdec.ptr591 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %incdec.ptr591, i8** %next_in590, align 8
  %483 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm592 = getelementptr inbounds %struct.DState, %struct.DState* %483, i32 0, i32 0
  %484 = load %struct.bz_stream*, %struct.bz_stream** %strm592, align 8
  %avail_in593 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %484, i32 0, i32 1
  %485 = load i32, i32* %avail_in593, align 8
  %dec594 = add i32 %485, -1
  store i32 %dec594, i32* %avail_in593, align 8
  %486 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm595 = getelementptr inbounds %struct.DState, %struct.DState* %486, i32 0, i32 0
  %487 = load %struct.bz_stream*, %struct.bz_stream** %strm595, align 8
  %total_in_lo32596 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %487, i32 0, i32 2
  %488 = load i32, i32* %total_in_lo32596, align 4
  %inc597 = add i32 %488, 1
  store i32 %inc597, i32* %total_in_lo32596, align 4
  %489 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm598 = getelementptr inbounds %struct.DState, %struct.DState* %489, i32 0, i32 0
  %490 = load %struct.bz_stream*, %struct.bz_stream** %strm598, align 8
  %total_in_lo32599 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %490, i32 0, i32 2
  %491 = load i32, i32* %total_in_lo32599, align 4
  %cmp600 = icmp eq i32 %491, 0
  br i1 %cmp600, label %if.then602, label %if.end606

if.then602:                                       ; preds = %if.end579
  %492 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm603 = getelementptr inbounds %struct.DState, %struct.DState* %492, i32 0, i32 0
  %493 = load %struct.bz_stream*, %struct.bz_stream** %strm603, align 8
  %total_in_hi32604 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %493, i32 0, i32 3
  %494 = load i32, i32* %total_in_hi32604, align 8
  %inc605 = add i32 %494, 1
  store i32 %inc605, i32* %total_in_hi32604, align 8
  br label %if.end606

if.end606:                                        ; preds = %if.then602, %if.end579
  br label %while.body559

while.end607:                                     ; preds = %if.then563
  %495 = load i8, i8* %uc, align 1
  %conv608 = zext i8 %495 to i32
  %cmp609 = icmp ne i32 %conv608, 89
  br i1 %cmp609, label %if.then611, label %if.end612

if.then611:                                       ; preds = %while.end607
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end612:                                        ; preds = %while.end607
  %496 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %currBlockNo = getelementptr inbounds %struct.DState, %struct.DState* %496, i32 0, i32 11
  %497 = load i32, i32* %currBlockNo, align 8
  %inc613 = add nsw i32 %497, 1
  store i32 %inc613, i32* %currBlockNo, align 8
  %498 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %498, i32 0, i32 12
  %499 = load i32, i32* %verbosity, align 4
  %cmp614 = icmp sge i32 %499, 2
  br i1 %cmp614, label %if.then616, label %if.end619

if.then616:                                       ; preds = %if.end612
  %500 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %501 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %currBlockNo617 = getelementptr inbounds %struct.DState, %struct.DState* %501, i32 0, i32 11
  %502 = load i32, i32* %currBlockNo617, align 8
  %call618 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %500, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.158, i64 0, i64 0), i32 %502)
  br label %if.end619

if.end619:                                        ; preds = %if.then616, %if.end612
  %503 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %503, i32 0, i32 23
  store i32 0, i32* %storedBlockCRC, align 8
  br label %sw.bb620

sw.bb620:                                         ; preds = %if.end619, %if.end
  %504 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state621 = getelementptr inbounds %struct.DState, %struct.DState* %504, i32 0, i32 1
  store i32 20, i32* %state621, align 8
  br label %while.body622

while.body622:                                    ; preds = %if.end669, %sw.bb620
  %505 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive623 = getelementptr inbounds %struct.DState, %struct.DState* %505, i32 0, i32 8
  %506 = load i32, i32* %bsLive623, align 4
  %cmp624 = icmp sge i32 %506, 8
  br i1 %cmp624, label %if.then626, label %if.end636

if.then626:                                       ; preds = %while.body622
  %507 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff628 = getelementptr inbounds %struct.DState, %struct.DState* %507, i32 0, i32 7
  %508 = load i32, i32* %bsBuff628, align 8
  %509 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive629 = getelementptr inbounds %struct.DState, %struct.DState* %509, i32 0, i32 8
  %510 = load i32, i32* %bsLive629, align 4
  %sub630 = sub nsw i32 %510, 8
  %shr631 = lshr i32 %508, %sub630
  %and632 = and i32 %shr631, 255
  store i32 %and632, i32* %v627, align 4
  %511 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive633 = getelementptr inbounds %struct.DState, %struct.DState* %511, i32 0, i32 8
  %512 = load i32, i32* %bsLive633, align 4
  %sub634 = sub nsw i32 %512, 8
  store i32 %sub634, i32* %bsLive633, align 4
  %513 = load i32, i32* %v627, align 4
  %conv635 = trunc i32 %513 to i8
  store i8 %conv635, i8* %uc, align 1
  br label %while.end670

if.end636:                                        ; preds = %while.body622
  %514 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm637 = getelementptr inbounds %struct.DState, %struct.DState* %514, i32 0, i32 0
  %515 = load %struct.bz_stream*, %struct.bz_stream** %strm637, align 8
  %avail_in638 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %515, i32 0, i32 1
  %516 = load i32, i32* %avail_in638, align 8
  %cmp639 = icmp eq i32 %516, 0
  br i1 %cmp639, label %if.then641, label %if.end642

if.then641:                                       ; preds = %if.end636
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end642:                                        ; preds = %if.end636
  %517 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff643 = getelementptr inbounds %struct.DState, %struct.DState* %517, i32 0, i32 7
  %518 = load i32, i32* %bsBuff643, align 8
  %shl644 = shl i32 %518, 8
  %519 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm645 = getelementptr inbounds %struct.DState, %struct.DState* %519, i32 0, i32 0
  %520 = load %struct.bz_stream*, %struct.bz_stream** %strm645, align 8
  %next_in646 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %520, i32 0, i32 0
  %521 = load i8*, i8** %next_in646, align 8
  %522 = load i8, i8* %521, align 1
  %conv647 = zext i8 %522 to i32
  %or648 = or i32 %shl644, %conv647
  %523 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff649 = getelementptr inbounds %struct.DState, %struct.DState* %523, i32 0, i32 7
  store i32 %or648, i32* %bsBuff649, align 8
  %524 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive650 = getelementptr inbounds %struct.DState, %struct.DState* %524, i32 0, i32 8
  %525 = load i32, i32* %bsLive650, align 4
  %add651 = add nsw i32 %525, 8
  store i32 %add651, i32* %bsLive650, align 4
  %526 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm652 = getelementptr inbounds %struct.DState, %struct.DState* %526, i32 0, i32 0
  %527 = load %struct.bz_stream*, %struct.bz_stream** %strm652, align 8
  %next_in653 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %527, i32 0, i32 0
  %528 = load i8*, i8** %next_in653, align 8
  %incdec.ptr654 = getelementptr inbounds i8, i8* %528, i32 1
  store i8* %incdec.ptr654, i8** %next_in653, align 8
  %529 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm655 = getelementptr inbounds %struct.DState, %struct.DState* %529, i32 0, i32 0
  %530 = load %struct.bz_stream*, %struct.bz_stream** %strm655, align 8
  %avail_in656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %530, i32 0, i32 1
  %531 = load i32, i32* %avail_in656, align 8
  %dec657 = add i32 %531, -1
  store i32 %dec657, i32* %avail_in656, align 8
  %532 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm658 = getelementptr inbounds %struct.DState, %struct.DState* %532, i32 0, i32 0
  %533 = load %struct.bz_stream*, %struct.bz_stream** %strm658, align 8
  %total_in_lo32659 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %533, i32 0, i32 2
  %534 = load i32, i32* %total_in_lo32659, align 4
  %inc660 = add i32 %534, 1
  store i32 %inc660, i32* %total_in_lo32659, align 4
  %535 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm661 = getelementptr inbounds %struct.DState, %struct.DState* %535, i32 0, i32 0
  %536 = load %struct.bz_stream*, %struct.bz_stream** %strm661, align 8
  %total_in_lo32662 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %536, i32 0, i32 2
  %537 = load i32, i32* %total_in_lo32662, align 4
  %cmp663 = icmp eq i32 %537, 0
  br i1 %cmp663, label %if.then665, label %if.end669

if.then665:                                       ; preds = %if.end642
  %538 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm666 = getelementptr inbounds %struct.DState, %struct.DState* %538, i32 0, i32 0
  %539 = load %struct.bz_stream*, %struct.bz_stream** %strm666, align 8
  %total_in_hi32667 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %539, i32 0, i32 3
  %540 = load i32, i32* %total_in_hi32667, align 8
  %inc668 = add i32 %540, 1
  store i32 %inc668, i32* %total_in_hi32667, align 8
  br label %if.end669

if.end669:                                        ; preds = %if.then665, %if.end642
  br label %while.body622

while.end670:                                     ; preds = %if.then626
  %541 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC671 = getelementptr inbounds %struct.DState, %struct.DState* %541, i32 0, i32 23
  %542 = load i32, i32* %storedBlockCRC671, align 8
  %shl672 = shl i32 %542, 8
  %543 = load i8, i8* %uc, align 1
  %conv673 = zext i8 %543 to i32
  %or674 = or i32 %shl672, %conv673
  %544 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC675 = getelementptr inbounds %struct.DState, %struct.DState* %544, i32 0, i32 23
  store i32 %or674, i32* %storedBlockCRC675, align 8
  br label %sw.bb676

sw.bb676:                                         ; preds = %while.end670, %if.end
  %545 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state677 = getelementptr inbounds %struct.DState, %struct.DState* %545, i32 0, i32 1
  store i32 21, i32* %state677, align 8
  br label %while.body678

while.body678:                                    ; preds = %if.end725, %sw.bb676
  %546 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive679 = getelementptr inbounds %struct.DState, %struct.DState* %546, i32 0, i32 8
  %547 = load i32, i32* %bsLive679, align 4
  %cmp680 = icmp sge i32 %547, 8
  br i1 %cmp680, label %if.then682, label %if.end692

if.then682:                                       ; preds = %while.body678
  %548 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff684 = getelementptr inbounds %struct.DState, %struct.DState* %548, i32 0, i32 7
  %549 = load i32, i32* %bsBuff684, align 8
  %550 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive685 = getelementptr inbounds %struct.DState, %struct.DState* %550, i32 0, i32 8
  %551 = load i32, i32* %bsLive685, align 4
  %sub686 = sub nsw i32 %551, 8
  %shr687 = lshr i32 %549, %sub686
  %and688 = and i32 %shr687, 255
  store i32 %and688, i32* %v683, align 4
  %552 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive689 = getelementptr inbounds %struct.DState, %struct.DState* %552, i32 0, i32 8
  %553 = load i32, i32* %bsLive689, align 4
  %sub690 = sub nsw i32 %553, 8
  store i32 %sub690, i32* %bsLive689, align 4
  %554 = load i32, i32* %v683, align 4
  %conv691 = trunc i32 %554 to i8
  store i8 %conv691, i8* %uc, align 1
  br label %while.end726

if.end692:                                        ; preds = %while.body678
  %555 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm693 = getelementptr inbounds %struct.DState, %struct.DState* %555, i32 0, i32 0
  %556 = load %struct.bz_stream*, %struct.bz_stream** %strm693, align 8
  %avail_in694 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %556, i32 0, i32 1
  %557 = load i32, i32* %avail_in694, align 8
  %cmp695 = icmp eq i32 %557, 0
  br i1 %cmp695, label %if.then697, label %if.end698

if.then697:                                       ; preds = %if.end692
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end698:                                        ; preds = %if.end692
  %558 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff699 = getelementptr inbounds %struct.DState, %struct.DState* %558, i32 0, i32 7
  %559 = load i32, i32* %bsBuff699, align 8
  %shl700 = shl i32 %559, 8
  %560 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm701 = getelementptr inbounds %struct.DState, %struct.DState* %560, i32 0, i32 0
  %561 = load %struct.bz_stream*, %struct.bz_stream** %strm701, align 8
  %next_in702 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %561, i32 0, i32 0
  %562 = load i8*, i8** %next_in702, align 8
  %563 = load i8, i8* %562, align 1
  %conv703 = zext i8 %563 to i32
  %or704 = or i32 %shl700, %conv703
  %564 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff705 = getelementptr inbounds %struct.DState, %struct.DState* %564, i32 0, i32 7
  store i32 %or704, i32* %bsBuff705, align 8
  %565 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive706 = getelementptr inbounds %struct.DState, %struct.DState* %565, i32 0, i32 8
  %566 = load i32, i32* %bsLive706, align 4
  %add707 = add nsw i32 %566, 8
  store i32 %add707, i32* %bsLive706, align 4
  %567 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm708 = getelementptr inbounds %struct.DState, %struct.DState* %567, i32 0, i32 0
  %568 = load %struct.bz_stream*, %struct.bz_stream** %strm708, align 8
  %next_in709 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %568, i32 0, i32 0
  %569 = load i8*, i8** %next_in709, align 8
  %incdec.ptr710 = getelementptr inbounds i8, i8* %569, i32 1
  store i8* %incdec.ptr710, i8** %next_in709, align 8
  %570 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm711 = getelementptr inbounds %struct.DState, %struct.DState* %570, i32 0, i32 0
  %571 = load %struct.bz_stream*, %struct.bz_stream** %strm711, align 8
  %avail_in712 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %571, i32 0, i32 1
  %572 = load i32, i32* %avail_in712, align 8
  %dec713 = add i32 %572, -1
  store i32 %dec713, i32* %avail_in712, align 8
  %573 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm714 = getelementptr inbounds %struct.DState, %struct.DState* %573, i32 0, i32 0
  %574 = load %struct.bz_stream*, %struct.bz_stream** %strm714, align 8
  %total_in_lo32715 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %574, i32 0, i32 2
  %575 = load i32, i32* %total_in_lo32715, align 4
  %inc716 = add i32 %575, 1
  store i32 %inc716, i32* %total_in_lo32715, align 4
  %576 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm717 = getelementptr inbounds %struct.DState, %struct.DState* %576, i32 0, i32 0
  %577 = load %struct.bz_stream*, %struct.bz_stream** %strm717, align 8
  %total_in_lo32718 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %577, i32 0, i32 2
  %578 = load i32, i32* %total_in_lo32718, align 4
  %cmp719 = icmp eq i32 %578, 0
  br i1 %cmp719, label %if.then721, label %if.end725

if.then721:                                       ; preds = %if.end698
  %579 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm722 = getelementptr inbounds %struct.DState, %struct.DState* %579, i32 0, i32 0
  %580 = load %struct.bz_stream*, %struct.bz_stream** %strm722, align 8
  %total_in_hi32723 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %580, i32 0, i32 3
  %581 = load i32, i32* %total_in_hi32723, align 8
  %inc724 = add i32 %581, 1
  store i32 %inc724, i32* %total_in_hi32723, align 8
  br label %if.end725

if.end725:                                        ; preds = %if.then721, %if.end698
  br label %while.body678

while.end726:                                     ; preds = %if.then682
  %582 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC727 = getelementptr inbounds %struct.DState, %struct.DState* %582, i32 0, i32 23
  %583 = load i32, i32* %storedBlockCRC727, align 8
  %shl728 = shl i32 %583, 8
  %584 = load i8, i8* %uc, align 1
  %conv729 = zext i8 %584 to i32
  %or730 = or i32 %shl728, %conv729
  %585 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC731 = getelementptr inbounds %struct.DState, %struct.DState* %585, i32 0, i32 23
  store i32 %or730, i32* %storedBlockCRC731, align 8
  br label %sw.bb732

sw.bb732:                                         ; preds = %while.end726, %if.end
  %586 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state733 = getelementptr inbounds %struct.DState, %struct.DState* %586, i32 0, i32 1
  store i32 22, i32* %state733, align 8
  br label %while.body734

while.body734:                                    ; preds = %if.end781, %sw.bb732
  %587 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive735 = getelementptr inbounds %struct.DState, %struct.DState* %587, i32 0, i32 8
  %588 = load i32, i32* %bsLive735, align 4
  %cmp736 = icmp sge i32 %588, 8
  br i1 %cmp736, label %if.then738, label %if.end748

if.then738:                                       ; preds = %while.body734
  %589 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff740 = getelementptr inbounds %struct.DState, %struct.DState* %589, i32 0, i32 7
  %590 = load i32, i32* %bsBuff740, align 8
  %591 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive741 = getelementptr inbounds %struct.DState, %struct.DState* %591, i32 0, i32 8
  %592 = load i32, i32* %bsLive741, align 4
  %sub742 = sub nsw i32 %592, 8
  %shr743 = lshr i32 %590, %sub742
  %and744 = and i32 %shr743, 255
  store i32 %and744, i32* %v739, align 4
  %593 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive745 = getelementptr inbounds %struct.DState, %struct.DState* %593, i32 0, i32 8
  %594 = load i32, i32* %bsLive745, align 4
  %sub746 = sub nsw i32 %594, 8
  store i32 %sub746, i32* %bsLive745, align 4
  %595 = load i32, i32* %v739, align 4
  %conv747 = trunc i32 %595 to i8
  store i8 %conv747, i8* %uc, align 1
  br label %while.end782

if.end748:                                        ; preds = %while.body734
  %596 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm749 = getelementptr inbounds %struct.DState, %struct.DState* %596, i32 0, i32 0
  %597 = load %struct.bz_stream*, %struct.bz_stream** %strm749, align 8
  %avail_in750 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %597, i32 0, i32 1
  %598 = load i32, i32* %avail_in750, align 8
  %cmp751 = icmp eq i32 %598, 0
  br i1 %cmp751, label %if.then753, label %if.end754

if.then753:                                       ; preds = %if.end748
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end754:                                        ; preds = %if.end748
  %599 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff755 = getelementptr inbounds %struct.DState, %struct.DState* %599, i32 0, i32 7
  %600 = load i32, i32* %bsBuff755, align 8
  %shl756 = shl i32 %600, 8
  %601 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm757 = getelementptr inbounds %struct.DState, %struct.DState* %601, i32 0, i32 0
  %602 = load %struct.bz_stream*, %struct.bz_stream** %strm757, align 8
  %next_in758 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %602, i32 0, i32 0
  %603 = load i8*, i8** %next_in758, align 8
  %604 = load i8, i8* %603, align 1
  %conv759 = zext i8 %604 to i32
  %or760 = or i32 %shl756, %conv759
  %605 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff761 = getelementptr inbounds %struct.DState, %struct.DState* %605, i32 0, i32 7
  store i32 %or760, i32* %bsBuff761, align 8
  %606 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive762 = getelementptr inbounds %struct.DState, %struct.DState* %606, i32 0, i32 8
  %607 = load i32, i32* %bsLive762, align 4
  %add763 = add nsw i32 %607, 8
  store i32 %add763, i32* %bsLive762, align 4
  %608 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm764 = getelementptr inbounds %struct.DState, %struct.DState* %608, i32 0, i32 0
  %609 = load %struct.bz_stream*, %struct.bz_stream** %strm764, align 8
  %next_in765 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %609, i32 0, i32 0
  %610 = load i8*, i8** %next_in765, align 8
  %incdec.ptr766 = getelementptr inbounds i8, i8* %610, i32 1
  store i8* %incdec.ptr766, i8** %next_in765, align 8
  %611 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm767 = getelementptr inbounds %struct.DState, %struct.DState* %611, i32 0, i32 0
  %612 = load %struct.bz_stream*, %struct.bz_stream** %strm767, align 8
  %avail_in768 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %612, i32 0, i32 1
  %613 = load i32, i32* %avail_in768, align 8
  %dec769 = add i32 %613, -1
  store i32 %dec769, i32* %avail_in768, align 8
  %614 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm770 = getelementptr inbounds %struct.DState, %struct.DState* %614, i32 0, i32 0
  %615 = load %struct.bz_stream*, %struct.bz_stream** %strm770, align 8
  %total_in_lo32771 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %615, i32 0, i32 2
  %616 = load i32, i32* %total_in_lo32771, align 4
  %inc772 = add i32 %616, 1
  store i32 %inc772, i32* %total_in_lo32771, align 4
  %617 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm773 = getelementptr inbounds %struct.DState, %struct.DState* %617, i32 0, i32 0
  %618 = load %struct.bz_stream*, %struct.bz_stream** %strm773, align 8
  %total_in_lo32774 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %618, i32 0, i32 2
  %619 = load i32, i32* %total_in_lo32774, align 4
  %cmp775 = icmp eq i32 %619, 0
  br i1 %cmp775, label %if.then777, label %if.end781

if.then777:                                       ; preds = %if.end754
  %620 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm778 = getelementptr inbounds %struct.DState, %struct.DState* %620, i32 0, i32 0
  %621 = load %struct.bz_stream*, %struct.bz_stream** %strm778, align 8
  %total_in_hi32779 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %621, i32 0, i32 3
  %622 = load i32, i32* %total_in_hi32779, align 8
  %inc780 = add i32 %622, 1
  store i32 %inc780, i32* %total_in_hi32779, align 8
  br label %if.end781

if.end781:                                        ; preds = %if.then777, %if.end754
  br label %while.body734

while.end782:                                     ; preds = %if.then738
  %623 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC783 = getelementptr inbounds %struct.DState, %struct.DState* %623, i32 0, i32 23
  %624 = load i32, i32* %storedBlockCRC783, align 8
  %shl784 = shl i32 %624, 8
  %625 = load i8, i8* %uc, align 1
  %conv785 = zext i8 %625 to i32
  %or786 = or i32 %shl784, %conv785
  %626 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC787 = getelementptr inbounds %struct.DState, %struct.DState* %626, i32 0, i32 23
  store i32 %or786, i32* %storedBlockCRC787, align 8
  br label %sw.bb788

sw.bb788:                                         ; preds = %while.end782, %if.end
  %627 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state789 = getelementptr inbounds %struct.DState, %struct.DState* %627, i32 0, i32 1
  store i32 23, i32* %state789, align 8
  br label %while.body790

while.body790:                                    ; preds = %if.end837, %sw.bb788
  %628 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive791 = getelementptr inbounds %struct.DState, %struct.DState* %628, i32 0, i32 8
  %629 = load i32, i32* %bsLive791, align 4
  %cmp792 = icmp sge i32 %629, 8
  br i1 %cmp792, label %if.then794, label %if.end804

if.then794:                                       ; preds = %while.body790
  %630 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff796 = getelementptr inbounds %struct.DState, %struct.DState* %630, i32 0, i32 7
  %631 = load i32, i32* %bsBuff796, align 8
  %632 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive797 = getelementptr inbounds %struct.DState, %struct.DState* %632, i32 0, i32 8
  %633 = load i32, i32* %bsLive797, align 4
  %sub798 = sub nsw i32 %633, 8
  %shr799 = lshr i32 %631, %sub798
  %and800 = and i32 %shr799, 255
  store i32 %and800, i32* %v795, align 4
  %634 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive801 = getelementptr inbounds %struct.DState, %struct.DState* %634, i32 0, i32 8
  %635 = load i32, i32* %bsLive801, align 4
  %sub802 = sub nsw i32 %635, 8
  store i32 %sub802, i32* %bsLive801, align 4
  %636 = load i32, i32* %v795, align 4
  %conv803 = trunc i32 %636 to i8
  store i8 %conv803, i8* %uc, align 1
  br label %while.end838

if.end804:                                        ; preds = %while.body790
  %637 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm805 = getelementptr inbounds %struct.DState, %struct.DState* %637, i32 0, i32 0
  %638 = load %struct.bz_stream*, %struct.bz_stream** %strm805, align 8
  %avail_in806 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %638, i32 0, i32 1
  %639 = load i32, i32* %avail_in806, align 8
  %cmp807 = icmp eq i32 %639, 0
  br i1 %cmp807, label %if.then809, label %if.end810

if.then809:                                       ; preds = %if.end804
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end810:                                        ; preds = %if.end804
  %640 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff811 = getelementptr inbounds %struct.DState, %struct.DState* %640, i32 0, i32 7
  %641 = load i32, i32* %bsBuff811, align 8
  %shl812 = shl i32 %641, 8
  %642 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm813 = getelementptr inbounds %struct.DState, %struct.DState* %642, i32 0, i32 0
  %643 = load %struct.bz_stream*, %struct.bz_stream** %strm813, align 8
  %next_in814 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %643, i32 0, i32 0
  %644 = load i8*, i8** %next_in814, align 8
  %645 = load i8, i8* %644, align 1
  %conv815 = zext i8 %645 to i32
  %or816 = or i32 %shl812, %conv815
  %646 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff817 = getelementptr inbounds %struct.DState, %struct.DState* %646, i32 0, i32 7
  store i32 %or816, i32* %bsBuff817, align 8
  %647 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive818 = getelementptr inbounds %struct.DState, %struct.DState* %647, i32 0, i32 8
  %648 = load i32, i32* %bsLive818, align 4
  %add819 = add nsw i32 %648, 8
  store i32 %add819, i32* %bsLive818, align 4
  %649 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm820 = getelementptr inbounds %struct.DState, %struct.DState* %649, i32 0, i32 0
  %650 = load %struct.bz_stream*, %struct.bz_stream** %strm820, align 8
  %next_in821 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %650, i32 0, i32 0
  %651 = load i8*, i8** %next_in821, align 8
  %incdec.ptr822 = getelementptr inbounds i8, i8* %651, i32 1
  store i8* %incdec.ptr822, i8** %next_in821, align 8
  %652 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm823 = getelementptr inbounds %struct.DState, %struct.DState* %652, i32 0, i32 0
  %653 = load %struct.bz_stream*, %struct.bz_stream** %strm823, align 8
  %avail_in824 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %653, i32 0, i32 1
  %654 = load i32, i32* %avail_in824, align 8
  %dec825 = add i32 %654, -1
  store i32 %dec825, i32* %avail_in824, align 8
  %655 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm826 = getelementptr inbounds %struct.DState, %struct.DState* %655, i32 0, i32 0
  %656 = load %struct.bz_stream*, %struct.bz_stream** %strm826, align 8
  %total_in_lo32827 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %656, i32 0, i32 2
  %657 = load i32, i32* %total_in_lo32827, align 4
  %inc828 = add i32 %657, 1
  store i32 %inc828, i32* %total_in_lo32827, align 4
  %658 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm829 = getelementptr inbounds %struct.DState, %struct.DState* %658, i32 0, i32 0
  %659 = load %struct.bz_stream*, %struct.bz_stream** %strm829, align 8
  %total_in_lo32830 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %659, i32 0, i32 2
  %660 = load i32, i32* %total_in_lo32830, align 4
  %cmp831 = icmp eq i32 %660, 0
  br i1 %cmp831, label %if.then833, label %if.end837

if.then833:                                       ; preds = %if.end810
  %661 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm834 = getelementptr inbounds %struct.DState, %struct.DState* %661, i32 0, i32 0
  %662 = load %struct.bz_stream*, %struct.bz_stream** %strm834, align 8
  %total_in_hi32835 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %662, i32 0, i32 3
  %663 = load i32, i32* %total_in_hi32835, align 8
  %inc836 = add i32 %663, 1
  store i32 %inc836, i32* %total_in_hi32835, align 8
  br label %if.end837

if.end837:                                        ; preds = %if.then833, %if.end810
  br label %while.body790

while.end838:                                     ; preds = %if.then794
  %664 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC839 = getelementptr inbounds %struct.DState, %struct.DState* %664, i32 0, i32 23
  %665 = load i32, i32* %storedBlockCRC839, align 8
  %shl840 = shl i32 %665, 8
  %666 = load i8, i8* %uc, align 1
  %conv841 = zext i8 %666 to i32
  %or842 = or i32 %shl840, %conv841
  %667 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedBlockCRC843 = getelementptr inbounds %struct.DState, %struct.DState* %667, i32 0, i32 23
  store i32 %or842, i32* %storedBlockCRC843, align 8
  br label %sw.bb844

sw.bb844:                                         ; preds = %while.end838, %if.end
  %668 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state845 = getelementptr inbounds %struct.DState, %struct.DState* %668, i32 0, i32 1
  store i32 24, i32* %state845, align 8
  br label %while.body846

while.body846:                                    ; preds = %if.end893, %sw.bb844
  %669 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive847 = getelementptr inbounds %struct.DState, %struct.DState* %669, i32 0, i32 8
  %670 = load i32, i32* %bsLive847, align 4
  %cmp848 = icmp sge i32 %670, 1
  br i1 %cmp848, label %if.then850, label %if.end860

if.then850:                                       ; preds = %while.body846
  %671 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff852 = getelementptr inbounds %struct.DState, %struct.DState* %671, i32 0, i32 7
  %672 = load i32, i32* %bsBuff852, align 8
  %673 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive853 = getelementptr inbounds %struct.DState, %struct.DState* %673, i32 0, i32 8
  %674 = load i32, i32* %bsLive853, align 4
  %sub854 = sub nsw i32 %674, 1
  %shr855 = lshr i32 %672, %sub854
  %and856 = and i32 %shr855, 1
  store i32 %and856, i32* %v851, align 4
  %675 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive857 = getelementptr inbounds %struct.DState, %struct.DState* %675, i32 0, i32 8
  %676 = load i32, i32* %bsLive857, align 4
  %sub858 = sub nsw i32 %676, 1
  store i32 %sub858, i32* %bsLive857, align 4
  %677 = load i32, i32* %v851, align 4
  %conv859 = trunc i32 %677 to i8
  %678 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %678, i32 0, i32 4
  store i8 %conv859, i8* %blockRandomised, align 4
  br label %while.end894

if.end860:                                        ; preds = %while.body846
  %679 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm861 = getelementptr inbounds %struct.DState, %struct.DState* %679, i32 0, i32 0
  %680 = load %struct.bz_stream*, %struct.bz_stream** %strm861, align 8
  %avail_in862 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %680, i32 0, i32 1
  %681 = load i32, i32* %avail_in862, align 8
  %cmp863 = icmp eq i32 %681, 0
  br i1 %cmp863, label %if.then865, label %if.end866

if.then865:                                       ; preds = %if.end860
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end866:                                        ; preds = %if.end860
  %682 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff867 = getelementptr inbounds %struct.DState, %struct.DState* %682, i32 0, i32 7
  %683 = load i32, i32* %bsBuff867, align 8
  %shl868 = shl i32 %683, 8
  %684 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm869 = getelementptr inbounds %struct.DState, %struct.DState* %684, i32 0, i32 0
  %685 = load %struct.bz_stream*, %struct.bz_stream** %strm869, align 8
  %next_in870 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %685, i32 0, i32 0
  %686 = load i8*, i8** %next_in870, align 8
  %687 = load i8, i8* %686, align 1
  %conv871 = zext i8 %687 to i32
  %or872 = or i32 %shl868, %conv871
  %688 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff873 = getelementptr inbounds %struct.DState, %struct.DState* %688, i32 0, i32 7
  store i32 %or872, i32* %bsBuff873, align 8
  %689 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive874 = getelementptr inbounds %struct.DState, %struct.DState* %689, i32 0, i32 8
  %690 = load i32, i32* %bsLive874, align 4
  %add875 = add nsw i32 %690, 8
  store i32 %add875, i32* %bsLive874, align 4
  %691 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm876 = getelementptr inbounds %struct.DState, %struct.DState* %691, i32 0, i32 0
  %692 = load %struct.bz_stream*, %struct.bz_stream** %strm876, align 8
  %next_in877 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %692, i32 0, i32 0
  %693 = load i8*, i8** %next_in877, align 8
  %incdec.ptr878 = getelementptr inbounds i8, i8* %693, i32 1
  store i8* %incdec.ptr878, i8** %next_in877, align 8
  %694 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm879 = getelementptr inbounds %struct.DState, %struct.DState* %694, i32 0, i32 0
  %695 = load %struct.bz_stream*, %struct.bz_stream** %strm879, align 8
  %avail_in880 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %695, i32 0, i32 1
  %696 = load i32, i32* %avail_in880, align 8
  %dec881 = add i32 %696, -1
  store i32 %dec881, i32* %avail_in880, align 8
  %697 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm882 = getelementptr inbounds %struct.DState, %struct.DState* %697, i32 0, i32 0
  %698 = load %struct.bz_stream*, %struct.bz_stream** %strm882, align 8
  %total_in_lo32883 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %698, i32 0, i32 2
  %699 = load i32, i32* %total_in_lo32883, align 4
  %inc884 = add i32 %699, 1
  store i32 %inc884, i32* %total_in_lo32883, align 4
  %700 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm885 = getelementptr inbounds %struct.DState, %struct.DState* %700, i32 0, i32 0
  %701 = load %struct.bz_stream*, %struct.bz_stream** %strm885, align 8
  %total_in_lo32886 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %701, i32 0, i32 2
  %702 = load i32, i32* %total_in_lo32886, align 4
  %cmp887 = icmp eq i32 %702, 0
  br i1 %cmp887, label %if.then889, label %if.end893

if.then889:                                       ; preds = %if.end866
  %703 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm890 = getelementptr inbounds %struct.DState, %struct.DState* %703, i32 0, i32 0
  %704 = load %struct.bz_stream*, %struct.bz_stream** %strm890, align 8
  %total_in_hi32891 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %704, i32 0, i32 3
  %705 = load i32, i32* %total_in_hi32891, align 8
  %inc892 = add i32 %705, 1
  store i32 %inc892, i32* %total_in_hi32891, align 8
  br label %if.end893

if.end893:                                        ; preds = %if.then889, %if.end866
  br label %while.body846

while.end894:                                     ; preds = %if.then850
  %706 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr = getelementptr inbounds %struct.DState, %struct.DState* %706, i32 0, i32 13
  store i32 0, i32* %origPtr, align 8
  br label %sw.bb895

sw.bb895:                                         ; preds = %while.end894, %if.end
  %707 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state896 = getelementptr inbounds %struct.DState, %struct.DState* %707, i32 0, i32 1
  store i32 25, i32* %state896, align 8
  br label %while.body897

while.body897:                                    ; preds = %if.end944, %sw.bb895
  %708 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive898 = getelementptr inbounds %struct.DState, %struct.DState* %708, i32 0, i32 8
  %709 = load i32, i32* %bsLive898, align 4
  %cmp899 = icmp sge i32 %709, 8
  br i1 %cmp899, label %if.then901, label %if.end911

if.then901:                                       ; preds = %while.body897
  %710 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff903 = getelementptr inbounds %struct.DState, %struct.DState* %710, i32 0, i32 7
  %711 = load i32, i32* %bsBuff903, align 8
  %712 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive904 = getelementptr inbounds %struct.DState, %struct.DState* %712, i32 0, i32 8
  %713 = load i32, i32* %bsLive904, align 4
  %sub905 = sub nsw i32 %713, 8
  %shr906 = lshr i32 %711, %sub905
  %and907 = and i32 %shr906, 255
  store i32 %and907, i32* %v902, align 4
  %714 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive908 = getelementptr inbounds %struct.DState, %struct.DState* %714, i32 0, i32 8
  %715 = load i32, i32* %bsLive908, align 4
  %sub909 = sub nsw i32 %715, 8
  store i32 %sub909, i32* %bsLive908, align 4
  %716 = load i32, i32* %v902, align 4
  %conv910 = trunc i32 %716 to i8
  store i8 %conv910, i8* %uc, align 1
  br label %while.end945

if.end911:                                        ; preds = %while.body897
  %717 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm912 = getelementptr inbounds %struct.DState, %struct.DState* %717, i32 0, i32 0
  %718 = load %struct.bz_stream*, %struct.bz_stream** %strm912, align 8
  %avail_in913 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %718, i32 0, i32 1
  %719 = load i32, i32* %avail_in913, align 8
  %cmp914 = icmp eq i32 %719, 0
  br i1 %cmp914, label %if.then916, label %if.end917

if.then916:                                       ; preds = %if.end911
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end917:                                        ; preds = %if.end911
  %720 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff918 = getelementptr inbounds %struct.DState, %struct.DState* %720, i32 0, i32 7
  %721 = load i32, i32* %bsBuff918, align 8
  %shl919 = shl i32 %721, 8
  %722 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm920 = getelementptr inbounds %struct.DState, %struct.DState* %722, i32 0, i32 0
  %723 = load %struct.bz_stream*, %struct.bz_stream** %strm920, align 8
  %next_in921 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %723, i32 0, i32 0
  %724 = load i8*, i8** %next_in921, align 8
  %725 = load i8, i8* %724, align 1
  %conv922 = zext i8 %725 to i32
  %or923 = or i32 %shl919, %conv922
  %726 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff924 = getelementptr inbounds %struct.DState, %struct.DState* %726, i32 0, i32 7
  store i32 %or923, i32* %bsBuff924, align 8
  %727 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive925 = getelementptr inbounds %struct.DState, %struct.DState* %727, i32 0, i32 8
  %728 = load i32, i32* %bsLive925, align 4
  %add926 = add nsw i32 %728, 8
  store i32 %add926, i32* %bsLive925, align 4
  %729 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm927 = getelementptr inbounds %struct.DState, %struct.DState* %729, i32 0, i32 0
  %730 = load %struct.bz_stream*, %struct.bz_stream** %strm927, align 8
  %next_in928 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %730, i32 0, i32 0
  %731 = load i8*, i8** %next_in928, align 8
  %incdec.ptr929 = getelementptr inbounds i8, i8* %731, i32 1
  store i8* %incdec.ptr929, i8** %next_in928, align 8
  %732 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm930 = getelementptr inbounds %struct.DState, %struct.DState* %732, i32 0, i32 0
  %733 = load %struct.bz_stream*, %struct.bz_stream** %strm930, align 8
  %avail_in931 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %733, i32 0, i32 1
  %734 = load i32, i32* %avail_in931, align 8
  %dec932 = add i32 %734, -1
  store i32 %dec932, i32* %avail_in931, align 8
  %735 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm933 = getelementptr inbounds %struct.DState, %struct.DState* %735, i32 0, i32 0
  %736 = load %struct.bz_stream*, %struct.bz_stream** %strm933, align 8
  %total_in_lo32934 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %736, i32 0, i32 2
  %737 = load i32, i32* %total_in_lo32934, align 4
  %inc935 = add i32 %737, 1
  store i32 %inc935, i32* %total_in_lo32934, align 4
  %738 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm936 = getelementptr inbounds %struct.DState, %struct.DState* %738, i32 0, i32 0
  %739 = load %struct.bz_stream*, %struct.bz_stream** %strm936, align 8
  %total_in_lo32937 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %739, i32 0, i32 2
  %740 = load i32, i32* %total_in_lo32937, align 4
  %cmp938 = icmp eq i32 %740, 0
  br i1 %cmp938, label %if.then940, label %if.end944

if.then940:                                       ; preds = %if.end917
  %741 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm941 = getelementptr inbounds %struct.DState, %struct.DState* %741, i32 0, i32 0
  %742 = load %struct.bz_stream*, %struct.bz_stream** %strm941, align 8
  %total_in_hi32942 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %742, i32 0, i32 3
  %743 = load i32, i32* %total_in_hi32942, align 8
  %inc943 = add i32 %743, 1
  store i32 %inc943, i32* %total_in_hi32942, align 8
  br label %if.end944

if.end944:                                        ; preds = %if.then940, %if.end917
  br label %while.body897

while.end945:                                     ; preds = %if.then901
  %744 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr946 = getelementptr inbounds %struct.DState, %struct.DState* %744, i32 0, i32 13
  %745 = load i32, i32* %origPtr946, align 8
  %shl947 = shl i32 %745, 8
  %746 = load i8, i8* %uc, align 1
  %conv948 = zext i8 %746 to i32
  %or949 = or i32 %shl947, %conv948
  %747 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr950 = getelementptr inbounds %struct.DState, %struct.DState* %747, i32 0, i32 13
  store i32 %or949, i32* %origPtr950, align 8
  br label %sw.bb951

sw.bb951:                                         ; preds = %while.end945, %if.end
  %748 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state952 = getelementptr inbounds %struct.DState, %struct.DState* %748, i32 0, i32 1
  store i32 26, i32* %state952, align 8
  br label %while.body953

while.body953:                                    ; preds = %if.end1000, %sw.bb951
  %749 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive954 = getelementptr inbounds %struct.DState, %struct.DState* %749, i32 0, i32 8
  %750 = load i32, i32* %bsLive954, align 4
  %cmp955 = icmp sge i32 %750, 8
  br i1 %cmp955, label %if.then957, label %if.end967

if.then957:                                       ; preds = %while.body953
  %751 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff959 = getelementptr inbounds %struct.DState, %struct.DState* %751, i32 0, i32 7
  %752 = load i32, i32* %bsBuff959, align 8
  %753 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive960 = getelementptr inbounds %struct.DState, %struct.DState* %753, i32 0, i32 8
  %754 = load i32, i32* %bsLive960, align 4
  %sub961 = sub nsw i32 %754, 8
  %shr962 = lshr i32 %752, %sub961
  %and963 = and i32 %shr962, 255
  store i32 %and963, i32* %v958, align 4
  %755 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive964 = getelementptr inbounds %struct.DState, %struct.DState* %755, i32 0, i32 8
  %756 = load i32, i32* %bsLive964, align 4
  %sub965 = sub nsw i32 %756, 8
  store i32 %sub965, i32* %bsLive964, align 4
  %757 = load i32, i32* %v958, align 4
  %conv966 = trunc i32 %757 to i8
  store i8 %conv966, i8* %uc, align 1
  br label %while.end1001

if.end967:                                        ; preds = %while.body953
  %758 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm968 = getelementptr inbounds %struct.DState, %struct.DState* %758, i32 0, i32 0
  %759 = load %struct.bz_stream*, %struct.bz_stream** %strm968, align 8
  %avail_in969 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %759, i32 0, i32 1
  %760 = load i32, i32* %avail_in969, align 8
  %cmp970 = icmp eq i32 %760, 0
  br i1 %cmp970, label %if.then972, label %if.end973

if.then972:                                       ; preds = %if.end967
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end973:                                        ; preds = %if.end967
  %761 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff974 = getelementptr inbounds %struct.DState, %struct.DState* %761, i32 0, i32 7
  %762 = load i32, i32* %bsBuff974, align 8
  %shl975 = shl i32 %762, 8
  %763 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm976 = getelementptr inbounds %struct.DState, %struct.DState* %763, i32 0, i32 0
  %764 = load %struct.bz_stream*, %struct.bz_stream** %strm976, align 8
  %next_in977 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %764, i32 0, i32 0
  %765 = load i8*, i8** %next_in977, align 8
  %766 = load i8, i8* %765, align 1
  %conv978 = zext i8 %766 to i32
  %or979 = or i32 %shl975, %conv978
  %767 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff980 = getelementptr inbounds %struct.DState, %struct.DState* %767, i32 0, i32 7
  store i32 %or979, i32* %bsBuff980, align 8
  %768 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive981 = getelementptr inbounds %struct.DState, %struct.DState* %768, i32 0, i32 8
  %769 = load i32, i32* %bsLive981, align 4
  %add982 = add nsw i32 %769, 8
  store i32 %add982, i32* %bsLive981, align 4
  %770 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm983 = getelementptr inbounds %struct.DState, %struct.DState* %770, i32 0, i32 0
  %771 = load %struct.bz_stream*, %struct.bz_stream** %strm983, align 8
  %next_in984 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %771, i32 0, i32 0
  %772 = load i8*, i8** %next_in984, align 8
  %incdec.ptr985 = getelementptr inbounds i8, i8* %772, i32 1
  store i8* %incdec.ptr985, i8** %next_in984, align 8
  %773 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm986 = getelementptr inbounds %struct.DState, %struct.DState* %773, i32 0, i32 0
  %774 = load %struct.bz_stream*, %struct.bz_stream** %strm986, align 8
  %avail_in987 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %774, i32 0, i32 1
  %775 = load i32, i32* %avail_in987, align 8
  %dec988 = add i32 %775, -1
  store i32 %dec988, i32* %avail_in987, align 8
  %776 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm989 = getelementptr inbounds %struct.DState, %struct.DState* %776, i32 0, i32 0
  %777 = load %struct.bz_stream*, %struct.bz_stream** %strm989, align 8
  %total_in_lo32990 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %777, i32 0, i32 2
  %778 = load i32, i32* %total_in_lo32990, align 4
  %inc991 = add i32 %778, 1
  store i32 %inc991, i32* %total_in_lo32990, align 4
  %779 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm992 = getelementptr inbounds %struct.DState, %struct.DState* %779, i32 0, i32 0
  %780 = load %struct.bz_stream*, %struct.bz_stream** %strm992, align 8
  %total_in_lo32993 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %780, i32 0, i32 2
  %781 = load i32, i32* %total_in_lo32993, align 4
  %cmp994 = icmp eq i32 %781, 0
  br i1 %cmp994, label %if.then996, label %if.end1000

if.then996:                                       ; preds = %if.end973
  %782 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm997 = getelementptr inbounds %struct.DState, %struct.DState* %782, i32 0, i32 0
  %783 = load %struct.bz_stream*, %struct.bz_stream** %strm997, align 8
  %total_in_hi32998 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %783, i32 0, i32 3
  %784 = load i32, i32* %total_in_hi32998, align 8
  %inc999 = add i32 %784, 1
  store i32 %inc999, i32* %total_in_hi32998, align 8
  br label %if.end1000

if.end1000:                                       ; preds = %if.then996, %if.end973
  br label %while.body953

while.end1001:                                    ; preds = %if.then957
  %785 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1002 = getelementptr inbounds %struct.DState, %struct.DState* %785, i32 0, i32 13
  %786 = load i32, i32* %origPtr1002, align 8
  %shl1003 = shl i32 %786, 8
  %787 = load i8, i8* %uc, align 1
  %conv1004 = zext i8 %787 to i32
  %or1005 = or i32 %shl1003, %conv1004
  %788 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1006 = getelementptr inbounds %struct.DState, %struct.DState* %788, i32 0, i32 13
  store i32 %or1005, i32* %origPtr1006, align 8
  br label %sw.bb1007

sw.bb1007:                                        ; preds = %while.end1001, %if.end
  %789 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1008 = getelementptr inbounds %struct.DState, %struct.DState* %789, i32 0, i32 1
  store i32 27, i32* %state1008, align 8
  br label %while.body1009

while.body1009:                                   ; preds = %if.end1056, %sw.bb1007
  %790 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1010 = getelementptr inbounds %struct.DState, %struct.DState* %790, i32 0, i32 8
  %791 = load i32, i32* %bsLive1010, align 4
  %cmp1011 = icmp sge i32 %791, 8
  br i1 %cmp1011, label %if.then1013, label %if.end1023

if.then1013:                                      ; preds = %while.body1009
  %792 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1015 = getelementptr inbounds %struct.DState, %struct.DState* %792, i32 0, i32 7
  %793 = load i32, i32* %bsBuff1015, align 8
  %794 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1016 = getelementptr inbounds %struct.DState, %struct.DState* %794, i32 0, i32 8
  %795 = load i32, i32* %bsLive1016, align 4
  %sub1017 = sub nsw i32 %795, 8
  %shr1018 = lshr i32 %793, %sub1017
  %and1019 = and i32 %shr1018, 255
  store i32 %and1019, i32* %v1014, align 4
  %796 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1020 = getelementptr inbounds %struct.DState, %struct.DState* %796, i32 0, i32 8
  %797 = load i32, i32* %bsLive1020, align 4
  %sub1021 = sub nsw i32 %797, 8
  store i32 %sub1021, i32* %bsLive1020, align 4
  %798 = load i32, i32* %v1014, align 4
  %conv1022 = trunc i32 %798 to i8
  store i8 %conv1022, i8* %uc, align 1
  br label %while.end1057

if.end1023:                                       ; preds = %while.body1009
  %799 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1024 = getelementptr inbounds %struct.DState, %struct.DState* %799, i32 0, i32 0
  %800 = load %struct.bz_stream*, %struct.bz_stream** %strm1024, align 8
  %avail_in1025 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %800, i32 0, i32 1
  %801 = load i32, i32* %avail_in1025, align 8
  %cmp1026 = icmp eq i32 %801, 0
  br i1 %cmp1026, label %if.then1028, label %if.end1029

if.then1028:                                      ; preds = %if.end1023
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1029:                                       ; preds = %if.end1023
  %802 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1030 = getelementptr inbounds %struct.DState, %struct.DState* %802, i32 0, i32 7
  %803 = load i32, i32* %bsBuff1030, align 8
  %shl1031 = shl i32 %803, 8
  %804 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1032 = getelementptr inbounds %struct.DState, %struct.DState* %804, i32 0, i32 0
  %805 = load %struct.bz_stream*, %struct.bz_stream** %strm1032, align 8
  %next_in1033 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %805, i32 0, i32 0
  %806 = load i8*, i8** %next_in1033, align 8
  %807 = load i8, i8* %806, align 1
  %conv1034 = zext i8 %807 to i32
  %or1035 = or i32 %shl1031, %conv1034
  %808 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1036 = getelementptr inbounds %struct.DState, %struct.DState* %808, i32 0, i32 7
  store i32 %or1035, i32* %bsBuff1036, align 8
  %809 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1037 = getelementptr inbounds %struct.DState, %struct.DState* %809, i32 0, i32 8
  %810 = load i32, i32* %bsLive1037, align 4
  %add1038 = add nsw i32 %810, 8
  store i32 %add1038, i32* %bsLive1037, align 4
  %811 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1039 = getelementptr inbounds %struct.DState, %struct.DState* %811, i32 0, i32 0
  %812 = load %struct.bz_stream*, %struct.bz_stream** %strm1039, align 8
  %next_in1040 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %812, i32 0, i32 0
  %813 = load i8*, i8** %next_in1040, align 8
  %incdec.ptr1041 = getelementptr inbounds i8, i8* %813, i32 1
  store i8* %incdec.ptr1041, i8** %next_in1040, align 8
  %814 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1042 = getelementptr inbounds %struct.DState, %struct.DState* %814, i32 0, i32 0
  %815 = load %struct.bz_stream*, %struct.bz_stream** %strm1042, align 8
  %avail_in1043 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %815, i32 0, i32 1
  %816 = load i32, i32* %avail_in1043, align 8
  %dec1044 = add i32 %816, -1
  store i32 %dec1044, i32* %avail_in1043, align 8
  %817 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1045 = getelementptr inbounds %struct.DState, %struct.DState* %817, i32 0, i32 0
  %818 = load %struct.bz_stream*, %struct.bz_stream** %strm1045, align 8
  %total_in_lo321046 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %818, i32 0, i32 2
  %819 = load i32, i32* %total_in_lo321046, align 4
  %inc1047 = add i32 %819, 1
  store i32 %inc1047, i32* %total_in_lo321046, align 4
  %820 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1048 = getelementptr inbounds %struct.DState, %struct.DState* %820, i32 0, i32 0
  %821 = load %struct.bz_stream*, %struct.bz_stream** %strm1048, align 8
  %total_in_lo321049 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %821, i32 0, i32 2
  %822 = load i32, i32* %total_in_lo321049, align 4
  %cmp1050 = icmp eq i32 %822, 0
  br i1 %cmp1050, label %if.then1052, label %if.end1056

if.then1052:                                      ; preds = %if.end1029
  %823 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1053 = getelementptr inbounds %struct.DState, %struct.DState* %823, i32 0, i32 0
  %824 = load %struct.bz_stream*, %struct.bz_stream** %strm1053, align 8
  %total_in_hi321054 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %824, i32 0, i32 3
  %825 = load i32, i32* %total_in_hi321054, align 8
  %inc1055 = add i32 %825, 1
  store i32 %inc1055, i32* %total_in_hi321054, align 8
  br label %if.end1056

if.end1056:                                       ; preds = %if.then1052, %if.end1029
  br label %while.body1009

while.end1057:                                    ; preds = %if.then1013
  %826 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1058 = getelementptr inbounds %struct.DState, %struct.DState* %826, i32 0, i32 13
  %827 = load i32, i32* %origPtr1058, align 8
  %shl1059 = shl i32 %827, 8
  %828 = load i8, i8* %uc, align 1
  %conv1060 = zext i8 %828 to i32
  %or1061 = or i32 %shl1059, %conv1060
  %829 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1062 = getelementptr inbounds %struct.DState, %struct.DState* %829, i32 0, i32 13
  store i32 %or1061, i32* %origPtr1062, align 8
  %830 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1063 = getelementptr inbounds %struct.DState, %struct.DState* %830, i32 0, i32 13
  %831 = load i32, i32* %origPtr1063, align 8
  %cmp1064 = icmp slt i32 %831, 0
  br i1 %cmp1064, label %if.then1066, label %if.end1067

if.then1066:                                      ; preds = %while.end1057
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1067:                                       ; preds = %while.end1057
  %832 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr1068 = getelementptr inbounds %struct.DState, %struct.DState* %832, i32 0, i32 13
  %833 = load i32, i32* %origPtr1068, align 8
  %834 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k1069 = getelementptr inbounds %struct.DState, %struct.DState* %834, i32 0, i32 9
  %835 = load i32, i32* %blockSize100k1069, align 8
  %mul1070 = mul nsw i32 100000, %835
  %add1071 = add nsw i32 10, %mul1070
  %cmp1072 = icmp sgt i32 %833, %add1071
  br i1 %cmp1072, label %if.then1074, label %if.end1075

if.then1074:                                      ; preds = %if.end1067
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1075:                                       ; preds = %if.end1067
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end1075
  %836 = load i32, i32* %i, align 4
  %cmp1076 = icmp slt i32 %836, 16
  br i1 %cmp1076, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %sw.bb1078

sw.bb1078:                                        ; preds = %for.body, %if.end
  %837 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1079 = getelementptr inbounds %struct.DState, %struct.DState* %837, i32 0, i32 1
  store i32 28, i32* %state1079, align 8
  br label %while.body1080

while.body1080:                                   ; preds = %if.end1127, %sw.bb1078
  %838 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1081 = getelementptr inbounds %struct.DState, %struct.DState* %838, i32 0, i32 8
  %839 = load i32, i32* %bsLive1081, align 4
  %cmp1082 = icmp sge i32 %839, 1
  br i1 %cmp1082, label %if.then1084, label %if.end1094

if.then1084:                                      ; preds = %while.body1080
  %840 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1086 = getelementptr inbounds %struct.DState, %struct.DState* %840, i32 0, i32 7
  %841 = load i32, i32* %bsBuff1086, align 8
  %842 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1087 = getelementptr inbounds %struct.DState, %struct.DState* %842, i32 0, i32 8
  %843 = load i32, i32* %bsLive1087, align 4
  %sub1088 = sub nsw i32 %843, 1
  %shr1089 = lshr i32 %841, %sub1088
  %and1090 = and i32 %shr1089, 1
  store i32 %and1090, i32* %v1085, align 4
  %844 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1091 = getelementptr inbounds %struct.DState, %struct.DState* %844, i32 0, i32 8
  %845 = load i32, i32* %bsLive1091, align 4
  %sub1092 = sub nsw i32 %845, 1
  store i32 %sub1092, i32* %bsLive1091, align 4
  %846 = load i32, i32* %v1085, align 4
  %conv1093 = trunc i32 %846 to i8
  store i8 %conv1093, i8* %uc, align 1
  br label %while.end1128

if.end1094:                                       ; preds = %while.body1080
  %847 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1095 = getelementptr inbounds %struct.DState, %struct.DState* %847, i32 0, i32 0
  %848 = load %struct.bz_stream*, %struct.bz_stream** %strm1095, align 8
  %avail_in1096 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %848, i32 0, i32 1
  %849 = load i32, i32* %avail_in1096, align 8
  %cmp1097 = icmp eq i32 %849, 0
  br i1 %cmp1097, label %if.then1099, label %if.end1100

if.then1099:                                      ; preds = %if.end1094
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1100:                                       ; preds = %if.end1094
  %850 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1101 = getelementptr inbounds %struct.DState, %struct.DState* %850, i32 0, i32 7
  %851 = load i32, i32* %bsBuff1101, align 8
  %shl1102 = shl i32 %851, 8
  %852 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1103 = getelementptr inbounds %struct.DState, %struct.DState* %852, i32 0, i32 0
  %853 = load %struct.bz_stream*, %struct.bz_stream** %strm1103, align 8
  %next_in1104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %853, i32 0, i32 0
  %854 = load i8*, i8** %next_in1104, align 8
  %855 = load i8, i8* %854, align 1
  %conv1105 = zext i8 %855 to i32
  %or1106 = or i32 %shl1102, %conv1105
  %856 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1107 = getelementptr inbounds %struct.DState, %struct.DState* %856, i32 0, i32 7
  store i32 %or1106, i32* %bsBuff1107, align 8
  %857 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1108 = getelementptr inbounds %struct.DState, %struct.DState* %857, i32 0, i32 8
  %858 = load i32, i32* %bsLive1108, align 4
  %add1109 = add nsw i32 %858, 8
  store i32 %add1109, i32* %bsLive1108, align 4
  %859 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1110 = getelementptr inbounds %struct.DState, %struct.DState* %859, i32 0, i32 0
  %860 = load %struct.bz_stream*, %struct.bz_stream** %strm1110, align 8
  %next_in1111 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %860, i32 0, i32 0
  %861 = load i8*, i8** %next_in1111, align 8
  %incdec.ptr1112 = getelementptr inbounds i8, i8* %861, i32 1
  store i8* %incdec.ptr1112, i8** %next_in1111, align 8
  %862 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1113 = getelementptr inbounds %struct.DState, %struct.DState* %862, i32 0, i32 0
  %863 = load %struct.bz_stream*, %struct.bz_stream** %strm1113, align 8
  %avail_in1114 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %863, i32 0, i32 1
  %864 = load i32, i32* %avail_in1114, align 8
  %dec1115 = add i32 %864, -1
  store i32 %dec1115, i32* %avail_in1114, align 8
  %865 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1116 = getelementptr inbounds %struct.DState, %struct.DState* %865, i32 0, i32 0
  %866 = load %struct.bz_stream*, %struct.bz_stream** %strm1116, align 8
  %total_in_lo321117 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %866, i32 0, i32 2
  %867 = load i32, i32* %total_in_lo321117, align 4
  %inc1118 = add i32 %867, 1
  store i32 %inc1118, i32* %total_in_lo321117, align 4
  %868 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1119 = getelementptr inbounds %struct.DState, %struct.DState* %868, i32 0, i32 0
  %869 = load %struct.bz_stream*, %struct.bz_stream** %strm1119, align 8
  %total_in_lo321120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %869, i32 0, i32 2
  %870 = load i32, i32* %total_in_lo321120, align 4
  %cmp1121 = icmp eq i32 %870, 0
  br i1 %cmp1121, label %if.then1123, label %if.end1127

if.then1123:                                      ; preds = %if.end1100
  %871 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1124 = getelementptr inbounds %struct.DState, %struct.DState* %871, i32 0, i32 0
  %872 = load %struct.bz_stream*, %struct.bz_stream** %strm1124, align 8
  %total_in_hi321125 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %872, i32 0, i32 3
  %873 = load i32, i32* %total_in_hi321125, align 8
  %inc1126 = add i32 %873, 1
  store i32 %inc1126, i32* %total_in_hi321125, align 8
  br label %if.end1127

if.end1127:                                       ; preds = %if.then1123, %if.end1100
  br label %while.body1080

while.end1128:                                    ; preds = %if.then1084
  %874 = load i8, i8* %uc, align 1
  %conv1129 = zext i8 %874 to i32
  %cmp1130 = icmp eq i32 %conv1129, 1
  br i1 %cmp1130, label %if.then1132, label %if.else1133

if.then1132:                                      ; preds = %while.end1128
  %875 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse16 = getelementptr inbounds %struct.DState, %struct.DState* %875, i32 0, i32 29
  %876 = load i32, i32* %i, align 4
  %idxprom = sext i32 %876 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom
  store i8 1, i8* %arrayidx, align 1
  br label %if.end1137

if.else1133:                                      ; preds = %while.end1128
  %877 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse161134 = getelementptr inbounds %struct.DState, %struct.DState* %877, i32 0, i32 29
  %878 = load i32, i32* %i, align 4
  %idxprom1135 = sext i32 %878 to i64
  %arrayidx1136 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse161134, i64 0, i64 %idxprom1135
  store i8 0, i8* %arrayidx1136, align 1
  br label %if.end1137

if.end1137:                                       ; preds = %if.else1133, %if.then1132
  br label %for.inc

for.inc:                                          ; preds = %if.end1137
  %879 = load i32, i32* %i, align 4
  %inc1138 = add nsw i32 %879, 1
  store i32 %inc1138, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1139

for.cond1139:                                     ; preds = %for.inc1145, %for.end
  %880 = load i32, i32* %i, align 4
  %cmp1140 = icmp slt i32 %880, 256
  br i1 %cmp1140, label %for.body1142, label %for.end1147

for.body1142:                                     ; preds = %for.cond1139
  %881 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.DState, %struct.DState* %881, i32 0, i32 28
  %882 = load i32, i32* %i, align 4
  %idxprom1143 = sext i32 %882 to i64
  %arrayidx1144 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom1143
  store i8 0, i8* %arrayidx1144, align 1
  br label %for.inc1145

for.inc1145:                                      ; preds = %for.body1142
  %883 = load i32, i32* %i, align 4
  %inc1146 = add nsw i32 %883, 1
  store i32 %inc1146, i32* %i, align 4
  br label %for.cond1139

for.end1147:                                      ; preds = %for.cond1139
  store i32 0, i32* %i, align 4
  br label %for.cond1148

for.cond1148:                                     ; preds = %for.inc1226, %for.end1147
  %884 = load i32, i32* %i, align 4
  %cmp1149 = icmp slt i32 %884, 16
  br i1 %cmp1149, label %for.body1151, label %for.end1228

for.body1151:                                     ; preds = %for.cond1148
  %885 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse161152 = getelementptr inbounds %struct.DState, %struct.DState* %885, i32 0, i32 29
  %886 = load i32, i32* %i, align 4
  %idxprom1153 = sext i32 %886 to i64
  %arrayidx1154 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse161152, i64 0, i64 %idxprom1153
  %887 = load i8, i8* %arrayidx1154, align 1
  %tobool1155 = icmp ne i8 %887, 0
  br i1 %tobool1155, label %if.then1156, label %if.end1225

if.then1156:                                      ; preds = %for.body1151
  store i32 0, i32* %j, align 4
  br label %for.cond1157

for.cond1157:                                     ; preds = %for.inc1222, %if.then1156
  %888 = load i32, i32* %j, align 4
  %cmp1158 = icmp slt i32 %888, 16
  br i1 %cmp1158, label %for.body1160, label %for.end1224

for.body1160:                                     ; preds = %for.cond1157
  br label %sw.bb1161

sw.bb1161:                                        ; preds = %for.body1160, %if.end
  %889 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1162 = getelementptr inbounds %struct.DState, %struct.DState* %889, i32 0, i32 1
  store i32 29, i32* %state1162, align 8
  br label %while.body1163

while.body1163:                                   ; preds = %if.end1210, %sw.bb1161
  %890 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1164 = getelementptr inbounds %struct.DState, %struct.DState* %890, i32 0, i32 8
  %891 = load i32, i32* %bsLive1164, align 4
  %cmp1165 = icmp sge i32 %891, 1
  br i1 %cmp1165, label %if.then1167, label %if.end1177

if.then1167:                                      ; preds = %while.body1163
  %892 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1169 = getelementptr inbounds %struct.DState, %struct.DState* %892, i32 0, i32 7
  %893 = load i32, i32* %bsBuff1169, align 8
  %894 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1170 = getelementptr inbounds %struct.DState, %struct.DState* %894, i32 0, i32 8
  %895 = load i32, i32* %bsLive1170, align 4
  %sub1171 = sub nsw i32 %895, 1
  %shr1172 = lshr i32 %893, %sub1171
  %and1173 = and i32 %shr1172, 1
  store i32 %and1173, i32* %v1168, align 4
  %896 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1174 = getelementptr inbounds %struct.DState, %struct.DState* %896, i32 0, i32 8
  %897 = load i32, i32* %bsLive1174, align 4
  %sub1175 = sub nsw i32 %897, 1
  store i32 %sub1175, i32* %bsLive1174, align 4
  %898 = load i32, i32* %v1168, align 4
  %conv1176 = trunc i32 %898 to i8
  store i8 %conv1176, i8* %uc, align 1
  br label %while.end1211

if.end1177:                                       ; preds = %while.body1163
  %899 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1178 = getelementptr inbounds %struct.DState, %struct.DState* %899, i32 0, i32 0
  %900 = load %struct.bz_stream*, %struct.bz_stream** %strm1178, align 8
  %avail_in1179 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %900, i32 0, i32 1
  %901 = load i32, i32* %avail_in1179, align 8
  %cmp1180 = icmp eq i32 %901, 0
  br i1 %cmp1180, label %if.then1182, label %if.end1183

if.then1182:                                      ; preds = %if.end1177
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1183:                                       ; preds = %if.end1177
  %902 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1184 = getelementptr inbounds %struct.DState, %struct.DState* %902, i32 0, i32 7
  %903 = load i32, i32* %bsBuff1184, align 8
  %shl1185 = shl i32 %903, 8
  %904 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1186 = getelementptr inbounds %struct.DState, %struct.DState* %904, i32 0, i32 0
  %905 = load %struct.bz_stream*, %struct.bz_stream** %strm1186, align 8
  %next_in1187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %905, i32 0, i32 0
  %906 = load i8*, i8** %next_in1187, align 8
  %907 = load i8, i8* %906, align 1
  %conv1188 = zext i8 %907 to i32
  %or1189 = or i32 %shl1185, %conv1188
  %908 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1190 = getelementptr inbounds %struct.DState, %struct.DState* %908, i32 0, i32 7
  store i32 %or1189, i32* %bsBuff1190, align 8
  %909 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1191 = getelementptr inbounds %struct.DState, %struct.DState* %909, i32 0, i32 8
  %910 = load i32, i32* %bsLive1191, align 4
  %add1192 = add nsw i32 %910, 8
  store i32 %add1192, i32* %bsLive1191, align 4
  %911 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1193 = getelementptr inbounds %struct.DState, %struct.DState* %911, i32 0, i32 0
  %912 = load %struct.bz_stream*, %struct.bz_stream** %strm1193, align 8
  %next_in1194 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %912, i32 0, i32 0
  %913 = load i8*, i8** %next_in1194, align 8
  %incdec.ptr1195 = getelementptr inbounds i8, i8* %913, i32 1
  store i8* %incdec.ptr1195, i8** %next_in1194, align 8
  %914 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1196 = getelementptr inbounds %struct.DState, %struct.DState* %914, i32 0, i32 0
  %915 = load %struct.bz_stream*, %struct.bz_stream** %strm1196, align 8
  %avail_in1197 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %915, i32 0, i32 1
  %916 = load i32, i32* %avail_in1197, align 8
  %dec1198 = add i32 %916, -1
  store i32 %dec1198, i32* %avail_in1197, align 8
  %917 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1199 = getelementptr inbounds %struct.DState, %struct.DState* %917, i32 0, i32 0
  %918 = load %struct.bz_stream*, %struct.bz_stream** %strm1199, align 8
  %total_in_lo321200 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %918, i32 0, i32 2
  %919 = load i32, i32* %total_in_lo321200, align 4
  %inc1201 = add i32 %919, 1
  store i32 %inc1201, i32* %total_in_lo321200, align 4
  %920 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1202 = getelementptr inbounds %struct.DState, %struct.DState* %920, i32 0, i32 0
  %921 = load %struct.bz_stream*, %struct.bz_stream** %strm1202, align 8
  %total_in_lo321203 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %921, i32 0, i32 2
  %922 = load i32, i32* %total_in_lo321203, align 4
  %cmp1204 = icmp eq i32 %922, 0
  br i1 %cmp1204, label %if.then1206, label %if.end1210

if.then1206:                                      ; preds = %if.end1183
  %923 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1207 = getelementptr inbounds %struct.DState, %struct.DState* %923, i32 0, i32 0
  %924 = load %struct.bz_stream*, %struct.bz_stream** %strm1207, align 8
  %total_in_hi321208 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %924, i32 0, i32 3
  %925 = load i32, i32* %total_in_hi321208, align 8
  %inc1209 = add i32 %925, 1
  store i32 %inc1209, i32* %total_in_hi321208, align 8
  br label %if.end1210

if.end1210:                                       ; preds = %if.then1206, %if.end1183
  br label %while.body1163

while.end1211:                                    ; preds = %if.then1167
  %926 = load i8, i8* %uc, align 1
  %conv1212 = zext i8 %926 to i32
  %cmp1213 = icmp eq i32 %conv1212, 1
  br i1 %cmp1213, label %if.then1215, label %if.end1221

if.then1215:                                      ; preds = %while.end1211
  %927 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse1216 = getelementptr inbounds %struct.DState, %struct.DState* %927, i32 0, i32 28
  %928 = load i32, i32* %i, align 4
  %mul1217 = mul nsw i32 %928, 16
  %929 = load i32, i32* %j, align 4
  %add1218 = add nsw i32 %mul1217, %929
  %idxprom1219 = sext i32 %add1218 to i64
  %arrayidx1220 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse1216, i64 0, i64 %idxprom1219
  store i8 1, i8* %arrayidx1220, align 1
  br label %if.end1221

if.end1221:                                       ; preds = %if.then1215, %while.end1211
  br label %for.inc1222

for.inc1222:                                      ; preds = %if.end1221
  %930 = load i32, i32* %j, align 4
  %inc1223 = add nsw i32 %930, 1
  store i32 %inc1223, i32* %j, align 4
  br label %for.cond1157

for.end1224:                                      ; preds = %for.cond1157
  br label %if.end1225

if.end1225:                                       ; preds = %for.end1224, %for.body1151
  br label %for.inc1226

for.inc1226:                                      ; preds = %if.end1225
  %931 = load i32, i32* %i, align 4
  %inc1227 = add nsw i32 %931, 1
  store i32 %inc1227, i32* %i, align 4
  br label %for.cond1148

for.end1228:                                      ; preds = %for.cond1148
  %932 = load %struct.DState*, %struct.DState** %s.addr, align 8
  call void @makeMaps_d(%struct.DState* %932)
  %933 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse = getelementptr inbounds %struct.DState, %struct.DState* %933, i32 0, i32 27
  %934 = load i32, i32* %nInUse, align 8
  %cmp1229 = icmp eq i32 %934, 0
  br i1 %cmp1229, label %if.then1231, label %if.end1232

if.then1231:                                      ; preds = %for.end1228
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1232:                                       ; preds = %for.end1228
  %935 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse1233 = getelementptr inbounds %struct.DState, %struct.DState* %935, i32 0, i32 27
  %936 = load i32, i32* %nInUse1233, align 8
  %add1234 = add nsw i32 %936, 2
  store i32 %add1234, i32* %alphaSize, align 4
  br label %sw.bb1235

sw.bb1235:                                        ; preds = %if.end1232, %if.end
  %937 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1236 = getelementptr inbounds %struct.DState, %struct.DState* %937, i32 0, i32 1
  store i32 30, i32* %state1236, align 8
  br label %while.body1237

while.body1237:                                   ; preds = %if.end1283, %sw.bb1235
  %938 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1238 = getelementptr inbounds %struct.DState, %struct.DState* %938, i32 0, i32 8
  %939 = load i32, i32* %bsLive1238, align 4
  %cmp1239 = icmp sge i32 %939, 3
  br i1 %cmp1239, label %if.then1241, label %if.end1250

if.then1241:                                      ; preds = %while.body1237
  %940 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1243 = getelementptr inbounds %struct.DState, %struct.DState* %940, i32 0, i32 7
  %941 = load i32, i32* %bsBuff1243, align 8
  %942 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1244 = getelementptr inbounds %struct.DState, %struct.DState* %942, i32 0, i32 8
  %943 = load i32, i32* %bsLive1244, align 4
  %sub1245 = sub nsw i32 %943, 3
  %shr1246 = lshr i32 %941, %sub1245
  %and1247 = and i32 %shr1246, 7
  store i32 %and1247, i32* %v1242, align 4
  %944 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1248 = getelementptr inbounds %struct.DState, %struct.DState* %944, i32 0, i32 8
  %945 = load i32, i32* %bsLive1248, align 4
  %sub1249 = sub nsw i32 %945, 3
  store i32 %sub1249, i32* %bsLive1248, align 4
  %946 = load i32, i32* %v1242, align 4
  store i32 %946, i32* %nGroups, align 4
  br label %while.end1284

if.end1250:                                       ; preds = %while.body1237
  %947 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1251 = getelementptr inbounds %struct.DState, %struct.DState* %947, i32 0, i32 0
  %948 = load %struct.bz_stream*, %struct.bz_stream** %strm1251, align 8
  %avail_in1252 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %948, i32 0, i32 1
  %949 = load i32, i32* %avail_in1252, align 8
  %cmp1253 = icmp eq i32 %949, 0
  br i1 %cmp1253, label %if.then1255, label %if.end1256

if.then1255:                                      ; preds = %if.end1250
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1256:                                       ; preds = %if.end1250
  %950 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1257 = getelementptr inbounds %struct.DState, %struct.DState* %950, i32 0, i32 7
  %951 = load i32, i32* %bsBuff1257, align 8
  %shl1258 = shl i32 %951, 8
  %952 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1259 = getelementptr inbounds %struct.DState, %struct.DState* %952, i32 0, i32 0
  %953 = load %struct.bz_stream*, %struct.bz_stream** %strm1259, align 8
  %next_in1260 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %953, i32 0, i32 0
  %954 = load i8*, i8** %next_in1260, align 8
  %955 = load i8, i8* %954, align 1
  %conv1261 = zext i8 %955 to i32
  %or1262 = or i32 %shl1258, %conv1261
  %956 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1263 = getelementptr inbounds %struct.DState, %struct.DState* %956, i32 0, i32 7
  store i32 %or1262, i32* %bsBuff1263, align 8
  %957 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1264 = getelementptr inbounds %struct.DState, %struct.DState* %957, i32 0, i32 8
  %958 = load i32, i32* %bsLive1264, align 4
  %add1265 = add nsw i32 %958, 8
  store i32 %add1265, i32* %bsLive1264, align 4
  %959 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1266 = getelementptr inbounds %struct.DState, %struct.DState* %959, i32 0, i32 0
  %960 = load %struct.bz_stream*, %struct.bz_stream** %strm1266, align 8
  %next_in1267 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %960, i32 0, i32 0
  %961 = load i8*, i8** %next_in1267, align 8
  %incdec.ptr1268 = getelementptr inbounds i8, i8* %961, i32 1
  store i8* %incdec.ptr1268, i8** %next_in1267, align 8
  %962 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1269 = getelementptr inbounds %struct.DState, %struct.DState* %962, i32 0, i32 0
  %963 = load %struct.bz_stream*, %struct.bz_stream** %strm1269, align 8
  %avail_in1270 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %963, i32 0, i32 1
  %964 = load i32, i32* %avail_in1270, align 8
  %dec1271 = add i32 %964, -1
  store i32 %dec1271, i32* %avail_in1270, align 8
  %965 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1272 = getelementptr inbounds %struct.DState, %struct.DState* %965, i32 0, i32 0
  %966 = load %struct.bz_stream*, %struct.bz_stream** %strm1272, align 8
  %total_in_lo321273 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %966, i32 0, i32 2
  %967 = load i32, i32* %total_in_lo321273, align 4
  %inc1274 = add i32 %967, 1
  store i32 %inc1274, i32* %total_in_lo321273, align 4
  %968 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1275 = getelementptr inbounds %struct.DState, %struct.DState* %968, i32 0, i32 0
  %969 = load %struct.bz_stream*, %struct.bz_stream** %strm1275, align 8
  %total_in_lo321276 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %969, i32 0, i32 2
  %970 = load i32, i32* %total_in_lo321276, align 4
  %cmp1277 = icmp eq i32 %970, 0
  br i1 %cmp1277, label %if.then1279, label %if.end1283

if.then1279:                                      ; preds = %if.end1256
  %971 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1280 = getelementptr inbounds %struct.DState, %struct.DState* %971, i32 0, i32 0
  %972 = load %struct.bz_stream*, %struct.bz_stream** %strm1280, align 8
  %total_in_hi321281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %972, i32 0, i32 3
  %973 = load i32, i32* %total_in_hi321281, align 8
  %inc1282 = add i32 %973, 1
  store i32 %inc1282, i32* %total_in_hi321281, align 8
  br label %if.end1283

if.end1283:                                       ; preds = %if.then1279, %if.end1256
  br label %while.body1237

while.end1284:                                    ; preds = %if.then1241
  %974 = load i32, i32* %nGroups, align 4
  %cmp1285 = icmp slt i32 %974, 2
  br i1 %cmp1285, label %if.then1290, label %lor.lhs.false1287

lor.lhs.false1287:                                ; preds = %while.end1284
  %975 = load i32, i32* %nGroups, align 4
  %cmp1288 = icmp sgt i32 %975, 6
  br i1 %cmp1288, label %if.then1290, label %if.end1291

if.then1290:                                      ; preds = %lor.lhs.false1287, %while.end1284
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1291:                                       ; preds = %lor.lhs.false1287
  br label %sw.bb1292

sw.bb1292:                                        ; preds = %if.end1291, %if.end
  %976 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1293 = getelementptr inbounds %struct.DState, %struct.DState* %976, i32 0, i32 1
  store i32 31, i32* %state1293, align 8
  br label %while.body1294

while.body1294:                                   ; preds = %if.end1340, %sw.bb1292
  %977 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1295 = getelementptr inbounds %struct.DState, %struct.DState* %977, i32 0, i32 8
  %978 = load i32, i32* %bsLive1295, align 4
  %cmp1296 = icmp sge i32 %978, 15
  br i1 %cmp1296, label %if.then1298, label %if.end1307

if.then1298:                                      ; preds = %while.body1294
  %979 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1300 = getelementptr inbounds %struct.DState, %struct.DState* %979, i32 0, i32 7
  %980 = load i32, i32* %bsBuff1300, align 8
  %981 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1301 = getelementptr inbounds %struct.DState, %struct.DState* %981, i32 0, i32 8
  %982 = load i32, i32* %bsLive1301, align 4
  %sub1302 = sub nsw i32 %982, 15
  %shr1303 = lshr i32 %980, %sub1302
  %and1304 = and i32 %shr1303, 32767
  store i32 %and1304, i32* %v1299, align 4
  %983 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1305 = getelementptr inbounds %struct.DState, %struct.DState* %983, i32 0, i32 8
  %984 = load i32, i32* %bsLive1305, align 4
  %sub1306 = sub nsw i32 %984, 15
  store i32 %sub1306, i32* %bsLive1305, align 4
  %985 = load i32, i32* %v1299, align 4
  store i32 %985, i32* %nSelectors, align 4
  br label %while.end1341

if.end1307:                                       ; preds = %while.body1294
  %986 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1308 = getelementptr inbounds %struct.DState, %struct.DState* %986, i32 0, i32 0
  %987 = load %struct.bz_stream*, %struct.bz_stream** %strm1308, align 8
  %avail_in1309 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %987, i32 0, i32 1
  %988 = load i32, i32* %avail_in1309, align 8
  %cmp1310 = icmp eq i32 %988, 0
  br i1 %cmp1310, label %if.then1312, label %if.end1313

if.then1312:                                      ; preds = %if.end1307
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1313:                                       ; preds = %if.end1307
  %989 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1314 = getelementptr inbounds %struct.DState, %struct.DState* %989, i32 0, i32 7
  %990 = load i32, i32* %bsBuff1314, align 8
  %shl1315 = shl i32 %990, 8
  %991 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1316 = getelementptr inbounds %struct.DState, %struct.DState* %991, i32 0, i32 0
  %992 = load %struct.bz_stream*, %struct.bz_stream** %strm1316, align 8
  %next_in1317 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %992, i32 0, i32 0
  %993 = load i8*, i8** %next_in1317, align 8
  %994 = load i8, i8* %993, align 1
  %conv1318 = zext i8 %994 to i32
  %or1319 = or i32 %shl1315, %conv1318
  %995 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1320 = getelementptr inbounds %struct.DState, %struct.DState* %995, i32 0, i32 7
  store i32 %or1319, i32* %bsBuff1320, align 8
  %996 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1321 = getelementptr inbounds %struct.DState, %struct.DState* %996, i32 0, i32 8
  %997 = load i32, i32* %bsLive1321, align 4
  %add1322 = add nsw i32 %997, 8
  store i32 %add1322, i32* %bsLive1321, align 4
  %998 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1323 = getelementptr inbounds %struct.DState, %struct.DState* %998, i32 0, i32 0
  %999 = load %struct.bz_stream*, %struct.bz_stream** %strm1323, align 8
  %next_in1324 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %999, i32 0, i32 0
  %1000 = load i8*, i8** %next_in1324, align 8
  %incdec.ptr1325 = getelementptr inbounds i8, i8* %1000, i32 1
  store i8* %incdec.ptr1325, i8** %next_in1324, align 8
  %1001 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1326 = getelementptr inbounds %struct.DState, %struct.DState* %1001, i32 0, i32 0
  %1002 = load %struct.bz_stream*, %struct.bz_stream** %strm1326, align 8
  %avail_in1327 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1002, i32 0, i32 1
  %1003 = load i32, i32* %avail_in1327, align 8
  %dec1328 = add i32 %1003, -1
  store i32 %dec1328, i32* %avail_in1327, align 8
  %1004 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1329 = getelementptr inbounds %struct.DState, %struct.DState* %1004, i32 0, i32 0
  %1005 = load %struct.bz_stream*, %struct.bz_stream** %strm1329, align 8
  %total_in_lo321330 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1005, i32 0, i32 2
  %1006 = load i32, i32* %total_in_lo321330, align 4
  %inc1331 = add i32 %1006, 1
  store i32 %inc1331, i32* %total_in_lo321330, align 4
  %1007 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1332 = getelementptr inbounds %struct.DState, %struct.DState* %1007, i32 0, i32 0
  %1008 = load %struct.bz_stream*, %struct.bz_stream** %strm1332, align 8
  %total_in_lo321333 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1008, i32 0, i32 2
  %1009 = load i32, i32* %total_in_lo321333, align 4
  %cmp1334 = icmp eq i32 %1009, 0
  br i1 %cmp1334, label %if.then1336, label %if.end1340

if.then1336:                                      ; preds = %if.end1313
  %1010 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1337 = getelementptr inbounds %struct.DState, %struct.DState* %1010, i32 0, i32 0
  %1011 = load %struct.bz_stream*, %struct.bz_stream** %strm1337, align 8
  %total_in_hi321338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1011, i32 0, i32 3
  %1012 = load i32, i32* %total_in_hi321338, align 8
  %inc1339 = add i32 %1012, 1
  store i32 %inc1339, i32* %total_in_hi321338, align 8
  br label %if.end1340

if.end1340:                                       ; preds = %if.then1336, %if.end1313
  br label %while.body1294

while.end1341:                                    ; preds = %if.then1298
  %1013 = load i32, i32* %nSelectors, align 4
  %cmp1342 = icmp slt i32 %1013, 1
  br i1 %cmp1342, label %if.then1344, label %if.end1345

if.then1344:                                      ; preds = %while.end1341
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1345:                                       ; preds = %while.end1341
  store i32 0, i32* %i, align 4
  br label %for.cond1346

for.cond1346:                                     ; preds = %for.inc1417, %if.end1345
  %1014 = load i32, i32* %i, align 4
  %1015 = load i32, i32* %nSelectors, align 4
  %cmp1347 = icmp slt i32 %1014, %1015
  br i1 %cmp1347, label %for.body1349, label %for.end1419

for.body1349:                                     ; preds = %for.cond1346
  store i32 0, i32* %j, align 4
  br label %while.body1350

while.body1350:                                   ; preds = %if.end1412, %for.body1349
  br label %sw.bb1351

sw.bb1351:                                        ; preds = %while.body1350, %if.end
  %1016 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1352 = getelementptr inbounds %struct.DState, %struct.DState* %1016, i32 0, i32 1
  store i32 32, i32* %state1352, align 8
  br label %while.body1354

while.body1354:                                   ; preds = %if.end1401, %sw.bb1351
  %1017 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1355 = getelementptr inbounds %struct.DState, %struct.DState* %1017, i32 0, i32 8
  %1018 = load i32, i32* %bsLive1355, align 4
  %cmp1356 = icmp sge i32 %1018, 1
  br i1 %cmp1356, label %if.then1358, label %if.end1368

if.then1358:                                      ; preds = %while.body1354
  %1019 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1360 = getelementptr inbounds %struct.DState, %struct.DState* %1019, i32 0, i32 7
  %1020 = load i32, i32* %bsBuff1360, align 8
  %1021 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1361 = getelementptr inbounds %struct.DState, %struct.DState* %1021, i32 0, i32 8
  %1022 = load i32, i32* %bsLive1361, align 4
  %sub1362 = sub nsw i32 %1022, 1
  %shr1363 = lshr i32 %1020, %sub1362
  %and1364 = and i32 %shr1363, 1
  store i32 %and1364, i32* %v1359, align 4
  %1023 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1365 = getelementptr inbounds %struct.DState, %struct.DState* %1023, i32 0, i32 8
  %1024 = load i32, i32* %bsLive1365, align 4
  %sub1366 = sub nsw i32 %1024, 1
  store i32 %sub1366, i32* %bsLive1365, align 4
  %1025 = load i32, i32* %v1359, align 4
  %conv1367 = trunc i32 %1025 to i8
  store i8 %conv1367, i8* %uc, align 1
  br label %while.end1402

if.end1368:                                       ; preds = %while.body1354
  %1026 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1369 = getelementptr inbounds %struct.DState, %struct.DState* %1026, i32 0, i32 0
  %1027 = load %struct.bz_stream*, %struct.bz_stream** %strm1369, align 8
  %avail_in1370 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1027, i32 0, i32 1
  %1028 = load i32, i32* %avail_in1370, align 8
  %cmp1371 = icmp eq i32 %1028, 0
  br i1 %cmp1371, label %if.then1373, label %if.end1374

if.then1373:                                      ; preds = %if.end1368
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1374:                                       ; preds = %if.end1368
  %1029 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1375 = getelementptr inbounds %struct.DState, %struct.DState* %1029, i32 0, i32 7
  %1030 = load i32, i32* %bsBuff1375, align 8
  %shl1376 = shl i32 %1030, 8
  %1031 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1377 = getelementptr inbounds %struct.DState, %struct.DState* %1031, i32 0, i32 0
  %1032 = load %struct.bz_stream*, %struct.bz_stream** %strm1377, align 8
  %next_in1378 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1032, i32 0, i32 0
  %1033 = load i8*, i8** %next_in1378, align 8
  %1034 = load i8, i8* %1033, align 1
  %conv1379 = zext i8 %1034 to i32
  %or1380 = or i32 %shl1376, %conv1379
  %1035 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1381 = getelementptr inbounds %struct.DState, %struct.DState* %1035, i32 0, i32 7
  store i32 %or1380, i32* %bsBuff1381, align 8
  %1036 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1382 = getelementptr inbounds %struct.DState, %struct.DState* %1036, i32 0, i32 8
  %1037 = load i32, i32* %bsLive1382, align 4
  %add1383 = add nsw i32 %1037, 8
  store i32 %add1383, i32* %bsLive1382, align 4
  %1038 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1384 = getelementptr inbounds %struct.DState, %struct.DState* %1038, i32 0, i32 0
  %1039 = load %struct.bz_stream*, %struct.bz_stream** %strm1384, align 8
  %next_in1385 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1039, i32 0, i32 0
  %1040 = load i8*, i8** %next_in1385, align 8
  %incdec.ptr1386 = getelementptr inbounds i8, i8* %1040, i32 1
  store i8* %incdec.ptr1386, i8** %next_in1385, align 8
  %1041 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1387 = getelementptr inbounds %struct.DState, %struct.DState* %1041, i32 0, i32 0
  %1042 = load %struct.bz_stream*, %struct.bz_stream** %strm1387, align 8
  %avail_in1388 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1042, i32 0, i32 1
  %1043 = load i32, i32* %avail_in1388, align 8
  %dec1389 = add i32 %1043, -1
  store i32 %dec1389, i32* %avail_in1388, align 8
  %1044 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1390 = getelementptr inbounds %struct.DState, %struct.DState* %1044, i32 0, i32 0
  %1045 = load %struct.bz_stream*, %struct.bz_stream** %strm1390, align 8
  %total_in_lo321391 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1045, i32 0, i32 2
  %1046 = load i32, i32* %total_in_lo321391, align 4
  %inc1392 = add i32 %1046, 1
  store i32 %inc1392, i32* %total_in_lo321391, align 4
  %1047 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1393 = getelementptr inbounds %struct.DState, %struct.DState* %1047, i32 0, i32 0
  %1048 = load %struct.bz_stream*, %struct.bz_stream** %strm1393, align 8
  %total_in_lo321394 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1048, i32 0, i32 2
  %1049 = load i32, i32* %total_in_lo321394, align 4
  %cmp1395 = icmp eq i32 %1049, 0
  br i1 %cmp1395, label %if.then1397, label %if.end1401

if.then1397:                                      ; preds = %if.end1374
  %1050 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1398 = getelementptr inbounds %struct.DState, %struct.DState* %1050, i32 0, i32 0
  %1051 = load %struct.bz_stream*, %struct.bz_stream** %strm1398, align 8
  %total_in_hi321399 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1051, i32 0, i32 3
  %1052 = load i32, i32* %total_in_hi321399, align 8
  %inc1400 = add i32 %1052, 1
  store i32 %inc1400, i32* %total_in_hi321399, align 8
  br label %if.end1401

if.end1401:                                       ; preds = %if.then1397, %if.end1374
  br label %while.body1354

while.end1402:                                    ; preds = %if.then1358
  %1053 = load i8, i8* %uc, align 1
  %conv1403 = zext i8 %1053 to i32
  %cmp1404 = icmp eq i32 %conv1403, 0
  br i1 %cmp1404, label %if.then1406, label %if.end1407

if.then1406:                                      ; preds = %while.end1402
  br label %while.end1413

if.end1407:                                       ; preds = %while.end1402
  %1054 = load i32, i32* %j, align 4
  %inc1408 = add nsw i32 %1054, 1
  store i32 %inc1408, i32* %j, align 4
  %1055 = load i32, i32* %j, align 4
  %1056 = load i32, i32* %nGroups, align 4
  %cmp1409 = icmp sge i32 %1055, %1056
  br i1 %cmp1409, label %if.then1411, label %if.end1412

if.then1411:                                      ; preds = %if.end1407
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1412:                                       ; preds = %if.end1407
  br label %while.body1350

while.end1413:                                    ; preds = %if.then1406
  %1057 = load i32, i32* %j, align 4
  %conv1414 = trunc i32 %1057 to i8
  %1058 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selectorMtf = getelementptr inbounds %struct.DState, %struct.DState* %1058, i32 0, i32 34
  %1059 = load i32, i32* %i, align 4
  %idxprom1415 = sext i32 %1059 to i64
  %arrayidx1416 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf, i64 0, i64 %idxprom1415
  store i8 %conv1414, i8* %arrayidx1416, align 1
  br label %for.inc1417

for.inc1417:                                      ; preds = %while.end1413
  %1060 = load i32, i32* %i, align 4
  %inc1418 = add nsw i32 %1060, 1
  store i32 %inc1418, i32* %i, align 4
  br label %for.cond1346

for.end1419:                                      ; preds = %for.cond1346
  store i8 0, i8* %v1420, align 1
  br label %for.cond1421

for.cond1421:                                     ; preds = %for.inc1428, %for.end1419
  %1061 = load i8, i8* %v1420, align 1
  %conv1422 = zext i8 %1061 to i32
  %1062 = load i32, i32* %nGroups, align 4
  %cmp1423 = icmp slt i32 %conv1422, %1062
  br i1 %cmp1423, label %for.body1425, label %for.end1430

for.body1425:                                     ; preds = %for.cond1421
  %1063 = load i8, i8* %v1420, align 1
  %1064 = load i8, i8* %v1420, align 1
  %idxprom1426 = zext i8 %1064 to i64
  %arrayidx1427 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1426
  store i8 %1063, i8* %arrayidx1427, align 1
  br label %for.inc1428

for.inc1428:                                      ; preds = %for.body1425
  %1065 = load i8, i8* %v1420, align 1
  %inc1429 = add i8 %1065, 1
  store i8 %inc1429, i8* %v1420, align 1
  br label %for.cond1421

for.end1430:                                      ; preds = %for.cond1421
  store i32 0, i32* %i, align 4
  br label %for.cond1431

for.cond1431:                                     ; preds = %for.inc1455, %for.end1430
  %1066 = load i32, i32* %i, align 4
  %1067 = load i32, i32* %nSelectors, align 4
  %cmp1432 = icmp slt i32 %1066, %1067
  br i1 %cmp1432, label %for.body1434, label %for.end1457

for.body1434:                                     ; preds = %for.cond1431
  %1068 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selectorMtf1435 = getelementptr inbounds %struct.DState, %struct.DState* %1068, i32 0, i32 34
  %1069 = load i32, i32* %i, align 4
  %idxprom1436 = sext i32 %1069 to i64
  %arrayidx1437 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf1435, i64 0, i64 %idxprom1436
  %1070 = load i8, i8* %arrayidx1437, align 1
  store i8 %1070, i8* %v1420, align 1
  %1071 = load i8, i8* %v1420, align 1
  %idxprom1438 = zext i8 %1071 to i64
  %arrayidx1439 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1438
  %1072 = load i8, i8* %arrayidx1439, align 1
  store i8 %1072, i8* %tmp, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body1443, %for.body1434
  %1073 = load i8, i8* %v1420, align 1
  %conv1440 = zext i8 %1073 to i32
  %cmp1441 = icmp sgt i32 %conv1440, 0
  br i1 %cmp1441, label %while.body1443, label %while.end1451

while.body1443:                                   ; preds = %while.cond
  %1074 = load i8, i8* %v1420, align 1
  %conv1444 = zext i8 %1074 to i32
  %sub1445 = sub nsw i32 %conv1444, 1
  %idxprom1446 = sext i32 %sub1445 to i64
  %arrayidx1447 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1446
  %1075 = load i8, i8* %arrayidx1447, align 1
  %1076 = load i8, i8* %v1420, align 1
  %idxprom1448 = zext i8 %1076 to i64
  %arrayidx1449 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1448
  store i8 %1075, i8* %arrayidx1449, align 1
  %1077 = load i8, i8* %v1420, align 1
  %dec1450 = add i8 %1077, -1
  store i8 %dec1450, i8* %v1420, align 1
  br label %while.cond

while.end1451:                                    ; preds = %while.cond
  %1078 = load i8, i8* %tmp, align 1
  %arrayidx1452 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  store i8 %1078, i8* %arrayidx1452, align 1
  %1079 = load i8, i8* %tmp, align 1
  %1080 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selector = getelementptr inbounds %struct.DState, %struct.DState* %1080, i32 0, i32 33
  %1081 = load i32, i32* %i, align 4
  %idxprom1453 = sext i32 %1081 to i64
  %arrayidx1454 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector, i64 0, i64 %idxprom1453
  store i8 %1079, i8* %arrayidx1454, align 1
  br label %for.inc1455

for.inc1455:                                      ; preds = %while.end1451
  %1082 = load i32, i32* %i, align 4
  %inc1456 = add nsw i32 %1082, 1
  store i32 %inc1456, i32* %i, align 4
  br label %for.cond1431

for.end1457:                                      ; preds = %for.cond1431
  store i32 0, i32* %t, align 4
  br label %for.cond1458

for.cond1458:                                     ; preds = %for.inc1652, %for.end1457
  %1083 = load i32, i32* %t, align 4
  %1084 = load i32, i32* %nGroups, align 4
  %cmp1459 = icmp slt i32 %1083, %1084
  br i1 %cmp1459, label %for.body1461, label %for.end1654

for.body1461:                                     ; preds = %for.cond1458
  br label %sw.bb1462

sw.bb1462:                                        ; preds = %for.body1461, %if.end
  %1085 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1463 = getelementptr inbounds %struct.DState, %struct.DState* %1085, i32 0, i32 1
  store i32 33, i32* %state1463, align 8
  br label %while.body1465

while.body1465:                                   ; preds = %if.end1511, %sw.bb1462
  %1086 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1466 = getelementptr inbounds %struct.DState, %struct.DState* %1086, i32 0, i32 8
  %1087 = load i32, i32* %bsLive1466, align 4
  %cmp1467 = icmp sge i32 %1087, 5
  br i1 %cmp1467, label %if.then1469, label %if.end1478

if.then1469:                                      ; preds = %while.body1465
  %1088 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1471 = getelementptr inbounds %struct.DState, %struct.DState* %1088, i32 0, i32 7
  %1089 = load i32, i32* %bsBuff1471, align 8
  %1090 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1472 = getelementptr inbounds %struct.DState, %struct.DState* %1090, i32 0, i32 8
  %1091 = load i32, i32* %bsLive1472, align 4
  %sub1473 = sub nsw i32 %1091, 5
  %shr1474 = lshr i32 %1089, %sub1473
  %and1475 = and i32 %shr1474, 31
  store i32 %and1475, i32* %v1470, align 4
  %1092 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1476 = getelementptr inbounds %struct.DState, %struct.DState* %1092, i32 0, i32 8
  %1093 = load i32, i32* %bsLive1476, align 4
  %sub1477 = sub nsw i32 %1093, 5
  store i32 %sub1477, i32* %bsLive1476, align 4
  %1094 = load i32, i32* %v1470, align 4
  store i32 %1094, i32* %curr, align 4
  br label %while.end1512

if.end1478:                                       ; preds = %while.body1465
  %1095 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1479 = getelementptr inbounds %struct.DState, %struct.DState* %1095, i32 0, i32 0
  %1096 = load %struct.bz_stream*, %struct.bz_stream** %strm1479, align 8
  %avail_in1480 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1096, i32 0, i32 1
  %1097 = load i32, i32* %avail_in1480, align 8
  %cmp1481 = icmp eq i32 %1097, 0
  br i1 %cmp1481, label %if.then1483, label %if.end1484

if.then1483:                                      ; preds = %if.end1478
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1484:                                       ; preds = %if.end1478
  %1098 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1485 = getelementptr inbounds %struct.DState, %struct.DState* %1098, i32 0, i32 7
  %1099 = load i32, i32* %bsBuff1485, align 8
  %shl1486 = shl i32 %1099, 8
  %1100 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1487 = getelementptr inbounds %struct.DState, %struct.DState* %1100, i32 0, i32 0
  %1101 = load %struct.bz_stream*, %struct.bz_stream** %strm1487, align 8
  %next_in1488 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1101, i32 0, i32 0
  %1102 = load i8*, i8** %next_in1488, align 8
  %1103 = load i8, i8* %1102, align 1
  %conv1489 = zext i8 %1103 to i32
  %or1490 = or i32 %shl1486, %conv1489
  %1104 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1491 = getelementptr inbounds %struct.DState, %struct.DState* %1104, i32 0, i32 7
  store i32 %or1490, i32* %bsBuff1491, align 8
  %1105 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1492 = getelementptr inbounds %struct.DState, %struct.DState* %1105, i32 0, i32 8
  %1106 = load i32, i32* %bsLive1492, align 4
  %add1493 = add nsw i32 %1106, 8
  store i32 %add1493, i32* %bsLive1492, align 4
  %1107 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1494 = getelementptr inbounds %struct.DState, %struct.DState* %1107, i32 0, i32 0
  %1108 = load %struct.bz_stream*, %struct.bz_stream** %strm1494, align 8
  %next_in1495 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1108, i32 0, i32 0
  %1109 = load i8*, i8** %next_in1495, align 8
  %incdec.ptr1496 = getelementptr inbounds i8, i8* %1109, i32 1
  store i8* %incdec.ptr1496, i8** %next_in1495, align 8
  %1110 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1497 = getelementptr inbounds %struct.DState, %struct.DState* %1110, i32 0, i32 0
  %1111 = load %struct.bz_stream*, %struct.bz_stream** %strm1497, align 8
  %avail_in1498 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1111, i32 0, i32 1
  %1112 = load i32, i32* %avail_in1498, align 8
  %dec1499 = add i32 %1112, -1
  store i32 %dec1499, i32* %avail_in1498, align 8
  %1113 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1500 = getelementptr inbounds %struct.DState, %struct.DState* %1113, i32 0, i32 0
  %1114 = load %struct.bz_stream*, %struct.bz_stream** %strm1500, align 8
  %total_in_lo321501 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1114, i32 0, i32 2
  %1115 = load i32, i32* %total_in_lo321501, align 4
  %inc1502 = add i32 %1115, 1
  store i32 %inc1502, i32* %total_in_lo321501, align 4
  %1116 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1503 = getelementptr inbounds %struct.DState, %struct.DState* %1116, i32 0, i32 0
  %1117 = load %struct.bz_stream*, %struct.bz_stream** %strm1503, align 8
  %total_in_lo321504 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1117, i32 0, i32 2
  %1118 = load i32, i32* %total_in_lo321504, align 4
  %cmp1505 = icmp eq i32 %1118, 0
  br i1 %cmp1505, label %if.then1507, label %if.end1511

if.then1507:                                      ; preds = %if.end1484
  %1119 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1508 = getelementptr inbounds %struct.DState, %struct.DState* %1119, i32 0, i32 0
  %1120 = load %struct.bz_stream*, %struct.bz_stream** %strm1508, align 8
  %total_in_hi321509 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1120, i32 0, i32 3
  %1121 = load i32, i32* %total_in_hi321509, align 8
  %inc1510 = add i32 %1121, 1
  store i32 %inc1510, i32* %total_in_hi321509, align 8
  br label %if.end1511

if.end1511:                                       ; preds = %if.then1507, %if.end1484
  br label %while.body1465

while.end1512:                                    ; preds = %if.then1469
  store i32 0, i32* %i, align 4
  br label %for.cond1513

for.cond1513:                                     ; preds = %for.inc1649, %while.end1512
  %1122 = load i32, i32* %i, align 4
  %1123 = load i32, i32* %alphaSize, align 4
  %cmp1514 = icmp slt i32 %1122, %1123
  br i1 %cmp1514, label %for.body1516, label %for.end1651

for.body1516:                                     ; preds = %for.cond1513
  br label %while.body1518

while.body1518:                                   ; preds = %if.end1642, %for.body1516
  %1124 = load i32, i32* %curr, align 4
  %cmp1519 = icmp slt i32 %1124, 1
  br i1 %cmp1519, label %if.then1524, label %lor.lhs.false1521

lor.lhs.false1521:                                ; preds = %while.body1518
  %1125 = load i32, i32* %curr, align 4
  %cmp1522 = icmp sgt i32 %1125, 20
  br i1 %cmp1522, label %if.then1524, label %if.end1525

if.then1524:                                      ; preds = %lor.lhs.false1521, %while.body1518
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1525:                                       ; preds = %lor.lhs.false1521
  br label %sw.bb1526

sw.bb1526:                                        ; preds = %if.end1525, %if.end
  %1126 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1527 = getelementptr inbounds %struct.DState, %struct.DState* %1126, i32 0, i32 1
  store i32 34, i32* %state1527, align 8
  br label %while.body1529

while.body1529:                                   ; preds = %if.end1576, %sw.bb1526
  %1127 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1530 = getelementptr inbounds %struct.DState, %struct.DState* %1127, i32 0, i32 8
  %1128 = load i32, i32* %bsLive1530, align 4
  %cmp1531 = icmp sge i32 %1128, 1
  br i1 %cmp1531, label %if.then1533, label %if.end1543

if.then1533:                                      ; preds = %while.body1529
  %1129 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1535 = getelementptr inbounds %struct.DState, %struct.DState* %1129, i32 0, i32 7
  %1130 = load i32, i32* %bsBuff1535, align 8
  %1131 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1536 = getelementptr inbounds %struct.DState, %struct.DState* %1131, i32 0, i32 8
  %1132 = load i32, i32* %bsLive1536, align 4
  %sub1537 = sub nsw i32 %1132, 1
  %shr1538 = lshr i32 %1130, %sub1537
  %and1539 = and i32 %shr1538, 1
  store i32 %and1539, i32* %v1534, align 4
  %1133 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1540 = getelementptr inbounds %struct.DState, %struct.DState* %1133, i32 0, i32 8
  %1134 = load i32, i32* %bsLive1540, align 4
  %sub1541 = sub nsw i32 %1134, 1
  store i32 %sub1541, i32* %bsLive1540, align 4
  %1135 = load i32, i32* %v1534, align 4
  %conv1542 = trunc i32 %1135 to i8
  store i8 %conv1542, i8* %uc, align 1
  br label %while.end1577

if.end1543:                                       ; preds = %while.body1529
  %1136 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1544 = getelementptr inbounds %struct.DState, %struct.DState* %1136, i32 0, i32 0
  %1137 = load %struct.bz_stream*, %struct.bz_stream** %strm1544, align 8
  %avail_in1545 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1137, i32 0, i32 1
  %1138 = load i32, i32* %avail_in1545, align 8
  %cmp1546 = icmp eq i32 %1138, 0
  br i1 %cmp1546, label %if.then1548, label %if.end1549

if.then1548:                                      ; preds = %if.end1543
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1549:                                       ; preds = %if.end1543
  %1139 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1550 = getelementptr inbounds %struct.DState, %struct.DState* %1139, i32 0, i32 7
  %1140 = load i32, i32* %bsBuff1550, align 8
  %shl1551 = shl i32 %1140, 8
  %1141 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1552 = getelementptr inbounds %struct.DState, %struct.DState* %1141, i32 0, i32 0
  %1142 = load %struct.bz_stream*, %struct.bz_stream** %strm1552, align 8
  %next_in1553 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1142, i32 0, i32 0
  %1143 = load i8*, i8** %next_in1553, align 8
  %1144 = load i8, i8* %1143, align 1
  %conv1554 = zext i8 %1144 to i32
  %or1555 = or i32 %shl1551, %conv1554
  %1145 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1556 = getelementptr inbounds %struct.DState, %struct.DState* %1145, i32 0, i32 7
  store i32 %or1555, i32* %bsBuff1556, align 8
  %1146 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1557 = getelementptr inbounds %struct.DState, %struct.DState* %1146, i32 0, i32 8
  %1147 = load i32, i32* %bsLive1557, align 4
  %add1558 = add nsw i32 %1147, 8
  store i32 %add1558, i32* %bsLive1557, align 4
  %1148 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1559 = getelementptr inbounds %struct.DState, %struct.DState* %1148, i32 0, i32 0
  %1149 = load %struct.bz_stream*, %struct.bz_stream** %strm1559, align 8
  %next_in1560 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1149, i32 0, i32 0
  %1150 = load i8*, i8** %next_in1560, align 8
  %incdec.ptr1561 = getelementptr inbounds i8, i8* %1150, i32 1
  store i8* %incdec.ptr1561, i8** %next_in1560, align 8
  %1151 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1562 = getelementptr inbounds %struct.DState, %struct.DState* %1151, i32 0, i32 0
  %1152 = load %struct.bz_stream*, %struct.bz_stream** %strm1562, align 8
  %avail_in1563 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1152, i32 0, i32 1
  %1153 = load i32, i32* %avail_in1563, align 8
  %dec1564 = add i32 %1153, -1
  store i32 %dec1564, i32* %avail_in1563, align 8
  %1154 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1565 = getelementptr inbounds %struct.DState, %struct.DState* %1154, i32 0, i32 0
  %1155 = load %struct.bz_stream*, %struct.bz_stream** %strm1565, align 8
  %total_in_lo321566 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1155, i32 0, i32 2
  %1156 = load i32, i32* %total_in_lo321566, align 4
  %inc1567 = add i32 %1156, 1
  store i32 %inc1567, i32* %total_in_lo321566, align 4
  %1157 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1568 = getelementptr inbounds %struct.DState, %struct.DState* %1157, i32 0, i32 0
  %1158 = load %struct.bz_stream*, %struct.bz_stream** %strm1568, align 8
  %total_in_lo321569 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1158, i32 0, i32 2
  %1159 = load i32, i32* %total_in_lo321569, align 4
  %cmp1570 = icmp eq i32 %1159, 0
  br i1 %cmp1570, label %if.then1572, label %if.end1576

if.then1572:                                      ; preds = %if.end1549
  %1160 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1573 = getelementptr inbounds %struct.DState, %struct.DState* %1160, i32 0, i32 0
  %1161 = load %struct.bz_stream*, %struct.bz_stream** %strm1573, align 8
  %total_in_hi321574 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1161, i32 0, i32 3
  %1162 = load i32, i32* %total_in_hi321574, align 8
  %inc1575 = add i32 %1162, 1
  store i32 %inc1575, i32* %total_in_hi321574, align 8
  br label %if.end1576

if.end1576:                                       ; preds = %if.then1572, %if.end1549
  br label %while.body1529

while.end1577:                                    ; preds = %if.then1533
  %1163 = load i8, i8* %uc, align 1
  %conv1578 = zext i8 %1163 to i32
  %cmp1579 = icmp eq i32 %conv1578, 0
  br i1 %cmp1579, label %if.then1581, label %if.end1582

if.then1581:                                      ; preds = %while.end1577
  br label %while.end1643

if.end1582:                                       ; preds = %while.end1577
  br label %sw.bb1583

sw.bb1583:                                        ; preds = %if.end1582, %if.end
  %1164 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1584 = getelementptr inbounds %struct.DState, %struct.DState* %1164, i32 0, i32 1
  store i32 35, i32* %state1584, align 8
  br label %while.body1586

while.body1586:                                   ; preds = %if.end1633, %sw.bb1583
  %1165 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1587 = getelementptr inbounds %struct.DState, %struct.DState* %1165, i32 0, i32 8
  %1166 = load i32, i32* %bsLive1587, align 4
  %cmp1588 = icmp sge i32 %1166, 1
  br i1 %cmp1588, label %if.then1590, label %if.end1600

if.then1590:                                      ; preds = %while.body1586
  %1167 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1592 = getelementptr inbounds %struct.DState, %struct.DState* %1167, i32 0, i32 7
  %1168 = load i32, i32* %bsBuff1592, align 8
  %1169 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1593 = getelementptr inbounds %struct.DState, %struct.DState* %1169, i32 0, i32 8
  %1170 = load i32, i32* %bsLive1593, align 4
  %sub1594 = sub nsw i32 %1170, 1
  %shr1595 = lshr i32 %1168, %sub1594
  %and1596 = and i32 %shr1595, 1
  store i32 %and1596, i32* %v1591, align 4
  %1171 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1597 = getelementptr inbounds %struct.DState, %struct.DState* %1171, i32 0, i32 8
  %1172 = load i32, i32* %bsLive1597, align 4
  %sub1598 = sub nsw i32 %1172, 1
  store i32 %sub1598, i32* %bsLive1597, align 4
  %1173 = load i32, i32* %v1591, align 4
  %conv1599 = trunc i32 %1173 to i8
  store i8 %conv1599, i8* %uc, align 1
  br label %while.end1634

if.end1600:                                       ; preds = %while.body1586
  %1174 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1601 = getelementptr inbounds %struct.DState, %struct.DState* %1174, i32 0, i32 0
  %1175 = load %struct.bz_stream*, %struct.bz_stream** %strm1601, align 8
  %avail_in1602 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1175, i32 0, i32 1
  %1176 = load i32, i32* %avail_in1602, align 8
  %cmp1603 = icmp eq i32 %1176, 0
  br i1 %cmp1603, label %if.then1605, label %if.end1606

if.then1605:                                      ; preds = %if.end1600
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1606:                                       ; preds = %if.end1600
  %1177 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1607 = getelementptr inbounds %struct.DState, %struct.DState* %1177, i32 0, i32 7
  %1178 = load i32, i32* %bsBuff1607, align 8
  %shl1608 = shl i32 %1178, 8
  %1179 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1609 = getelementptr inbounds %struct.DState, %struct.DState* %1179, i32 0, i32 0
  %1180 = load %struct.bz_stream*, %struct.bz_stream** %strm1609, align 8
  %next_in1610 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1180, i32 0, i32 0
  %1181 = load i8*, i8** %next_in1610, align 8
  %1182 = load i8, i8* %1181, align 1
  %conv1611 = zext i8 %1182 to i32
  %or1612 = or i32 %shl1608, %conv1611
  %1183 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1613 = getelementptr inbounds %struct.DState, %struct.DState* %1183, i32 0, i32 7
  store i32 %or1612, i32* %bsBuff1613, align 8
  %1184 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1614 = getelementptr inbounds %struct.DState, %struct.DState* %1184, i32 0, i32 8
  %1185 = load i32, i32* %bsLive1614, align 4
  %add1615 = add nsw i32 %1185, 8
  store i32 %add1615, i32* %bsLive1614, align 4
  %1186 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1616 = getelementptr inbounds %struct.DState, %struct.DState* %1186, i32 0, i32 0
  %1187 = load %struct.bz_stream*, %struct.bz_stream** %strm1616, align 8
  %next_in1617 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1187, i32 0, i32 0
  %1188 = load i8*, i8** %next_in1617, align 8
  %incdec.ptr1618 = getelementptr inbounds i8, i8* %1188, i32 1
  store i8* %incdec.ptr1618, i8** %next_in1617, align 8
  %1189 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1619 = getelementptr inbounds %struct.DState, %struct.DState* %1189, i32 0, i32 0
  %1190 = load %struct.bz_stream*, %struct.bz_stream** %strm1619, align 8
  %avail_in1620 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1190, i32 0, i32 1
  %1191 = load i32, i32* %avail_in1620, align 8
  %dec1621 = add i32 %1191, -1
  store i32 %dec1621, i32* %avail_in1620, align 8
  %1192 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1622 = getelementptr inbounds %struct.DState, %struct.DState* %1192, i32 0, i32 0
  %1193 = load %struct.bz_stream*, %struct.bz_stream** %strm1622, align 8
  %total_in_lo321623 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1193, i32 0, i32 2
  %1194 = load i32, i32* %total_in_lo321623, align 4
  %inc1624 = add i32 %1194, 1
  store i32 %inc1624, i32* %total_in_lo321623, align 4
  %1195 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1625 = getelementptr inbounds %struct.DState, %struct.DState* %1195, i32 0, i32 0
  %1196 = load %struct.bz_stream*, %struct.bz_stream** %strm1625, align 8
  %total_in_lo321626 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1196, i32 0, i32 2
  %1197 = load i32, i32* %total_in_lo321626, align 4
  %cmp1627 = icmp eq i32 %1197, 0
  br i1 %cmp1627, label %if.then1629, label %if.end1633

if.then1629:                                      ; preds = %if.end1606
  %1198 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1630 = getelementptr inbounds %struct.DState, %struct.DState* %1198, i32 0, i32 0
  %1199 = load %struct.bz_stream*, %struct.bz_stream** %strm1630, align 8
  %total_in_hi321631 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1199, i32 0, i32 3
  %1200 = load i32, i32* %total_in_hi321631, align 8
  %inc1632 = add i32 %1200, 1
  store i32 %inc1632, i32* %total_in_hi321631, align 8
  br label %if.end1633

if.end1633:                                       ; preds = %if.then1629, %if.end1606
  br label %while.body1586

while.end1634:                                    ; preds = %if.then1590
  %1201 = load i8, i8* %uc, align 1
  %conv1635 = zext i8 %1201 to i32
  %cmp1636 = icmp eq i32 %conv1635, 0
  br i1 %cmp1636, label %if.then1638, label %if.else1640

if.then1638:                                      ; preds = %while.end1634
  %1202 = load i32, i32* %curr, align 4
  %inc1639 = add nsw i32 %1202, 1
  store i32 %inc1639, i32* %curr, align 4
  br label %if.end1642

if.else1640:                                      ; preds = %while.end1634
  %1203 = load i32, i32* %curr, align 4
  %dec1641 = add nsw i32 %1203, -1
  store i32 %dec1641, i32* %curr, align 4
  br label %if.end1642

if.end1642:                                       ; preds = %if.else1640, %if.then1638
  br label %while.body1518

while.end1643:                                    ; preds = %if.then1581
  %1204 = load i32, i32* %curr, align 4
  %conv1644 = trunc i32 %1204 to i8
  %1205 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len = getelementptr inbounds %struct.DState, %struct.DState* %1205, i32 0, i32 35
  %1206 = load i32, i32* %t, align 4
  %idxprom1645 = sext i32 %1206 to i64
  %arrayidx1646 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len, i64 0, i64 %idxprom1645
  %1207 = load i32, i32* %i, align 4
  %idxprom1647 = sext i32 %1207 to i64
  %arrayidx1648 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1646, i64 0, i64 %idxprom1647
  store i8 %conv1644, i8* %arrayidx1648, align 1
  br label %for.inc1649

for.inc1649:                                      ; preds = %while.end1643
  %1208 = load i32, i32* %i, align 4
  %inc1650 = add nsw i32 %1208, 1
  store i32 %inc1650, i32* %i, align 4
  br label %for.cond1513

for.end1651:                                      ; preds = %for.cond1513
  br label %for.inc1652

for.inc1652:                                      ; preds = %for.end1651
  %1209 = load i32, i32* %t, align 4
  %inc1653 = add nsw i32 %1209, 1
  store i32 %inc1653, i32* %t, align 4
  br label %for.cond1458

for.end1654:                                      ; preds = %for.cond1458
  store i32 0, i32* %t, align 4
  br label %for.cond1655

for.cond1655:                                     ; preds = %for.inc1713, %for.end1654
  %1210 = load i32, i32* %t, align 4
  %1211 = load i32, i32* %nGroups, align 4
  %cmp1656 = icmp slt i32 %1210, %1211
  br i1 %cmp1656, label %for.body1658, label %for.end1715

for.body1658:                                     ; preds = %for.cond1655
  store i32 32, i32* %minLen, align 4
  store i32 0, i32* %maxLen, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1659

for.cond1659:                                     ; preds = %for.inc1695, %for.body1658
  %1212 = load i32, i32* %i, align 4
  %1213 = load i32, i32* %alphaSize, align 4
  %cmp1660 = icmp slt i32 %1212, %1213
  br i1 %cmp1660, label %for.body1662, label %for.end1697

for.body1662:                                     ; preds = %for.cond1659
  %1214 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len1663 = getelementptr inbounds %struct.DState, %struct.DState* %1214, i32 0, i32 35
  %1215 = load i32, i32* %t, align 4
  %idxprom1664 = sext i32 %1215 to i64
  %arrayidx1665 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1663, i64 0, i64 %idxprom1664
  %1216 = load i32, i32* %i, align 4
  %idxprom1666 = sext i32 %1216 to i64
  %arrayidx1667 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1665, i64 0, i64 %idxprom1666
  %1217 = load i8, i8* %arrayidx1667, align 1
  %conv1668 = zext i8 %1217 to i32
  %1218 = load i32, i32* %maxLen, align 4
  %cmp1669 = icmp sgt i32 %conv1668, %1218
  br i1 %cmp1669, label %if.then1671, label %if.end1678

if.then1671:                                      ; preds = %for.body1662
  %1219 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len1672 = getelementptr inbounds %struct.DState, %struct.DState* %1219, i32 0, i32 35
  %1220 = load i32, i32* %t, align 4
  %idxprom1673 = sext i32 %1220 to i64
  %arrayidx1674 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1672, i64 0, i64 %idxprom1673
  %1221 = load i32, i32* %i, align 4
  %idxprom1675 = sext i32 %1221 to i64
  %arrayidx1676 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1674, i64 0, i64 %idxprom1675
  %1222 = load i8, i8* %arrayidx1676, align 1
  %conv1677 = zext i8 %1222 to i32
  store i32 %conv1677, i32* %maxLen, align 4
  br label %if.end1678

if.end1678:                                       ; preds = %if.then1671, %for.body1662
  %1223 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len1679 = getelementptr inbounds %struct.DState, %struct.DState* %1223, i32 0, i32 35
  %1224 = load i32, i32* %t, align 4
  %idxprom1680 = sext i32 %1224 to i64
  %arrayidx1681 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1679, i64 0, i64 %idxprom1680
  %1225 = load i32, i32* %i, align 4
  %idxprom1682 = sext i32 %1225 to i64
  %arrayidx1683 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1681, i64 0, i64 %idxprom1682
  %1226 = load i8, i8* %arrayidx1683, align 1
  %conv1684 = zext i8 %1226 to i32
  %1227 = load i32, i32* %minLen, align 4
  %cmp1685 = icmp slt i32 %conv1684, %1227
  br i1 %cmp1685, label %if.then1687, label %if.end1694

if.then1687:                                      ; preds = %if.end1678
  %1228 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len1688 = getelementptr inbounds %struct.DState, %struct.DState* %1228, i32 0, i32 35
  %1229 = load i32, i32* %t, align 4
  %idxprom1689 = sext i32 %1229 to i64
  %arrayidx1690 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1688, i64 0, i64 %idxprom1689
  %1230 = load i32, i32* %i, align 4
  %idxprom1691 = sext i32 %1230 to i64
  %arrayidx1692 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1690, i64 0, i64 %idxprom1691
  %1231 = load i8, i8* %arrayidx1692, align 1
  %conv1693 = zext i8 %1231 to i32
  store i32 %conv1693, i32* %minLen, align 4
  br label %if.end1694

if.end1694:                                       ; preds = %if.then1687, %if.end1678
  br label %for.inc1695

for.inc1695:                                      ; preds = %if.end1694
  %1232 = load i32, i32* %i, align 4
  %inc1696 = add nsw i32 %1232, 1
  store i32 %inc1696, i32* %i, align 4
  br label %for.cond1659

for.end1697:                                      ; preds = %for.cond1659
  %1233 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %limit = getelementptr inbounds %struct.DState, %struct.DState* %1233, i32 0, i32 36
  %1234 = load i32, i32* %t, align 4
  %idxprom1698 = sext i32 %1234 to i64
  %arrayidx1699 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit, i64 0, i64 %idxprom1698
  %arrayidx1700 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1699, i64 0, i64 0
  %1235 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %base = getelementptr inbounds %struct.DState, %struct.DState* %1235, i32 0, i32 37
  %1236 = load i32, i32* %t, align 4
  %idxprom1701 = sext i32 %1236 to i64
  %arrayidx1702 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base, i64 0, i64 %idxprom1701
  %arrayidx1703 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1702, i64 0, i64 0
  %1237 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %perm = getelementptr inbounds %struct.DState, %struct.DState* %1237, i32 0, i32 38
  %1238 = load i32, i32* %t, align 4
  %idxprom1704 = sext i32 %1238 to i64
  %arrayidx1705 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm, i64 0, i64 %idxprom1704
  %arrayidx1706 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1705, i64 0, i64 0
  %1239 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %len1707 = getelementptr inbounds %struct.DState, %struct.DState* %1239, i32 0, i32 35
  %1240 = load i32, i32* %t, align 4
  %idxprom1708 = sext i32 %1240 to i64
  %arrayidx1709 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1707, i64 0, i64 %idxprom1708
  %arrayidx1710 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1709, i64 0, i64 0
  %1241 = load i32, i32* %minLen, align 4
  %1242 = load i32, i32* %maxLen, align 4
  %1243 = load i32, i32* %alphaSize, align 4
  call void @BZ2_hbCreateDecodeTables(i32* %arrayidx1700, i32* %arrayidx1703, i32* %arrayidx1706, i8* %arrayidx1710, i32 %1241, i32 %1242, i32 %1243)
  %1244 = load i32, i32* %minLen, align 4
  %1245 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %minLens = getelementptr inbounds %struct.DState, %struct.DState* %1245, i32 0, i32 39
  %1246 = load i32, i32* %t, align 4
  %idxprom1711 = sext i32 %1246 to i64
  %arrayidx1712 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens, i64 0, i64 %idxprom1711
  store i32 %1244, i32* %arrayidx1712, align 4
  br label %for.inc1713

for.inc1713:                                      ; preds = %for.end1697
  %1247 = load i32, i32* %t, align 4
  %inc1714 = add nsw i32 %1247, 1
  store i32 %inc1714, i32* %t, align 4
  br label %for.cond1655

for.end1715:                                      ; preds = %for.cond1655
  %1248 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse1716 = getelementptr inbounds %struct.DState, %struct.DState* %1248, i32 0, i32 27
  %1249 = load i32, i32* %nInUse1716, align 8
  %add1717 = add nsw i32 %1249, 1
  store i32 %add1717, i32* %EOB, align 4
  %1250 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockSize100k1718 = getelementptr inbounds %struct.DState, %struct.DState* %1250, i32 0, i32 9
  %1251 = load i32, i32* %blockSize100k1718, align 8
  %mul1719 = mul nsw i32 100000, %1251
  store i32 %mul1719, i32* %nblockMAX, align 4
  store i32 -1, i32* %groupNo, align 4
  store i32 0, i32* %groupPos, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1720

for.cond1720:                                     ; preds = %for.inc1726, %for.end1715
  %1252 = load i32, i32* %i, align 4
  %cmp1721 = icmp sle i32 %1252, 255
  br i1 %cmp1721, label %for.body1723, label %for.end1728

for.body1723:                                     ; preds = %for.cond1720
  %1253 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %unzftab = getelementptr inbounds %struct.DState, %struct.DState* %1253, i32 0, i32 16
  %1254 = load i32, i32* %i, align 4
  %idxprom1724 = sext i32 %1254 to i64
  %arrayidx1725 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab, i64 0, i64 %idxprom1724
  store i32 0, i32* %arrayidx1725, align 4
  br label %for.inc1726

for.inc1726:                                      ; preds = %for.body1723
  %1255 = load i32, i32* %i, align 4
  %inc1727 = add nsw i32 %1255, 1
  store i32 %inc1727, i32* %i, align 4
  br label %for.cond1720

for.end1728:                                      ; preds = %for.cond1720
  store i32 4095, i32* %kk, align 4
  store i32 15, i32* %ii, align 4
  br label %for.cond1729

for.cond1729:                                     ; preds = %for.inc1749, %for.end1728
  %1256 = load i32, i32* %ii, align 4
  %cmp1730 = icmp sge i32 %1256, 0
  br i1 %cmp1730, label %for.body1732, label %for.end1751

for.body1732:                                     ; preds = %for.cond1729
  store i32 15, i32* %jj, align 4
  br label %for.cond1733

for.cond1733:                                     ; preds = %for.inc1743, %for.body1732
  %1257 = load i32, i32* %jj, align 4
  %cmp1734 = icmp sge i32 %1257, 0
  br i1 %cmp1734, label %for.body1736, label %for.end1745

for.body1736:                                     ; preds = %for.cond1733
  %1258 = load i32, i32* %ii, align 4
  %mul1737 = mul nsw i32 %1258, 16
  %1259 = load i32, i32* %jj, align 4
  %add1738 = add nsw i32 %mul1737, %1259
  %conv1739 = trunc i32 %add1738 to i8
  %1260 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa = getelementptr inbounds %struct.DState, %struct.DState* %1260, i32 0, i32 31
  %1261 = load i32, i32* %kk, align 4
  %idxprom1740 = sext i32 %1261 to i64
  %arrayidx1741 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa, i64 0, i64 %idxprom1740
  store i8 %conv1739, i8* %arrayidx1741, align 1
  %1262 = load i32, i32* %kk, align 4
  %dec1742 = add nsw i32 %1262, -1
  store i32 %dec1742, i32* %kk, align 4
  br label %for.inc1743

for.inc1743:                                      ; preds = %for.body1736
  %1263 = load i32, i32* %jj, align 4
  %dec1744 = add nsw i32 %1263, -1
  store i32 %dec1744, i32* %jj, align 4
  br label %for.cond1733

for.end1745:                                      ; preds = %for.cond1733
  %1264 = load i32, i32* %kk, align 4
  %add1746 = add nsw i32 %1264, 1
  %1265 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase = getelementptr inbounds %struct.DState, %struct.DState* %1265, i32 0, i32 32
  %1266 = load i32, i32* %ii, align 4
  %idxprom1747 = sext i32 %1266 to i64
  %arrayidx1748 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase, i64 0, i64 %idxprom1747
  store i32 %add1746, i32* %arrayidx1748, align 4
  br label %for.inc1749

for.inc1749:                                      ; preds = %for.end1745
  %1267 = load i32, i32* %ii, align 4
  %dec1750 = add nsw i32 %1267, -1
  store i32 %dec1750, i32* %ii, align 4
  br label %for.cond1729

for.end1751:                                      ; preds = %for.cond1729
  store i32 0, i32* %nblock, align 4
  %1268 = load i32, i32* %groupPos, align 4
  %cmp1752 = icmp eq i32 %1268, 0
  br i1 %cmp1752, label %if.then1754, label %if.end1779

if.then1754:                                      ; preds = %for.end1751
  %1269 = load i32, i32* %groupNo, align 4
  %inc1755 = add nsw i32 %1269, 1
  store i32 %inc1755, i32* %groupNo, align 4
  %1270 = load i32, i32* %groupNo, align 4
  %1271 = load i32, i32* %nSelectors, align 4
  %cmp1756 = icmp sge i32 %1270, %1271
  br i1 %cmp1756, label %if.then1758, label %if.end1759

if.then1758:                                      ; preds = %if.then1754
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1759:                                       ; preds = %if.then1754
  store i32 50, i32* %groupPos, align 4
  %1272 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selector1760 = getelementptr inbounds %struct.DState, %struct.DState* %1272, i32 0, i32 33
  %1273 = load i32, i32* %groupNo, align 4
  %idxprom1761 = sext i32 %1273 to i64
  %arrayidx1762 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1760, i64 0, i64 %idxprom1761
  %1274 = load i8, i8* %arrayidx1762, align 1
  %conv1763 = zext i8 %1274 to i32
  store i32 %conv1763, i32* %gSel, align 4
  %1275 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %minLens1764 = getelementptr inbounds %struct.DState, %struct.DState* %1275, i32 0, i32 39
  %1276 = load i32, i32* %gSel, align 4
  %idxprom1765 = sext i32 %1276 to i64
  %arrayidx1766 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens1764, i64 0, i64 %idxprom1765
  %1277 = load i32, i32* %arrayidx1766, align 4
  store i32 %1277, i32* %gMinlen, align 4
  %1278 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %limit1767 = getelementptr inbounds %struct.DState, %struct.DState* %1278, i32 0, i32 36
  %1279 = load i32, i32* %gSel, align 4
  %idxprom1768 = sext i32 %1279 to i64
  %arrayidx1769 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit1767, i64 0, i64 %idxprom1768
  %arrayidx1770 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1769, i64 0, i64 0
  store i32* %arrayidx1770, i32** %gLimit, align 8
  %1280 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %perm1771 = getelementptr inbounds %struct.DState, %struct.DState* %1280, i32 0, i32 38
  %1281 = load i32, i32* %gSel, align 4
  %idxprom1772 = sext i32 %1281 to i64
  %arrayidx1773 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm1771, i64 0, i64 %idxprom1772
  %arrayidx1774 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1773, i64 0, i64 0
  store i32* %arrayidx1774, i32** %gPerm, align 8
  %1282 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %base1775 = getelementptr inbounds %struct.DState, %struct.DState* %1282, i32 0, i32 37
  %1283 = load i32, i32* %gSel, align 4
  %idxprom1776 = sext i32 %1283 to i64
  %arrayidx1777 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base1775, i64 0, i64 %idxprom1776
  %arrayidx1778 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1777, i64 0, i64 0
  store i32* %arrayidx1778, i32** %gBase, align 8
  br label %if.end1779

if.end1779:                                       ; preds = %if.end1759, %for.end1751
  %1284 = load i32, i32* %groupPos, align 4
  %dec1780 = add nsw i32 %1284, -1
  store i32 %dec1780, i32* %groupPos, align 4
  %1285 = load i32, i32* %gMinlen, align 4
  store i32 %1285, i32* %zn, align 4
  br label %sw.bb1781

sw.bb1781:                                        ; preds = %if.end1779, %if.end
  %1286 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1782 = getelementptr inbounds %struct.DState, %struct.DState* %1286, i32 0, i32 1
  store i32 36, i32* %state1782, align 8
  br label %while.body1784

while.body1784:                                   ; preds = %if.end1832, %sw.bb1781
  %1287 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1785 = getelementptr inbounds %struct.DState, %struct.DState* %1287, i32 0, i32 8
  %1288 = load i32, i32* %bsLive1785, align 4
  %1289 = load i32, i32* %zn, align 4
  %cmp1786 = icmp sge i32 %1288, %1289
  br i1 %cmp1786, label %if.then1788, label %if.end1799

if.then1788:                                      ; preds = %while.body1784
  %1290 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1790 = getelementptr inbounds %struct.DState, %struct.DState* %1290, i32 0, i32 7
  %1291 = load i32, i32* %bsBuff1790, align 8
  %1292 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1791 = getelementptr inbounds %struct.DState, %struct.DState* %1292, i32 0, i32 8
  %1293 = load i32, i32* %bsLive1791, align 4
  %1294 = load i32, i32* %zn, align 4
  %sub1792 = sub nsw i32 %1293, %1294
  %shr1793 = lshr i32 %1291, %sub1792
  %1295 = load i32, i32* %zn, align 4
  %shl1794 = shl i32 1, %1295
  %sub1795 = sub nsw i32 %shl1794, 1
  %and1796 = and i32 %shr1793, %sub1795
  store i32 %and1796, i32* %v1789, align 4
  %1296 = load i32, i32* %zn, align 4
  %1297 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1797 = getelementptr inbounds %struct.DState, %struct.DState* %1297, i32 0, i32 8
  %1298 = load i32, i32* %bsLive1797, align 4
  %sub1798 = sub nsw i32 %1298, %1296
  store i32 %sub1798, i32* %bsLive1797, align 4
  %1299 = load i32, i32* %v1789, align 4
  store i32 %1299, i32* %zvec, align 4
  br label %while.end1833

if.end1799:                                       ; preds = %while.body1784
  %1300 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1800 = getelementptr inbounds %struct.DState, %struct.DState* %1300, i32 0, i32 0
  %1301 = load %struct.bz_stream*, %struct.bz_stream** %strm1800, align 8
  %avail_in1801 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i32 0, i32 1
  %1302 = load i32, i32* %avail_in1801, align 8
  %cmp1802 = icmp eq i32 %1302, 0
  br i1 %cmp1802, label %if.then1804, label %if.end1805

if.then1804:                                      ; preds = %if.end1799
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1805:                                       ; preds = %if.end1799
  %1303 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1806 = getelementptr inbounds %struct.DState, %struct.DState* %1303, i32 0, i32 7
  %1304 = load i32, i32* %bsBuff1806, align 8
  %shl1807 = shl i32 %1304, 8
  %1305 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1808 = getelementptr inbounds %struct.DState, %struct.DState* %1305, i32 0, i32 0
  %1306 = load %struct.bz_stream*, %struct.bz_stream** %strm1808, align 8
  %next_in1809 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1306, i32 0, i32 0
  %1307 = load i8*, i8** %next_in1809, align 8
  %1308 = load i8, i8* %1307, align 1
  %conv1810 = zext i8 %1308 to i32
  %or1811 = or i32 %shl1807, %conv1810
  %1309 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1812 = getelementptr inbounds %struct.DState, %struct.DState* %1309, i32 0, i32 7
  store i32 %or1811, i32* %bsBuff1812, align 8
  %1310 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1813 = getelementptr inbounds %struct.DState, %struct.DState* %1310, i32 0, i32 8
  %1311 = load i32, i32* %bsLive1813, align 4
  %add1814 = add nsw i32 %1311, 8
  store i32 %add1814, i32* %bsLive1813, align 4
  %1312 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1815 = getelementptr inbounds %struct.DState, %struct.DState* %1312, i32 0, i32 0
  %1313 = load %struct.bz_stream*, %struct.bz_stream** %strm1815, align 8
  %next_in1816 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1313, i32 0, i32 0
  %1314 = load i8*, i8** %next_in1816, align 8
  %incdec.ptr1817 = getelementptr inbounds i8, i8* %1314, i32 1
  store i8* %incdec.ptr1817, i8** %next_in1816, align 8
  %1315 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1818 = getelementptr inbounds %struct.DState, %struct.DState* %1315, i32 0, i32 0
  %1316 = load %struct.bz_stream*, %struct.bz_stream** %strm1818, align 8
  %avail_in1819 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1316, i32 0, i32 1
  %1317 = load i32, i32* %avail_in1819, align 8
  %dec1820 = add i32 %1317, -1
  store i32 %dec1820, i32* %avail_in1819, align 8
  %1318 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1821 = getelementptr inbounds %struct.DState, %struct.DState* %1318, i32 0, i32 0
  %1319 = load %struct.bz_stream*, %struct.bz_stream** %strm1821, align 8
  %total_in_lo321822 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1319, i32 0, i32 2
  %1320 = load i32, i32* %total_in_lo321822, align 4
  %inc1823 = add i32 %1320, 1
  store i32 %inc1823, i32* %total_in_lo321822, align 4
  %1321 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1824 = getelementptr inbounds %struct.DState, %struct.DState* %1321, i32 0, i32 0
  %1322 = load %struct.bz_stream*, %struct.bz_stream** %strm1824, align 8
  %total_in_lo321825 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1322, i32 0, i32 2
  %1323 = load i32, i32* %total_in_lo321825, align 4
  %cmp1826 = icmp eq i32 %1323, 0
  br i1 %cmp1826, label %if.then1828, label %if.end1832

if.then1828:                                      ; preds = %if.end1805
  %1324 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1829 = getelementptr inbounds %struct.DState, %struct.DState* %1324, i32 0, i32 0
  %1325 = load %struct.bz_stream*, %struct.bz_stream** %strm1829, align 8
  %total_in_hi321830 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1325, i32 0, i32 3
  %1326 = load i32, i32* %total_in_hi321830, align 8
  %inc1831 = add i32 %1326, 1
  store i32 %inc1831, i32* %total_in_hi321830, align 8
  br label %if.end1832

if.end1832:                                       ; preds = %if.then1828, %if.end1805
  br label %while.body1784

while.end1833:                                    ; preds = %if.then1788
  br label %while.body1835

while.body1835:                                   ; preds = %while.end1897, %while.end1833
  %1327 = load i32, i32* %zn, align 4
  %cmp1836 = icmp sgt i32 %1327, 20
  br i1 %cmp1836, label %if.then1838, label %if.end1839

if.then1838:                                      ; preds = %while.body1835
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1839:                                       ; preds = %while.body1835
  %1328 = load i32, i32* %zvec, align 4
  %1329 = load i32*, i32** %gLimit, align 8
  %1330 = load i32, i32* %zn, align 4
  %idxprom1840 = sext i32 %1330 to i64
  %arrayidx1841 = getelementptr inbounds i32, i32* %1329, i64 %idxprom1840
  %1331 = load i32, i32* %arrayidx1841, align 4
  %cmp1842 = icmp sle i32 %1328, %1331
  br i1 %cmp1842, label %if.then1844, label %if.end1845

if.then1844:                                      ; preds = %if.end1839
  br label %while.end1900

if.end1845:                                       ; preds = %if.end1839
  %1332 = load i32, i32* %zn, align 4
  %inc1846 = add nsw i32 %1332, 1
  store i32 %inc1846, i32* %zn, align 4
  br label %sw.bb1847

sw.bb1847:                                        ; preds = %if.end1845, %if.end
  %1333 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1848 = getelementptr inbounds %struct.DState, %struct.DState* %1333, i32 0, i32 1
  store i32 37, i32* %state1848, align 8
  br label %while.body1850

while.body1850:                                   ; preds = %if.end1896, %sw.bb1847
  %1334 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1851 = getelementptr inbounds %struct.DState, %struct.DState* %1334, i32 0, i32 8
  %1335 = load i32, i32* %bsLive1851, align 4
  %cmp1852 = icmp sge i32 %1335, 1
  br i1 %cmp1852, label %if.then1854, label %if.end1863

if.then1854:                                      ; preds = %while.body1850
  %1336 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1856 = getelementptr inbounds %struct.DState, %struct.DState* %1336, i32 0, i32 7
  %1337 = load i32, i32* %bsBuff1856, align 8
  %1338 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1857 = getelementptr inbounds %struct.DState, %struct.DState* %1338, i32 0, i32 8
  %1339 = load i32, i32* %bsLive1857, align 4
  %sub1858 = sub nsw i32 %1339, 1
  %shr1859 = lshr i32 %1337, %sub1858
  %and1860 = and i32 %shr1859, 1
  store i32 %and1860, i32* %v1855, align 4
  %1340 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1861 = getelementptr inbounds %struct.DState, %struct.DState* %1340, i32 0, i32 8
  %1341 = load i32, i32* %bsLive1861, align 4
  %sub1862 = sub nsw i32 %1341, 1
  store i32 %sub1862, i32* %bsLive1861, align 4
  %1342 = load i32, i32* %v1855, align 4
  store i32 %1342, i32* %zj, align 4
  br label %while.end1897

if.end1863:                                       ; preds = %while.body1850
  %1343 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1864 = getelementptr inbounds %struct.DState, %struct.DState* %1343, i32 0, i32 0
  %1344 = load %struct.bz_stream*, %struct.bz_stream** %strm1864, align 8
  %avail_in1865 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1344, i32 0, i32 1
  %1345 = load i32, i32* %avail_in1865, align 8
  %cmp1866 = icmp eq i32 %1345, 0
  br i1 %cmp1866, label %if.then1868, label %if.end1869

if.then1868:                                      ; preds = %if.end1863
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1869:                                       ; preds = %if.end1863
  %1346 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1870 = getelementptr inbounds %struct.DState, %struct.DState* %1346, i32 0, i32 7
  %1347 = load i32, i32* %bsBuff1870, align 8
  %shl1871 = shl i32 %1347, 8
  %1348 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1872 = getelementptr inbounds %struct.DState, %struct.DState* %1348, i32 0, i32 0
  %1349 = load %struct.bz_stream*, %struct.bz_stream** %strm1872, align 8
  %next_in1873 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1349, i32 0, i32 0
  %1350 = load i8*, i8** %next_in1873, align 8
  %1351 = load i8, i8* %1350, align 1
  %conv1874 = zext i8 %1351 to i32
  %or1875 = or i32 %shl1871, %conv1874
  %1352 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1876 = getelementptr inbounds %struct.DState, %struct.DState* %1352, i32 0, i32 7
  store i32 %or1875, i32* %bsBuff1876, align 8
  %1353 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1877 = getelementptr inbounds %struct.DState, %struct.DState* %1353, i32 0, i32 8
  %1354 = load i32, i32* %bsLive1877, align 4
  %add1878 = add nsw i32 %1354, 8
  store i32 %add1878, i32* %bsLive1877, align 4
  %1355 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1879 = getelementptr inbounds %struct.DState, %struct.DState* %1355, i32 0, i32 0
  %1356 = load %struct.bz_stream*, %struct.bz_stream** %strm1879, align 8
  %next_in1880 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1356, i32 0, i32 0
  %1357 = load i8*, i8** %next_in1880, align 8
  %incdec.ptr1881 = getelementptr inbounds i8, i8* %1357, i32 1
  store i8* %incdec.ptr1881, i8** %next_in1880, align 8
  %1358 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1882 = getelementptr inbounds %struct.DState, %struct.DState* %1358, i32 0, i32 0
  %1359 = load %struct.bz_stream*, %struct.bz_stream** %strm1882, align 8
  %avail_in1883 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1359, i32 0, i32 1
  %1360 = load i32, i32* %avail_in1883, align 8
  %dec1884 = add i32 %1360, -1
  store i32 %dec1884, i32* %avail_in1883, align 8
  %1361 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1885 = getelementptr inbounds %struct.DState, %struct.DState* %1361, i32 0, i32 0
  %1362 = load %struct.bz_stream*, %struct.bz_stream** %strm1885, align 8
  %total_in_lo321886 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1362, i32 0, i32 2
  %1363 = load i32, i32* %total_in_lo321886, align 4
  %inc1887 = add i32 %1363, 1
  store i32 %inc1887, i32* %total_in_lo321886, align 4
  %1364 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1888 = getelementptr inbounds %struct.DState, %struct.DState* %1364, i32 0, i32 0
  %1365 = load %struct.bz_stream*, %struct.bz_stream** %strm1888, align 8
  %total_in_lo321889 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1365, i32 0, i32 2
  %1366 = load i32, i32* %total_in_lo321889, align 4
  %cmp1890 = icmp eq i32 %1366, 0
  br i1 %cmp1890, label %if.then1892, label %if.end1896

if.then1892:                                      ; preds = %if.end1869
  %1367 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1893 = getelementptr inbounds %struct.DState, %struct.DState* %1367, i32 0, i32 0
  %1368 = load %struct.bz_stream*, %struct.bz_stream** %strm1893, align 8
  %total_in_hi321894 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1368, i32 0, i32 3
  %1369 = load i32, i32* %total_in_hi321894, align 8
  %inc1895 = add i32 %1369, 1
  store i32 %inc1895, i32* %total_in_hi321894, align 8
  br label %if.end1896

if.end1896:                                       ; preds = %if.then1892, %if.end1869
  br label %while.body1850

while.end1897:                                    ; preds = %if.then1854
  %1370 = load i32, i32* %zvec, align 4
  %shl1898 = shl i32 %1370, 1
  %1371 = load i32, i32* %zj, align 4
  %or1899 = or i32 %shl1898, %1371
  store i32 %or1899, i32* %zvec, align 4
  br label %while.body1835

while.end1900:                                    ; preds = %if.then1844
  %1372 = load i32, i32* %zvec, align 4
  %1373 = load i32*, i32** %gBase, align 8
  %1374 = load i32, i32* %zn, align 4
  %idxprom1901 = sext i32 %1374 to i64
  %arrayidx1902 = getelementptr inbounds i32, i32* %1373, i64 %idxprom1901
  %1375 = load i32, i32* %arrayidx1902, align 4
  %sub1903 = sub nsw i32 %1372, %1375
  %cmp1904 = icmp slt i32 %sub1903, 0
  br i1 %cmp1904, label %if.then1912, label %lor.lhs.false1906

lor.lhs.false1906:                                ; preds = %while.end1900
  %1376 = load i32, i32* %zvec, align 4
  %1377 = load i32*, i32** %gBase, align 8
  %1378 = load i32, i32* %zn, align 4
  %idxprom1907 = sext i32 %1378 to i64
  %arrayidx1908 = getelementptr inbounds i32, i32* %1377, i64 %idxprom1907
  %1379 = load i32, i32* %arrayidx1908, align 4
  %sub1909 = sub nsw i32 %1376, %1379
  %cmp1910 = icmp sge i32 %sub1909, 258
  br i1 %cmp1910, label %if.then1912, label %if.end1913

if.then1912:                                      ; preds = %lor.lhs.false1906, %while.end1900
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1913:                                       ; preds = %lor.lhs.false1906
  %1380 = load i32*, i32** %gPerm, align 8
  %1381 = load i32, i32* %zvec, align 4
  %1382 = load i32*, i32** %gBase, align 8
  %1383 = load i32, i32* %zn, align 4
  %idxprom1914 = sext i32 %1383 to i64
  %arrayidx1915 = getelementptr inbounds i32, i32* %1382, i64 %idxprom1914
  %1384 = load i32, i32* %arrayidx1915, align 4
  %sub1916 = sub nsw i32 %1381, %1384
  %idxprom1917 = sext i32 %sub1916 to i64
  %arrayidx1918 = getelementptr inbounds i32, i32* %1380, i64 %idxprom1917
  %1385 = load i32, i32* %arrayidx1918, align 4
  store i32 %1385, i32* %nextSym, align 4
  br label %while.body1920

while.body1920:                                   ; preds = %if.end2522, %if.end2162, %if.end1913
  %1386 = load i32, i32* %nextSym, align 4
  %1387 = load i32, i32* %EOB, align 4
  %cmp1921 = icmp eq i32 %1386, %1387
  br i1 %cmp1921, label %if.then1923, label %if.end1924

if.then1923:                                      ; preds = %while.body1920
  br label %while.end2528

if.end1924:                                       ; preds = %while.body1920
  %1388 = load i32, i32* %nextSym, align 4
  %cmp1925 = icmp eq i32 %1388, 0
  br i1 %cmp1925, label %if.then1930, label %lor.lhs.false1927

lor.lhs.false1927:                                ; preds = %if.end1924
  %1389 = load i32, i32* %nextSym, align 4
  %cmp1928 = icmp eq i32 %1389, 1
  br i1 %cmp1928, label %if.then1930, label %if.else2163

if.then1930:                                      ; preds = %lor.lhs.false1927, %if.end1924
  store i32 -1, i32* %es, align 4
  store i32 1, i32* %N, align 4
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1930
  %1390 = load i32, i32* %nextSym, align 4
  %cmp1931 = icmp eq i32 %1390, 0
  br i1 %cmp1931, label %if.then1933, label %if.else1936

if.then1933:                                      ; preds = %do.body
  %1391 = load i32, i32* %es, align 4
  %1392 = load i32, i32* %N, align 4
  %mul1934 = mul nsw i32 1, %1392
  %add1935 = add nsw i32 %1391, %mul1934
  store i32 %add1935, i32* %es, align 4
  br label %if.end1943

if.else1936:                                      ; preds = %do.body
  %1393 = load i32, i32* %nextSym, align 4
  %cmp1937 = icmp eq i32 %1393, 1
  br i1 %cmp1937, label %if.then1939, label %if.end1942

if.then1939:                                      ; preds = %if.else1936
  %1394 = load i32, i32* %es, align 4
  %1395 = load i32, i32* %N, align 4
  %mul1940 = mul nsw i32 2, %1395
  %add1941 = add nsw i32 %1394, %mul1940
  store i32 %add1941, i32* %es, align 4
  br label %if.end1942

if.end1942:                                       ; preds = %if.then1939, %if.else1936
  br label %if.end1943

if.end1943:                                       ; preds = %if.end1942, %if.then1933
  %1396 = load i32, i32* %N, align 4
  %mul1944 = mul nsw i32 %1396, 2
  store i32 %mul1944, i32* %N, align 4
  %1397 = load i32, i32* %groupPos, align 4
  %cmp1945 = icmp eq i32 %1397, 0
  br i1 %cmp1945, label %if.then1947, label %if.end1972

if.then1947:                                      ; preds = %if.end1943
  %1398 = load i32, i32* %groupNo, align 4
  %inc1948 = add nsw i32 %1398, 1
  store i32 %inc1948, i32* %groupNo, align 4
  %1399 = load i32, i32* %groupNo, align 4
  %1400 = load i32, i32* %nSelectors, align 4
  %cmp1949 = icmp sge i32 %1399, %1400
  br i1 %cmp1949, label %if.then1951, label %if.end1952

if.then1951:                                      ; preds = %if.then1947
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end1952:                                       ; preds = %if.then1947
  store i32 50, i32* %groupPos, align 4
  %1401 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selector1953 = getelementptr inbounds %struct.DState, %struct.DState* %1401, i32 0, i32 33
  %1402 = load i32, i32* %groupNo, align 4
  %idxprom1954 = sext i32 %1402 to i64
  %arrayidx1955 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1953, i64 0, i64 %idxprom1954
  %1403 = load i8, i8* %arrayidx1955, align 1
  %conv1956 = zext i8 %1403 to i32
  store i32 %conv1956, i32* %gSel, align 4
  %1404 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %minLens1957 = getelementptr inbounds %struct.DState, %struct.DState* %1404, i32 0, i32 39
  %1405 = load i32, i32* %gSel, align 4
  %idxprom1958 = sext i32 %1405 to i64
  %arrayidx1959 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens1957, i64 0, i64 %idxprom1958
  %1406 = load i32, i32* %arrayidx1959, align 4
  store i32 %1406, i32* %gMinlen, align 4
  %1407 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %limit1960 = getelementptr inbounds %struct.DState, %struct.DState* %1407, i32 0, i32 36
  %1408 = load i32, i32* %gSel, align 4
  %idxprom1961 = sext i32 %1408 to i64
  %arrayidx1962 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit1960, i64 0, i64 %idxprom1961
  %arrayidx1963 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1962, i64 0, i64 0
  store i32* %arrayidx1963, i32** %gLimit, align 8
  %1409 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %perm1964 = getelementptr inbounds %struct.DState, %struct.DState* %1409, i32 0, i32 38
  %1410 = load i32, i32* %gSel, align 4
  %idxprom1965 = sext i32 %1410 to i64
  %arrayidx1966 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm1964, i64 0, i64 %idxprom1965
  %arrayidx1967 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1966, i64 0, i64 0
  store i32* %arrayidx1967, i32** %gPerm, align 8
  %1411 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %base1968 = getelementptr inbounds %struct.DState, %struct.DState* %1411, i32 0, i32 37
  %1412 = load i32, i32* %gSel, align 4
  %idxprom1969 = sext i32 %1412 to i64
  %arrayidx1970 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base1968, i64 0, i64 %idxprom1969
  %arrayidx1971 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1970, i64 0, i64 0
  store i32* %arrayidx1971, i32** %gBase, align 8
  br label %if.end1972

if.end1972:                                       ; preds = %if.end1952, %if.end1943
  %1413 = load i32, i32* %groupPos, align 4
  %dec1973 = add nsw i32 %1413, -1
  store i32 %dec1973, i32* %groupPos, align 4
  %1414 = load i32, i32* %gMinlen, align 4
  store i32 %1414, i32* %zn, align 4
  br label %sw.bb1974

sw.bb1974:                                        ; preds = %if.end1972, %if.end
  %1415 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state1975 = getelementptr inbounds %struct.DState, %struct.DState* %1415, i32 0, i32 1
  store i32 38, i32* %state1975, align 8
  br label %while.body1977

while.body1977:                                   ; preds = %if.end2025, %sw.bb1974
  %1416 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1978 = getelementptr inbounds %struct.DState, %struct.DState* %1416, i32 0, i32 8
  %1417 = load i32, i32* %bsLive1978, align 4
  %1418 = load i32, i32* %zn, align 4
  %cmp1979 = icmp sge i32 %1417, %1418
  br i1 %cmp1979, label %if.then1981, label %if.end1992

if.then1981:                                      ; preds = %while.body1977
  %1419 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1983 = getelementptr inbounds %struct.DState, %struct.DState* %1419, i32 0, i32 7
  %1420 = load i32, i32* %bsBuff1983, align 8
  %1421 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1984 = getelementptr inbounds %struct.DState, %struct.DState* %1421, i32 0, i32 8
  %1422 = load i32, i32* %bsLive1984, align 4
  %1423 = load i32, i32* %zn, align 4
  %sub1985 = sub nsw i32 %1422, %1423
  %shr1986 = lshr i32 %1420, %sub1985
  %1424 = load i32, i32* %zn, align 4
  %shl1987 = shl i32 1, %1424
  %sub1988 = sub nsw i32 %shl1987, 1
  %and1989 = and i32 %shr1986, %sub1988
  store i32 %and1989, i32* %v1982, align 4
  %1425 = load i32, i32* %zn, align 4
  %1426 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive1990 = getelementptr inbounds %struct.DState, %struct.DState* %1426, i32 0, i32 8
  %1427 = load i32, i32* %bsLive1990, align 4
  %sub1991 = sub nsw i32 %1427, %1425
  store i32 %sub1991, i32* %bsLive1990, align 4
  %1428 = load i32, i32* %v1982, align 4
  store i32 %1428, i32* %zvec, align 4
  br label %while.end2026

if.end1992:                                       ; preds = %while.body1977
  %1429 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm1993 = getelementptr inbounds %struct.DState, %struct.DState* %1429, i32 0, i32 0
  %1430 = load %struct.bz_stream*, %struct.bz_stream** %strm1993, align 8
  %avail_in1994 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1430, i32 0, i32 1
  %1431 = load i32, i32* %avail_in1994, align 8
  %cmp1995 = icmp eq i32 %1431, 0
  br i1 %cmp1995, label %if.then1997, label %if.end1998

if.then1997:                                      ; preds = %if.end1992
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end1998:                                       ; preds = %if.end1992
  %1432 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff1999 = getelementptr inbounds %struct.DState, %struct.DState* %1432, i32 0, i32 7
  %1433 = load i32, i32* %bsBuff1999, align 8
  %shl2000 = shl i32 %1433, 8
  %1434 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2001 = getelementptr inbounds %struct.DState, %struct.DState* %1434, i32 0, i32 0
  %1435 = load %struct.bz_stream*, %struct.bz_stream** %strm2001, align 8
  %next_in2002 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1435, i32 0, i32 0
  %1436 = load i8*, i8** %next_in2002, align 8
  %1437 = load i8, i8* %1436, align 1
  %conv2003 = zext i8 %1437 to i32
  %or2004 = or i32 %shl2000, %conv2003
  %1438 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2005 = getelementptr inbounds %struct.DState, %struct.DState* %1438, i32 0, i32 7
  store i32 %or2004, i32* %bsBuff2005, align 8
  %1439 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2006 = getelementptr inbounds %struct.DState, %struct.DState* %1439, i32 0, i32 8
  %1440 = load i32, i32* %bsLive2006, align 4
  %add2007 = add nsw i32 %1440, 8
  store i32 %add2007, i32* %bsLive2006, align 4
  %1441 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2008 = getelementptr inbounds %struct.DState, %struct.DState* %1441, i32 0, i32 0
  %1442 = load %struct.bz_stream*, %struct.bz_stream** %strm2008, align 8
  %next_in2009 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1442, i32 0, i32 0
  %1443 = load i8*, i8** %next_in2009, align 8
  %incdec.ptr2010 = getelementptr inbounds i8, i8* %1443, i32 1
  store i8* %incdec.ptr2010, i8** %next_in2009, align 8
  %1444 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2011 = getelementptr inbounds %struct.DState, %struct.DState* %1444, i32 0, i32 0
  %1445 = load %struct.bz_stream*, %struct.bz_stream** %strm2011, align 8
  %avail_in2012 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1445, i32 0, i32 1
  %1446 = load i32, i32* %avail_in2012, align 8
  %dec2013 = add i32 %1446, -1
  store i32 %dec2013, i32* %avail_in2012, align 8
  %1447 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2014 = getelementptr inbounds %struct.DState, %struct.DState* %1447, i32 0, i32 0
  %1448 = load %struct.bz_stream*, %struct.bz_stream** %strm2014, align 8
  %total_in_lo322015 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1448, i32 0, i32 2
  %1449 = load i32, i32* %total_in_lo322015, align 4
  %inc2016 = add i32 %1449, 1
  store i32 %inc2016, i32* %total_in_lo322015, align 4
  %1450 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2017 = getelementptr inbounds %struct.DState, %struct.DState* %1450, i32 0, i32 0
  %1451 = load %struct.bz_stream*, %struct.bz_stream** %strm2017, align 8
  %total_in_lo322018 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1451, i32 0, i32 2
  %1452 = load i32, i32* %total_in_lo322018, align 4
  %cmp2019 = icmp eq i32 %1452, 0
  br i1 %cmp2019, label %if.then2021, label %if.end2025

if.then2021:                                      ; preds = %if.end1998
  %1453 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2022 = getelementptr inbounds %struct.DState, %struct.DState* %1453, i32 0, i32 0
  %1454 = load %struct.bz_stream*, %struct.bz_stream** %strm2022, align 8
  %total_in_hi322023 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1454, i32 0, i32 3
  %1455 = load i32, i32* %total_in_hi322023, align 8
  %inc2024 = add i32 %1455, 1
  store i32 %inc2024, i32* %total_in_hi322023, align 8
  br label %if.end2025

if.end2025:                                       ; preds = %if.then2021, %if.end1998
  br label %while.body1977

while.end2026:                                    ; preds = %if.then1981
  br label %while.body2028

while.body2028:                                   ; preds = %while.end2090, %while.end2026
  %1456 = load i32, i32* %zn, align 4
  %cmp2029 = icmp sgt i32 %1456, 20
  br i1 %cmp2029, label %if.then2031, label %if.end2032

if.then2031:                                      ; preds = %while.body2028
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2032:                                       ; preds = %while.body2028
  %1457 = load i32, i32* %zvec, align 4
  %1458 = load i32*, i32** %gLimit, align 8
  %1459 = load i32, i32* %zn, align 4
  %idxprom2033 = sext i32 %1459 to i64
  %arrayidx2034 = getelementptr inbounds i32, i32* %1458, i64 %idxprom2033
  %1460 = load i32, i32* %arrayidx2034, align 4
  %cmp2035 = icmp sle i32 %1457, %1460
  br i1 %cmp2035, label %if.then2037, label %if.end2038

if.then2037:                                      ; preds = %if.end2032
  br label %while.end2093

if.end2038:                                       ; preds = %if.end2032
  %1461 = load i32, i32* %zn, align 4
  %inc2039 = add nsw i32 %1461, 1
  store i32 %inc2039, i32* %zn, align 4
  br label %sw.bb2040

sw.bb2040:                                        ; preds = %if.end2038, %if.end
  %1462 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2041 = getelementptr inbounds %struct.DState, %struct.DState* %1462, i32 0, i32 1
  store i32 39, i32* %state2041, align 8
  br label %while.body2043

while.body2043:                                   ; preds = %if.end2089, %sw.bb2040
  %1463 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2044 = getelementptr inbounds %struct.DState, %struct.DState* %1463, i32 0, i32 8
  %1464 = load i32, i32* %bsLive2044, align 4
  %cmp2045 = icmp sge i32 %1464, 1
  br i1 %cmp2045, label %if.then2047, label %if.end2056

if.then2047:                                      ; preds = %while.body2043
  %1465 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2049 = getelementptr inbounds %struct.DState, %struct.DState* %1465, i32 0, i32 7
  %1466 = load i32, i32* %bsBuff2049, align 8
  %1467 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2050 = getelementptr inbounds %struct.DState, %struct.DState* %1467, i32 0, i32 8
  %1468 = load i32, i32* %bsLive2050, align 4
  %sub2051 = sub nsw i32 %1468, 1
  %shr2052 = lshr i32 %1466, %sub2051
  %and2053 = and i32 %shr2052, 1
  store i32 %and2053, i32* %v2048, align 4
  %1469 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2054 = getelementptr inbounds %struct.DState, %struct.DState* %1469, i32 0, i32 8
  %1470 = load i32, i32* %bsLive2054, align 4
  %sub2055 = sub nsw i32 %1470, 1
  store i32 %sub2055, i32* %bsLive2054, align 4
  %1471 = load i32, i32* %v2048, align 4
  store i32 %1471, i32* %zj, align 4
  br label %while.end2090

if.end2056:                                       ; preds = %while.body2043
  %1472 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2057 = getelementptr inbounds %struct.DState, %struct.DState* %1472, i32 0, i32 0
  %1473 = load %struct.bz_stream*, %struct.bz_stream** %strm2057, align 8
  %avail_in2058 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1473, i32 0, i32 1
  %1474 = load i32, i32* %avail_in2058, align 8
  %cmp2059 = icmp eq i32 %1474, 0
  br i1 %cmp2059, label %if.then2061, label %if.end2062

if.then2061:                                      ; preds = %if.end2056
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end2062:                                       ; preds = %if.end2056
  %1475 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2063 = getelementptr inbounds %struct.DState, %struct.DState* %1475, i32 0, i32 7
  %1476 = load i32, i32* %bsBuff2063, align 8
  %shl2064 = shl i32 %1476, 8
  %1477 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2065 = getelementptr inbounds %struct.DState, %struct.DState* %1477, i32 0, i32 0
  %1478 = load %struct.bz_stream*, %struct.bz_stream** %strm2065, align 8
  %next_in2066 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1478, i32 0, i32 0
  %1479 = load i8*, i8** %next_in2066, align 8
  %1480 = load i8, i8* %1479, align 1
  %conv2067 = zext i8 %1480 to i32
  %or2068 = or i32 %shl2064, %conv2067
  %1481 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2069 = getelementptr inbounds %struct.DState, %struct.DState* %1481, i32 0, i32 7
  store i32 %or2068, i32* %bsBuff2069, align 8
  %1482 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2070 = getelementptr inbounds %struct.DState, %struct.DState* %1482, i32 0, i32 8
  %1483 = load i32, i32* %bsLive2070, align 4
  %add2071 = add nsw i32 %1483, 8
  store i32 %add2071, i32* %bsLive2070, align 4
  %1484 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2072 = getelementptr inbounds %struct.DState, %struct.DState* %1484, i32 0, i32 0
  %1485 = load %struct.bz_stream*, %struct.bz_stream** %strm2072, align 8
  %next_in2073 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1485, i32 0, i32 0
  %1486 = load i8*, i8** %next_in2073, align 8
  %incdec.ptr2074 = getelementptr inbounds i8, i8* %1486, i32 1
  store i8* %incdec.ptr2074, i8** %next_in2073, align 8
  %1487 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2075 = getelementptr inbounds %struct.DState, %struct.DState* %1487, i32 0, i32 0
  %1488 = load %struct.bz_stream*, %struct.bz_stream** %strm2075, align 8
  %avail_in2076 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1488, i32 0, i32 1
  %1489 = load i32, i32* %avail_in2076, align 8
  %dec2077 = add i32 %1489, -1
  store i32 %dec2077, i32* %avail_in2076, align 8
  %1490 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2078 = getelementptr inbounds %struct.DState, %struct.DState* %1490, i32 0, i32 0
  %1491 = load %struct.bz_stream*, %struct.bz_stream** %strm2078, align 8
  %total_in_lo322079 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1491, i32 0, i32 2
  %1492 = load i32, i32* %total_in_lo322079, align 4
  %inc2080 = add i32 %1492, 1
  store i32 %inc2080, i32* %total_in_lo322079, align 4
  %1493 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2081 = getelementptr inbounds %struct.DState, %struct.DState* %1493, i32 0, i32 0
  %1494 = load %struct.bz_stream*, %struct.bz_stream** %strm2081, align 8
  %total_in_lo322082 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1494, i32 0, i32 2
  %1495 = load i32, i32* %total_in_lo322082, align 4
  %cmp2083 = icmp eq i32 %1495, 0
  br i1 %cmp2083, label %if.then2085, label %if.end2089

if.then2085:                                      ; preds = %if.end2062
  %1496 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2086 = getelementptr inbounds %struct.DState, %struct.DState* %1496, i32 0, i32 0
  %1497 = load %struct.bz_stream*, %struct.bz_stream** %strm2086, align 8
  %total_in_hi322087 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1497, i32 0, i32 3
  %1498 = load i32, i32* %total_in_hi322087, align 8
  %inc2088 = add i32 %1498, 1
  store i32 %inc2088, i32* %total_in_hi322087, align 8
  br label %if.end2089

if.end2089:                                       ; preds = %if.then2085, %if.end2062
  br label %while.body2043

while.end2090:                                    ; preds = %if.then2047
  %1499 = load i32, i32* %zvec, align 4
  %shl2091 = shl i32 %1499, 1
  %1500 = load i32, i32* %zj, align 4
  %or2092 = or i32 %shl2091, %1500
  store i32 %or2092, i32* %zvec, align 4
  br label %while.body2028

while.end2093:                                    ; preds = %if.then2037
  %1501 = load i32, i32* %zvec, align 4
  %1502 = load i32*, i32** %gBase, align 8
  %1503 = load i32, i32* %zn, align 4
  %idxprom2094 = sext i32 %1503 to i64
  %arrayidx2095 = getelementptr inbounds i32, i32* %1502, i64 %idxprom2094
  %1504 = load i32, i32* %arrayidx2095, align 4
  %sub2096 = sub nsw i32 %1501, %1504
  %cmp2097 = icmp slt i32 %sub2096, 0
  br i1 %cmp2097, label %if.then2105, label %lor.lhs.false2099

lor.lhs.false2099:                                ; preds = %while.end2093
  %1505 = load i32, i32* %zvec, align 4
  %1506 = load i32*, i32** %gBase, align 8
  %1507 = load i32, i32* %zn, align 4
  %idxprom2100 = sext i32 %1507 to i64
  %arrayidx2101 = getelementptr inbounds i32, i32* %1506, i64 %idxprom2100
  %1508 = load i32, i32* %arrayidx2101, align 4
  %sub2102 = sub nsw i32 %1505, %1508
  %cmp2103 = icmp sge i32 %sub2102, 258
  br i1 %cmp2103, label %if.then2105, label %if.end2106

if.then2105:                                      ; preds = %lor.lhs.false2099, %while.end2093
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2106:                                       ; preds = %lor.lhs.false2099
  %1509 = load i32*, i32** %gPerm, align 8
  %1510 = load i32, i32* %zvec, align 4
  %1511 = load i32*, i32** %gBase, align 8
  %1512 = load i32, i32* %zn, align 4
  %idxprom2107 = sext i32 %1512 to i64
  %arrayidx2108 = getelementptr inbounds i32, i32* %1511, i64 %idxprom2107
  %1513 = load i32, i32* %arrayidx2108, align 4
  %sub2109 = sub nsw i32 %1510, %1513
  %idxprom2110 = sext i32 %sub2109 to i64
  %arrayidx2111 = getelementptr inbounds i32, i32* %1509, i64 %idxprom2110
  %1514 = load i32, i32* %arrayidx2111, align 4
  store i32 %1514, i32* %nextSym, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end2106
  %1515 = load i32, i32* %nextSym, align 4
  %cmp2112 = icmp eq i32 %1515, 0
  br i1 %cmp2112, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %1516 = load i32, i32* %nextSym, align 4
  %cmp2114 = icmp eq i32 %1516, 1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %1517 = phi i1 [ true, %do.cond ], [ %cmp2114, %lor.rhs ]
  br i1 %1517, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  %1518 = load i32, i32* %es, align 4
  %inc2116 = add nsw i32 %1518, 1
  store i32 %inc2116, i32* %es, align 4
  %1519 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %seqToUnseq = getelementptr inbounds %struct.DState, %struct.DState* %1519, i32 0, i32 30
  %1520 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2117 = getelementptr inbounds %struct.DState, %struct.DState* %1520, i32 0, i32 31
  %1521 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2118 = getelementptr inbounds %struct.DState, %struct.DState* %1521, i32 0, i32 32
  %arrayidx2119 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2118, i64 0, i64 0
  %1522 = load i32, i32* %arrayidx2119, align 4
  %idxprom2120 = sext i32 %1522 to i64
  %arrayidx2121 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2117, i64 0, i64 %idxprom2120
  %1523 = load i8, i8* %arrayidx2121, align 1
  %idxprom2122 = zext i8 %1523 to i64
  %arrayidx2123 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq, i64 0, i64 %idxprom2122
  %1524 = load i8, i8* %arrayidx2123, align 1
  store i8 %1524, i8* %uc, align 1
  %1525 = load i32, i32* %es, align 4
  %1526 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %unzftab2124 = getelementptr inbounds %struct.DState, %struct.DState* %1526, i32 0, i32 16
  %1527 = load i8, i8* %uc, align 1
  %idxprom2125 = zext i8 %1527 to i64
  %arrayidx2126 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2124, i64 0, i64 %idxprom2125
  %1528 = load i32, i32* %arrayidx2126, align 4
  %add2127 = add nsw i32 %1528, %1525
  store i32 %add2127, i32* %arrayidx2126, align 4
  %1529 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %smallDecompress2128 = getelementptr inbounds %struct.DState, %struct.DState* %1529, i32 0, i32 10
  %1530 = load i8, i8* %smallDecompress2128, align 4
  %tobool2129 = icmp ne i8 %1530, 0
  br i1 %tobool2129, label %if.then2130, label %if.else2146

if.then2130:                                      ; preds = %do.end
  br label %while.cond2131

while.cond2131:                                   ; preds = %if.end2138, %if.then2130
  %1531 = load i32, i32* %es, align 4
  %cmp2132 = icmp sgt i32 %1531, 0
  br i1 %cmp2132, label %while.body2134, label %while.end2145

while.body2134:                                   ; preds = %while.cond2131
  %1532 = load i32, i32* %nblock, align 4
  %1533 = load i32, i32* %nblockMAX, align 4
  %cmp2135 = icmp sge i32 %1532, %1533
  br i1 %cmp2135, label %if.then2137, label %if.end2138

if.then2137:                                      ; preds = %while.body2134
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2138:                                       ; preds = %while.body2134
  %1534 = load i8, i8* %uc, align 1
  %conv2139 = zext i8 %1534 to i16
  %1535 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162140 = getelementptr inbounds %struct.DState, %struct.DState* %1535, i32 0, i32 21
  %1536 = load i16*, i16** %ll162140, align 8
  %1537 = load i32, i32* %nblock, align 4
  %idxprom2141 = sext i32 %1537 to i64
  %arrayidx2142 = getelementptr inbounds i16, i16* %1536, i64 %idxprom2141
  store i16 %conv2139, i16* %arrayidx2142, align 2
  %1538 = load i32, i32* %nblock, align 4
  %inc2143 = add nsw i32 %1538, 1
  store i32 %inc2143, i32* %nblock, align 4
  %1539 = load i32, i32* %es, align 4
  %dec2144 = add nsw i32 %1539, -1
  store i32 %dec2144, i32* %es, align 4
  br label %while.cond2131

while.end2145:                                    ; preds = %while.cond2131
  br label %if.end2162

if.else2146:                                      ; preds = %do.end
  br label %while.cond2147

while.cond2147:                                   ; preds = %if.end2154, %if.else2146
  %1540 = load i32, i32* %es, align 4
  %cmp2148 = icmp sgt i32 %1540, 0
  br i1 %cmp2148, label %while.body2150, label %while.end2161

while.body2150:                                   ; preds = %while.cond2147
  %1541 = load i32, i32* %nblock, align 4
  %1542 = load i32, i32* %nblockMAX, align 4
  %cmp2151 = icmp sge i32 %1541, %1542
  br i1 %cmp2151, label %if.then2153, label %if.end2154

if.then2153:                                      ; preds = %while.body2150
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2154:                                       ; preds = %while.body2150
  %1543 = load i8, i8* %uc, align 1
  %conv2155 = zext i8 %1543 to i32
  %1544 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2156 = getelementptr inbounds %struct.DState, %struct.DState* %1544, i32 0, i32 20
  %1545 = load i32*, i32** %tt2156, align 8
  %1546 = load i32, i32* %nblock, align 4
  %idxprom2157 = sext i32 %1546 to i64
  %arrayidx2158 = getelementptr inbounds i32, i32* %1545, i64 %idxprom2157
  store i32 %conv2155, i32* %arrayidx2158, align 4
  %1547 = load i32, i32* %nblock, align 4
  %inc2159 = add nsw i32 %1547, 1
  store i32 %inc2159, i32* %nblock, align 4
  %1548 = load i32, i32* %es, align 4
  %dec2160 = add nsw i32 %1548, -1
  store i32 %dec2160, i32* %es, align 4
  br label %while.cond2147

while.end2161:                                    ; preds = %while.cond2147
  br label %if.end2162

if.end2162:                                       ; preds = %while.end2161, %while.end2145
  br label %while.body1920

if.else2163:                                      ; preds = %lor.lhs.false1927
  %1549 = load i32, i32* %nblock, align 4
  %1550 = load i32, i32* %nblockMAX, align 4
  %cmp2164 = icmp sge i32 %1549, %1550
  br i1 %cmp2164, label %if.then2166, label %if.end2167

if.then2166:                                      ; preds = %if.else2163
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2167:                                       ; preds = %if.else2163
  %1551 = load i32, i32* %nextSym, align 4
  %sub2171 = sub nsw i32 %1551, 1
  store i32 %sub2171, i32* %nn, align 4
  %1552 = load i32, i32* %nn, align 4
  %cmp2172 = icmp ult i32 %1552, 16
  br i1 %cmp2172, label %if.then2174, label %if.else2237

if.then2174:                                      ; preds = %if.end2167
  %1553 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2175 = getelementptr inbounds %struct.DState, %struct.DState* %1553, i32 0, i32 32
  %arrayidx2176 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2175, i64 0, i64 0
  %1554 = load i32, i32* %arrayidx2176, align 4
  store i32 %1554, i32* %pp, align 4
  %1555 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2177 = getelementptr inbounds %struct.DState, %struct.DState* %1555, i32 0, i32 31
  %1556 = load i32, i32* %pp, align 4
  %1557 = load i32, i32* %nn, align 4
  %add2178 = add i32 %1556, %1557
  %idxprom2179 = zext i32 %add2178 to i64
  %arrayidx2180 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2177, i64 0, i64 %idxprom2179
  %1558 = load i8, i8* %arrayidx2180, align 1
  store i8 %1558, i8* %uc, align 1
  br label %while.cond2181

while.cond2181:                                   ; preds = %while.body2184, %if.then2174
  %1559 = load i32, i32* %nn, align 4
  %cmp2182 = icmp ugt i32 %1559, 3
  br i1 %cmp2182, label %while.body2184, label %while.end2218

while.body2184:                                   ; preds = %while.cond2181
  %1560 = load i32, i32* %pp, align 4
  %1561 = load i32, i32* %nn, align 4
  %add2185 = add i32 %1560, %1561
  store i32 %add2185, i32* %z, align 4
  %1562 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2186 = getelementptr inbounds %struct.DState, %struct.DState* %1562, i32 0, i32 31
  %1563 = load i32, i32* %z, align 4
  %sub2187 = sub nsw i32 %1563, 1
  %idxprom2188 = sext i32 %sub2187 to i64
  %arrayidx2189 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2186, i64 0, i64 %idxprom2188
  %1564 = load i8, i8* %arrayidx2189, align 1
  %1565 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2190 = getelementptr inbounds %struct.DState, %struct.DState* %1565, i32 0, i32 31
  %1566 = load i32, i32* %z, align 4
  %idxprom2191 = sext i32 %1566 to i64
  %arrayidx2192 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2190, i64 0, i64 %idxprom2191
  store i8 %1564, i8* %arrayidx2192, align 1
  %1567 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2193 = getelementptr inbounds %struct.DState, %struct.DState* %1567, i32 0, i32 31
  %1568 = load i32, i32* %z, align 4
  %sub2194 = sub nsw i32 %1568, 2
  %idxprom2195 = sext i32 %sub2194 to i64
  %arrayidx2196 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2193, i64 0, i64 %idxprom2195
  %1569 = load i8, i8* %arrayidx2196, align 1
  %1570 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2197 = getelementptr inbounds %struct.DState, %struct.DState* %1570, i32 0, i32 31
  %1571 = load i32, i32* %z, align 4
  %sub2198 = sub nsw i32 %1571, 1
  %idxprom2199 = sext i32 %sub2198 to i64
  %arrayidx2200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2197, i64 0, i64 %idxprom2199
  store i8 %1569, i8* %arrayidx2200, align 1
  %1572 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2201 = getelementptr inbounds %struct.DState, %struct.DState* %1572, i32 0, i32 31
  %1573 = load i32, i32* %z, align 4
  %sub2202 = sub nsw i32 %1573, 3
  %idxprom2203 = sext i32 %sub2202 to i64
  %arrayidx2204 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2201, i64 0, i64 %idxprom2203
  %1574 = load i8, i8* %arrayidx2204, align 1
  %1575 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2205 = getelementptr inbounds %struct.DState, %struct.DState* %1575, i32 0, i32 31
  %1576 = load i32, i32* %z, align 4
  %sub2206 = sub nsw i32 %1576, 2
  %idxprom2207 = sext i32 %sub2206 to i64
  %arrayidx2208 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2205, i64 0, i64 %idxprom2207
  store i8 %1574, i8* %arrayidx2208, align 1
  %1577 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2209 = getelementptr inbounds %struct.DState, %struct.DState* %1577, i32 0, i32 31
  %1578 = load i32, i32* %z, align 4
  %sub2210 = sub nsw i32 %1578, 4
  %idxprom2211 = sext i32 %sub2210 to i64
  %arrayidx2212 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2209, i64 0, i64 %idxprom2211
  %1579 = load i8, i8* %arrayidx2212, align 1
  %1580 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2213 = getelementptr inbounds %struct.DState, %struct.DState* %1580, i32 0, i32 31
  %1581 = load i32, i32* %z, align 4
  %sub2214 = sub nsw i32 %1581, 3
  %idxprom2215 = sext i32 %sub2214 to i64
  %arrayidx2216 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2213, i64 0, i64 %idxprom2215
  store i8 %1579, i8* %arrayidx2216, align 1
  %1582 = load i32, i32* %nn, align 4
  %sub2217 = sub i32 %1582, 4
  store i32 %sub2217, i32* %nn, align 4
  br label %while.cond2181

while.end2218:                                    ; preds = %while.cond2181
  br label %while.cond2219

while.cond2219:                                   ; preds = %while.body2222, %while.end2218
  %1583 = load i32, i32* %nn, align 4
  %cmp2220 = icmp ugt i32 %1583, 0
  br i1 %cmp2220, label %while.body2222, label %while.end2233

while.body2222:                                   ; preds = %while.cond2219
  %1584 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2223 = getelementptr inbounds %struct.DState, %struct.DState* %1584, i32 0, i32 31
  %1585 = load i32, i32* %pp, align 4
  %1586 = load i32, i32* %nn, align 4
  %add2224 = add i32 %1585, %1586
  %sub2225 = sub i32 %add2224, 1
  %idxprom2226 = zext i32 %sub2225 to i64
  %arrayidx2227 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2223, i64 0, i64 %idxprom2226
  %1587 = load i8, i8* %arrayidx2227, align 1
  %1588 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2228 = getelementptr inbounds %struct.DState, %struct.DState* %1588, i32 0, i32 31
  %1589 = load i32, i32* %pp, align 4
  %1590 = load i32, i32* %nn, align 4
  %add2229 = add i32 %1589, %1590
  %idxprom2230 = zext i32 %add2229 to i64
  %arrayidx2231 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2228, i64 0, i64 %idxprom2230
  store i8 %1587, i8* %arrayidx2231, align 1
  %1591 = load i32, i32* %nn, align 4
  %dec2232 = add i32 %1591, -1
  store i32 %dec2232, i32* %nn, align 4
  br label %while.cond2219

while.end2233:                                    ; preds = %while.cond2219
  %1592 = load i8, i8* %uc, align 1
  %1593 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2234 = getelementptr inbounds %struct.DState, %struct.DState* %1593, i32 0, i32 31
  %1594 = load i32, i32* %pp, align 4
  %idxprom2235 = sext i32 %1594 to i64
  %arrayidx2236 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2234, i64 0, i64 %idxprom2235
  store i8 %1592, i8* %arrayidx2236, align 1
  br label %if.end2333

if.else2237:                                      ; preds = %if.end2167
  %1595 = load i32, i32* %nn, align 4
  %div = udiv i32 %1595, 16
  store i32 %div, i32* %lno, align 4
  %1596 = load i32, i32* %nn, align 4
  %rem = urem i32 %1596, 16
  store i32 %rem, i32* %off, align 4
  %1597 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2238 = getelementptr inbounds %struct.DState, %struct.DState* %1597, i32 0, i32 32
  %1598 = load i32, i32* %lno, align 4
  %idxprom2239 = sext i32 %1598 to i64
  %arrayidx2240 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2238, i64 0, i64 %idxprom2239
  %1599 = load i32, i32* %arrayidx2240, align 4
  %1600 = load i32, i32* %off, align 4
  %add2241 = add nsw i32 %1599, %1600
  store i32 %add2241, i32* %pp, align 4
  %1601 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2242 = getelementptr inbounds %struct.DState, %struct.DState* %1601, i32 0, i32 31
  %1602 = load i32, i32* %pp, align 4
  %idxprom2243 = sext i32 %1602 to i64
  %arrayidx2244 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2242, i64 0, i64 %idxprom2243
  %1603 = load i8, i8* %arrayidx2244, align 1
  store i8 %1603, i8* %uc, align 1
  br label %while.cond2245

while.cond2245:                                   ; preds = %while.body2251, %if.else2237
  %1604 = load i32, i32* %pp, align 4
  %1605 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2246 = getelementptr inbounds %struct.DState, %struct.DState* %1605, i32 0, i32 32
  %1606 = load i32, i32* %lno, align 4
  %idxprom2247 = sext i32 %1606 to i64
  %arrayidx2248 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2246, i64 0, i64 %idxprom2247
  %1607 = load i32, i32* %arrayidx2248, align 4
  %cmp2249 = icmp sgt i32 %1604, %1607
  br i1 %cmp2249, label %while.body2251, label %while.end2260

while.body2251:                                   ; preds = %while.cond2245
  %1608 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2252 = getelementptr inbounds %struct.DState, %struct.DState* %1608, i32 0, i32 31
  %1609 = load i32, i32* %pp, align 4
  %sub2253 = sub nsw i32 %1609, 1
  %idxprom2254 = sext i32 %sub2253 to i64
  %arrayidx2255 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2252, i64 0, i64 %idxprom2254
  %1610 = load i8, i8* %arrayidx2255, align 1
  %1611 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2256 = getelementptr inbounds %struct.DState, %struct.DState* %1611, i32 0, i32 31
  %1612 = load i32, i32* %pp, align 4
  %idxprom2257 = sext i32 %1612 to i64
  %arrayidx2258 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2256, i64 0, i64 %idxprom2257
  store i8 %1610, i8* %arrayidx2258, align 1
  %1613 = load i32, i32* %pp, align 4
  %dec2259 = add nsw i32 %1613, -1
  store i32 %dec2259, i32* %pp, align 4
  br label %while.cond2245

while.end2260:                                    ; preds = %while.cond2245
  %1614 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2261 = getelementptr inbounds %struct.DState, %struct.DState* %1614, i32 0, i32 32
  %1615 = load i32, i32* %lno, align 4
  %idxprom2262 = sext i32 %1615 to i64
  %arrayidx2263 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2261, i64 0, i64 %idxprom2262
  %1616 = load i32, i32* %arrayidx2263, align 4
  %inc2264 = add nsw i32 %1616, 1
  store i32 %inc2264, i32* %arrayidx2263, align 4
  br label %while.cond2265

while.cond2265:                                   ; preds = %while.body2268, %while.end2260
  %1617 = load i32, i32* %lno, align 4
  %cmp2266 = icmp sgt i32 %1617, 0
  br i1 %cmp2266, label %while.body2268, label %while.end2289

while.body2268:                                   ; preds = %while.cond2265
  %1618 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2269 = getelementptr inbounds %struct.DState, %struct.DState* %1618, i32 0, i32 32
  %1619 = load i32, i32* %lno, align 4
  %idxprom2270 = sext i32 %1619 to i64
  %arrayidx2271 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2269, i64 0, i64 %idxprom2270
  %1620 = load i32, i32* %arrayidx2271, align 4
  %dec2272 = add nsw i32 %1620, -1
  store i32 %dec2272, i32* %arrayidx2271, align 4
  %1621 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2273 = getelementptr inbounds %struct.DState, %struct.DState* %1621, i32 0, i32 31
  %1622 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2274 = getelementptr inbounds %struct.DState, %struct.DState* %1622, i32 0, i32 32
  %1623 = load i32, i32* %lno, align 4
  %sub2275 = sub nsw i32 %1623, 1
  %idxprom2276 = sext i32 %sub2275 to i64
  %arrayidx2277 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2274, i64 0, i64 %idxprom2276
  %1624 = load i32, i32* %arrayidx2277, align 4
  %add2278 = add nsw i32 %1624, 16
  %sub2279 = sub nsw i32 %add2278, 1
  %idxprom2280 = sext i32 %sub2279 to i64
  %arrayidx2281 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2273, i64 0, i64 %idxprom2280
  %1625 = load i8, i8* %arrayidx2281, align 1
  %1626 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2282 = getelementptr inbounds %struct.DState, %struct.DState* %1626, i32 0, i32 31
  %1627 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2283 = getelementptr inbounds %struct.DState, %struct.DState* %1627, i32 0, i32 32
  %1628 = load i32, i32* %lno, align 4
  %idxprom2284 = sext i32 %1628 to i64
  %arrayidx2285 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2283, i64 0, i64 %idxprom2284
  %1629 = load i32, i32* %arrayidx2285, align 4
  %idxprom2286 = sext i32 %1629 to i64
  %arrayidx2287 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2282, i64 0, i64 %idxprom2286
  store i8 %1625, i8* %arrayidx2287, align 1
  %1630 = load i32, i32* %lno, align 4
  %dec2288 = add nsw i32 %1630, -1
  store i32 %dec2288, i32* %lno, align 4
  br label %while.cond2265

while.end2289:                                    ; preds = %while.cond2265
  %1631 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2290 = getelementptr inbounds %struct.DState, %struct.DState* %1631, i32 0, i32 32
  %arrayidx2291 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2290, i64 0, i64 0
  %1632 = load i32, i32* %arrayidx2291, align 4
  %dec2292 = add nsw i32 %1632, -1
  store i32 %dec2292, i32* %arrayidx2291, align 4
  %1633 = load i8, i8* %uc, align 1
  %1634 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2293 = getelementptr inbounds %struct.DState, %struct.DState* %1634, i32 0, i32 31
  %1635 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2294 = getelementptr inbounds %struct.DState, %struct.DState* %1635, i32 0, i32 32
  %arrayidx2295 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2294, i64 0, i64 0
  %1636 = load i32, i32* %arrayidx2295, align 4
  %idxprom2296 = sext i32 %1636 to i64
  %arrayidx2297 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2293, i64 0, i64 %idxprom2296
  store i8 %1633, i8* %arrayidx2297, align 1
  %1637 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2298 = getelementptr inbounds %struct.DState, %struct.DState* %1637, i32 0, i32 32
  %arrayidx2299 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2298, i64 0, i64 0
  %1638 = load i32, i32* %arrayidx2299, align 4
  %cmp2300 = icmp eq i32 %1638, 0
  br i1 %cmp2300, label %if.then2302, label %if.end2332

if.then2302:                                      ; preds = %while.end2289
  store i32 4095, i32* %kk2170, align 4
  store i32 15, i32* %ii2168, align 4
  br label %for.cond2303

for.cond2303:                                     ; preds = %for.inc2329, %if.then2302
  %1639 = load i32, i32* %ii2168, align 4
  %cmp2304 = icmp sge i32 %1639, 0
  br i1 %cmp2304, label %for.body2306, label %for.end2331

for.body2306:                                     ; preds = %for.cond2303
  store i32 15, i32* %jj2169, align 4
  br label %for.cond2307

for.cond2307:                                     ; preds = %for.inc2322, %for.body2306
  %1640 = load i32, i32* %jj2169, align 4
  %cmp2308 = icmp sge i32 %1640, 0
  br i1 %cmp2308, label %for.body2310, label %for.end2324

for.body2310:                                     ; preds = %for.cond2307
  %1641 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2311 = getelementptr inbounds %struct.DState, %struct.DState* %1641, i32 0, i32 31
  %1642 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2312 = getelementptr inbounds %struct.DState, %struct.DState* %1642, i32 0, i32 32
  %1643 = load i32, i32* %ii2168, align 4
  %idxprom2313 = sext i32 %1643 to i64
  %arrayidx2314 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2312, i64 0, i64 %idxprom2313
  %1644 = load i32, i32* %arrayidx2314, align 4
  %1645 = load i32, i32* %jj2169, align 4
  %add2315 = add nsw i32 %1644, %1645
  %idxprom2316 = sext i32 %add2315 to i64
  %arrayidx2317 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2311, i64 0, i64 %idxprom2316
  %1646 = load i8, i8* %arrayidx2317, align 1
  %1647 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfa2318 = getelementptr inbounds %struct.DState, %struct.DState* %1647, i32 0, i32 31
  %1648 = load i32, i32* %kk2170, align 4
  %idxprom2319 = sext i32 %1648 to i64
  %arrayidx2320 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2318, i64 0, i64 %idxprom2319
  store i8 %1646, i8* %arrayidx2320, align 1
  %1649 = load i32, i32* %kk2170, align 4
  %dec2321 = add nsw i32 %1649, -1
  store i32 %dec2321, i32* %kk2170, align 4
  br label %for.inc2322

for.inc2322:                                      ; preds = %for.body2310
  %1650 = load i32, i32* %jj2169, align 4
  %dec2323 = add nsw i32 %1650, -1
  store i32 %dec2323, i32* %jj2169, align 4
  br label %for.cond2307

for.end2324:                                      ; preds = %for.cond2307
  %1651 = load i32, i32* %kk2170, align 4
  %add2325 = add nsw i32 %1651, 1
  %1652 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %mtfbase2326 = getelementptr inbounds %struct.DState, %struct.DState* %1652, i32 0, i32 32
  %1653 = load i32, i32* %ii2168, align 4
  %idxprom2327 = sext i32 %1653 to i64
  %arrayidx2328 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2326, i64 0, i64 %idxprom2327
  store i32 %add2325, i32* %arrayidx2328, align 4
  br label %for.inc2329

for.inc2329:                                      ; preds = %for.end2324
  %1654 = load i32, i32* %ii2168, align 4
  %dec2330 = add nsw i32 %1654, -1
  store i32 %dec2330, i32* %ii2168, align 4
  br label %for.cond2303

for.end2331:                                      ; preds = %for.cond2303
  br label %if.end2332

if.end2332:                                       ; preds = %for.end2331, %while.end2289
  br label %if.end2333

if.end2333:                                       ; preds = %if.end2332, %while.end2233
  %1655 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %unzftab2334 = getelementptr inbounds %struct.DState, %struct.DState* %1655, i32 0, i32 16
  %1656 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %seqToUnseq2335 = getelementptr inbounds %struct.DState, %struct.DState* %1656, i32 0, i32 30
  %1657 = load i8, i8* %uc, align 1
  %idxprom2336 = zext i8 %1657 to i64
  %arrayidx2337 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2335, i64 0, i64 %idxprom2336
  %1658 = load i8, i8* %arrayidx2337, align 1
  %idxprom2338 = zext i8 %1658 to i64
  %arrayidx2339 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2334, i64 0, i64 %idxprom2338
  %1659 = load i32, i32* %arrayidx2339, align 4
  %inc2340 = add nsw i32 %1659, 1
  store i32 %inc2340, i32* %arrayidx2339, align 4
  %1660 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %smallDecompress2341 = getelementptr inbounds %struct.DState, %struct.DState* %1660, i32 0, i32 10
  %1661 = load i8, i8* %smallDecompress2341, align 4
  %tobool2342 = icmp ne i8 %1661, 0
  br i1 %tobool2342, label %if.then2343, label %if.else2351

if.then2343:                                      ; preds = %if.end2333
  %1662 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %seqToUnseq2344 = getelementptr inbounds %struct.DState, %struct.DState* %1662, i32 0, i32 30
  %1663 = load i8, i8* %uc, align 1
  %idxprom2345 = zext i8 %1663 to i64
  %arrayidx2346 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2344, i64 0, i64 %idxprom2345
  %1664 = load i8, i8* %arrayidx2346, align 1
  %conv2347 = zext i8 %1664 to i16
  %1665 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162348 = getelementptr inbounds %struct.DState, %struct.DState* %1665, i32 0, i32 21
  %1666 = load i16*, i16** %ll162348, align 8
  %1667 = load i32, i32* %nblock, align 4
  %idxprom2349 = sext i32 %1667 to i64
  %arrayidx2350 = getelementptr inbounds i16, i16* %1666, i64 %idxprom2349
  store i16 %conv2347, i16* %arrayidx2350, align 2
  br label %if.end2359

if.else2351:                                      ; preds = %if.end2333
  %1668 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %seqToUnseq2352 = getelementptr inbounds %struct.DState, %struct.DState* %1668, i32 0, i32 30
  %1669 = load i8, i8* %uc, align 1
  %idxprom2353 = zext i8 %1669 to i64
  %arrayidx2354 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2352, i64 0, i64 %idxprom2353
  %1670 = load i8, i8* %arrayidx2354, align 1
  %conv2355 = zext i8 %1670 to i32
  %1671 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2356 = getelementptr inbounds %struct.DState, %struct.DState* %1671, i32 0, i32 20
  %1672 = load i32*, i32** %tt2356, align 8
  %1673 = load i32, i32* %nblock, align 4
  %idxprom2357 = sext i32 %1673 to i64
  %arrayidx2358 = getelementptr inbounds i32, i32* %1672, i64 %idxprom2357
  store i32 %conv2355, i32* %arrayidx2358, align 4
  br label %if.end2359

if.end2359:                                       ; preds = %if.else2351, %if.then2343
  %1674 = load i32, i32* %nblock, align 4
  %inc2360 = add nsw i32 %1674, 1
  store i32 %inc2360, i32* %nblock, align 4
  %1675 = load i32, i32* %groupPos, align 4
  %cmp2361 = icmp eq i32 %1675, 0
  br i1 %cmp2361, label %if.then2363, label %if.end2388

if.then2363:                                      ; preds = %if.end2359
  %1676 = load i32, i32* %groupNo, align 4
  %inc2364 = add nsw i32 %1676, 1
  store i32 %inc2364, i32* %groupNo, align 4
  %1677 = load i32, i32* %groupNo, align 4
  %1678 = load i32, i32* %nSelectors, align 4
  %cmp2365 = icmp sge i32 %1677, %1678
  br i1 %cmp2365, label %if.then2367, label %if.end2368

if.then2367:                                      ; preds = %if.then2363
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2368:                                       ; preds = %if.then2363
  store i32 50, i32* %groupPos, align 4
  %1679 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %selector2369 = getelementptr inbounds %struct.DState, %struct.DState* %1679, i32 0, i32 33
  %1680 = load i32, i32* %groupNo, align 4
  %idxprom2370 = sext i32 %1680 to i64
  %arrayidx2371 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2369, i64 0, i64 %idxprom2370
  %1681 = load i8, i8* %arrayidx2371, align 1
  %conv2372 = zext i8 %1681 to i32
  store i32 %conv2372, i32* %gSel, align 4
  %1682 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %minLens2373 = getelementptr inbounds %struct.DState, %struct.DState* %1682, i32 0, i32 39
  %1683 = load i32, i32* %gSel, align 4
  %idxprom2374 = sext i32 %1683 to i64
  %arrayidx2375 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens2373, i64 0, i64 %idxprom2374
  %1684 = load i32, i32* %arrayidx2375, align 4
  store i32 %1684, i32* %gMinlen, align 4
  %1685 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %limit2376 = getelementptr inbounds %struct.DState, %struct.DState* %1685, i32 0, i32 36
  %1686 = load i32, i32* %gSel, align 4
  %idxprom2377 = sext i32 %1686 to i64
  %arrayidx2378 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit2376, i64 0, i64 %idxprom2377
  %arrayidx2379 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2378, i64 0, i64 0
  store i32* %arrayidx2379, i32** %gLimit, align 8
  %1687 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %perm2380 = getelementptr inbounds %struct.DState, %struct.DState* %1687, i32 0, i32 38
  %1688 = load i32, i32* %gSel, align 4
  %idxprom2381 = sext i32 %1688 to i64
  %arrayidx2382 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm2380, i64 0, i64 %idxprom2381
  %arrayidx2383 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2382, i64 0, i64 0
  store i32* %arrayidx2383, i32** %gPerm, align 8
  %1689 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %base2384 = getelementptr inbounds %struct.DState, %struct.DState* %1689, i32 0, i32 37
  %1690 = load i32, i32* %gSel, align 4
  %idxprom2385 = sext i32 %1690 to i64
  %arrayidx2386 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base2384, i64 0, i64 %idxprom2385
  %arrayidx2387 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2386, i64 0, i64 0
  store i32* %arrayidx2387, i32** %gBase, align 8
  br label %if.end2388

if.end2388:                                       ; preds = %if.end2368, %if.end2359
  %1691 = load i32, i32* %groupPos, align 4
  %dec2389 = add nsw i32 %1691, -1
  store i32 %dec2389, i32* %groupPos, align 4
  %1692 = load i32, i32* %gMinlen, align 4
  store i32 %1692, i32* %zn, align 4
  br label %sw.bb2390

sw.bb2390:                                        ; preds = %if.end2388, %if.end
  %1693 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2391 = getelementptr inbounds %struct.DState, %struct.DState* %1693, i32 0, i32 1
  store i32 40, i32* %state2391, align 8
  br label %while.body2393

while.body2393:                                   ; preds = %if.end2441, %sw.bb2390
  %1694 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2394 = getelementptr inbounds %struct.DState, %struct.DState* %1694, i32 0, i32 8
  %1695 = load i32, i32* %bsLive2394, align 4
  %1696 = load i32, i32* %zn, align 4
  %cmp2395 = icmp sge i32 %1695, %1696
  br i1 %cmp2395, label %if.then2397, label %if.end2408

if.then2397:                                      ; preds = %while.body2393
  %1697 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2399 = getelementptr inbounds %struct.DState, %struct.DState* %1697, i32 0, i32 7
  %1698 = load i32, i32* %bsBuff2399, align 8
  %1699 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2400 = getelementptr inbounds %struct.DState, %struct.DState* %1699, i32 0, i32 8
  %1700 = load i32, i32* %bsLive2400, align 4
  %1701 = load i32, i32* %zn, align 4
  %sub2401 = sub nsw i32 %1700, %1701
  %shr2402 = lshr i32 %1698, %sub2401
  %1702 = load i32, i32* %zn, align 4
  %shl2403 = shl i32 1, %1702
  %sub2404 = sub nsw i32 %shl2403, 1
  %and2405 = and i32 %shr2402, %sub2404
  store i32 %and2405, i32* %v2398, align 4
  %1703 = load i32, i32* %zn, align 4
  %1704 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2406 = getelementptr inbounds %struct.DState, %struct.DState* %1704, i32 0, i32 8
  %1705 = load i32, i32* %bsLive2406, align 4
  %sub2407 = sub nsw i32 %1705, %1703
  store i32 %sub2407, i32* %bsLive2406, align 4
  %1706 = load i32, i32* %v2398, align 4
  store i32 %1706, i32* %zvec, align 4
  br label %while.end2442

if.end2408:                                       ; preds = %while.body2393
  %1707 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2409 = getelementptr inbounds %struct.DState, %struct.DState* %1707, i32 0, i32 0
  %1708 = load %struct.bz_stream*, %struct.bz_stream** %strm2409, align 8
  %avail_in2410 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1708, i32 0, i32 1
  %1709 = load i32, i32* %avail_in2410, align 8
  %cmp2411 = icmp eq i32 %1709, 0
  br i1 %cmp2411, label %if.then2413, label %if.end2414

if.then2413:                                      ; preds = %if.end2408
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end2414:                                       ; preds = %if.end2408
  %1710 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2415 = getelementptr inbounds %struct.DState, %struct.DState* %1710, i32 0, i32 7
  %1711 = load i32, i32* %bsBuff2415, align 8
  %shl2416 = shl i32 %1711, 8
  %1712 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2417 = getelementptr inbounds %struct.DState, %struct.DState* %1712, i32 0, i32 0
  %1713 = load %struct.bz_stream*, %struct.bz_stream** %strm2417, align 8
  %next_in2418 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1713, i32 0, i32 0
  %1714 = load i8*, i8** %next_in2418, align 8
  %1715 = load i8, i8* %1714, align 1
  %conv2419 = zext i8 %1715 to i32
  %or2420 = or i32 %shl2416, %conv2419
  %1716 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2421 = getelementptr inbounds %struct.DState, %struct.DState* %1716, i32 0, i32 7
  store i32 %or2420, i32* %bsBuff2421, align 8
  %1717 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2422 = getelementptr inbounds %struct.DState, %struct.DState* %1717, i32 0, i32 8
  %1718 = load i32, i32* %bsLive2422, align 4
  %add2423 = add nsw i32 %1718, 8
  store i32 %add2423, i32* %bsLive2422, align 4
  %1719 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2424 = getelementptr inbounds %struct.DState, %struct.DState* %1719, i32 0, i32 0
  %1720 = load %struct.bz_stream*, %struct.bz_stream** %strm2424, align 8
  %next_in2425 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1720, i32 0, i32 0
  %1721 = load i8*, i8** %next_in2425, align 8
  %incdec.ptr2426 = getelementptr inbounds i8, i8* %1721, i32 1
  store i8* %incdec.ptr2426, i8** %next_in2425, align 8
  %1722 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2427 = getelementptr inbounds %struct.DState, %struct.DState* %1722, i32 0, i32 0
  %1723 = load %struct.bz_stream*, %struct.bz_stream** %strm2427, align 8
  %avail_in2428 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1723, i32 0, i32 1
  %1724 = load i32, i32* %avail_in2428, align 8
  %dec2429 = add i32 %1724, -1
  store i32 %dec2429, i32* %avail_in2428, align 8
  %1725 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2430 = getelementptr inbounds %struct.DState, %struct.DState* %1725, i32 0, i32 0
  %1726 = load %struct.bz_stream*, %struct.bz_stream** %strm2430, align 8
  %total_in_lo322431 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1726, i32 0, i32 2
  %1727 = load i32, i32* %total_in_lo322431, align 4
  %inc2432 = add i32 %1727, 1
  store i32 %inc2432, i32* %total_in_lo322431, align 4
  %1728 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2433 = getelementptr inbounds %struct.DState, %struct.DState* %1728, i32 0, i32 0
  %1729 = load %struct.bz_stream*, %struct.bz_stream** %strm2433, align 8
  %total_in_lo322434 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1729, i32 0, i32 2
  %1730 = load i32, i32* %total_in_lo322434, align 4
  %cmp2435 = icmp eq i32 %1730, 0
  br i1 %cmp2435, label %if.then2437, label %if.end2441

if.then2437:                                      ; preds = %if.end2414
  %1731 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2438 = getelementptr inbounds %struct.DState, %struct.DState* %1731, i32 0, i32 0
  %1732 = load %struct.bz_stream*, %struct.bz_stream** %strm2438, align 8
  %total_in_hi322439 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1732, i32 0, i32 3
  %1733 = load i32, i32* %total_in_hi322439, align 8
  %inc2440 = add i32 %1733, 1
  store i32 %inc2440, i32* %total_in_hi322439, align 8
  br label %if.end2441

if.end2441:                                       ; preds = %if.then2437, %if.end2414
  br label %while.body2393

while.end2442:                                    ; preds = %if.then2397
  br label %while.body2444

while.body2444:                                   ; preds = %while.end2506, %while.end2442
  %1734 = load i32, i32* %zn, align 4
  %cmp2445 = icmp sgt i32 %1734, 20
  br i1 %cmp2445, label %if.then2447, label %if.end2448

if.then2447:                                      ; preds = %while.body2444
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2448:                                       ; preds = %while.body2444
  %1735 = load i32, i32* %zvec, align 4
  %1736 = load i32*, i32** %gLimit, align 8
  %1737 = load i32, i32* %zn, align 4
  %idxprom2449 = sext i32 %1737 to i64
  %arrayidx2450 = getelementptr inbounds i32, i32* %1736, i64 %idxprom2449
  %1738 = load i32, i32* %arrayidx2450, align 4
  %cmp2451 = icmp sle i32 %1735, %1738
  br i1 %cmp2451, label %if.then2453, label %if.end2454

if.then2453:                                      ; preds = %if.end2448
  br label %while.end2509

if.end2454:                                       ; preds = %if.end2448
  %1739 = load i32, i32* %zn, align 4
  %inc2455 = add nsw i32 %1739, 1
  store i32 %inc2455, i32* %zn, align 4
  br label %sw.bb2456

sw.bb2456:                                        ; preds = %if.end2454, %if.end
  %1740 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2457 = getelementptr inbounds %struct.DState, %struct.DState* %1740, i32 0, i32 1
  store i32 41, i32* %state2457, align 8
  br label %while.body2459

while.body2459:                                   ; preds = %if.end2505, %sw.bb2456
  %1741 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2460 = getelementptr inbounds %struct.DState, %struct.DState* %1741, i32 0, i32 8
  %1742 = load i32, i32* %bsLive2460, align 4
  %cmp2461 = icmp sge i32 %1742, 1
  br i1 %cmp2461, label %if.then2463, label %if.end2472

if.then2463:                                      ; preds = %while.body2459
  %1743 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2465 = getelementptr inbounds %struct.DState, %struct.DState* %1743, i32 0, i32 7
  %1744 = load i32, i32* %bsBuff2465, align 8
  %1745 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2466 = getelementptr inbounds %struct.DState, %struct.DState* %1745, i32 0, i32 8
  %1746 = load i32, i32* %bsLive2466, align 4
  %sub2467 = sub nsw i32 %1746, 1
  %shr2468 = lshr i32 %1744, %sub2467
  %and2469 = and i32 %shr2468, 1
  store i32 %and2469, i32* %v2464, align 4
  %1747 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2470 = getelementptr inbounds %struct.DState, %struct.DState* %1747, i32 0, i32 8
  %1748 = load i32, i32* %bsLive2470, align 4
  %sub2471 = sub nsw i32 %1748, 1
  store i32 %sub2471, i32* %bsLive2470, align 4
  %1749 = load i32, i32* %v2464, align 4
  store i32 %1749, i32* %zj, align 4
  br label %while.end2506

if.end2472:                                       ; preds = %while.body2459
  %1750 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2473 = getelementptr inbounds %struct.DState, %struct.DState* %1750, i32 0, i32 0
  %1751 = load %struct.bz_stream*, %struct.bz_stream** %strm2473, align 8
  %avail_in2474 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1751, i32 0, i32 1
  %1752 = load i32, i32* %avail_in2474, align 8
  %cmp2475 = icmp eq i32 %1752, 0
  br i1 %cmp2475, label %if.then2477, label %if.end2478

if.then2477:                                      ; preds = %if.end2472
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end2478:                                       ; preds = %if.end2472
  %1753 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2479 = getelementptr inbounds %struct.DState, %struct.DState* %1753, i32 0, i32 7
  %1754 = load i32, i32* %bsBuff2479, align 8
  %shl2480 = shl i32 %1754, 8
  %1755 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2481 = getelementptr inbounds %struct.DState, %struct.DState* %1755, i32 0, i32 0
  %1756 = load %struct.bz_stream*, %struct.bz_stream** %strm2481, align 8
  %next_in2482 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1756, i32 0, i32 0
  %1757 = load i8*, i8** %next_in2482, align 8
  %1758 = load i8, i8* %1757, align 1
  %conv2483 = zext i8 %1758 to i32
  %or2484 = or i32 %shl2480, %conv2483
  %1759 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2485 = getelementptr inbounds %struct.DState, %struct.DState* %1759, i32 0, i32 7
  store i32 %or2484, i32* %bsBuff2485, align 8
  %1760 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2486 = getelementptr inbounds %struct.DState, %struct.DState* %1760, i32 0, i32 8
  %1761 = load i32, i32* %bsLive2486, align 4
  %add2487 = add nsw i32 %1761, 8
  store i32 %add2487, i32* %bsLive2486, align 4
  %1762 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2488 = getelementptr inbounds %struct.DState, %struct.DState* %1762, i32 0, i32 0
  %1763 = load %struct.bz_stream*, %struct.bz_stream** %strm2488, align 8
  %next_in2489 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1763, i32 0, i32 0
  %1764 = load i8*, i8** %next_in2489, align 8
  %incdec.ptr2490 = getelementptr inbounds i8, i8* %1764, i32 1
  store i8* %incdec.ptr2490, i8** %next_in2489, align 8
  %1765 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2491 = getelementptr inbounds %struct.DState, %struct.DState* %1765, i32 0, i32 0
  %1766 = load %struct.bz_stream*, %struct.bz_stream** %strm2491, align 8
  %avail_in2492 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1766, i32 0, i32 1
  %1767 = load i32, i32* %avail_in2492, align 8
  %dec2493 = add i32 %1767, -1
  store i32 %dec2493, i32* %avail_in2492, align 8
  %1768 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2494 = getelementptr inbounds %struct.DState, %struct.DState* %1768, i32 0, i32 0
  %1769 = load %struct.bz_stream*, %struct.bz_stream** %strm2494, align 8
  %total_in_lo322495 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1769, i32 0, i32 2
  %1770 = load i32, i32* %total_in_lo322495, align 4
  %inc2496 = add i32 %1770, 1
  store i32 %inc2496, i32* %total_in_lo322495, align 4
  %1771 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2497 = getelementptr inbounds %struct.DState, %struct.DState* %1771, i32 0, i32 0
  %1772 = load %struct.bz_stream*, %struct.bz_stream** %strm2497, align 8
  %total_in_lo322498 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1772, i32 0, i32 2
  %1773 = load i32, i32* %total_in_lo322498, align 4
  %cmp2499 = icmp eq i32 %1773, 0
  br i1 %cmp2499, label %if.then2501, label %if.end2505

if.then2501:                                      ; preds = %if.end2478
  %1774 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2502 = getelementptr inbounds %struct.DState, %struct.DState* %1774, i32 0, i32 0
  %1775 = load %struct.bz_stream*, %struct.bz_stream** %strm2502, align 8
  %total_in_hi322503 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1775, i32 0, i32 3
  %1776 = load i32, i32* %total_in_hi322503, align 8
  %inc2504 = add i32 %1776, 1
  store i32 %inc2504, i32* %total_in_hi322503, align 8
  br label %if.end2505

if.end2505:                                       ; preds = %if.then2501, %if.end2478
  br label %while.body2459

while.end2506:                                    ; preds = %if.then2463
  %1777 = load i32, i32* %zvec, align 4
  %shl2507 = shl i32 %1777, 1
  %1778 = load i32, i32* %zj, align 4
  %or2508 = or i32 %shl2507, %1778
  store i32 %or2508, i32* %zvec, align 4
  br label %while.body2444

while.end2509:                                    ; preds = %if.then2453
  %1779 = load i32, i32* %zvec, align 4
  %1780 = load i32*, i32** %gBase, align 8
  %1781 = load i32, i32* %zn, align 4
  %idxprom2510 = sext i32 %1781 to i64
  %arrayidx2511 = getelementptr inbounds i32, i32* %1780, i64 %idxprom2510
  %1782 = load i32, i32* %arrayidx2511, align 4
  %sub2512 = sub nsw i32 %1779, %1782
  %cmp2513 = icmp slt i32 %sub2512, 0
  br i1 %cmp2513, label %if.then2521, label %lor.lhs.false2515

lor.lhs.false2515:                                ; preds = %while.end2509
  %1783 = load i32, i32* %zvec, align 4
  %1784 = load i32*, i32** %gBase, align 8
  %1785 = load i32, i32* %zn, align 4
  %idxprom2516 = sext i32 %1785 to i64
  %arrayidx2517 = getelementptr inbounds i32, i32* %1784, i64 %idxprom2516
  %1786 = load i32, i32* %arrayidx2517, align 4
  %sub2518 = sub nsw i32 %1783, %1786
  %cmp2519 = icmp sge i32 %sub2518, 258
  br i1 %cmp2519, label %if.then2521, label %if.end2522

if.then2521:                                      ; preds = %lor.lhs.false2515, %while.end2509
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2522:                                       ; preds = %lor.lhs.false2515
  %1787 = load i32*, i32** %gPerm, align 8
  %1788 = load i32, i32* %zvec, align 4
  %1789 = load i32*, i32** %gBase, align 8
  %1790 = load i32, i32* %zn, align 4
  %idxprom2523 = sext i32 %1790 to i64
  %arrayidx2524 = getelementptr inbounds i32, i32* %1789, i64 %idxprom2523
  %1791 = load i32, i32* %arrayidx2524, align 4
  %sub2525 = sub nsw i32 %1788, %1791
  %idxprom2526 = sext i32 %sub2525 to i64
  %arrayidx2527 = getelementptr inbounds i32, i32* %1787, i64 %idxprom2526
  %1792 = load i32, i32* %arrayidx2527, align 4
  store i32 %1792, i32* %nextSym, align 4
  br label %while.body1920

while.end2528:                                    ; preds = %if.then1923
  %1793 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2529 = getelementptr inbounds %struct.DState, %struct.DState* %1793, i32 0, i32 13
  %1794 = load i32, i32* %origPtr2529, align 8
  %cmp2530 = icmp slt i32 %1794, 0
  br i1 %cmp2530, label %if.then2536, label %lor.lhs.false2532

lor.lhs.false2532:                                ; preds = %while.end2528
  %1795 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2533 = getelementptr inbounds %struct.DState, %struct.DState* %1795, i32 0, i32 13
  %1796 = load i32, i32* %origPtr2533, align 8
  %1797 = load i32, i32* %nblock, align 4
  %cmp2534 = icmp sge i32 %1796, %1797
  br i1 %cmp2534, label %if.then2536, label %if.end2537

if.then2536:                                      ; preds = %lor.lhs.false2532, %while.end2528
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2537:                                       ; preds = %lor.lhs.false2532
  %1798 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab = getelementptr inbounds %struct.DState, %struct.DState* %1798, i32 0, i32 18
  %arrayidx2538 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab, i64 0, i64 0
  store i32 0, i32* %arrayidx2538, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond2539

for.cond2539:                                     ; preds = %for.inc2550, %if.end2537
  %1799 = load i32, i32* %i, align 4
  %cmp2540 = icmp sle i32 %1799, 256
  br i1 %cmp2540, label %for.body2542, label %for.end2552

for.body2542:                                     ; preds = %for.cond2539
  %1800 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %unzftab2543 = getelementptr inbounds %struct.DState, %struct.DState* %1800, i32 0, i32 16
  %1801 = load i32, i32* %i, align 4
  %sub2544 = sub nsw i32 %1801, 1
  %idxprom2545 = sext i32 %sub2544 to i64
  %arrayidx2546 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2543, i64 0, i64 %idxprom2545
  %1802 = load i32, i32* %arrayidx2546, align 4
  %1803 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2547 = getelementptr inbounds %struct.DState, %struct.DState* %1803, i32 0, i32 18
  %1804 = load i32, i32* %i, align 4
  %idxprom2548 = sext i32 %1804 to i64
  %arrayidx2549 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2547, i64 0, i64 %idxprom2548
  store i32 %1802, i32* %arrayidx2549, align 4
  br label %for.inc2550

for.inc2550:                                      ; preds = %for.body2542
  %1805 = load i32, i32* %i, align 4
  %inc2551 = add nsw i32 %1805, 1
  store i32 %inc2551, i32* %i, align 4
  br label %for.cond2539

for.end2552:                                      ; preds = %for.cond2539
  store i32 1, i32* %i, align 4
  br label %for.cond2553

for.cond2553:                                     ; preds = %for.inc2565, %for.end2552
  %1806 = load i32, i32* %i, align 4
  %cmp2554 = icmp sle i32 %1806, 256
  br i1 %cmp2554, label %for.body2556, label %for.end2567

for.body2556:                                     ; preds = %for.cond2553
  %1807 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2557 = getelementptr inbounds %struct.DState, %struct.DState* %1807, i32 0, i32 18
  %1808 = load i32, i32* %i, align 4
  %sub2558 = sub nsw i32 %1808, 1
  %idxprom2559 = sext i32 %sub2558 to i64
  %arrayidx2560 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2557, i64 0, i64 %idxprom2559
  %1809 = load i32, i32* %arrayidx2560, align 4
  %1810 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2561 = getelementptr inbounds %struct.DState, %struct.DState* %1810, i32 0, i32 18
  %1811 = load i32, i32* %i, align 4
  %idxprom2562 = sext i32 %1811 to i64
  %arrayidx2563 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2561, i64 0, i64 %idxprom2562
  %1812 = load i32, i32* %arrayidx2563, align 4
  %add2564 = add nsw i32 %1812, %1809
  store i32 %add2564, i32* %arrayidx2563, align 4
  br label %for.inc2565

for.inc2565:                                      ; preds = %for.body2556
  %1813 = load i32, i32* %i, align 4
  %inc2566 = add nsw i32 %1813, 1
  store i32 %inc2566, i32* %i, align 4
  br label %for.cond2553

for.end2567:                                      ; preds = %for.cond2553
  store i32 0, i32* %i, align 4
  br label %for.cond2568

for.cond2568:                                     ; preds = %for.inc2585, %for.end2567
  %1814 = load i32, i32* %i, align 4
  %cmp2569 = icmp sle i32 %1814, 256
  br i1 %cmp2569, label %for.body2571, label %for.end2587

for.body2571:                                     ; preds = %for.cond2568
  %1815 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2572 = getelementptr inbounds %struct.DState, %struct.DState* %1815, i32 0, i32 18
  %1816 = load i32, i32* %i, align 4
  %idxprom2573 = sext i32 %1816 to i64
  %arrayidx2574 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2572, i64 0, i64 %idxprom2573
  %1817 = load i32, i32* %arrayidx2574, align 4
  %cmp2575 = icmp slt i32 %1817, 0
  br i1 %cmp2575, label %if.then2583, label %lor.lhs.false2577

lor.lhs.false2577:                                ; preds = %for.body2571
  %1818 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2578 = getelementptr inbounds %struct.DState, %struct.DState* %1818, i32 0, i32 18
  %1819 = load i32, i32* %i, align 4
  %idxprom2579 = sext i32 %1819 to i64
  %arrayidx2580 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2578, i64 0, i64 %idxprom2579
  %1820 = load i32, i32* %arrayidx2580, align 4
  %1821 = load i32, i32* %nblock, align 4
  %cmp2581 = icmp sgt i32 %1820, %1821
  br i1 %cmp2581, label %if.then2583, label %if.end2584

if.then2583:                                      ; preds = %lor.lhs.false2577, %for.body2571
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2584:                                       ; preds = %lor.lhs.false2577
  br label %for.inc2585

for.inc2585:                                      ; preds = %if.end2584
  %1822 = load i32, i32* %i, align 4
  %inc2586 = add nsw i32 %1822, 1
  store i32 %inc2586, i32* %i, align 4
  br label %for.cond2568

for.end2587:                                      ; preds = %for.cond2568
  %1823 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %1823, i32 0, i32 3
  store i32 0, i32* %state_out_len, align 8
  %1824 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %1824, i32 0, i32 2
  store i8 0, i8* %state_out_ch, align 4
  %1825 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %1825, i32 0, i32 25
  store i32 -1, i32* %calculatedBlockCRC, align 8
  %1826 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2588 = getelementptr inbounds %struct.DState, %struct.DState* %1826, i32 0, i32 1
  store i32 2, i32* %state2588, align 8
  %1827 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %verbosity2589 = getelementptr inbounds %struct.DState, %struct.DState* %1827, i32 0, i32 12
  %1828 = load i32, i32* %verbosity2589, align 4
  %cmp2590 = icmp sge i32 %1828, 2
  br i1 %cmp2590, label %if.then2592, label %if.end2594

if.then2592:                                      ; preds = %for.end2587
  %1829 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call2593 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1829, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.159, i64 0, i64 0))
  br label %if.end2594

if.end2594:                                       ; preds = %if.then2592, %for.end2587
  %1830 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %smallDecompress2595 = getelementptr inbounds %struct.DState, %struct.DState* %1830, i32 0, i32 10
  %1831 = load i8, i8* %smallDecompress2595, align 4
  %tobool2596 = icmp ne i8 %1831, 0
  br i1 %tobool2596, label %if.then2597, label %if.else2827

if.then2597:                                      ; preds = %if.end2594
  store i32 0, i32* %i, align 4
  br label %for.cond2598

for.cond2598:                                     ; preds = %for.inc2607, %if.then2597
  %1832 = load i32, i32* %i, align 4
  %cmp2599 = icmp sle i32 %1832, 256
  br i1 %cmp2599, label %for.body2601, label %for.end2609

for.body2601:                                     ; preds = %for.cond2598
  %1833 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2602 = getelementptr inbounds %struct.DState, %struct.DState* %1833, i32 0, i32 18
  %1834 = load i32, i32* %i, align 4
  %idxprom2603 = sext i32 %1834 to i64
  %arrayidx2604 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2602, i64 0, i64 %idxprom2603
  %1835 = load i32, i32* %arrayidx2604, align 4
  %1836 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftabCopy = getelementptr inbounds %struct.DState, %struct.DState* %1836, i32 0, i32 19
  %1837 = load i32, i32* %i, align 4
  %idxprom2605 = sext i32 %1837 to i64
  %arrayidx2606 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy, i64 0, i64 %idxprom2605
  store i32 %1835, i32* %arrayidx2606, align 4
  br label %for.inc2607

for.inc2607:                                      ; preds = %for.body2601
  %1838 = load i32, i32* %i, align 4
  %inc2608 = add nsw i32 %1838, 1
  store i32 %inc2608, i32* %i, align 4
  br label %for.cond2598

for.end2609:                                      ; preds = %for.cond2598
  store i32 0, i32* %i, align 4
  br label %for.cond2610

for.cond2610:                                     ; preds = %for.inc2669, %for.end2609
  %1839 = load i32, i32* %i, align 4
  %1840 = load i32, i32* %nblock, align 4
  %cmp2611 = icmp slt i32 %1839, %1840
  br i1 %cmp2611, label %for.body2613, label %for.end2671

for.body2613:                                     ; preds = %for.cond2610
  %1841 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162614 = getelementptr inbounds %struct.DState, %struct.DState* %1841, i32 0, i32 21
  %1842 = load i16*, i16** %ll162614, align 8
  %1843 = load i32, i32* %i, align 4
  %idxprom2615 = sext i32 %1843 to i64
  %arrayidx2616 = getelementptr inbounds i16, i16* %1842, i64 %idxprom2615
  %1844 = load i16, i16* %arrayidx2616, align 2
  %conv2617 = trunc i16 %1844 to i8
  store i8 %conv2617, i8* %uc, align 1
  %1845 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftabCopy2618 = getelementptr inbounds %struct.DState, %struct.DState* %1845, i32 0, i32 19
  %1846 = load i8, i8* %uc, align 1
  %idxprom2619 = zext i8 %1846 to i64
  %arrayidx2620 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2618, i64 0, i64 %idxprom2619
  %1847 = load i32, i32* %arrayidx2620, align 4
  %and2621 = and i32 %1847, 65535
  %conv2622 = trunc i32 %and2621 to i16
  %1848 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162623 = getelementptr inbounds %struct.DState, %struct.DState* %1848, i32 0, i32 21
  %1849 = load i16*, i16** %ll162623, align 8
  %1850 = load i32, i32* %i, align 4
  %idxprom2624 = sext i32 %1850 to i64
  %arrayidx2625 = getelementptr inbounds i16, i16* %1849, i64 %idxprom2624
  store i16 %conv2622, i16* %arrayidx2625, align 2
  %1851 = load i32, i32* %i, align 4
  %and2626 = and i32 %1851, 1
  %cmp2627 = icmp eq i32 %and2626, 0
  br i1 %cmp2627, label %if.then2629, label %if.else2646

if.then2629:                                      ; preds = %for.body2613
  %1852 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42630 = getelementptr inbounds %struct.DState, %struct.DState* %1852, i32 0, i32 22
  %1853 = load i8*, i8** %ll42630, align 8
  %1854 = load i32, i32* %i, align 4
  %shr2631 = ashr i32 %1854, 1
  %idxprom2632 = sext i32 %shr2631 to i64
  %arrayidx2633 = getelementptr inbounds i8, i8* %1853, i64 %idxprom2632
  %1855 = load i8, i8* %arrayidx2633, align 1
  %conv2634 = zext i8 %1855 to i32
  %and2635 = and i32 %conv2634, 240
  %1856 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftabCopy2636 = getelementptr inbounds %struct.DState, %struct.DState* %1856, i32 0, i32 19
  %1857 = load i8, i8* %uc, align 1
  %idxprom2637 = zext i8 %1857 to i64
  %arrayidx2638 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2636, i64 0, i64 %idxprom2637
  %1858 = load i32, i32* %arrayidx2638, align 4
  %shr2639 = ashr i32 %1858, 16
  %or2640 = or i32 %and2635, %shr2639
  %conv2641 = trunc i32 %or2640 to i8
  %1859 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42642 = getelementptr inbounds %struct.DState, %struct.DState* %1859, i32 0, i32 22
  %1860 = load i8*, i8** %ll42642, align 8
  %1861 = load i32, i32* %i, align 4
  %shr2643 = ashr i32 %1861, 1
  %idxprom2644 = sext i32 %shr2643 to i64
  %arrayidx2645 = getelementptr inbounds i8, i8* %1860, i64 %idxprom2644
  store i8 %conv2641, i8* %arrayidx2645, align 1
  br label %if.end2664

if.else2646:                                      ; preds = %for.body2613
  %1862 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42647 = getelementptr inbounds %struct.DState, %struct.DState* %1862, i32 0, i32 22
  %1863 = load i8*, i8** %ll42647, align 8
  %1864 = load i32, i32* %i, align 4
  %shr2648 = ashr i32 %1864, 1
  %idxprom2649 = sext i32 %shr2648 to i64
  %arrayidx2650 = getelementptr inbounds i8, i8* %1863, i64 %idxprom2649
  %1865 = load i8, i8* %arrayidx2650, align 1
  %conv2651 = zext i8 %1865 to i32
  %and2652 = and i32 %conv2651, 15
  %1866 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftabCopy2653 = getelementptr inbounds %struct.DState, %struct.DState* %1866, i32 0, i32 19
  %1867 = load i8, i8* %uc, align 1
  %idxprom2654 = zext i8 %1867 to i64
  %arrayidx2655 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2653, i64 0, i64 %idxprom2654
  %1868 = load i32, i32* %arrayidx2655, align 4
  %shr2656 = ashr i32 %1868, 16
  %shl2657 = shl i32 %shr2656, 4
  %or2658 = or i32 %and2652, %shl2657
  %conv2659 = trunc i32 %or2658 to i8
  %1869 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42660 = getelementptr inbounds %struct.DState, %struct.DState* %1869, i32 0, i32 22
  %1870 = load i8*, i8** %ll42660, align 8
  %1871 = load i32, i32* %i, align 4
  %shr2661 = ashr i32 %1871, 1
  %idxprom2662 = sext i32 %shr2661 to i64
  %arrayidx2663 = getelementptr inbounds i8, i8* %1870, i64 %idxprom2662
  store i8 %conv2659, i8* %arrayidx2663, align 1
  br label %if.end2664

if.end2664:                                       ; preds = %if.else2646, %if.then2629
  %1872 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftabCopy2665 = getelementptr inbounds %struct.DState, %struct.DState* %1872, i32 0, i32 19
  %1873 = load i8, i8* %uc, align 1
  %idxprom2666 = zext i8 %1873 to i64
  %arrayidx2667 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2665, i64 0, i64 %idxprom2666
  %1874 = load i32, i32* %arrayidx2667, align 4
  %inc2668 = add nsw i32 %1874, 1
  store i32 %inc2668, i32* %arrayidx2667, align 4
  br label %for.inc2669

for.inc2669:                                      ; preds = %if.end2664
  %1875 = load i32, i32* %i, align 4
  %inc2670 = add nsw i32 %1875, 1
  store i32 %inc2670, i32* %i, align 4
  br label %for.cond2610

for.end2671:                                      ; preds = %for.cond2610
  %1876 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2672 = getelementptr inbounds %struct.DState, %struct.DState* %1876, i32 0, i32 13
  %1877 = load i32, i32* %origPtr2672, align 8
  store i32 %1877, i32* %i, align 4
  %1878 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162673 = getelementptr inbounds %struct.DState, %struct.DState* %1878, i32 0, i32 21
  %1879 = load i16*, i16** %ll162673, align 8
  %1880 = load i32, i32* %i, align 4
  %idxprom2674 = sext i32 %1880 to i64
  %arrayidx2675 = getelementptr inbounds i16, i16* %1879, i64 %idxprom2674
  %1881 = load i16, i16* %arrayidx2675, align 2
  %conv2676 = zext i16 %1881 to i32
  %1882 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42677 = getelementptr inbounds %struct.DState, %struct.DState* %1882, i32 0, i32 22
  %1883 = load i8*, i8** %ll42677, align 8
  %1884 = load i32, i32* %i, align 4
  %shr2678 = ashr i32 %1884, 1
  %idxprom2679 = sext i32 %shr2678 to i64
  %arrayidx2680 = getelementptr inbounds i8, i8* %1883, i64 %idxprom2679
  %1885 = load i8, i8* %arrayidx2680, align 1
  %conv2681 = zext i8 %1885 to i32
  %1886 = load i32, i32* %i, align 4
  %shl2682 = shl i32 %1886, 2
  %and2683 = and i32 %shl2682, 4
  %shr2684 = lshr i32 %conv2681, %and2683
  %and2685 = and i32 %shr2684, 15
  %shl2686 = shl i32 %and2685, 16
  %or2687 = or i32 %conv2676, %shl2686
  store i32 %or2687, i32* %j, align 4
  br label %do.body2688

do.body2688:                                      ; preds = %do.cond2743, %for.end2671
  %1887 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162690 = getelementptr inbounds %struct.DState, %struct.DState* %1887, i32 0, i32 21
  %1888 = load i16*, i16** %ll162690, align 8
  %1889 = load i32, i32* %j, align 4
  %idxprom2691 = sext i32 %1889 to i64
  %arrayidx2692 = getelementptr inbounds i16, i16* %1888, i64 %idxprom2691
  %1890 = load i16, i16* %arrayidx2692, align 2
  %conv2693 = zext i16 %1890 to i32
  %1891 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42694 = getelementptr inbounds %struct.DState, %struct.DState* %1891, i32 0, i32 22
  %1892 = load i8*, i8** %ll42694, align 8
  %1893 = load i32, i32* %j, align 4
  %shr2695 = ashr i32 %1893, 1
  %idxprom2696 = sext i32 %shr2695 to i64
  %arrayidx2697 = getelementptr inbounds i8, i8* %1892, i64 %idxprom2696
  %1894 = load i8, i8* %arrayidx2697, align 1
  %conv2698 = zext i8 %1894 to i32
  %1895 = load i32, i32* %j, align 4
  %shl2699 = shl i32 %1895, 2
  %and2700 = and i32 %shl2699, 4
  %shr2701 = lshr i32 %conv2698, %and2700
  %and2702 = and i32 %shr2701, 15
  %shl2703 = shl i32 %and2702, 16
  %or2704 = or i32 %conv2693, %shl2703
  store i32 %or2704, i32* %tmp2689, align 4
  %1896 = load i32, i32* %i, align 4
  %and2705 = and i32 %1896, 65535
  %conv2706 = trunc i32 %and2705 to i16
  %1897 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162707 = getelementptr inbounds %struct.DState, %struct.DState* %1897, i32 0, i32 21
  %1898 = load i16*, i16** %ll162707, align 8
  %1899 = load i32, i32* %j, align 4
  %idxprom2708 = sext i32 %1899 to i64
  %arrayidx2709 = getelementptr inbounds i16, i16* %1898, i64 %idxprom2708
  store i16 %conv2706, i16* %arrayidx2709, align 2
  %1900 = load i32, i32* %j, align 4
  %and2710 = and i32 %1900, 1
  %cmp2711 = icmp eq i32 %and2710, 0
  br i1 %cmp2711, label %if.then2713, label %if.else2727

if.then2713:                                      ; preds = %do.body2688
  %1901 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42714 = getelementptr inbounds %struct.DState, %struct.DState* %1901, i32 0, i32 22
  %1902 = load i8*, i8** %ll42714, align 8
  %1903 = load i32, i32* %j, align 4
  %shr2715 = ashr i32 %1903, 1
  %idxprom2716 = sext i32 %shr2715 to i64
  %arrayidx2717 = getelementptr inbounds i8, i8* %1902, i64 %idxprom2716
  %1904 = load i8, i8* %arrayidx2717, align 1
  %conv2718 = zext i8 %1904 to i32
  %and2719 = and i32 %conv2718, 240
  %1905 = load i32, i32* %i, align 4
  %shr2720 = ashr i32 %1905, 16
  %or2721 = or i32 %and2719, %shr2720
  %conv2722 = trunc i32 %or2721 to i8
  %1906 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42723 = getelementptr inbounds %struct.DState, %struct.DState* %1906, i32 0, i32 22
  %1907 = load i8*, i8** %ll42723, align 8
  %1908 = load i32, i32* %j, align 4
  %shr2724 = ashr i32 %1908, 1
  %idxprom2725 = sext i32 %shr2724 to i64
  %arrayidx2726 = getelementptr inbounds i8, i8* %1907, i64 %idxprom2725
  store i8 %conv2722, i8* %arrayidx2726, align 1
  br label %if.end2742

if.else2727:                                      ; preds = %do.body2688
  %1909 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42728 = getelementptr inbounds %struct.DState, %struct.DState* %1909, i32 0, i32 22
  %1910 = load i8*, i8** %ll42728, align 8
  %1911 = load i32, i32* %j, align 4
  %shr2729 = ashr i32 %1911, 1
  %idxprom2730 = sext i32 %shr2729 to i64
  %arrayidx2731 = getelementptr inbounds i8, i8* %1910, i64 %idxprom2730
  %1912 = load i8, i8* %arrayidx2731, align 1
  %conv2732 = zext i8 %1912 to i32
  %and2733 = and i32 %conv2732, 15
  %1913 = load i32, i32* %i, align 4
  %shr2734 = ashr i32 %1913, 16
  %shl2735 = shl i32 %shr2734, 4
  %or2736 = or i32 %and2733, %shl2735
  %conv2737 = trunc i32 %or2736 to i8
  %1914 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42738 = getelementptr inbounds %struct.DState, %struct.DState* %1914, i32 0, i32 22
  %1915 = load i8*, i8** %ll42738, align 8
  %1916 = load i32, i32* %j, align 4
  %shr2739 = ashr i32 %1916, 1
  %idxprom2740 = sext i32 %shr2739 to i64
  %arrayidx2741 = getelementptr inbounds i8, i8* %1915, i64 %idxprom2740
  store i8 %conv2737, i8* %arrayidx2741, align 1
  br label %if.end2742

if.end2742:                                       ; preds = %if.else2727, %if.then2713
  %1917 = load i32, i32* %j, align 4
  store i32 %1917, i32* %i, align 4
  %1918 = load i32, i32* %tmp2689, align 4
  store i32 %1918, i32* %j, align 4
  br label %do.cond2743

do.cond2743:                                      ; preds = %if.end2742
  %1919 = load i32, i32* %i, align 4
  %1920 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2744 = getelementptr inbounds %struct.DState, %struct.DState* %1920, i32 0, i32 13
  %1921 = load i32, i32* %origPtr2744, align 8
  %cmp2745 = icmp ne i32 %1919, %1921
  br i1 %cmp2745, label %do.body2688, label %do.end2747

do.end2747:                                       ; preds = %do.cond2743
  %1922 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2748 = getelementptr inbounds %struct.DState, %struct.DState* %1922, i32 0, i32 13
  %1923 = load i32, i32* %origPtr2748, align 8
  %1924 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %1924, i32 0, i32 14
  store i32 %1923, i32* %tPos, align 4
  %1925 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %1925, i32 0, i32 17
  store i32 0, i32* %nblock_used, align 4
  %1926 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockRandomised2749 = getelementptr inbounds %struct.DState, %struct.DState* %1926, i32 0, i32 4
  %1927 = load i8, i8* %blockRandomised2749, align 4
  %tobool2750 = icmp ne i8 %1927, 0
  br i1 %tobool2750, label %if.then2751, label %if.else2799

if.then2751:                                      ; preds = %do.end2747
  %1928 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %1928, i32 0, i32 5
  store i32 0, i32* %rNToGo, align 8
  %1929 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %1929, i32 0, i32 6
  store i32 0, i32* %rTPos, align 4
  %1930 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2752 = getelementptr inbounds %struct.DState, %struct.DState* %1930, i32 0, i32 14
  %1931 = load i32, i32* %tPos2752, align 4
  %1932 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2753 = getelementptr inbounds %struct.DState, %struct.DState* %1932, i32 0, i32 18
  %arraydecay = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2753, i64 0, i64 0
  %call2754 = call i32 @BZ2_indexIntoF(i32 %1931, i32* %arraydecay)
  %1933 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %1933, i32 0, i32 15
  store i32 %call2754, i32* %k0, align 8
  %1934 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162755 = getelementptr inbounds %struct.DState, %struct.DState* %1934, i32 0, i32 21
  %1935 = load i16*, i16** %ll162755, align 8
  %1936 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2756 = getelementptr inbounds %struct.DState, %struct.DState* %1936, i32 0, i32 14
  %1937 = load i32, i32* %tPos2756, align 4
  %idxprom2757 = zext i32 %1937 to i64
  %arrayidx2758 = getelementptr inbounds i16, i16* %1935, i64 %idxprom2757
  %1938 = load i16, i16* %arrayidx2758, align 2
  %conv2759 = zext i16 %1938 to i32
  %1939 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42760 = getelementptr inbounds %struct.DState, %struct.DState* %1939, i32 0, i32 22
  %1940 = load i8*, i8** %ll42760, align 8
  %1941 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2761 = getelementptr inbounds %struct.DState, %struct.DState* %1941, i32 0, i32 14
  %1942 = load i32, i32* %tPos2761, align 4
  %shr2762 = lshr i32 %1942, 1
  %idxprom2763 = zext i32 %shr2762 to i64
  %arrayidx2764 = getelementptr inbounds i8, i8* %1940, i64 %idxprom2763
  %1943 = load i8, i8* %arrayidx2764, align 1
  %conv2765 = zext i8 %1943 to i32
  %1944 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2766 = getelementptr inbounds %struct.DState, %struct.DState* %1944, i32 0, i32 14
  %1945 = load i32, i32* %tPos2766, align 4
  %shl2767 = shl i32 %1945, 2
  %and2768 = and i32 %shl2767, 4
  %shr2769 = lshr i32 %conv2765, %and2768
  %and2770 = and i32 %shr2769, 15
  %shl2771 = shl i32 %and2770, 16
  %or2772 = or i32 %conv2759, %shl2771
  %1946 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2773 = getelementptr inbounds %struct.DState, %struct.DState* %1946, i32 0, i32 14
  store i32 %or2772, i32* %tPos2773, align 4
  %1947 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used2774 = getelementptr inbounds %struct.DState, %struct.DState* %1947, i32 0, i32 17
  %1948 = load i32, i32* %nblock_used2774, align 4
  %inc2775 = add nsw i32 %1948, 1
  store i32 %inc2775, i32* %nblock_used2774, align 4
  %1949 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2776 = getelementptr inbounds %struct.DState, %struct.DState* %1949, i32 0, i32 5
  %1950 = load i32, i32* %rNToGo2776, align 8
  %cmp2777 = icmp eq i32 %1950, 0
  br i1 %cmp2777, label %if.then2779, label %if.end2792

if.then2779:                                      ; preds = %if.then2751
  %1951 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2780 = getelementptr inbounds %struct.DState, %struct.DState* %1951, i32 0, i32 6
  %1952 = load i32, i32* %rTPos2780, align 4
  %idxprom2781 = sext i32 %1952 to i64
  %arrayidx2782 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom2781
  %1953 = load i32, i32* %arrayidx2782, align 4
  %1954 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2783 = getelementptr inbounds %struct.DState, %struct.DState* %1954, i32 0, i32 5
  store i32 %1953, i32* %rNToGo2783, align 8
  %1955 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2784 = getelementptr inbounds %struct.DState, %struct.DState* %1955, i32 0, i32 6
  %1956 = load i32, i32* %rTPos2784, align 4
  %inc2785 = add nsw i32 %1956, 1
  store i32 %inc2785, i32* %rTPos2784, align 4
  %1957 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2786 = getelementptr inbounds %struct.DState, %struct.DState* %1957, i32 0, i32 6
  %1958 = load i32, i32* %rTPos2786, align 4
  %cmp2787 = icmp eq i32 %1958, 512
  br i1 %cmp2787, label %if.then2789, label %if.end2791

if.then2789:                                      ; preds = %if.then2779
  %1959 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2790 = getelementptr inbounds %struct.DState, %struct.DState* %1959, i32 0, i32 6
  store i32 0, i32* %rTPos2790, align 4
  br label %if.end2791

if.end2791:                                       ; preds = %if.then2789, %if.then2779
  br label %if.end2792

if.end2792:                                       ; preds = %if.end2791, %if.then2751
  %1960 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2793 = getelementptr inbounds %struct.DState, %struct.DState* %1960, i32 0, i32 5
  %1961 = load i32, i32* %rNToGo2793, align 8
  %dec2794 = add nsw i32 %1961, -1
  store i32 %dec2794, i32* %rNToGo2793, align 8
  %1962 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2795 = getelementptr inbounds %struct.DState, %struct.DState* %1962, i32 0, i32 5
  %1963 = load i32, i32* %rNToGo2795, align 8
  %cmp2796 = icmp eq i32 %1963, 1
  %1964 = zext i1 %cmp2796 to i64
  %cond = select i1 %cmp2796, i32 1, i32 0
  %1965 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k02798 = getelementptr inbounds %struct.DState, %struct.DState* %1965, i32 0, i32 15
  %1966 = load i32, i32* %k02798, align 8
  %xor = xor i32 %1966, %cond
  store i32 %xor, i32* %k02798, align 8
  br label %if.end2826

if.else2799:                                      ; preds = %do.end2747
  %1967 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2800 = getelementptr inbounds %struct.DState, %struct.DState* %1967, i32 0, i32 14
  %1968 = load i32, i32* %tPos2800, align 4
  %1969 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2801 = getelementptr inbounds %struct.DState, %struct.DState* %1969, i32 0, i32 18
  %arraydecay2802 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2801, i64 0, i64 0
  %call2803 = call i32 @BZ2_indexIntoF(i32 %1968, i32* %arraydecay2802)
  %1970 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k02804 = getelementptr inbounds %struct.DState, %struct.DState* %1970, i32 0, i32 15
  store i32 %call2803, i32* %k02804, align 8
  %1971 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll162805 = getelementptr inbounds %struct.DState, %struct.DState* %1971, i32 0, i32 21
  %1972 = load i16*, i16** %ll162805, align 8
  %1973 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2806 = getelementptr inbounds %struct.DState, %struct.DState* %1973, i32 0, i32 14
  %1974 = load i32, i32* %tPos2806, align 4
  %idxprom2807 = zext i32 %1974 to i64
  %arrayidx2808 = getelementptr inbounds i16, i16* %1972, i64 %idxprom2807
  %1975 = load i16, i16* %arrayidx2808, align 2
  %conv2809 = zext i16 %1975 to i32
  %1976 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %ll42810 = getelementptr inbounds %struct.DState, %struct.DState* %1976, i32 0, i32 22
  %1977 = load i8*, i8** %ll42810, align 8
  %1978 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2811 = getelementptr inbounds %struct.DState, %struct.DState* %1978, i32 0, i32 14
  %1979 = load i32, i32* %tPos2811, align 4
  %shr2812 = lshr i32 %1979, 1
  %idxprom2813 = zext i32 %shr2812 to i64
  %arrayidx2814 = getelementptr inbounds i8, i8* %1977, i64 %idxprom2813
  %1980 = load i8, i8* %arrayidx2814, align 1
  %conv2815 = zext i8 %1980 to i32
  %1981 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2816 = getelementptr inbounds %struct.DState, %struct.DState* %1981, i32 0, i32 14
  %1982 = load i32, i32* %tPos2816, align 4
  %shl2817 = shl i32 %1982, 2
  %and2818 = and i32 %shl2817, 4
  %shr2819 = lshr i32 %conv2815, %and2818
  %and2820 = and i32 %shr2819, 15
  %shl2821 = shl i32 %and2820, 16
  %or2822 = or i32 %conv2809, %shl2821
  %1983 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2823 = getelementptr inbounds %struct.DState, %struct.DState* %1983, i32 0, i32 14
  store i32 %or2822, i32* %tPos2823, align 4
  %1984 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used2824 = getelementptr inbounds %struct.DState, %struct.DState* %1984, i32 0, i32 17
  %1985 = load i32, i32* %nblock_used2824, align 4
  %inc2825 = add nsw i32 %1985, 1
  store i32 %inc2825, i32* %nblock_used2824, align 4
  br label %if.end2826

if.end2826:                                       ; preds = %if.else2799, %if.end2792
  br label %if.end2919

if.else2827:                                      ; preds = %if.end2594
  store i32 0, i32* %i, align 4
  br label %for.cond2828

for.cond2828:                                     ; preds = %for.inc2849, %if.else2827
  %1986 = load i32, i32* %i, align 4
  %1987 = load i32, i32* %nblock, align 4
  %cmp2829 = icmp slt i32 %1986, %1987
  br i1 %cmp2829, label %for.body2831, label %for.end2851

for.body2831:                                     ; preds = %for.cond2828
  %1988 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2832 = getelementptr inbounds %struct.DState, %struct.DState* %1988, i32 0, i32 20
  %1989 = load i32*, i32** %tt2832, align 8
  %1990 = load i32, i32* %i, align 4
  %idxprom2833 = sext i32 %1990 to i64
  %arrayidx2834 = getelementptr inbounds i32, i32* %1989, i64 %idxprom2833
  %1991 = load i32, i32* %arrayidx2834, align 4
  %and2835 = and i32 %1991, 255
  %conv2836 = trunc i32 %and2835 to i8
  store i8 %conv2836, i8* %uc, align 1
  %1992 = load i32, i32* %i, align 4
  %shl2837 = shl i32 %1992, 8
  %1993 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2838 = getelementptr inbounds %struct.DState, %struct.DState* %1993, i32 0, i32 20
  %1994 = load i32*, i32** %tt2838, align 8
  %1995 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2839 = getelementptr inbounds %struct.DState, %struct.DState* %1995, i32 0, i32 18
  %1996 = load i8, i8* %uc, align 1
  %idxprom2840 = zext i8 %1996 to i64
  %arrayidx2841 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2839, i64 0, i64 %idxprom2840
  %1997 = load i32, i32* %arrayidx2841, align 4
  %idxprom2842 = sext i32 %1997 to i64
  %arrayidx2843 = getelementptr inbounds i32, i32* %1994, i64 %idxprom2842
  %1998 = load i32, i32* %arrayidx2843, align 4
  %or2844 = or i32 %1998, %shl2837
  store i32 %or2844, i32* %arrayidx2843, align 4
  %1999 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %cftab2845 = getelementptr inbounds %struct.DState, %struct.DState* %1999, i32 0, i32 18
  %2000 = load i8, i8* %uc, align 1
  %idxprom2846 = zext i8 %2000 to i64
  %arrayidx2847 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2845, i64 0, i64 %idxprom2846
  %2001 = load i32, i32* %arrayidx2847, align 4
  %inc2848 = add nsw i32 %2001, 1
  store i32 %inc2848, i32* %arrayidx2847, align 4
  br label %for.inc2849

for.inc2849:                                      ; preds = %for.body2831
  %2002 = load i32, i32* %i, align 4
  %inc2850 = add nsw i32 %2002, 1
  store i32 %inc2850, i32* %i, align 4
  br label %for.cond2828

for.end2851:                                      ; preds = %for.cond2828
  %2003 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2852 = getelementptr inbounds %struct.DState, %struct.DState* %2003, i32 0, i32 20
  %2004 = load i32*, i32** %tt2852, align 8
  %2005 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %origPtr2853 = getelementptr inbounds %struct.DState, %struct.DState* %2005, i32 0, i32 13
  %2006 = load i32, i32* %origPtr2853, align 8
  %idxprom2854 = sext i32 %2006 to i64
  %arrayidx2855 = getelementptr inbounds i32, i32* %2004, i64 %idxprom2854
  %2007 = load i32, i32* %arrayidx2855, align 4
  %shr2856 = lshr i32 %2007, 8
  %2008 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2857 = getelementptr inbounds %struct.DState, %struct.DState* %2008, i32 0, i32 14
  store i32 %shr2856, i32* %tPos2857, align 4
  %2009 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used2858 = getelementptr inbounds %struct.DState, %struct.DState* %2009, i32 0, i32 17
  store i32 0, i32* %nblock_used2858, align 4
  %2010 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %blockRandomised2859 = getelementptr inbounds %struct.DState, %struct.DState* %2010, i32 0, i32 4
  %2011 = load i8, i8* %blockRandomised2859, align 4
  %tobool2860 = icmp ne i8 %2011, 0
  br i1 %tobool2860, label %if.then2861, label %if.else2903

if.then2861:                                      ; preds = %for.end2851
  %2012 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2862 = getelementptr inbounds %struct.DState, %struct.DState* %2012, i32 0, i32 5
  store i32 0, i32* %rNToGo2862, align 8
  %2013 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2863 = getelementptr inbounds %struct.DState, %struct.DState* %2013, i32 0, i32 6
  store i32 0, i32* %rTPos2863, align 4
  %2014 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2864 = getelementptr inbounds %struct.DState, %struct.DState* %2014, i32 0, i32 20
  %2015 = load i32*, i32** %tt2864, align 8
  %2016 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2865 = getelementptr inbounds %struct.DState, %struct.DState* %2016, i32 0, i32 14
  %2017 = load i32, i32* %tPos2865, align 4
  %idxprom2866 = zext i32 %2017 to i64
  %arrayidx2867 = getelementptr inbounds i32, i32* %2015, i64 %idxprom2866
  %2018 = load i32, i32* %arrayidx2867, align 4
  %2019 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2868 = getelementptr inbounds %struct.DState, %struct.DState* %2019, i32 0, i32 14
  store i32 %2018, i32* %tPos2868, align 4
  %2020 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2869 = getelementptr inbounds %struct.DState, %struct.DState* %2020, i32 0, i32 14
  %2021 = load i32, i32* %tPos2869, align 4
  %and2870 = and i32 %2021, 255
  %conv2871 = trunc i32 %and2870 to i8
  %conv2872 = zext i8 %conv2871 to i32
  %2022 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k02873 = getelementptr inbounds %struct.DState, %struct.DState* %2022, i32 0, i32 15
  store i32 %conv2872, i32* %k02873, align 8
  %2023 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2874 = getelementptr inbounds %struct.DState, %struct.DState* %2023, i32 0, i32 14
  %2024 = load i32, i32* %tPos2874, align 4
  %shr2875 = lshr i32 %2024, 8
  store i32 %shr2875, i32* %tPos2874, align 4
  %2025 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used2876 = getelementptr inbounds %struct.DState, %struct.DState* %2025, i32 0, i32 17
  %2026 = load i32, i32* %nblock_used2876, align 4
  %inc2877 = add nsw i32 %2026, 1
  store i32 %inc2877, i32* %nblock_used2876, align 4
  %2027 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2878 = getelementptr inbounds %struct.DState, %struct.DState* %2027, i32 0, i32 5
  %2028 = load i32, i32* %rNToGo2878, align 8
  %cmp2879 = icmp eq i32 %2028, 0
  br i1 %cmp2879, label %if.then2881, label %if.end2894

if.then2881:                                      ; preds = %if.then2861
  %2029 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2882 = getelementptr inbounds %struct.DState, %struct.DState* %2029, i32 0, i32 6
  %2030 = load i32, i32* %rTPos2882, align 4
  %idxprom2883 = sext i32 %2030 to i64
  %arrayidx2884 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom2883
  %2031 = load i32, i32* %arrayidx2884, align 4
  %2032 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2885 = getelementptr inbounds %struct.DState, %struct.DState* %2032, i32 0, i32 5
  store i32 %2031, i32* %rNToGo2885, align 8
  %2033 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2886 = getelementptr inbounds %struct.DState, %struct.DState* %2033, i32 0, i32 6
  %2034 = load i32, i32* %rTPos2886, align 4
  %inc2887 = add nsw i32 %2034, 1
  store i32 %inc2887, i32* %rTPos2886, align 4
  %2035 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2888 = getelementptr inbounds %struct.DState, %struct.DState* %2035, i32 0, i32 6
  %2036 = load i32, i32* %rTPos2888, align 4
  %cmp2889 = icmp eq i32 %2036, 512
  br i1 %cmp2889, label %if.then2891, label %if.end2893

if.then2891:                                      ; preds = %if.then2881
  %2037 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rTPos2892 = getelementptr inbounds %struct.DState, %struct.DState* %2037, i32 0, i32 6
  store i32 0, i32* %rTPos2892, align 4
  br label %if.end2893

if.end2893:                                       ; preds = %if.then2891, %if.then2881
  br label %if.end2894

if.end2894:                                       ; preds = %if.end2893, %if.then2861
  %2038 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2895 = getelementptr inbounds %struct.DState, %struct.DState* %2038, i32 0, i32 5
  %2039 = load i32, i32* %rNToGo2895, align 8
  %dec2896 = add nsw i32 %2039, -1
  store i32 %dec2896, i32* %rNToGo2895, align 8
  %2040 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %rNToGo2897 = getelementptr inbounds %struct.DState, %struct.DState* %2040, i32 0, i32 5
  %2041 = load i32, i32* %rNToGo2897, align 8
  %cmp2898 = icmp eq i32 %2041, 1
  %2042 = zext i1 %cmp2898 to i64
  %cond2900 = select i1 %cmp2898, i32 1, i32 0
  %2043 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k02901 = getelementptr inbounds %struct.DState, %struct.DState* %2043, i32 0, i32 15
  %2044 = load i32, i32* %k02901, align 8
  %xor2902 = xor i32 %2044, %cond2900
  store i32 %xor2902, i32* %k02901, align 8
  br label %if.end2918

if.else2903:                                      ; preds = %for.end2851
  %2045 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tt2904 = getelementptr inbounds %struct.DState, %struct.DState* %2045, i32 0, i32 20
  %2046 = load i32*, i32** %tt2904, align 8
  %2047 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2905 = getelementptr inbounds %struct.DState, %struct.DState* %2047, i32 0, i32 14
  %2048 = load i32, i32* %tPos2905, align 4
  %idxprom2906 = zext i32 %2048 to i64
  %arrayidx2907 = getelementptr inbounds i32, i32* %2046, i64 %idxprom2906
  %2049 = load i32, i32* %arrayidx2907, align 4
  %2050 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2908 = getelementptr inbounds %struct.DState, %struct.DState* %2050, i32 0, i32 14
  store i32 %2049, i32* %tPos2908, align 4
  %2051 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2909 = getelementptr inbounds %struct.DState, %struct.DState* %2051, i32 0, i32 14
  %2052 = load i32, i32* %tPos2909, align 4
  %and2910 = and i32 %2052, 255
  %conv2911 = trunc i32 %and2910 to i8
  %conv2912 = zext i8 %conv2911 to i32
  %2053 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %k02913 = getelementptr inbounds %struct.DState, %struct.DState* %2053, i32 0, i32 15
  store i32 %conv2912, i32* %k02913, align 8
  %2054 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %tPos2914 = getelementptr inbounds %struct.DState, %struct.DState* %2054, i32 0, i32 14
  %2055 = load i32, i32* %tPos2914, align 4
  %shr2915 = lshr i32 %2055, 8
  store i32 %shr2915, i32* %tPos2914, align 4
  %2056 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nblock_used2916 = getelementptr inbounds %struct.DState, %struct.DState* %2056, i32 0, i32 17
  %2057 = load i32, i32* %nblock_used2916, align 4
  %inc2917 = add nsw i32 %2057, 1
  store i32 %inc2917, i32* %nblock_used2916, align 4
  br label %if.end2918

if.end2918:                                       ; preds = %if.else2903, %if.end2894
  br label %if.end2919

if.end2919:                                       ; preds = %if.end2918, %if.end2826
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

endhdr_2:                                         ; preds = %if.then326
  br label %sw.bb2920

sw.bb2920:                                        ; preds = %endhdr_2, %if.end
  %2058 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2921 = getelementptr inbounds %struct.DState, %struct.DState* %2058, i32 0, i32 1
  store i32 42, i32* %state2921, align 8
  br label %while.body2923

while.body2923:                                   ; preds = %if.end2970, %sw.bb2920
  %2059 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2924 = getelementptr inbounds %struct.DState, %struct.DState* %2059, i32 0, i32 8
  %2060 = load i32, i32* %bsLive2924, align 4
  %cmp2925 = icmp sge i32 %2060, 8
  br i1 %cmp2925, label %if.then2927, label %if.end2937

if.then2927:                                      ; preds = %while.body2923
  %2061 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2929 = getelementptr inbounds %struct.DState, %struct.DState* %2061, i32 0, i32 7
  %2062 = load i32, i32* %bsBuff2929, align 8
  %2063 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2930 = getelementptr inbounds %struct.DState, %struct.DState* %2063, i32 0, i32 8
  %2064 = load i32, i32* %bsLive2930, align 4
  %sub2931 = sub nsw i32 %2064, 8
  %shr2932 = lshr i32 %2062, %sub2931
  %and2933 = and i32 %shr2932, 255
  store i32 %and2933, i32* %v2928, align 4
  %2065 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2934 = getelementptr inbounds %struct.DState, %struct.DState* %2065, i32 0, i32 8
  %2066 = load i32, i32* %bsLive2934, align 4
  %sub2935 = sub nsw i32 %2066, 8
  store i32 %sub2935, i32* %bsLive2934, align 4
  %2067 = load i32, i32* %v2928, align 4
  %conv2936 = trunc i32 %2067 to i8
  store i8 %conv2936, i8* %uc, align 1
  br label %while.end2971

if.end2937:                                       ; preds = %while.body2923
  %2068 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2938 = getelementptr inbounds %struct.DState, %struct.DState* %2068, i32 0, i32 0
  %2069 = load %struct.bz_stream*, %struct.bz_stream** %strm2938, align 8
  %avail_in2939 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2069, i32 0, i32 1
  %2070 = load i32, i32* %avail_in2939, align 8
  %cmp2940 = icmp eq i32 %2070, 0
  br i1 %cmp2940, label %if.then2942, label %if.end2943

if.then2942:                                      ; preds = %if.end2937
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end2943:                                       ; preds = %if.end2937
  %2071 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2944 = getelementptr inbounds %struct.DState, %struct.DState* %2071, i32 0, i32 7
  %2072 = load i32, i32* %bsBuff2944, align 8
  %shl2945 = shl i32 %2072, 8
  %2073 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2946 = getelementptr inbounds %struct.DState, %struct.DState* %2073, i32 0, i32 0
  %2074 = load %struct.bz_stream*, %struct.bz_stream** %strm2946, align 8
  %next_in2947 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2074, i32 0, i32 0
  %2075 = load i8*, i8** %next_in2947, align 8
  %2076 = load i8, i8* %2075, align 1
  %conv2948 = zext i8 %2076 to i32
  %or2949 = or i32 %shl2945, %conv2948
  %2077 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2950 = getelementptr inbounds %struct.DState, %struct.DState* %2077, i32 0, i32 7
  store i32 %or2949, i32* %bsBuff2950, align 8
  %2078 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2951 = getelementptr inbounds %struct.DState, %struct.DState* %2078, i32 0, i32 8
  %2079 = load i32, i32* %bsLive2951, align 4
  %add2952 = add nsw i32 %2079, 8
  store i32 %add2952, i32* %bsLive2951, align 4
  %2080 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2953 = getelementptr inbounds %struct.DState, %struct.DState* %2080, i32 0, i32 0
  %2081 = load %struct.bz_stream*, %struct.bz_stream** %strm2953, align 8
  %next_in2954 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2081, i32 0, i32 0
  %2082 = load i8*, i8** %next_in2954, align 8
  %incdec.ptr2955 = getelementptr inbounds i8, i8* %2082, i32 1
  store i8* %incdec.ptr2955, i8** %next_in2954, align 8
  %2083 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2956 = getelementptr inbounds %struct.DState, %struct.DState* %2083, i32 0, i32 0
  %2084 = load %struct.bz_stream*, %struct.bz_stream** %strm2956, align 8
  %avail_in2957 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2084, i32 0, i32 1
  %2085 = load i32, i32* %avail_in2957, align 8
  %dec2958 = add i32 %2085, -1
  store i32 %dec2958, i32* %avail_in2957, align 8
  %2086 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2959 = getelementptr inbounds %struct.DState, %struct.DState* %2086, i32 0, i32 0
  %2087 = load %struct.bz_stream*, %struct.bz_stream** %strm2959, align 8
  %total_in_lo322960 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2087, i32 0, i32 2
  %2088 = load i32, i32* %total_in_lo322960, align 4
  %inc2961 = add i32 %2088, 1
  store i32 %inc2961, i32* %total_in_lo322960, align 4
  %2089 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2962 = getelementptr inbounds %struct.DState, %struct.DState* %2089, i32 0, i32 0
  %2090 = load %struct.bz_stream*, %struct.bz_stream** %strm2962, align 8
  %total_in_lo322963 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2090, i32 0, i32 2
  %2091 = load i32, i32* %total_in_lo322963, align 4
  %cmp2964 = icmp eq i32 %2091, 0
  br i1 %cmp2964, label %if.then2966, label %if.end2970

if.then2966:                                      ; preds = %if.end2943
  %2092 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2967 = getelementptr inbounds %struct.DState, %struct.DState* %2092, i32 0, i32 0
  %2093 = load %struct.bz_stream*, %struct.bz_stream** %strm2967, align 8
  %total_in_hi322968 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2093, i32 0, i32 3
  %2094 = load i32, i32* %total_in_hi322968, align 8
  %inc2969 = add i32 %2094, 1
  store i32 %inc2969, i32* %total_in_hi322968, align 8
  br label %if.end2970

if.end2970:                                       ; preds = %if.then2966, %if.end2943
  br label %while.body2923

while.end2971:                                    ; preds = %if.then2927
  %2095 = load i8, i8* %uc, align 1
  %conv2972 = zext i8 %2095 to i32
  %cmp2973 = icmp ne i32 %conv2972, 114
  br i1 %cmp2973, label %if.then2975, label %if.end2976

if.then2975:                                      ; preds = %while.end2971
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end2976:                                       ; preds = %while.end2971
  br label %sw.bb2977

sw.bb2977:                                        ; preds = %if.end2976, %if.end
  %2096 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state2978 = getelementptr inbounds %struct.DState, %struct.DState* %2096, i32 0, i32 1
  store i32 43, i32* %state2978, align 8
  br label %while.body2980

while.body2980:                                   ; preds = %if.end3027, %sw.bb2977
  %2097 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2981 = getelementptr inbounds %struct.DState, %struct.DState* %2097, i32 0, i32 8
  %2098 = load i32, i32* %bsLive2981, align 4
  %cmp2982 = icmp sge i32 %2098, 8
  br i1 %cmp2982, label %if.then2984, label %if.end2994

if.then2984:                                      ; preds = %while.body2980
  %2099 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff2986 = getelementptr inbounds %struct.DState, %struct.DState* %2099, i32 0, i32 7
  %2100 = load i32, i32* %bsBuff2986, align 8
  %2101 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2987 = getelementptr inbounds %struct.DState, %struct.DState* %2101, i32 0, i32 8
  %2102 = load i32, i32* %bsLive2987, align 4
  %sub2988 = sub nsw i32 %2102, 8
  %shr2989 = lshr i32 %2100, %sub2988
  %and2990 = and i32 %shr2989, 255
  store i32 %and2990, i32* %v2985, align 4
  %2103 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive2991 = getelementptr inbounds %struct.DState, %struct.DState* %2103, i32 0, i32 8
  %2104 = load i32, i32* %bsLive2991, align 4
  %sub2992 = sub nsw i32 %2104, 8
  store i32 %sub2992, i32* %bsLive2991, align 4
  %2105 = load i32, i32* %v2985, align 4
  %conv2993 = trunc i32 %2105 to i8
  store i8 %conv2993, i8* %uc, align 1
  br label %while.end3028

if.end2994:                                       ; preds = %while.body2980
  %2106 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm2995 = getelementptr inbounds %struct.DState, %struct.DState* %2106, i32 0, i32 0
  %2107 = load %struct.bz_stream*, %struct.bz_stream** %strm2995, align 8
  %avail_in2996 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2107, i32 0, i32 1
  %2108 = load i32, i32* %avail_in2996, align 8
  %cmp2997 = icmp eq i32 %2108, 0
  br i1 %cmp2997, label %if.then2999, label %if.end3000

if.then2999:                                      ; preds = %if.end2994
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3000:                                       ; preds = %if.end2994
  %2109 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3001 = getelementptr inbounds %struct.DState, %struct.DState* %2109, i32 0, i32 7
  %2110 = load i32, i32* %bsBuff3001, align 8
  %shl3002 = shl i32 %2110, 8
  %2111 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3003 = getelementptr inbounds %struct.DState, %struct.DState* %2111, i32 0, i32 0
  %2112 = load %struct.bz_stream*, %struct.bz_stream** %strm3003, align 8
  %next_in3004 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2112, i32 0, i32 0
  %2113 = load i8*, i8** %next_in3004, align 8
  %2114 = load i8, i8* %2113, align 1
  %conv3005 = zext i8 %2114 to i32
  %or3006 = or i32 %shl3002, %conv3005
  %2115 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3007 = getelementptr inbounds %struct.DState, %struct.DState* %2115, i32 0, i32 7
  store i32 %or3006, i32* %bsBuff3007, align 8
  %2116 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3008 = getelementptr inbounds %struct.DState, %struct.DState* %2116, i32 0, i32 8
  %2117 = load i32, i32* %bsLive3008, align 4
  %add3009 = add nsw i32 %2117, 8
  store i32 %add3009, i32* %bsLive3008, align 4
  %2118 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3010 = getelementptr inbounds %struct.DState, %struct.DState* %2118, i32 0, i32 0
  %2119 = load %struct.bz_stream*, %struct.bz_stream** %strm3010, align 8
  %next_in3011 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2119, i32 0, i32 0
  %2120 = load i8*, i8** %next_in3011, align 8
  %incdec.ptr3012 = getelementptr inbounds i8, i8* %2120, i32 1
  store i8* %incdec.ptr3012, i8** %next_in3011, align 8
  %2121 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3013 = getelementptr inbounds %struct.DState, %struct.DState* %2121, i32 0, i32 0
  %2122 = load %struct.bz_stream*, %struct.bz_stream** %strm3013, align 8
  %avail_in3014 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2122, i32 0, i32 1
  %2123 = load i32, i32* %avail_in3014, align 8
  %dec3015 = add i32 %2123, -1
  store i32 %dec3015, i32* %avail_in3014, align 8
  %2124 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3016 = getelementptr inbounds %struct.DState, %struct.DState* %2124, i32 0, i32 0
  %2125 = load %struct.bz_stream*, %struct.bz_stream** %strm3016, align 8
  %total_in_lo323017 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2125, i32 0, i32 2
  %2126 = load i32, i32* %total_in_lo323017, align 4
  %inc3018 = add i32 %2126, 1
  store i32 %inc3018, i32* %total_in_lo323017, align 4
  %2127 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3019 = getelementptr inbounds %struct.DState, %struct.DState* %2127, i32 0, i32 0
  %2128 = load %struct.bz_stream*, %struct.bz_stream** %strm3019, align 8
  %total_in_lo323020 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2128, i32 0, i32 2
  %2129 = load i32, i32* %total_in_lo323020, align 4
  %cmp3021 = icmp eq i32 %2129, 0
  br i1 %cmp3021, label %if.then3023, label %if.end3027

if.then3023:                                      ; preds = %if.end3000
  %2130 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3024 = getelementptr inbounds %struct.DState, %struct.DState* %2130, i32 0, i32 0
  %2131 = load %struct.bz_stream*, %struct.bz_stream** %strm3024, align 8
  %total_in_hi323025 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2131, i32 0, i32 3
  %2132 = load i32, i32* %total_in_hi323025, align 8
  %inc3026 = add i32 %2132, 1
  store i32 %inc3026, i32* %total_in_hi323025, align 8
  br label %if.end3027

if.end3027:                                       ; preds = %if.then3023, %if.end3000
  br label %while.body2980

while.end3028:                                    ; preds = %if.then2984
  %2133 = load i8, i8* %uc, align 1
  %conv3029 = zext i8 %2133 to i32
  %cmp3030 = icmp ne i32 %conv3029, 69
  br i1 %cmp3030, label %if.then3032, label %if.end3033

if.then3032:                                      ; preds = %while.end3028
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end3033:                                       ; preds = %while.end3028
  br label %sw.bb3034

sw.bb3034:                                        ; preds = %if.end3033, %if.end
  %2134 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3035 = getelementptr inbounds %struct.DState, %struct.DState* %2134, i32 0, i32 1
  store i32 44, i32* %state3035, align 8
  br label %while.body3037

while.body3037:                                   ; preds = %if.end3084, %sw.bb3034
  %2135 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3038 = getelementptr inbounds %struct.DState, %struct.DState* %2135, i32 0, i32 8
  %2136 = load i32, i32* %bsLive3038, align 4
  %cmp3039 = icmp sge i32 %2136, 8
  br i1 %cmp3039, label %if.then3041, label %if.end3051

if.then3041:                                      ; preds = %while.body3037
  %2137 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3043 = getelementptr inbounds %struct.DState, %struct.DState* %2137, i32 0, i32 7
  %2138 = load i32, i32* %bsBuff3043, align 8
  %2139 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3044 = getelementptr inbounds %struct.DState, %struct.DState* %2139, i32 0, i32 8
  %2140 = load i32, i32* %bsLive3044, align 4
  %sub3045 = sub nsw i32 %2140, 8
  %shr3046 = lshr i32 %2138, %sub3045
  %and3047 = and i32 %shr3046, 255
  store i32 %and3047, i32* %v3042, align 4
  %2141 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3048 = getelementptr inbounds %struct.DState, %struct.DState* %2141, i32 0, i32 8
  %2142 = load i32, i32* %bsLive3048, align 4
  %sub3049 = sub nsw i32 %2142, 8
  store i32 %sub3049, i32* %bsLive3048, align 4
  %2143 = load i32, i32* %v3042, align 4
  %conv3050 = trunc i32 %2143 to i8
  store i8 %conv3050, i8* %uc, align 1
  br label %while.end3085

if.end3051:                                       ; preds = %while.body3037
  %2144 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3052 = getelementptr inbounds %struct.DState, %struct.DState* %2144, i32 0, i32 0
  %2145 = load %struct.bz_stream*, %struct.bz_stream** %strm3052, align 8
  %avail_in3053 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2145, i32 0, i32 1
  %2146 = load i32, i32* %avail_in3053, align 8
  %cmp3054 = icmp eq i32 %2146, 0
  br i1 %cmp3054, label %if.then3056, label %if.end3057

if.then3056:                                      ; preds = %if.end3051
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3057:                                       ; preds = %if.end3051
  %2147 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3058 = getelementptr inbounds %struct.DState, %struct.DState* %2147, i32 0, i32 7
  %2148 = load i32, i32* %bsBuff3058, align 8
  %shl3059 = shl i32 %2148, 8
  %2149 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3060 = getelementptr inbounds %struct.DState, %struct.DState* %2149, i32 0, i32 0
  %2150 = load %struct.bz_stream*, %struct.bz_stream** %strm3060, align 8
  %next_in3061 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2150, i32 0, i32 0
  %2151 = load i8*, i8** %next_in3061, align 8
  %2152 = load i8, i8* %2151, align 1
  %conv3062 = zext i8 %2152 to i32
  %or3063 = or i32 %shl3059, %conv3062
  %2153 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3064 = getelementptr inbounds %struct.DState, %struct.DState* %2153, i32 0, i32 7
  store i32 %or3063, i32* %bsBuff3064, align 8
  %2154 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3065 = getelementptr inbounds %struct.DState, %struct.DState* %2154, i32 0, i32 8
  %2155 = load i32, i32* %bsLive3065, align 4
  %add3066 = add nsw i32 %2155, 8
  store i32 %add3066, i32* %bsLive3065, align 4
  %2156 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3067 = getelementptr inbounds %struct.DState, %struct.DState* %2156, i32 0, i32 0
  %2157 = load %struct.bz_stream*, %struct.bz_stream** %strm3067, align 8
  %next_in3068 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2157, i32 0, i32 0
  %2158 = load i8*, i8** %next_in3068, align 8
  %incdec.ptr3069 = getelementptr inbounds i8, i8* %2158, i32 1
  store i8* %incdec.ptr3069, i8** %next_in3068, align 8
  %2159 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3070 = getelementptr inbounds %struct.DState, %struct.DState* %2159, i32 0, i32 0
  %2160 = load %struct.bz_stream*, %struct.bz_stream** %strm3070, align 8
  %avail_in3071 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2160, i32 0, i32 1
  %2161 = load i32, i32* %avail_in3071, align 8
  %dec3072 = add i32 %2161, -1
  store i32 %dec3072, i32* %avail_in3071, align 8
  %2162 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3073 = getelementptr inbounds %struct.DState, %struct.DState* %2162, i32 0, i32 0
  %2163 = load %struct.bz_stream*, %struct.bz_stream** %strm3073, align 8
  %total_in_lo323074 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2163, i32 0, i32 2
  %2164 = load i32, i32* %total_in_lo323074, align 4
  %inc3075 = add i32 %2164, 1
  store i32 %inc3075, i32* %total_in_lo323074, align 4
  %2165 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3076 = getelementptr inbounds %struct.DState, %struct.DState* %2165, i32 0, i32 0
  %2166 = load %struct.bz_stream*, %struct.bz_stream** %strm3076, align 8
  %total_in_lo323077 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2166, i32 0, i32 2
  %2167 = load i32, i32* %total_in_lo323077, align 4
  %cmp3078 = icmp eq i32 %2167, 0
  br i1 %cmp3078, label %if.then3080, label %if.end3084

if.then3080:                                      ; preds = %if.end3057
  %2168 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3081 = getelementptr inbounds %struct.DState, %struct.DState* %2168, i32 0, i32 0
  %2169 = load %struct.bz_stream*, %struct.bz_stream** %strm3081, align 8
  %total_in_hi323082 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2169, i32 0, i32 3
  %2170 = load i32, i32* %total_in_hi323082, align 8
  %inc3083 = add i32 %2170, 1
  store i32 %inc3083, i32* %total_in_hi323082, align 8
  br label %if.end3084

if.end3084:                                       ; preds = %if.then3080, %if.end3057
  br label %while.body3037

while.end3085:                                    ; preds = %if.then3041
  %2171 = load i8, i8* %uc, align 1
  %conv3086 = zext i8 %2171 to i32
  %cmp3087 = icmp ne i32 %conv3086, 56
  br i1 %cmp3087, label %if.then3089, label %if.end3090

if.then3089:                                      ; preds = %while.end3085
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end3090:                                       ; preds = %while.end3085
  br label %sw.bb3091

sw.bb3091:                                        ; preds = %if.end3090, %if.end
  %2172 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3092 = getelementptr inbounds %struct.DState, %struct.DState* %2172, i32 0, i32 1
  store i32 45, i32* %state3092, align 8
  br label %while.body3094

while.body3094:                                   ; preds = %if.end3141, %sw.bb3091
  %2173 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3095 = getelementptr inbounds %struct.DState, %struct.DState* %2173, i32 0, i32 8
  %2174 = load i32, i32* %bsLive3095, align 4
  %cmp3096 = icmp sge i32 %2174, 8
  br i1 %cmp3096, label %if.then3098, label %if.end3108

if.then3098:                                      ; preds = %while.body3094
  %2175 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3100 = getelementptr inbounds %struct.DState, %struct.DState* %2175, i32 0, i32 7
  %2176 = load i32, i32* %bsBuff3100, align 8
  %2177 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3101 = getelementptr inbounds %struct.DState, %struct.DState* %2177, i32 0, i32 8
  %2178 = load i32, i32* %bsLive3101, align 4
  %sub3102 = sub nsw i32 %2178, 8
  %shr3103 = lshr i32 %2176, %sub3102
  %and3104 = and i32 %shr3103, 255
  store i32 %and3104, i32* %v3099, align 4
  %2179 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3105 = getelementptr inbounds %struct.DState, %struct.DState* %2179, i32 0, i32 8
  %2180 = load i32, i32* %bsLive3105, align 4
  %sub3106 = sub nsw i32 %2180, 8
  store i32 %sub3106, i32* %bsLive3105, align 4
  %2181 = load i32, i32* %v3099, align 4
  %conv3107 = trunc i32 %2181 to i8
  store i8 %conv3107, i8* %uc, align 1
  br label %while.end3142

if.end3108:                                       ; preds = %while.body3094
  %2182 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3109 = getelementptr inbounds %struct.DState, %struct.DState* %2182, i32 0, i32 0
  %2183 = load %struct.bz_stream*, %struct.bz_stream** %strm3109, align 8
  %avail_in3110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2183, i32 0, i32 1
  %2184 = load i32, i32* %avail_in3110, align 8
  %cmp3111 = icmp eq i32 %2184, 0
  br i1 %cmp3111, label %if.then3113, label %if.end3114

if.then3113:                                      ; preds = %if.end3108
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3114:                                       ; preds = %if.end3108
  %2185 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3115 = getelementptr inbounds %struct.DState, %struct.DState* %2185, i32 0, i32 7
  %2186 = load i32, i32* %bsBuff3115, align 8
  %shl3116 = shl i32 %2186, 8
  %2187 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3117 = getelementptr inbounds %struct.DState, %struct.DState* %2187, i32 0, i32 0
  %2188 = load %struct.bz_stream*, %struct.bz_stream** %strm3117, align 8
  %next_in3118 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2188, i32 0, i32 0
  %2189 = load i8*, i8** %next_in3118, align 8
  %2190 = load i8, i8* %2189, align 1
  %conv3119 = zext i8 %2190 to i32
  %or3120 = or i32 %shl3116, %conv3119
  %2191 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3121 = getelementptr inbounds %struct.DState, %struct.DState* %2191, i32 0, i32 7
  store i32 %or3120, i32* %bsBuff3121, align 8
  %2192 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3122 = getelementptr inbounds %struct.DState, %struct.DState* %2192, i32 0, i32 8
  %2193 = load i32, i32* %bsLive3122, align 4
  %add3123 = add nsw i32 %2193, 8
  store i32 %add3123, i32* %bsLive3122, align 4
  %2194 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3124 = getelementptr inbounds %struct.DState, %struct.DState* %2194, i32 0, i32 0
  %2195 = load %struct.bz_stream*, %struct.bz_stream** %strm3124, align 8
  %next_in3125 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2195, i32 0, i32 0
  %2196 = load i8*, i8** %next_in3125, align 8
  %incdec.ptr3126 = getelementptr inbounds i8, i8* %2196, i32 1
  store i8* %incdec.ptr3126, i8** %next_in3125, align 8
  %2197 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3127 = getelementptr inbounds %struct.DState, %struct.DState* %2197, i32 0, i32 0
  %2198 = load %struct.bz_stream*, %struct.bz_stream** %strm3127, align 8
  %avail_in3128 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2198, i32 0, i32 1
  %2199 = load i32, i32* %avail_in3128, align 8
  %dec3129 = add i32 %2199, -1
  store i32 %dec3129, i32* %avail_in3128, align 8
  %2200 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3130 = getelementptr inbounds %struct.DState, %struct.DState* %2200, i32 0, i32 0
  %2201 = load %struct.bz_stream*, %struct.bz_stream** %strm3130, align 8
  %total_in_lo323131 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2201, i32 0, i32 2
  %2202 = load i32, i32* %total_in_lo323131, align 4
  %inc3132 = add i32 %2202, 1
  store i32 %inc3132, i32* %total_in_lo323131, align 4
  %2203 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3133 = getelementptr inbounds %struct.DState, %struct.DState* %2203, i32 0, i32 0
  %2204 = load %struct.bz_stream*, %struct.bz_stream** %strm3133, align 8
  %total_in_lo323134 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2204, i32 0, i32 2
  %2205 = load i32, i32* %total_in_lo323134, align 4
  %cmp3135 = icmp eq i32 %2205, 0
  br i1 %cmp3135, label %if.then3137, label %if.end3141

if.then3137:                                      ; preds = %if.end3114
  %2206 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3138 = getelementptr inbounds %struct.DState, %struct.DState* %2206, i32 0, i32 0
  %2207 = load %struct.bz_stream*, %struct.bz_stream** %strm3138, align 8
  %total_in_hi323139 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2207, i32 0, i32 3
  %2208 = load i32, i32* %total_in_hi323139, align 8
  %inc3140 = add i32 %2208, 1
  store i32 %inc3140, i32* %total_in_hi323139, align 8
  br label %if.end3141

if.end3141:                                       ; preds = %if.then3137, %if.end3114
  br label %while.body3094

while.end3142:                                    ; preds = %if.then3098
  %2209 = load i8, i8* %uc, align 1
  %conv3143 = zext i8 %2209 to i32
  %cmp3144 = icmp ne i32 %conv3143, 80
  br i1 %cmp3144, label %if.then3146, label %if.end3147

if.then3146:                                      ; preds = %while.end3142
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end3147:                                       ; preds = %while.end3142
  br label %sw.bb3148

sw.bb3148:                                        ; preds = %if.end3147, %if.end
  %2210 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3149 = getelementptr inbounds %struct.DState, %struct.DState* %2210, i32 0, i32 1
  store i32 46, i32* %state3149, align 8
  br label %while.body3151

while.body3151:                                   ; preds = %if.end3198, %sw.bb3148
  %2211 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3152 = getelementptr inbounds %struct.DState, %struct.DState* %2211, i32 0, i32 8
  %2212 = load i32, i32* %bsLive3152, align 4
  %cmp3153 = icmp sge i32 %2212, 8
  br i1 %cmp3153, label %if.then3155, label %if.end3165

if.then3155:                                      ; preds = %while.body3151
  %2213 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3157 = getelementptr inbounds %struct.DState, %struct.DState* %2213, i32 0, i32 7
  %2214 = load i32, i32* %bsBuff3157, align 8
  %2215 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3158 = getelementptr inbounds %struct.DState, %struct.DState* %2215, i32 0, i32 8
  %2216 = load i32, i32* %bsLive3158, align 4
  %sub3159 = sub nsw i32 %2216, 8
  %shr3160 = lshr i32 %2214, %sub3159
  %and3161 = and i32 %shr3160, 255
  store i32 %and3161, i32* %v3156, align 4
  %2217 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3162 = getelementptr inbounds %struct.DState, %struct.DState* %2217, i32 0, i32 8
  %2218 = load i32, i32* %bsLive3162, align 4
  %sub3163 = sub nsw i32 %2218, 8
  store i32 %sub3163, i32* %bsLive3162, align 4
  %2219 = load i32, i32* %v3156, align 4
  %conv3164 = trunc i32 %2219 to i8
  store i8 %conv3164, i8* %uc, align 1
  br label %while.end3199

if.end3165:                                       ; preds = %while.body3151
  %2220 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3166 = getelementptr inbounds %struct.DState, %struct.DState* %2220, i32 0, i32 0
  %2221 = load %struct.bz_stream*, %struct.bz_stream** %strm3166, align 8
  %avail_in3167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2221, i32 0, i32 1
  %2222 = load i32, i32* %avail_in3167, align 8
  %cmp3168 = icmp eq i32 %2222, 0
  br i1 %cmp3168, label %if.then3170, label %if.end3171

if.then3170:                                      ; preds = %if.end3165
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3171:                                       ; preds = %if.end3165
  %2223 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3172 = getelementptr inbounds %struct.DState, %struct.DState* %2223, i32 0, i32 7
  %2224 = load i32, i32* %bsBuff3172, align 8
  %shl3173 = shl i32 %2224, 8
  %2225 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3174 = getelementptr inbounds %struct.DState, %struct.DState* %2225, i32 0, i32 0
  %2226 = load %struct.bz_stream*, %struct.bz_stream** %strm3174, align 8
  %next_in3175 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2226, i32 0, i32 0
  %2227 = load i8*, i8** %next_in3175, align 8
  %2228 = load i8, i8* %2227, align 1
  %conv3176 = zext i8 %2228 to i32
  %or3177 = or i32 %shl3173, %conv3176
  %2229 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3178 = getelementptr inbounds %struct.DState, %struct.DState* %2229, i32 0, i32 7
  store i32 %or3177, i32* %bsBuff3178, align 8
  %2230 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3179 = getelementptr inbounds %struct.DState, %struct.DState* %2230, i32 0, i32 8
  %2231 = load i32, i32* %bsLive3179, align 4
  %add3180 = add nsw i32 %2231, 8
  store i32 %add3180, i32* %bsLive3179, align 4
  %2232 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3181 = getelementptr inbounds %struct.DState, %struct.DState* %2232, i32 0, i32 0
  %2233 = load %struct.bz_stream*, %struct.bz_stream** %strm3181, align 8
  %next_in3182 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2233, i32 0, i32 0
  %2234 = load i8*, i8** %next_in3182, align 8
  %incdec.ptr3183 = getelementptr inbounds i8, i8* %2234, i32 1
  store i8* %incdec.ptr3183, i8** %next_in3182, align 8
  %2235 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3184 = getelementptr inbounds %struct.DState, %struct.DState* %2235, i32 0, i32 0
  %2236 = load %struct.bz_stream*, %struct.bz_stream** %strm3184, align 8
  %avail_in3185 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2236, i32 0, i32 1
  %2237 = load i32, i32* %avail_in3185, align 8
  %dec3186 = add i32 %2237, -1
  store i32 %dec3186, i32* %avail_in3185, align 8
  %2238 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3187 = getelementptr inbounds %struct.DState, %struct.DState* %2238, i32 0, i32 0
  %2239 = load %struct.bz_stream*, %struct.bz_stream** %strm3187, align 8
  %total_in_lo323188 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2239, i32 0, i32 2
  %2240 = load i32, i32* %total_in_lo323188, align 4
  %inc3189 = add i32 %2240, 1
  store i32 %inc3189, i32* %total_in_lo323188, align 4
  %2241 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3190 = getelementptr inbounds %struct.DState, %struct.DState* %2241, i32 0, i32 0
  %2242 = load %struct.bz_stream*, %struct.bz_stream** %strm3190, align 8
  %total_in_lo323191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2242, i32 0, i32 2
  %2243 = load i32, i32* %total_in_lo323191, align 4
  %cmp3192 = icmp eq i32 %2243, 0
  br i1 %cmp3192, label %if.then3194, label %if.end3198

if.then3194:                                      ; preds = %if.end3171
  %2244 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3195 = getelementptr inbounds %struct.DState, %struct.DState* %2244, i32 0, i32 0
  %2245 = load %struct.bz_stream*, %struct.bz_stream** %strm3195, align 8
  %total_in_hi323196 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2245, i32 0, i32 3
  %2246 = load i32, i32* %total_in_hi323196, align 8
  %inc3197 = add i32 %2246, 1
  store i32 %inc3197, i32* %total_in_hi323196, align 8
  br label %if.end3198

if.end3198:                                       ; preds = %if.then3194, %if.end3171
  br label %while.body3151

while.end3199:                                    ; preds = %if.then3155
  %2247 = load i8, i8* %uc, align 1
  %conv3200 = zext i8 %2247 to i32
  %cmp3201 = icmp ne i32 %conv3200, 144
  br i1 %cmp3201, label %if.then3203, label %if.end3204

if.then3203:                                      ; preds = %while.end3199
  store i32 -4, i32* %retVal, align 4
  br label %save_state_and_return

if.end3204:                                       ; preds = %while.end3199
  %2248 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %2248, i32 0, i32 24
  store i32 0, i32* %storedCombinedCRC, align 4
  br label %sw.bb3205

sw.bb3205:                                        ; preds = %if.end3204, %if.end
  %2249 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3206 = getelementptr inbounds %struct.DState, %struct.DState* %2249, i32 0, i32 1
  store i32 47, i32* %state3206, align 8
  br label %while.body3208

while.body3208:                                   ; preds = %if.end3255, %sw.bb3205
  %2250 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3209 = getelementptr inbounds %struct.DState, %struct.DState* %2250, i32 0, i32 8
  %2251 = load i32, i32* %bsLive3209, align 4
  %cmp3210 = icmp sge i32 %2251, 8
  br i1 %cmp3210, label %if.then3212, label %if.end3222

if.then3212:                                      ; preds = %while.body3208
  %2252 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3214 = getelementptr inbounds %struct.DState, %struct.DState* %2252, i32 0, i32 7
  %2253 = load i32, i32* %bsBuff3214, align 8
  %2254 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3215 = getelementptr inbounds %struct.DState, %struct.DState* %2254, i32 0, i32 8
  %2255 = load i32, i32* %bsLive3215, align 4
  %sub3216 = sub nsw i32 %2255, 8
  %shr3217 = lshr i32 %2253, %sub3216
  %and3218 = and i32 %shr3217, 255
  store i32 %and3218, i32* %v3213, align 4
  %2256 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3219 = getelementptr inbounds %struct.DState, %struct.DState* %2256, i32 0, i32 8
  %2257 = load i32, i32* %bsLive3219, align 4
  %sub3220 = sub nsw i32 %2257, 8
  store i32 %sub3220, i32* %bsLive3219, align 4
  %2258 = load i32, i32* %v3213, align 4
  %conv3221 = trunc i32 %2258 to i8
  store i8 %conv3221, i8* %uc, align 1
  br label %while.end3256

if.end3222:                                       ; preds = %while.body3208
  %2259 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3223 = getelementptr inbounds %struct.DState, %struct.DState* %2259, i32 0, i32 0
  %2260 = load %struct.bz_stream*, %struct.bz_stream** %strm3223, align 8
  %avail_in3224 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2260, i32 0, i32 1
  %2261 = load i32, i32* %avail_in3224, align 8
  %cmp3225 = icmp eq i32 %2261, 0
  br i1 %cmp3225, label %if.then3227, label %if.end3228

if.then3227:                                      ; preds = %if.end3222
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3228:                                       ; preds = %if.end3222
  %2262 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3229 = getelementptr inbounds %struct.DState, %struct.DState* %2262, i32 0, i32 7
  %2263 = load i32, i32* %bsBuff3229, align 8
  %shl3230 = shl i32 %2263, 8
  %2264 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3231 = getelementptr inbounds %struct.DState, %struct.DState* %2264, i32 0, i32 0
  %2265 = load %struct.bz_stream*, %struct.bz_stream** %strm3231, align 8
  %next_in3232 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2265, i32 0, i32 0
  %2266 = load i8*, i8** %next_in3232, align 8
  %2267 = load i8, i8* %2266, align 1
  %conv3233 = zext i8 %2267 to i32
  %or3234 = or i32 %shl3230, %conv3233
  %2268 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3235 = getelementptr inbounds %struct.DState, %struct.DState* %2268, i32 0, i32 7
  store i32 %or3234, i32* %bsBuff3235, align 8
  %2269 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3236 = getelementptr inbounds %struct.DState, %struct.DState* %2269, i32 0, i32 8
  %2270 = load i32, i32* %bsLive3236, align 4
  %add3237 = add nsw i32 %2270, 8
  store i32 %add3237, i32* %bsLive3236, align 4
  %2271 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3238 = getelementptr inbounds %struct.DState, %struct.DState* %2271, i32 0, i32 0
  %2272 = load %struct.bz_stream*, %struct.bz_stream** %strm3238, align 8
  %next_in3239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2272, i32 0, i32 0
  %2273 = load i8*, i8** %next_in3239, align 8
  %incdec.ptr3240 = getelementptr inbounds i8, i8* %2273, i32 1
  store i8* %incdec.ptr3240, i8** %next_in3239, align 8
  %2274 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3241 = getelementptr inbounds %struct.DState, %struct.DState* %2274, i32 0, i32 0
  %2275 = load %struct.bz_stream*, %struct.bz_stream** %strm3241, align 8
  %avail_in3242 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2275, i32 0, i32 1
  %2276 = load i32, i32* %avail_in3242, align 8
  %dec3243 = add i32 %2276, -1
  store i32 %dec3243, i32* %avail_in3242, align 8
  %2277 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3244 = getelementptr inbounds %struct.DState, %struct.DState* %2277, i32 0, i32 0
  %2278 = load %struct.bz_stream*, %struct.bz_stream** %strm3244, align 8
  %total_in_lo323245 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2278, i32 0, i32 2
  %2279 = load i32, i32* %total_in_lo323245, align 4
  %inc3246 = add i32 %2279, 1
  store i32 %inc3246, i32* %total_in_lo323245, align 4
  %2280 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3247 = getelementptr inbounds %struct.DState, %struct.DState* %2280, i32 0, i32 0
  %2281 = load %struct.bz_stream*, %struct.bz_stream** %strm3247, align 8
  %total_in_lo323248 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2281, i32 0, i32 2
  %2282 = load i32, i32* %total_in_lo323248, align 4
  %cmp3249 = icmp eq i32 %2282, 0
  br i1 %cmp3249, label %if.then3251, label %if.end3255

if.then3251:                                      ; preds = %if.end3228
  %2283 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3252 = getelementptr inbounds %struct.DState, %struct.DState* %2283, i32 0, i32 0
  %2284 = load %struct.bz_stream*, %struct.bz_stream** %strm3252, align 8
  %total_in_hi323253 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2284, i32 0, i32 3
  %2285 = load i32, i32* %total_in_hi323253, align 8
  %inc3254 = add i32 %2285, 1
  store i32 %inc3254, i32* %total_in_hi323253, align 8
  br label %if.end3255

if.end3255:                                       ; preds = %if.then3251, %if.end3228
  br label %while.body3208

while.end3256:                                    ; preds = %if.then3212
  %2286 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3257 = getelementptr inbounds %struct.DState, %struct.DState* %2286, i32 0, i32 24
  %2287 = load i32, i32* %storedCombinedCRC3257, align 4
  %shl3258 = shl i32 %2287, 8
  %2288 = load i8, i8* %uc, align 1
  %conv3259 = zext i8 %2288 to i32
  %or3260 = or i32 %shl3258, %conv3259
  %2289 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3261 = getelementptr inbounds %struct.DState, %struct.DState* %2289, i32 0, i32 24
  store i32 %or3260, i32* %storedCombinedCRC3261, align 4
  br label %sw.bb3262

sw.bb3262:                                        ; preds = %while.end3256, %if.end
  %2290 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3263 = getelementptr inbounds %struct.DState, %struct.DState* %2290, i32 0, i32 1
  store i32 48, i32* %state3263, align 8
  br label %while.body3265

while.body3265:                                   ; preds = %if.end3312, %sw.bb3262
  %2291 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3266 = getelementptr inbounds %struct.DState, %struct.DState* %2291, i32 0, i32 8
  %2292 = load i32, i32* %bsLive3266, align 4
  %cmp3267 = icmp sge i32 %2292, 8
  br i1 %cmp3267, label %if.then3269, label %if.end3279

if.then3269:                                      ; preds = %while.body3265
  %2293 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3271 = getelementptr inbounds %struct.DState, %struct.DState* %2293, i32 0, i32 7
  %2294 = load i32, i32* %bsBuff3271, align 8
  %2295 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3272 = getelementptr inbounds %struct.DState, %struct.DState* %2295, i32 0, i32 8
  %2296 = load i32, i32* %bsLive3272, align 4
  %sub3273 = sub nsw i32 %2296, 8
  %shr3274 = lshr i32 %2294, %sub3273
  %and3275 = and i32 %shr3274, 255
  store i32 %and3275, i32* %v3270, align 4
  %2297 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3276 = getelementptr inbounds %struct.DState, %struct.DState* %2297, i32 0, i32 8
  %2298 = load i32, i32* %bsLive3276, align 4
  %sub3277 = sub nsw i32 %2298, 8
  store i32 %sub3277, i32* %bsLive3276, align 4
  %2299 = load i32, i32* %v3270, align 4
  %conv3278 = trunc i32 %2299 to i8
  store i8 %conv3278, i8* %uc, align 1
  br label %while.end3313

if.end3279:                                       ; preds = %while.body3265
  %2300 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3280 = getelementptr inbounds %struct.DState, %struct.DState* %2300, i32 0, i32 0
  %2301 = load %struct.bz_stream*, %struct.bz_stream** %strm3280, align 8
  %avail_in3281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2301, i32 0, i32 1
  %2302 = load i32, i32* %avail_in3281, align 8
  %cmp3282 = icmp eq i32 %2302, 0
  br i1 %cmp3282, label %if.then3284, label %if.end3285

if.then3284:                                      ; preds = %if.end3279
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3285:                                       ; preds = %if.end3279
  %2303 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3286 = getelementptr inbounds %struct.DState, %struct.DState* %2303, i32 0, i32 7
  %2304 = load i32, i32* %bsBuff3286, align 8
  %shl3287 = shl i32 %2304, 8
  %2305 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3288 = getelementptr inbounds %struct.DState, %struct.DState* %2305, i32 0, i32 0
  %2306 = load %struct.bz_stream*, %struct.bz_stream** %strm3288, align 8
  %next_in3289 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2306, i32 0, i32 0
  %2307 = load i8*, i8** %next_in3289, align 8
  %2308 = load i8, i8* %2307, align 1
  %conv3290 = zext i8 %2308 to i32
  %or3291 = or i32 %shl3287, %conv3290
  %2309 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3292 = getelementptr inbounds %struct.DState, %struct.DState* %2309, i32 0, i32 7
  store i32 %or3291, i32* %bsBuff3292, align 8
  %2310 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3293 = getelementptr inbounds %struct.DState, %struct.DState* %2310, i32 0, i32 8
  %2311 = load i32, i32* %bsLive3293, align 4
  %add3294 = add nsw i32 %2311, 8
  store i32 %add3294, i32* %bsLive3293, align 4
  %2312 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3295 = getelementptr inbounds %struct.DState, %struct.DState* %2312, i32 0, i32 0
  %2313 = load %struct.bz_stream*, %struct.bz_stream** %strm3295, align 8
  %next_in3296 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2313, i32 0, i32 0
  %2314 = load i8*, i8** %next_in3296, align 8
  %incdec.ptr3297 = getelementptr inbounds i8, i8* %2314, i32 1
  store i8* %incdec.ptr3297, i8** %next_in3296, align 8
  %2315 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3298 = getelementptr inbounds %struct.DState, %struct.DState* %2315, i32 0, i32 0
  %2316 = load %struct.bz_stream*, %struct.bz_stream** %strm3298, align 8
  %avail_in3299 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2316, i32 0, i32 1
  %2317 = load i32, i32* %avail_in3299, align 8
  %dec3300 = add i32 %2317, -1
  store i32 %dec3300, i32* %avail_in3299, align 8
  %2318 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3301 = getelementptr inbounds %struct.DState, %struct.DState* %2318, i32 0, i32 0
  %2319 = load %struct.bz_stream*, %struct.bz_stream** %strm3301, align 8
  %total_in_lo323302 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2319, i32 0, i32 2
  %2320 = load i32, i32* %total_in_lo323302, align 4
  %inc3303 = add i32 %2320, 1
  store i32 %inc3303, i32* %total_in_lo323302, align 4
  %2321 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3304 = getelementptr inbounds %struct.DState, %struct.DState* %2321, i32 0, i32 0
  %2322 = load %struct.bz_stream*, %struct.bz_stream** %strm3304, align 8
  %total_in_lo323305 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2322, i32 0, i32 2
  %2323 = load i32, i32* %total_in_lo323305, align 4
  %cmp3306 = icmp eq i32 %2323, 0
  br i1 %cmp3306, label %if.then3308, label %if.end3312

if.then3308:                                      ; preds = %if.end3285
  %2324 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3309 = getelementptr inbounds %struct.DState, %struct.DState* %2324, i32 0, i32 0
  %2325 = load %struct.bz_stream*, %struct.bz_stream** %strm3309, align 8
  %total_in_hi323310 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2325, i32 0, i32 3
  %2326 = load i32, i32* %total_in_hi323310, align 8
  %inc3311 = add i32 %2326, 1
  store i32 %inc3311, i32* %total_in_hi323310, align 8
  br label %if.end3312

if.end3312:                                       ; preds = %if.then3308, %if.end3285
  br label %while.body3265

while.end3313:                                    ; preds = %if.then3269
  %2327 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3314 = getelementptr inbounds %struct.DState, %struct.DState* %2327, i32 0, i32 24
  %2328 = load i32, i32* %storedCombinedCRC3314, align 4
  %shl3315 = shl i32 %2328, 8
  %2329 = load i8, i8* %uc, align 1
  %conv3316 = zext i8 %2329 to i32
  %or3317 = or i32 %shl3315, %conv3316
  %2330 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3318 = getelementptr inbounds %struct.DState, %struct.DState* %2330, i32 0, i32 24
  store i32 %or3317, i32* %storedCombinedCRC3318, align 4
  br label %sw.bb3319

sw.bb3319:                                        ; preds = %while.end3313, %if.end
  %2331 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3320 = getelementptr inbounds %struct.DState, %struct.DState* %2331, i32 0, i32 1
  store i32 49, i32* %state3320, align 8
  br label %while.body3322

while.body3322:                                   ; preds = %if.end3369, %sw.bb3319
  %2332 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3323 = getelementptr inbounds %struct.DState, %struct.DState* %2332, i32 0, i32 8
  %2333 = load i32, i32* %bsLive3323, align 4
  %cmp3324 = icmp sge i32 %2333, 8
  br i1 %cmp3324, label %if.then3326, label %if.end3336

if.then3326:                                      ; preds = %while.body3322
  %2334 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3328 = getelementptr inbounds %struct.DState, %struct.DState* %2334, i32 0, i32 7
  %2335 = load i32, i32* %bsBuff3328, align 8
  %2336 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3329 = getelementptr inbounds %struct.DState, %struct.DState* %2336, i32 0, i32 8
  %2337 = load i32, i32* %bsLive3329, align 4
  %sub3330 = sub nsw i32 %2337, 8
  %shr3331 = lshr i32 %2335, %sub3330
  %and3332 = and i32 %shr3331, 255
  store i32 %and3332, i32* %v3327, align 4
  %2338 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3333 = getelementptr inbounds %struct.DState, %struct.DState* %2338, i32 0, i32 8
  %2339 = load i32, i32* %bsLive3333, align 4
  %sub3334 = sub nsw i32 %2339, 8
  store i32 %sub3334, i32* %bsLive3333, align 4
  %2340 = load i32, i32* %v3327, align 4
  %conv3335 = trunc i32 %2340 to i8
  store i8 %conv3335, i8* %uc, align 1
  br label %while.end3370

if.end3336:                                       ; preds = %while.body3322
  %2341 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3337 = getelementptr inbounds %struct.DState, %struct.DState* %2341, i32 0, i32 0
  %2342 = load %struct.bz_stream*, %struct.bz_stream** %strm3337, align 8
  %avail_in3338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2342, i32 0, i32 1
  %2343 = load i32, i32* %avail_in3338, align 8
  %cmp3339 = icmp eq i32 %2343, 0
  br i1 %cmp3339, label %if.then3341, label %if.end3342

if.then3341:                                      ; preds = %if.end3336
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3342:                                       ; preds = %if.end3336
  %2344 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3343 = getelementptr inbounds %struct.DState, %struct.DState* %2344, i32 0, i32 7
  %2345 = load i32, i32* %bsBuff3343, align 8
  %shl3344 = shl i32 %2345, 8
  %2346 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3345 = getelementptr inbounds %struct.DState, %struct.DState* %2346, i32 0, i32 0
  %2347 = load %struct.bz_stream*, %struct.bz_stream** %strm3345, align 8
  %next_in3346 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2347, i32 0, i32 0
  %2348 = load i8*, i8** %next_in3346, align 8
  %2349 = load i8, i8* %2348, align 1
  %conv3347 = zext i8 %2349 to i32
  %or3348 = or i32 %shl3344, %conv3347
  %2350 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3349 = getelementptr inbounds %struct.DState, %struct.DState* %2350, i32 0, i32 7
  store i32 %or3348, i32* %bsBuff3349, align 8
  %2351 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3350 = getelementptr inbounds %struct.DState, %struct.DState* %2351, i32 0, i32 8
  %2352 = load i32, i32* %bsLive3350, align 4
  %add3351 = add nsw i32 %2352, 8
  store i32 %add3351, i32* %bsLive3350, align 4
  %2353 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3352 = getelementptr inbounds %struct.DState, %struct.DState* %2353, i32 0, i32 0
  %2354 = load %struct.bz_stream*, %struct.bz_stream** %strm3352, align 8
  %next_in3353 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2354, i32 0, i32 0
  %2355 = load i8*, i8** %next_in3353, align 8
  %incdec.ptr3354 = getelementptr inbounds i8, i8* %2355, i32 1
  store i8* %incdec.ptr3354, i8** %next_in3353, align 8
  %2356 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3355 = getelementptr inbounds %struct.DState, %struct.DState* %2356, i32 0, i32 0
  %2357 = load %struct.bz_stream*, %struct.bz_stream** %strm3355, align 8
  %avail_in3356 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2357, i32 0, i32 1
  %2358 = load i32, i32* %avail_in3356, align 8
  %dec3357 = add i32 %2358, -1
  store i32 %dec3357, i32* %avail_in3356, align 8
  %2359 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3358 = getelementptr inbounds %struct.DState, %struct.DState* %2359, i32 0, i32 0
  %2360 = load %struct.bz_stream*, %struct.bz_stream** %strm3358, align 8
  %total_in_lo323359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2360, i32 0, i32 2
  %2361 = load i32, i32* %total_in_lo323359, align 4
  %inc3360 = add i32 %2361, 1
  store i32 %inc3360, i32* %total_in_lo323359, align 4
  %2362 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3361 = getelementptr inbounds %struct.DState, %struct.DState* %2362, i32 0, i32 0
  %2363 = load %struct.bz_stream*, %struct.bz_stream** %strm3361, align 8
  %total_in_lo323362 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2363, i32 0, i32 2
  %2364 = load i32, i32* %total_in_lo323362, align 4
  %cmp3363 = icmp eq i32 %2364, 0
  br i1 %cmp3363, label %if.then3365, label %if.end3369

if.then3365:                                      ; preds = %if.end3342
  %2365 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3366 = getelementptr inbounds %struct.DState, %struct.DState* %2365, i32 0, i32 0
  %2366 = load %struct.bz_stream*, %struct.bz_stream** %strm3366, align 8
  %total_in_hi323367 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2366, i32 0, i32 3
  %2367 = load i32, i32* %total_in_hi323367, align 8
  %inc3368 = add i32 %2367, 1
  store i32 %inc3368, i32* %total_in_hi323367, align 8
  br label %if.end3369

if.end3369:                                       ; preds = %if.then3365, %if.end3342
  br label %while.body3322

while.end3370:                                    ; preds = %if.then3326
  %2368 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3371 = getelementptr inbounds %struct.DState, %struct.DState* %2368, i32 0, i32 24
  %2369 = load i32, i32* %storedCombinedCRC3371, align 4
  %shl3372 = shl i32 %2369, 8
  %2370 = load i8, i8* %uc, align 1
  %conv3373 = zext i8 %2370 to i32
  %or3374 = or i32 %shl3372, %conv3373
  %2371 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3375 = getelementptr inbounds %struct.DState, %struct.DState* %2371, i32 0, i32 24
  store i32 %or3374, i32* %storedCombinedCRC3375, align 4
  br label %sw.bb3376

sw.bb3376:                                        ; preds = %while.end3370, %if.end
  %2372 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3377 = getelementptr inbounds %struct.DState, %struct.DState* %2372, i32 0, i32 1
  store i32 50, i32* %state3377, align 8
  br label %while.body3379

while.body3379:                                   ; preds = %if.end3426, %sw.bb3376
  %2373 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3380 = getelementptr inbounds %struct.DState, %struct.DState* %2373, i32 0, i32 8
  %2374 = load i32, i32* %bsLive3380, align 4
  %cmp3381 = icmp sge i32 %2374, 8
  br i1 %cmp3381, label %if.then3383, label %if.end3393

if.then3383:                                      ; preds = %while.body3379
  %2375 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3385 = getelementptr inbounds %struct.DState, %struct.DState* %2375, i32 0, i32 7
  %2376 = load i32, i32* %bsBuff3385, align 8
  %2377 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3386 = getelementptr inbounds %struct.DState, %struct.DState* %2377, i32 0, i32 8
  %2378 = load i32, i32* %bsLive3386, align 4
  %sub3387 = sub nsw i32 %2378, 8
  %shr3388 = lshr i32 %2376, %sub3387
  %and3389 = and i32 %shr3388, 255
  store i32 %and3389, i32* %v3384, align 4
  %2379 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3390 = getelementptr inbounds %struct.DState, %struct.DState* %2379, i32 0, i32 8
  %2380 = load i32, i32* %bsLive3390, align 4
  %sub3391 = sub nsw i32 %2380, 8
  store i32 %sub3391, i32* %bsLive3390, align 4
  %2381 = load i32, i32* %v3384, align 4
  %conv3392 = trunc i32 %2381 to i8
  store i8 %conv3392, i8* %uc, align 1
  br label %while.end3427

if.end3393:                                       ; preds = %while.body3379
  %2382 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3394 = getelementptr inbounds %struct.DState, %struct.DState* %2382, i32 0, i32 0
  %2383 = load %struct.bz_stream*, %struct.bz_stream** %strm3394, align 8
  %avail_in3395 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2383, i32 0, i32 1
  %2384 = load i32, i32* %avail_in3395, align 8
  %cmp3396 = icmp eq i32 %2384, 0
  br i1 %cmp3396, label %if.then3398, label %if.end3399

if.then3398:                                      ; preds = %if.end3393
  store i32 0, i32* %retVal, align 4
  br label %save_state_and_return

if.end3399:                                       ; preds = %if.end3393
  %2385 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3400 = getelementptr inbounds %struct.DState, %struct.DState* %2385, i32 0, i32 7
  %2386 = load i32, i32* %bsBuff3400, align 8
  %shl3401 = shl i32 %2386, 8
  %2387 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3402 = getelementptr inbounds %struct.DState, %struct.DState* %2387, i32 0, i32 0
  %2388 = load %struct.bz_stream*, %struct.bz_stream** %strm3402, align 8
  %next_in3403 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2388, i32 0, i32 0
  %2389 = load i8*, i8** %next_in3403, align 8
  %2390 = load i8, i8* %2389, align 1
  %conv3404 = zext i8 %2390 to i32
  %or3405 = or i32 %shl3401, %conv3404
  %2391 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsBuff3406 = getelementptr inbounds %struct.DState, %struct.DState* %2391, i32 0, i32 7
  store i32 %or3405, i32* %bsBuff3406, align 8
  %2392 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %bsLive3407 = getelementptr inbounds %struct.DState, %struct.DState* %2392, i32 0, i32 8
  %2393 = load i32, i32* %bsLive3407, align 4
  %add3408 = add nsw i32 %2393, 8
  store i32 %add3408, i32* %bsLive3407, align 4
  %2394 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3409 = getelementptr inbounds %struct.DState, %struct.DState* %2394, i32 0, i32 0
  %2395 = load %struct.bz_stream*, %struct.bz_stream** %strm3409, align 8
  %next_in3410 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2395, i32 0, i32 0
  %2396 = load i8*, i8** %next_in3410, align 8
  %incdec.ptr3411 = getelementptr inbounds i8, i8* %2396, i32 1
  store i8* %incdec.ptr3411, i8** %next_in3410, align 8
  %2397 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3412 = getelementptr inbounds %struct.DState, %struct.DState* %2397, i32 0, i32 0
  %2398 = load %struct.bz_stream*, %struct.bz_stream** %strm3412, align 8
  %avail_in3413 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2398, i32 0, i32 1
  %2399 = load i32, i32* %avail_in3413, align 8
  %dec3414 = add i32 %2399, -1
  store i32 %dec3414, i32* %avail_in3413, align 8
  %2400 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3415 = getelementptr inbounds %struct.DState, %struct.DState* %2400, i32 0, i32 0
  %2401 = load %struct.bz_stream*, %struct.bz_stream** %strm3415, align 8
  %total_in_lo323416 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2401, i32 0, i32 2
  %2402 = load i32, i32* %total_in_lo323416, align 4
  %inc3417 = add i32 %2402, 1
  store i32 %inc3417, i32* %total_in_lo323416, align 4
  %2403 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3418 = getelementptr inbounds %struct.DState, %struct.DState* %2403, i32 0, i32 0
  %2404 = load %struct.bz_stream*, %struct.bz_stream** %strm3418, align 8
  %total_in_lo323419 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2404, i32 0, i32 2
  %2405 = load i32, i32* %total_in_lo323419, align 4
  %cmp3420 = icmp eq i32 %2405, 0
  br i1 %cmp3420, label %if.then3422, label %if.end3426

if.then3422:                                      ; preds = %if.end3399
  %2406 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %strm3423 = getelementptr inbounds %struct.DState, %struct.DState* %2406, i32 0, i32 0
  %2407 = load %struct.bz_stream*, %struct.bz_stream** %strm3423, align 8
  %total_in_hi323424 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2407, i32 0, i32 3
  %2408 = load i32, i32* %total_in_hi323424, align 8
  %inc3425 = add i32 %2408, 1
  store i32 %inc3425, i32* %total_in_hi323424, align 8
  br label %if.end3426

if.end3426:                                       ; preds = %if.then3422, %if.end3399
  br label %while.body3379

while.end3427:                                    ; preds = %if.then3383
  %2409 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3428 = getelementptr inbounds %struct.DState, %struct.DState* %2409, i32 0, i32 24
  %2410 = load i32, i32* %storedCombinedCRC3428, align 4
  %shl3429 = shl i32 %2410, 8
  %2411 = load i8, i8* %uc, align 1
  %conv3430 = zext i8 %2411 to i32
  %or3431 = or i32 %shl3429, %conv3430
  %2412 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %storedCombinedCRC3432 = getelementptr inbounds %struct.DState, %struct.DState* %2412, i32 0, i32 24
  store i32 %or3431, i32* %storedCombinedCRC3432, align 4
  %2413 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %state3433 = getelementptr inbounds %struct.DState, %struct.DState* %2413, i32 0, i32 1
  store i32 1, i32* %state3433, align 8
  store i32 4, i32* %retVal, align 4
  br label %save_state_and_return

sw.default:                                       ; preds = %if.end
  call void @BZ2_bz__AssertH__fail(i32 4001)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %save_state_and_return

save_state_and_return:                            ; preds = %sw.epilog, %while.end3427, %if.then3398, %if.then3341, %if.then3284, %if.then3227, %if.then3203, %if.then3170, %if.then3146, %if.then3113, %if.then3089, %if.then3056, %if.then3032, %if.then2999, %if.then2975, %if.then2942, %if.end2919, %if.then2583, %if.then2536, %if.then2521, %if.then2477, %if.then2447, %if.then2413, %if.then2367, %if.then2166, %if.then2153, %if.then2137, %if.then2105, %if.then2061, %if.then2031, %if.then1997, %if.then1951, %if.then1912, %if.then1868, %if.then1838, %if.then1804, %if.then1758, %if.then1605, %if.then1548, %if.then1524, %if.then1483, %if.then1411, %if.then1373, %if.then1344, %if.then1312, %if.then1290, %if.then1255, %if.then1231, %if.then1182, %if.then1099, %if.then1074, %if.then1066, %if.then1028, %if.then972, %if.then916, %if.then865, %if.then809, %if.then753, %if.then697, %if.then641, %if.then611, %if.then578, %if.then555, %if.then522, %if.then499, %if.then466, %if.then443, %if.then410, %if.then387, %if.then354, %if.then331, %if.then293, %if.then269, %if.then256, %if.then230, %if.then194, %if.then172, %if.then139, %if.then116, %if.then83, %if.then60, %if.then37
  %2414 = load i32, i32* %i, align 4
  %2415 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_i3434 = getelementptr inbounds %struct.DState, %struct.DState* %2415, i32 0, i32 40
  store i32 %2414, i32* %save_i3434, align 4
  %2416 = load i32, i32* %j, align 4
  %2417 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_j3435 = getelementptr inbounds %struct.DState, %struct.DState* %2417, i32 0, i32 41
  store i32 %2416, i32* %save_j3435, align 8
  %2418 = load i32, i32* %t, align 4
  %2419 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_t3436 = getelementptr inbounds %struct.DState, %struct.DState* %2419, i32 0, i32 42
  store i32 %2418, i32* %save_t3436, align 4
  %2420 = load i32, i32* %alphaSize, align 4
  %2421 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_alphaSize3437 = getelementptr inbounds %struct.DState, %struct.DState* %2421, i32 0, i32 43
  store i32 %2420, i32* %save_alphaSize3437, align 8
  %2422 = load i32, i32* %nGroups, align 4
  %2423 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nGroups3438 = getelementptr inbounds %struct.DState, %struct.DState* %2423, i32 0, i32 44
  store i32 %2422, i32* %save_nGroups3438, align 4
  %2424 = load i32, i32* %nSelectors, align 4
  %2425 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nSelectors3439 = getelementptr inbounds %struct.DState, %struct.DState* %2425, i32 0, i32 45
  store i32 %2424, i32* %save_nSelectors3439, align 8
  %2426 = load i32, i32* %EOB, align 4
  %2427 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_EOB3440 = getelementptr inbounds %struct.DState, %struct.DState* %2427, i32 0, i32 46
  store i32 %2426, i32* %save_EOB3440, align 4
  %2428 = load i32, i32* %groupNo, align 4
  %2429 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupNo3441 = getelementptr inbounds %struct.DState, %struct.DState* %2429, i32 0, i32 47
  store i32 %2428, i32* %save_groupNo3441, align 8
  %2430 = load i32, i32* %groupPos, align 4
  %2431 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_groupPos3442 = getelementptr inbounds %struct.DState, %struct.DState* %2431, i32 0, i32 48
  store i32 %2430, i32* %save_groupPos3442, align 4
  %2432 = load i32, i32* %nextSym, align 4
  %2433 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nextSym3443 = getelementptr inbounds %struct.DState, %struct.DState* %2433, i32 0, i32 49
  store i32 %2432, i32* %save_nextSym3443, align 8
  %2434 = load i32, i32* %nblockMAX, align 4
  %2435 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblockMAX3444 = getelementptr inbounds %struct.DState, %struct.DState* %2435, i32 0, i32 50
  store i32 %2434, i32* %save_nblockMAX3444, align 4
  %2436 = load i32, i32* %nblock, align 4
  %2437 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_nblock3445 = getelementptr inbounds %struct.DState, %struct.DState* %2437, i32 0, i32 51
  store i32 %2436, i32* %save_nblock3445, align 8
  %2438 = load i32, i32* %es, align 4
  %2439 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_es3446 = getelementptr inbounds %struct.DState, %struct.DState* %2439, i32 0, i32 52
  store i32 %2438, i32* %save_es3446, align 4
  %2440 = load i32, i32* %N, align 4
  %2441 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_N3447 = getelementptr inbounds %struct.DState, %struct.DState* %2441, i32 0, i32 53
  store i32 %2440, i32* %save_N3447, align 8
  %2442 = load i32, i32* %curr, align 4
  %2443 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_curr3448 = getelementptr inbounds %struct.DState, %struct.DState* %2443, i32 0, i32 54
  store i32 %2442, i32* %save_curr3448, align 4
  %2444 = load i32, i32* %zt, align 4
  %2445 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zt3449 = getelementptr inbounds %struct.DState, %struct.DState* %2445, i32 0, i32 55
  store i32 %2444, i32* %save_zt3449, align 8
  %2446 = load i32, i32* %zn, align 4
  %2447 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zn3450 = getelementptr inbounds %struct.DState, %struct.DState* %2447, i32 0, i32 56
  store i32 %2446, i32* %save_zn3450, align 4
  %2448 = load i32, i32* %zvec, align 4
  %2449 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zvec3451 = getelementptr inbounds %struct.DState, %struct.DState* %2449, i32 0, i32 57
  store i32 %2448, i32* %save_zvec3451, align 8
  %2450 = load i32, i32* %zj, align 4
  %2451 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_zj3452 = getelementptr inbounds %struct.DState, %struct.DState* %2451, i32 0, i32 58
  store i32 %2450, i32* %save_zj3452, align 4
  %2452 = load i32, i32* %gSel, align 4
  %2453 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gSel3453 = getelementptr inbounds %struct.DState, %struct.DState* %2453, i32 0, i32 59
  store i32 %2452, i32* %save_gSel3453, align 8
  %2454 = load i32, i32* %gMinlen, align 4
  %2455 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gMinlen3454 = getelementptr inbounds %struct.DState, %struct.DState* %2455, i32 0, i32 60
  store i32 %2454, i32* %save_gMinlen3454, align 4
  %2456 = load i32*, i32** %gLimit, align 8
  %2457 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gLimit3455 = getelementptr inbounds %struct.DState, %struct.DState* %2457, i32 0, i32 61
  store i32* %2456, i32** %save_gLimit3455, align 8
  %2458 = load i32*, i32** %gBase, align 8
  %2459 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gBase3456 = getelementptr inbounds %struct.DState, %struct.DState* %2459, i32 0, i32 62
  store i32* %2458, i32** %save_gBase3456, align 8
  %2460 = load i32*, i32** %gPerm, align 8
  %2461 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %save_gPerm3457 = getelementptr inbounds %struct.DState, %struct.DState* %2461, i32 0, i32 63
  store i32* %2460, i32** %save_gPerm3457, align 8
  %2462 = load i32, i32* %retVal, align 4
  ret i32 %2462
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @makeMaps_d(%struct.DState* %s) #0 {
entry:
  %s.addr = alloca %struct.DState*, align 8
  %i = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %s.addr, align 8
  %0 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  store i32 0, i32* %nInUse, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %inUse = getelementptr inbounds %struct.DState, %struct.DState* %2, i32 0, i32 28
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %conv = trunc i32 %5 to i8
  %6 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %seqToUnseq = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 30
  %7 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse1 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 27
  %8 = load i32, i32* %nInUse1, align 8
  %idxprom2 = sext i32 %8 to i64
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq, i64 0, i64 %idxprom2
  store i8 %conv, i8* %arrayidx3, align 1
  %9 = load %struct.DState*, %struct.DState** %s.addr, align 8
  %nInUse4 = getelementptr inbounds %struct.DState, %struct.DState* %9, i32 0, i32 27
  %10 = load i32, i32* %nInUse4, align 8
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %nInUse4, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  %inc5 = add nsw i32 %11, 1
  store i32 %inc5, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbMakeCodeLengths(i8* %len, i32* %freq, i32 %alphaSize, i32 %maxLen) #0 {
entry:
  %len.addr = alloca i8*, align 8
  %freq.addr = alloca i32*, align 8
  %alphaSize.addr = alloca i32, align 4
  %maxLen.addr = alloca i32, align 4
  %nNodes = alloca i32, align 4
  %nHeap = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %tooLong = alloca i8, align 1
  %heap = alloca [260 x i32], align 16
  %weight = alloca [516 x i32], align 16
  %parent = alloca [516 x i32], align 16
  %zz = alloca i32, align 4
  %tmp = alloca i32, align 4
  %zz47 = alloca i32, align 4
  %yy = alloca i32, align 4
  %tmp48 = alloca i32, align 4
  %zz92 = alloca i32, align 4
  %yy93 = alloca i32, align 4
  %tmp94 = alloca i32, align 4
  %zz170 = alloca i32, align 4
  %tmp171 = alloca i32, align 4
  store i8* %len, i8** %len.addr, align 8
  store i32* %freq, i32** %freq.addr, align 8
  store i32 %alphaSize, i32* %alphaSize.addr, align 4
  store i32 %maxLen, i32* %maxLen.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %alphaSize.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %freq.addr, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp eq i32 %4, 0
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %5 = load i32*, i32** %freq.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2
  %7 = load i32, i32* %arrayidx3, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %7, %cond.false ]
  %shl = shl i32 %cond, 8
  %8 = load i32, i32* %i, align 4
  %add = add nsw i32 %8, 1
  %idxprom4 = sext i32 %add to i64
  %arrayidx5 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom4
  store i32 %shl, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.body

while.body:                                       ; preds = %for.end233, %for.end
  %10 = load i32, i32* %alphaSize.addr, align 4
  store i32 %10, i32* %nNodes, align 4
  store i32 0, i32* %nHeap, align 4
  %arrayidx6 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 0
  store i32 0, i32* %arrayidx6, align 16
  %arrayidx7 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 0
  store i32 0, i32* %arrayidx7, align 16
  %arrayidx8 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 0
  store i32 -2, i32* %arrayidx8, align 16
  store i32 1, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc36, %while.body
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %alphaSize.addr, align 4
  %cmp10 = icmp sle i32 %11, %12
  br i1 %cmp10, label %for.body11, label %for.end38

for.body11:                                       ; preds = %for.cond9
  %13 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %13 to i64
  %arrayidx13 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom12
  store i32 -1, i32* %arrayidx13, align 4
  %14 = load i32, i32* %nHeap, align 4
  %inc14 = add nsw i32 %14, 1
  store i32 %inc14, i32* %nHeap, align 4
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %nHeap, align 4
  %idxprom15 = sext i32 %16 to i64
  %arrayidx16 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom15
  store i32 %15, i32* %arrayidx16, align 4
  %17 = load i32, i32* %nHeap, align 4
  store i32 %17, i32* %zz, align 4
  %18 = load i32, i32* %zz, align 4
  %idxprom17 = sext i32 %18 to i64
  %arrayidx18 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom17
  %19 = load i32, i32* %arrayidx18, align 4
  store i32 %19, i32* %tmp, align 4
  br label %while.cond19

while.cond19:                                     ; preds = %while.body27, %for.body11
  %20 = load i32, i32* %tmp, align 4
  %idxprom20 = sext i32 %20 to i64
  %arrayidx21 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom20
  %21 = load i32, i32* %arrayidx21, align 4
  %22 = load i32, i32* %zz, align 4
  %shr = ashr i32 %22, 1
  %idxprom22 = sext i32 %shr to i64
  %arrayidx23 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom22
  %23 = load i32, i32* %arrayidx23, align 4
  %idxprom24 = sext i32 %23 to i64
  %arrayidx25 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom24
  %24 = load i32, i32* %arrayidx25, align 4
  %cmp26 = icmp slt i32 %21, %24
  br i1 %cmp26, label %while.body27, label %while.end

while.body27:                                     ; preds = %while.cond19
  %25 = load i32, i32* %zz, align 4
  %shr28 = ashr i32 %25, 1
  %idxprom29 = sext i32 %shr28 to i64
  %arrayidx30 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom29
  %26 = load i32, i32* %arrayidx30, align 4
  %27 = load i32, i32* %zz, align 4
  %idxprom31 = sext i32 %27 to i64
  %arrayidx32 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom31
  store i32 %26, i32* %arrayidx32, align 4
  %28 = load i32, i32* %zz, align 4
  %shr33 = ashr i32 %28, 1
  store i32 %shr33, i32* %zz, align 4
  br label %while.cond19

while.end:                                        ; preds = %while.cond19
  %29 = load i32, i32* %tmp, align 4
  %30 = load i32, i32* %zz, align 4
  %idxprom34 = sext i32 %30 to i64
  %arrayidx35 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom34
  store i32 %29, i32* %arrayidx35, align 4
  br label %for.inc36

for.inc36:                                        ; preds = %while.end
  %31 = load i32, i32* %i, align 4
  %inc37 = add nsw i32 %31, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond9

for.end38:                                        ; preds = %for.cond9
  %32 = load i32, i32* %nHeap, align 4
  %cmp39 = icmp slt i32 %32, 260
  br i1 %cmp39, label %if.end, label %if.then

if.then:                                          ; preds = %for.end38
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end38
  br label %while.cond40

while.cond40:                                     ; preds = %while.end190, %if.end
  %33 = load i32, i32* %nHeap, align 4
  %cmp41 = icmp sgt i32 %33, 1
  br i1 %cmp41, label %while.body42, label %while.end193

while.body42:                                     ; preds = %while.cond40
  %arrayidx43 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  %34 = load i32, i32* %arrayidx43, align 4
  store i32 %34, i32* %n1, align 4
  %35 = load i32, i32* %nHeap, align 4
  %idxprom44 = sext i32 %35 to i64
  %arrayidx45 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom44
  %36 = load i32, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  store i32 %36, i32* %arrayidx46, align 4
  %37 = load i32, i32* %nHeap, align 4
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* %nHeap, align 4
  store i32 1, i32* %zz47, align 4
  %38 = load i32, i32* %zz47, align 4
  %idxprom49 = sext i32 %38 to i64
  %arrayidx50 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom49
  %39 = load i32, i32* %arrayidx50, align 4
  store i32 %39, i32* %tmp48, align 4
  br label %while.body52

while.body52:                                     ; preds = %if.end79, %while.body42
  %40 = load i32, i32* %zz47, align 4
  %shl53 = shl i32 %40, 1
  store i32 %shl53, i32* %yy, align 4
  %41 = load i32, i32* %yy, align 4
  %42 = load i32, i32* %nHeap, align 4
  %cmp54 = icmp sgt i32 %41, %42
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %while.body52
  br label %while.end84

if.end56:                                         ; preds = %while.body52
  %43 = load i32, i32* %yy, align 4
  %44 = load i32, i32* %nHeap, align 4
  %cmp57 = icmp slt i32 %43, %44
  br i1 %cmp57, label %land.lhs.true, label %if.end70

land.lhs.true:                                    ; preds = %if.end56
  %45 = load i32, i32* %yy, align 4
  %add58 = add nsw i32 %45, 1
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom59
  %46 = load i32, i32* %arrayidx60, align 4
  %idxprom61 = sext i32 %46 to i64
  %arrayidx62 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom61
  %47 = load i32, i32* %arrayidx62, align 4
  %48 = load i32, i32* %yy, align 4
  %idxprom63 = sext i32 %48 to i64
  %arrayidx64 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom63
  %49 = load i32, i32* %arrayidx64, align 4
  %idxprom65 = sext i32 %49 to i64
  %arrayidx66 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom65
  %50 = load i32, i32* %arrayidx66, align 4
  %cmp67 = icmp slt i32 %47, %50
  br i1 %cmp67, label %if.then68, label %if.end70

if.then68:                                        ; preds = %land.lhs.true
  %51 = load i32, i32* %yy, align 4
  %inc69 = add nsw i32 %51, 1
  store i32 %inc69, i32* %yy, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %land.lhs.true, %if.end56
  %52 = load i32, i32* %tmp48, align 4
  %idxprom71 = sext i32 %52 to i64
  %arrayidx72 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom71
  %53 = load i32, i32* %arrayidx72, align 4
  %54 = load i32, i32* %yy, align 4
  %idxprom73 = sext i32 %54 to i64
  %arrayidx74 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom73
  %55 = load i32, i32* %arrayidx74, align 4
  %idxprom75 = sext i32 %55 to i64
  %arrayidx76 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom75
  %56 = load i32, i32* %arrayidx76, align 4
  %cmp77 = icmp slt i32 %53, %56
  br i1 %cmp77, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end70
  br label %while.end84

if.end79:                                         ; preds = %if.end70
  %57 = load i32, i32* %yy, align 4
  %idxprom80 = sext i32 %57 to i64
  %arrayidx81 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom80
  %58 = load i32, i32* %arrayidx81, align 4
  %59 = load i32, i32* %zz47, align 4
  %idxprom82 = sext i32 %59 to i64
  %arrayidx83 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom82
  store i32 %58, i32* %arrayidx83, align 4
  %60 = load i32, i32* %yy, align 4
  store i32 %60, i32* %zz47, align 4
  br label %while.body52

while.end84:                                      ; preds = %if.then78, %if.then55
  %61 = load i32, i32* %tmp48, align 4
  %62 = load i32, i32* %zz47, align 4
  %idxprom85 = sext i32 %62 to i64
  %arrayidx86 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom85
  store i32 %61, i32* %arrayidx86, align 4
  %arrayidx87 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  %63 = load i32, i32* %arrayidx87, align 4
  store i32 %63, i32* %n2, align 4
  %64 = load i32, i32* %nHeap, align 4
  %idxprom88 = sext i32 %64 to i64
  %arrayidx89 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom88
  %65 = load i32, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  store i32 %65, i32* %arrayidx90, align 4
  %66 = load i32, i32* %nHeap, align 4
  %dec91 = add nsw i32 %66, -1
  store i32 %dec91, i32* %nHeap, align 4
  store i32 1, i32* %zz92, align 4
  %67 = load i32, i32* %zz92, align 4
  %idxprom95 = sext i32 %67 to i64
  %arrayidx96 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom95
  %68 = load i32, i32* %arrayidx96, align 4
  store i32 %68, i32* %tmp94, align 4
  br label %while.body98

while.body98:                                     ; preds = %if.end126, %while.end84
  %69 = load i32, i32* %zz92, align 4
  %shl99 = shl i32 %69, 1
  store i32 %shl99, i32* %yy93, align 4
  %70 = load i32, i32* %yy93, align 4
  %71 = load i32, i32* %nHeap, align 4
  %cmp100 = icmp sgt i32 %70, %71
  br i1 %cmp100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %while.body98
  br label %while.end131

if.end102:                                        ; preds = %while.body98
  %72 = load i32, i32* %yy93, align 4
  %73 = load i32, i32* %nHeap, align 4
  %cmp103 = icmp slt i32 %72, %73
  br i1 %cmp103, label %land.lhs.true104, label %if.end117

land.lhs.true104:                                 ; preds = %if.end102
  %74 = load i32, i32* %yy93, align 4
  %add105 = add nsw i32 %74, 1
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom106
  %75 = load i32, i32* %arrayidx107, align 4
  %idxprom108 = sext i32 %75 to i64
  %arrayidx109 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom108
  %76 = load i32, i32* %arrayidx109, align 4
  %77 = load i32, i32* %yy93, align 4
  %idxprom110 = sext i32 %77 to i64
  %arrayidx111 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom110
  %78 = load i32, i32* %arrayidx111, align 4
  %idxprom112 = sext i32 %78 to i64
  %arrayidx113 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom112
  %79 = load i32, i32* %arrayidx113, align 4
  %cmp114 = icmp slt i32 %76, %79
  br i1 %cmp114, label %if.then115, label %if.end117

if.then115:                                       ; preds = %land.lhs.true104
  %80 = load i32, i32* %yy93, align 4
  %inc116 = add nsw i32 %80, 1
  store i32 %inc116, i32* %yy93, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %land.lhs.true104, %if.end102
  %81 = load i32, i32* %tmp94, align 4
  %idxprom118 = sext i32 %81 to i64
  %arrayidx119 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom118
  %82 = load i32, i32* %arrayidx119, align 4
  %83 = load i32, i32* %yy93, align 4
  %idxprom120 = sext i32 %83 to i64
  %arrayidx121 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom120
  %84 = load i32, i32* %arrayidx121, align 4
  %idxprom122 = sext i32 %84 to i64
  %arrayidx123 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom122
  %85 = load i32, i32* %arrayidx123, align 4
  %cmp124 = icmp slt i32 %82, %85
  br i1 %cmp124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.end117
  br label %while.end131

if.end126:                                        ; preds = %if.end117
  %86 = load i32, i32* %yy93, align 4
  %idxprom127 = sext i32 %86 to i64
  %arrayidx128 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom127
  %87 = load i32, i32* %arrayidx128, align 4
  %88 = load i32, i32* %zz92, align 4
  %idxprom129 = sext i32 %88 to i64
  %arrayidx130 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom129
  store i32 %87, i32* %arrayidx130, align 4
  %89 = load i32, i32* %yy93, align 4
  store i32 %89, i32* %zz92, align 4
  br label %while.body98

while.end131:                                     ; preds = %if.then125, %if.then101
  %90 = load i32, i32* %tmp94, align 4
  %91 = load i32, i32* %zz92, align 4
  %idxprom132 = sext i32 %91 to i64
  %arrayidx133 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom132
  store i32 %90, i32* %arrayidx133, align 4
  %92 = load i32, i32* %nNodes, align 4
  %inc134 = add nsw i32 %92, 1
  store i32 %inc134, i32* %nNodes, align 4
  %93 = load i32, i32* %nNodes, align 4
  %94 = load i32, i32* %n2, align 4
  %idxprom135 = sext i32 %94 to i64
  %arrayidx136 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom135
  store i32 %93, i32* %arrayidx136, align 4
  %95 = load i32, i32* %n1, align 4
  %idxprom137 = sext i32 %95 to i64
  %arrayidx138 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom137
  store i32 %93, i32* %arrayidx138, align 4
  %96 = load i32, i32* %n1, align 4
  %idxprom139 = sext i32 %96 to i64
  %arrayidx140 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom139
  %97 = load i32, i32* %arrayidx140, align 4
  %and = and i32 %97, -256
  %98 = load i32, i32* %n2, align 4
  %idxprom141 = sext i32 %98 to i64
  %arrayidx142 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom141
  %99 = load i32, i32* %arrayidx142, align 4
  %and143 = and i32 %99, -256
  %add144 = add i32 %and, %and143
  %100 = load i32, i32* %n1, align 4
  %idxprom145 = sext i32 %100 to i64
  %arrayidx146 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom145
  %101 = load i32, i32* %arrayidx146, align 4
  %and147 = and i32 %101, 255
  %102 = load i32, i32* %n2, align 4
  %idxprom148 = sext i32 %102 to i64
  %arrayidx149 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom148
  %103 = load i32, i32* %arrayidx149, align 4
  %and150 = and i32 %103, 255
  %cmp151 = icmp sgt i32 %and147, %and150
  br i1 %cmp151, label %cond.true152, label %cond.false156

cond.true152:                                     ; preds = %while.end131
  %104 = load i32, i32* %n1, align 4
  %idxprom153 = sext i32 %104 to i64
  %arrayidx154 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom153
  %105 = load i32, i32* %arrayidx154, align 4
  %and155 = and i32 %105, 255
  br label %cond.end160

cond.false156:                                    ; preds = %while.end131
  %106 = load i32, i32* %n2, align 4
  %idxprom157 = sext i32 %106 to i64
  %arrayidx158 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom157
  %107 = load i32, i32* %arrayidx158, align 4
  %and159 = and i32 %107, 255
  br label %cond.end160

cond.end160:                                      ; preds = %cond.false156, %cond.true152
  %cond161 = phi i32 [ %and155, %cond.true152 ], [ %and159, %cond.false156 ]
  %add162 = add nsw i32 1, %cond161
  %or = or i32 %add144, %add162
  %108 = load i32, i32* %nNodes, align 4
  %idxprom163 = sext i32 %108 to i64
  %arrayidx164 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom163
  store i32 %or, i32* %arrayidx164, align 4
  %109 = load i32, i32* %nNodes, align 4
  %idxprom165 = sext i32 %109 to i64
  %arrayidx166 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom165
  store i32 -1, i32* %arrayidx166, align 4
  %110 = load i32, i32* %nHeap, align 4
  %inc167 = add nsw i32 %110, 1
  store i32 %inc167, i32* %nHeap, align 4
  %111 = load i32, i32* %nNodes, align 4
  %112 = load i32, i32* %nHeap, align 4
  %idxprom168 = sext i32 %112 to i64
  %arrayidx169 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom168
  store i32 %111, i32* %arrayidx169, align 4
  %113 = load i32, i32* %nHeap, align 4
  store i32 %113, i32* %zz170, align 4
  %114 = load i32, i32* %zz170, align 4
  %idxprom172 = sext i32 %114 to i64
  %arrayidx173 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom172
  %115 = load i32, i32* %arrayidx173, align 4
  store i32 %115, i32* %tmp171, align 4
  br label %while.cond174

while.cond174:                                    ; preds = %while.body183, %cond.end160
  %116 = load i32, i32* %tmp171, align 4
  %idxprom175 = sext i32 %116 to i64
  %arrayidx176 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom175
  %117 = load i32, i32* %arrayidx176, align 4
  %118 = load i32, i32* %zz170, align 4
  %shr177 = ashr i32 %118, 1
  %idxprom178 = sext i32 %shr177 to i64
  %arrayidx179 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom178
  %119 = load i32, i32* %arrayidx179, align 4
  %idxprom180 = sext i32 %119 to i64
  %arrayidx181 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom180
  %120 = load i32, i32* %arrayidx181, align 4
  %cmp182 = icmp slt i32 %117, %120
  br i1 %cmp182, label %while.body183, label %while.end190

while.body183:                                    ; preds = %while.cond174
  %121 = load i32, i32* %zz170, align 4
  %shr184 = ashr i32 %121, 1
  %idxprom185 = sext i32 %shr184 to i64
  %arrayidx186 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom185
  %122 = load i32, i32* %arrayidx186, align 4
  %123 = load i32, i32* %zz170, align 4
  %idxprom187 = sext i32 %123 to i64
  %arrayidx188 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom187
  store i32 %122, i32* %arrayidx188, align 4
  %124 = load i32, i32* %zz170, align 4
  %shr189 = ashr i32 %124, 1
  store i32 %shr189, i32* %zz170, align 4
  br label %while.cond174

while.end190:                                     ; preds = %while.cond174
  %125 = load i32, i32* %tmp171, align 4
  %126 = load i32, i32* %zz170, align 4
  %idxprom191 = sext i32 %126 to i64
  %arrayidx192 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom191
  store i32 %125, i32* %arrayidx192, align 4
  br label %while.cond40

while.end193:                                     ; preds = %while.cond40
  %127 = load i32, i32* %nNodes, align 4
  %cmp194 = icmp slt i32 %127, 516
  br i1 %cmp194, label %if.end196, label %if.then195

if.then195:                                       ; preds = %while.end193
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %if.end196

if.end196:                                        ; preds = %if.then195, %while.end193
  store i8 0, i8* %tooLong, align 1
  store i32 1, i32* %i, align 4
  br label %for.cond197

for.cond197:                                      ; preds = %for.inc215, %if.end196
  %128 = load i32, i32* %i, align 4
  %129 = load i32, i32* %alphaSize.addr, align 4
  %cmp198 = icmp sle i32 %128, %129
  br i1 %cmp198, label %for.body199, label %for.end217

for.body199:                                      ; preds = %for.cond197
  store i32 0, i32* %j, align 4
  %130 = load i32, i32* %i, align 4
  store i32 %130, i32* %k, align 4
  br label %while.cond200

while.cond200:                                    ; preds = %while.body204, %for.body199
  %131 = load i32, i32* %k, align 4
  %idxprom201 = sext i32 %131 to i64
  %arrayidx202 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom201
  %132 = load i32, i32* %arrayidx202, align 4
  %cmp203 = icmp sge i32 %132, 0
  br i1 %cmp203, label %while.body204, label %while.end208

while.body204:                                    ; preds = %while.cond200
  %133 = load i32, i32* %k, align 4
  %idxprom205 = sext i32 %133 to i64
  %arrayidx206 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom205
  %134 = load i32, i32* %arrayidx206, align 4
  store i32 %134, i32* %k, align 4
  %135 = load i32, i32* %j, align 4
  %inc207 = add nsw i32 %135, 1
  store i32 %inc207, i32* %j, align 4
  br label %while.cond200

while.end208:                                     ; preds = %while.cond200
  %136 = load i32, i32* %j, align 4
  %conv = trunc i32 %136 to i8
  %137 = load i8*, i8** %len.addr, align 8
  %138 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %138, 1
  %idxprom209 = sext i32 %sub to i64
  %arrayidx210 = getelementptr inbounds i8, i8* %137, i64 %idxprom209
  store i8 %conv, i8* %arrayidx210, align 1
  %139 = load i32, i32* %j, align 4
  %140 = load i32, i32* %maxLen.addr, align 4
  %cmp211 = icmp sgt i32 %139, %140
  br i1 %cmp211, label %if.then213, label %if.end214

if.then213:                                       ; preds = %while.end208
  store i8 1, i8* %tooLong, align 1
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %while.end208
  br label %for.inc215

for.inc215:                                       ; preds = %if.end214
  %141 = load i32, i32* %i, align 4
  %inc216 = add nsw i32 %141, 1
  store i32 %inc216, i32* %i, align 4
  br label %for.cond197

for.end217:                                       ; preds = %for.cond197
  %142 = load i8, i8* %tooLong, align 1
  %tobool = icmp ne i8 %142, 0
  br i1 %tobool, label %if.end219, label %if.then218

if.then218:                                       ; preds = %for.end217
  br label %while.end234

if.end219:                                        ; preds = %for.end217
  store i32 1, i32* %i, align 4
  br label %for.cond220

for.cond220:                                      ; preds = %for.inc231, %if.end219
  %143 = load i32, i32* %i, align 4
  %144 = load i32, i32* %alphaSize.addr, align 4
  %cmp221 = icmp sle i32 %143, %144
  br i1 %cmp221, label %for.body223, label %for.end233

for.body223:                                      ; preds = %for.cond220
  %145 = load i32, i32* %i, align 4
  %idxprom224 = sext i32 %145 to i64
  %arrayidx225 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom224
  %146 = load i32, i32* %arrayidx225, align 4
  %shr226 = ashr i32 %146, 8
  store i32 %shr226, i32* %j, align 4
  %147 = load i32, i32* %j, align 4
  %div = sdiv i32 %147, 2
  %add227 = add nsw i32 1, %div
  store i32 %add227, i32* %j, align 4
  %148 = load i32, i32* %j, align 4
  %shl228 = shl i32 %148, 8
  %149 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %149 to i64
  %arrayidx230 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom229
  store i32 %shl228, i32* %arrayidx230, align 4
  br label %for.inc231

for.inc231:                                       ; preds = %for.body223
  %150 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %150, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond220

for.end233:                                       ; preds = %for.cond220
  br label %while.body

while.end234:                                     ; preds = %if.then218
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbAssignCodes(i32* %code, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
entry:
  %code.addr = alloca i32*, align 8
  %length.addr = alloca i8*, align 8
  %minLen.addr = alloca i32, align 4
  %maxLen.addr = alloca i32, align 4
  %alphaSize.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %vec = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %code, i32** %code.addr, align 8
  store i8* %length, i8** %length.addr, align 8
  store i32 %minLen, i32* %minLen.addr, align 4
  store i32 %maxLen, i32* %maxLen.addr, align 4
  store i32 %alphaSize, i32* %alphaSize.addr, align 4
  store i32 0, i32* %vec, align 4
  %0 = load i32, i32* %minLen.addr, align 4
  store i32 %0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %1 = load i32, i32* %n, align 4
  %2 = load i32, i32* %maxLen.addr, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %alphaSize.addr, align 4
  %cmp2 = icmp slt i32 %3, %4
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %5 = load i8*, i8** %length.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i32, i32* %n, align 4
  %cmp4 = icmp eq i32 %conv, %8
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %9 = load i32, i32* %vec, align 4
  %10 = load i32*, i32** %code.addr, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %11 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %10, i64 %idxprom6
  store i32 %9, i32* %arrayidx7, align 4
  %12 = load i32, i32* %vec, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %vec, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4
  %inc8 = add nsw i32 %13, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  %14 = load i32, i32* %vec, align 4
  %shl = shl i32 %14, 1
  store i32 %shl, i32* %vec, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %15 = load i32, i32* %n, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %n, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbCreateDecodeTables(i32* %limit, i32* %base, i32* %perm, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
entry:
  %limit.addr = alloca i32*, align 8
  %base.addr = alloca i32*, align 8
  %perm.addr = alloca i32*, align 8
  %length.addr = alloca i8*, align 8
  %minLen.addr = alloca i32, align 4
  %maxLen.addr = alloca i32, align 4
  %alphaSize.addr = alloca i32, align 4
  %pp = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %vec = alloca i32, align 4
  store i32* %limit, i32** %limit.addr, align 8
  store i32* %base, i32** %base.addr, align 8
  store i32* %perm, i32** %perm.addr, align 8
  store i8* %length, i8** %length.addr, align 8
  store i32 %minLen, i32* %minLen.addr, align 4
  store i32 %maxLen, i32* %maxLen.addr, align 4
  store i32 %alphaSize, i32* %alphaSize.addr, align 4
  store i32 0, i32* %pp, align 4
  %0 = load i32, i32* %minLen.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %maxLen.addr, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4
  %4 = load i32, i32* %alphaSize.addr, align 4
  %cmp2 = icmp slt i32 %3, %4
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %5 = load i8*, i8** %length.addr, align 8
  %6 = load i32, i32* %j, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i32, i32* %i, align 4
  %cmp4 = icmp eq i32 %conv, %8
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %9 = load i32, i32* %j, align 4
  %10 = load i32*, i32** %perm.addr, align 8
  %11 = load i32, i32* %pp, align 4
  %idxprom6 = sext i32 %11 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %10, i64 %idxprom6
  store i32 %9, i32* %arrayidx7, align 4
  %12 = load i32, i32* %pp, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %pp, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %j, align 4
  %inc8 = add nsw i32 %13, 1
  store i32 %inc8, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %14 = load i32, i32* %i, align 4
  %inc10 = add nsw i32 %14, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %15 = load i32, i32* %i, align 4
  %cmp13 = icmp slt i32 %15, 23
  br i1 %cmp13, label %for.body15, label %for.end20

for.body15:                                       ; preds = %for.cond12
  %16 = load i32*, i32** %base.addr, align 8
  %17 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %17 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %16, i64 %idxprom16
  store i32 0, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body15
  %18 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %18, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  store i32 0, i32* %i, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc31, %for.end20
  %19 = load i32, i32* %i, align 4
  %20 = load i32, i32* %alphaSize.addr, align 4
  %cmp22 = icmp slt i32 %19, %20
  br i1 %cmp22, label %for.body24, label %for.end33

for.body24:                                       ; preds = %for.cond21
  %21 = load i32*, i32** %base.addr, align 8
  %22 = load i8*, i8** %length.addr, align 8
  %23 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %23 to i64
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25
  %24 = load i8, i8* %arrayidx26, align 1
  %conv27 = zext i8 %24 to i32
  %add = add nsw i32 %conv27, 1
  %idxprom28 = sext i32 %add to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %21, i64 %idxprom28
  %25 = load i32, i32* %arrayidx29, align 4
  %inc30 = add nsw i32 %25, 1
  store i32 %inc30, i32* %arrayidx29, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %for.body24
  %26 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %26, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond21

for.end33:                                        ; preds = %for.cond21
  store i32 1, i32* %i, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc43, %for.end33
  %27 = load i32, i32* %i, align 4
  %cmp35 = icmp slt i32 %27, 23
  br i1 %cmp35, label %for.body37, label %for.end45

for.body37:                                       ; preds = %for.cond34
  %28 = load i32*, i32** %base.addr, align 8
  %29 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %29, 1
  %idxprom38 = sext i32 %sub to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %28, i64 %idxprom38
  %30 = load i32, i32* %arrayidx39, align 4
  %31 = load i32*, i32** %base.addr, align 8
  %32 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %32 to i64
  %arrayidx41 = getelementptr inbounds i32, i32* %31, i64 %idxprom40
  %33 = load i32, i32* %arrayidx41, align 4
  %add42 = add nsw i32 %33, %30
  store i32 %add42, i32* %arrayidx41, align 4
  br label %for.inc43

for.inc43:                                        ; preds = %for.body37
  %34 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %34, 1
  store i32 %inc44, i32* %i, align 4
  br label %for.cond34

for.end45:                                        ; preds = %for.cond34
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc52, %for.end45
  %35 = load i32, i32* %i, align 4
  %cmp47 = icmp slt i32 %35, 23
  br i1 %cmp47, label %for.body49, label %for.end54

for.body49:                                       ; preds = %for.cond46
  %36 = load i32*, i32** %limit.addr, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %37 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %36, i64 %idxprom50
  store i32 0, i32* %arrayidx51, align 4
  br label %for.inc52

for.inc52:                                        ; preds = %for.body49
  %38 = load i32, i32* %i, align 4
  %inc53 = add nsw i32 %38, 1
  store i32 %inc53, i32* %i, align 4
  br label %for.cond46

for.end54:                                        ; preds = %for.cond46
  store i32 0, i32* %vec, align 4
  %39 = load i32, i32* %minLen.addr, align 4
  store i32 %39, i32* %i, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc69, %for.end54
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %maxLen.addr, align 4
  %cmp56 = icmp sle i32 %40, %41
  br i1 %cmp56, label %for.body58, label %for.end71

for.body58:                                       ; preds = %for.cond55
  %42 = load i32*, i32** %base.addr, align 8
  %43 = load i32, i32* %i, align 4
  %add59 = add nsw i32 %43, 1
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %42, i64 %idxprom60
  %44 = load i32, i32* %arrayidx61, align 4
  %45 = load i32*, i32** %base.addr, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds i32, i32* %45, i64 %idxprom62
  %47 = load i32, i32* %arrayidx63, align 4
  %sub64 = sub nsw i32 %44, %47
  %48 = load i32, i32* %vec, align 4
  %add65 = add nsw i32 %48, %sub64
  store i32 %add65, i32* %vec, align 4
  %49 = load i32, i32* %vec, align 4
  %sub66 = sub nsw i32 %49, 1
  %50 = load i32*, i32** %limit.addr, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom67 = sext i32 %51 to i64
  %arrayidx68 = getelementptr inbounds i32, i32* %50, i64 %idxprom67
  store i32 %sub66, i32* %arrayidx68, align 4
  %52 = load i32, i32* %vec, align 4
  %shl = shl i32 %52, 1
  store i32 %shl, i32* %vec, align 4
  br label %for.inc69

for.inc69:                                        ; preds = %for.body58
  %53 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %53, 1
  store i32 %inc70, i32* %i, align 4
  br label %for.cond55

for.end71:                                        ; preds = %for.cond55
  %54 = load i32, i32* %minLen.addr, align 4
  %add72 = add nsw i32 %54, 1
  store i32 %add72, i32* %i, align 4
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc87, %for.end71
  %55 = load i32, i32* %i, align 4
  %56 = load i32, i32* %maxLen.addr, align 4
  %cmp74 = icmp sle i32 %55, %56
  br i1 %cmp74, label %for.body76, label %for.end89

for.body76:                                       ; preds = %for.cond73
  %57 = load i32*, i32** %limit.addr, align 8
  %58 = load i32, i32* %i, align 4
  %sub77 = sub nsw i32 %58, 1
  %idxprom78 = sext i32 %sub77 to i64
  %arrayidx79 = getelementptr inbounds i32, i32* %57, i64 %idxprom78
  %59 = load i32, i32* %arrayidx79, align 4
  %add80 = add nsw i32 %59, 1
  %shl81 = shl i32 %add80, 1
  %60 = load i32*, i32** %base.addr, align 8
  %61 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %61 to i64
  %arrayidx83 = getelementptr inbounds i32, i32* %60, i64 %idxprom82
  %62 = load i32, i32* %arrayidx83, align 4
  %sub84 = sub nsw i32 %shl81, %62
  %63 = load i32*, i32** %base.addr, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %64 to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %63, i64 %idxprom85
  store i32 %sub84, i32* %arrayidx86, align 4
  br label %for.inc87

for.inc87:                                        ; preds = %for.body76
  %65 = load i32, i32* %i, align 4
  %inc88 = add nsw i32 %65, 1
  store i32 %inc88, i32* %i, align 4
  br label %for.cond73

for.end89:                                        ; preds = %for.cond73
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @ran() #0 {
entry:
  %lo = alloca i64, align 8
  %hi = alloca i64, align 8
  %test = alloca i64, align 8
  %0 = load i64, i64* @seedi, align 8
  %div = sdiv i64 %0, 127773
  store i64 %div, i64* %hi, align 8
  %1 = load i64, i64* @seedi, align 8
  %rem = srem i64 %1, 127773
  store i64 %rem, i64* %lo, align 8
  %2 = load i64, i64* %lo, align 8
  %mul = mul nsw i64 16807, %2
  %3 = load i64, i64* %hi, align 8
  %mul1 = mul nsw i64 2836, %3
  %sub = sub nsw i64 %mul, %mul1
  store i64 %sub, i64* %test, align 8
  %4 = load i64, i64* %test, align 8
  %cmp = icmp sgt i64 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %test, align 8
  store i64 %5, i64* @seedi, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load i64, i64* %test, align 8
  %add = add nsw i64 %6, 2147483647
  store i64 %add, i64* @seedi, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i64, i64* @seedi, align 8
  %conv = sitofp i64 %7 to float
  %div2 = fdiv float %conv, 0x41E0000000000000
  %conv3 = fpext float %div2 to double
  ret double %conv3
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_init() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %limit = alloca i32, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 3, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.168, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc29, %if.end
  %1 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %1, 3
  br i1 %cmp1, label %for.body, label %for.end30

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %limit2 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %limit2, align 8
  store i32 %3, i32* %limit, align 4
  %4 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom3
  %5 = bitcast %struct.spec_fd_t* %arrayidx4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  %6 = load i32, i32* %limit, align 4
  %7 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %limit7 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 0
  store i32 %6, i32* %limit7, align 8
  %8 = load i32, i32* %limit, align 4
  %add = add nsw i32 %8, 1048576
  %conv = sext i32 %add to i64
  %call8 = call noalias i8* @malloc(i64 %conv) #9
  %9 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %9 to i64
  %arrayidx10 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom9
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10, i32 0, i32 3
  store i8* %call8, i8** %buf, align 8
  %10 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %10 to i64
  %arrayidx12 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom11
  %buf13 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx12, i32 0, i32 3
  %11 = load i8*, i8** %buf13, align 8
  %cmp14 = icmp eq i8* %11, null
  br i1 %cmp14, label %if.then16, label %if.end18

if.then16:                                        ; preds = %for.body
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1.169, i64 0, i64 0))
  call void @exit(i32 0) #11
  unreachable

if.end18:                                         ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc, %if.end18
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %limit, align 4
  %cmp20 = icmp slt i32 %12, %13
  br i1 %cmp20, label %for.body22, label %for.end

for.body22:                                       ; preds = %for.cond19
  %14 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %14 to i64
  %arrayidx24 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom23
  %buf25 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx24, i32 0, i32 3
  %15 = load i8*, i8** %buf25, align 8
  %16 = load i32, i32* %j, align 4
  %idxprom26 = sext i32 %16 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i64 %idxprom26
  store i8 0, i8* %arrayidx27, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body22
  %17 = load i32, i32* %j, align 4
  %add28 = add nsw i32 %17, 1024
  store i32 %add28, i32* %j, align 4
  br label %for.cond19

for.end:                                          ; preds = %for.cond19
  br label %for.inc29

for.inc29:                                        ; preds = %for.end
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end30:                                        ; preds = %for.cond
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_random_load(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %random_text = alloca [32 x [131072 x i8]], align 16
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.170, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc13, %if.end
  %1 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %1, 32
  br i1 %cmp1, label %for.body, label %for.end15

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* @dbglvl, align 4
  %cmp2 = icmp slt i32 5, %2
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.171, i64 0, i64 0), i32 %3)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.end5
  %4 = load i32, i32* %j, align 4
  %cmp7 = icmp slt i32 %4, 131072
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %call9 = call double @ran()
  %mul = fmul double %call9, 2.560000e+02
  %conv = fptosi double %mul to i32
  %conv10 = trunc i32 %conv to i8
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %idxprom
  %6 = load i32, i32* %j, align 4
  %idxprom11 = sext i32 %6 to i64
  %arrayidx12 = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx, i64 0, i64 %idxprom11
  store i8 %conv10, i8* %arrayidx12, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %7 = load i32, i32* %j, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  br label %for.inc13

for.inc13:                                        ; preds = %for.end
  %8 = load i32, i32* %i, align 4
  %inc14 = add nsw i32 %8, 1
  store i32 %inc14, i32* %i, align 4
  br label %for.cond

for.end15:                                        ; preds = %for.cond
  %9 = load i32, i32* @dbglvl, align 4
  %cmp16 = icmp slt i32 4, %9
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %for.end15
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.172, i64 0, i64 0))
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %for.end15
  store i32 0, i32* %i, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc34, %if.end20
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %fd.addr, align 4
  %idxprom22 = sext i32 %11 to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %limit = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 0
  %12 = load i32, i32* %limit, align 8
  %cmp24 = icmp slt i32 %10, %12
  br i1 %cmp24, label %for.body26, label %for.end35

for.body26:                                       ; preds = %for.cond21
  %13 = load i32, i32* %fd.addr, align 4
  %idxprom27 = sext i32 %13 to i64
  %arrayidx28 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom27
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx28, i32 0, i32 3
  %14 = load i8*, i8** %buf, align 8
  %15 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %15 to i64
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext
  %call29 = call double @ran()
  %mul30 = fmul double %call29, 3.200000e+01
  %conv31 = fptosi double %mul30 to i32
  %idxprom32 = sext i32 %conv31 to i64
  %arrayidx33 = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %idxprom32
  %arraydecay = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx33, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 16 %arraydecay, i64 131072, i1 false)
  br label %for.inc34

for.inc34:                                        ; preds = %for.body26
  %16 = load i32, i32* %i, align 4
  %add = add nsw i32 %16, 131072
  store i32 %add, i32* %i, align 4
  br label %for.cond21

for.end35:                                        ; preds = %for.cond21
  %17 = load i32, i32* %fd.addr, align 4
  %idxprom36 = sext i32 %17 to i64
  %arrayidx37 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom36
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx37, i32 0, i32 1
  store i32 1048576, i32* %len, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_load(i32 %num, i8* %filename, i32 %size) #0 {
entry:
  %num.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %fd = alloca i32, align 4
  %rc = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  %0 = load i8*, i8** %filename.addr, align 8
  %call = call i32 (i8*, i32, ...) @open(i8* %0, i32 0)
  store i32 %call, i32* %fd, align 4
  %1 = load i32, i32* %fd, align 4
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** %filename.addr, align 8
  %call1 = call i32* @__errno_location() #13
  %4 = load i32, i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %4) #9
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.173, i64 0, i64 0), i8* %3, i8* %call2)
  call void @exit(i32 0) #11
  unreachable

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %num.addr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 1
  store i32 0, i32* %len, align 4
  %6 = load i32, i32* %num.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom4
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx5, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %size.addr, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %fd, align 4
  %10 = load i32, i32* %num.addr, align 4
  %idxprom7 = sext i32 %10 to i64
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom7
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 3
  %11 = load i8*, i8** %buf, align 8
  %12 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %12 to i64
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext
  %call9 = call i64 @read(i32 %9, i8* %add.ptr, i64 131072)
  %conv = trunc i64 %call9 to i32
  store i32 %conv, i32* %rc, align 4
  %13 = load i32, i32* %rc, align 4
  %cmp10 = icmp eq i32 %13, 0
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body
  br label %for.end

if.end13:                                         ; preds = %for.body
  %14 = load i32, i32* %rc, align 4
  %cmp14 = icmp slt i32 %14, 0
  br i1 %cmp14, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.end13
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = load i8*, i8** %filename.addr, align 8
  %call17 = call i32* @__errno_location() #13
  %17 = load i32, i32* %call17, align 4
  %call18 = call i8* @strerror(i32 %17) #9
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.174, i64 0, i64 0), i8* %16, i8* %call18)
  call void @exit(i32 0) #11
  unreachable

if.end20:                                         ; preds = %if.end13
  %18 = load i32, i32* %rc, align 4
  %19 = load i32, i32* %num.addr, align 4
  %idxprom21 = sext i32 %19 to i64
  %arrayidx22 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom21
  %len23 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx22, i32 0, i32 1
  %20 = load i32, i32* %len23, align 4
  %add = add nsw i32 %20, %18
  store i32 %add, i32* %len23, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %21 = load i32, i32* %rc, align 4
  %22 = load i32, i32* %i, align 4
  %add24 = add nsw i32 %22, %21
  store i32 %add24, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then12, %for.cond
  %23 = load i32, i32* %fd, align 4
  %call25 = call i32 @close(i32 %23)
  br label %while.cond

while.cond:                                       ; preds = %if.end48, %for.end
  %24 = load i32, i32* %num.addr, align 4
  %idxprom26 = sext i32 %24 to i64
  %arrayidx27 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom26
  %len28 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx27, i32 0, i32 1
  %25 = load i32, i32* %len28, align 4
  %26 = load i32, i32* %size.addr, align 4
  %cmp29 = icmp slt i32 %25, %26
  br i1 %cmp29, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %27 = load i32, i32* %size.addr, align 4
  %28 = load i32, i32* %num.addr, align 4
  %idxprom31 = sext i32 %28 to i64
  %arrayidx32 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom31
  %len33 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx32, i32 0, i32 1
  %29 = load i32, i32* %len33, align 4
  %sub = sub nsw i32 %27, %29
  store i32 %sub, i32* %tmp, align 4
  %30 = load i32, i32* %tmp, align 4
  %31 = load i32, i32* %num.addr, align 4
  %idxprom34 = sext i32 %31 to i64
  %arrayidx35 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom34
  %len36 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx35, i32 0, i32 1
  %32 = load i32, i32* %len36, align 4
  %cmp37 = icmp sgt i32 %30, %32
  br i1 %cmp37, label %if.then39, label %if.end43

if.then39:                                        ; preds = %while.body
  %33 = load i32, i32* %num.addr, align 4
  %idxprom40 = sext i32 %33 to i64
  %arrayidx41 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom40
  %len42 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx41, i32 0, i32 1
  %34 = load i32, i32* %len42, align 4
  store i32 %34, i32* %tmp, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %while.body
  %35 = load i32, i32* @dbglvl, align 4
  %cmp44 = icmp slt i32 3, %35
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end43
  %36 = load i32, i32* %tmp, align 4
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.175, i64 0, i64 0), i32 %36)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.end43
  %37 = load i32, i32* %num.addr, align 4
  %idxprom49 = sext i32 %37 to i64
  %arrayidx50 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom49
  %buf51 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx50, i32 0, i32 3
  %38 = load i8*, i8** %buf51, align 8
  %39 = load i32, i32* %num.addr, align 4
  %idxprom52 = sext i32 %39 to i64
  %arrayidx53 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom52
  %len54 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx53, i32 0, i32 1
  %40 = load i32, i32* %len54, align 4
  %idx.ext55 = sext i32 %40 to i64
  %add.ptr56 = getelementptr inbounds i8, i8* %38, i64 %idx.ext55
  %41 = load i32, i32* %num.addr, align 4
  %idxprom57 = sext i32 %41 to i64
  %arrayidx58 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom57
  %buf59 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx58, i32 0, i32 3
  %42 = load i8*, i8** %buf59, align 8
  %43 = load i32, i32* %tmp, align 4
  %conv60 = sext i32 %43 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr56, i8* align 1 %42, i64 %conv60, i1 false)
  %44 = load i32, i32* %tmp, align 4
  %45 = load i32, i32* %num.addr, align 4
  %idxprom61 = sext i32 %45 to i64
  %arrayidx62 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom61
  %len63 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx62, i32 0, i32 1
  %46 = load i32, i32* %len63, align 4
  %add64 = add nsw i32 %46, %44
  store i32 %add64, i32* %len63, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret i32 0
}

declare dso_local i64 @read(i32, i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_read(i32 %fd, i8* %buf, i32 %size) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %2 = load i8*, i8** %buf.addr, align 8
  %3 = load i32, i32* %size.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.176, i64 0, i64 0), i32 %1, i8* %2, i32 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %4, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.177, i64 0, i64 0), i32 %6)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %8 = load i32, i32* %pos, align 8
  %9 = load i32, i32* %fd.addr, align 4
  %idxprom5 = sext i32 %9 to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %10 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %8, %10
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %11 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %11
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.178, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  store i32 -1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end4
  %12 = load i32, i32* %fd.addr, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %13 = load i32, i32* %pos16, align 8
  %14 = load i32, i32* %size.addr, align 4
  %add = add nsw i32 %13, %14
  %15 = load i32, i32* %fd.addr, align 4
  %idxprom17 = sext i32 %15 to i64
  %arrayidx18 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom17
  %len19 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx18, i32 0, i32 1
  %16 = load i32, i32* %len19, align 4
  %cmp20 = icmp sge i32 %add, %16
  br i1 %cmp20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end13
  %17 = load i32, i32* %fd.addr, align 4
  %idxprom22 = sext i32 %17 to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %len24 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 1
  %18 = load i32, i32* %len24, align 4
  %19 = load i32, i32* %fd.addr, align 4
  %idxprom25 = sext i32 %19 to i64
  %arrayidx26 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom25
  %pos27 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx26, i32 0, i32 2
  %20 = load i32, i32* %pos27, align 8
  %sub = sub nsw i32 %18, %20
  store i32 %sub, i32* %rc, align 4
  br label %if.end28

if.else:                                          ; preds = %if.end13
  %21 = load i32, i32* %size.addr, align 4
  store i32 %21, i32* %rc, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %22 = load i8*, i8** %buf.addr, align 8
  %23 = load i32, i32* %fd.addr, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom29
  %buf31 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx30, i32 0, i32 3
  %24 = load i8*, i8** %buf31, align 8
  %25 = load i32, i32* %fd.addr, align 4
  %idxprom32 = sext i32 %25 to i64
  %arrayidx33 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom32
  %pos34 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx33, i32 0, i32 2
  %26 = load i32, i32* %pos34, align 8
  %idxprom35 = sext i32 %26 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %24, i64 %idxprom35
  %27 = load i32, i32* %rc, align 4
  %conv = sext i32 %27 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %arrayidx36, i64 %conv, i1 false)
  %28 = load i32, i32* %rc, align 4
  %29 = load i32, i32* %fd.addr, align 4
  %idxprom37 = sext i32 %29 to i64
  %arrayidx38 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom37
  %pos39 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx38, i32 0, i32 2
  %30 = load i32, i32* %pos39, align 8
  %add40 = add nsw i32 %30, %28
  store i32 %add40, i32* %pos39, align 8
  %31 = load i32, i32* @dbglvl, align 4
  %cmp41 = icmp slt i32 4, %31
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end28
  %32 = load i32, i32* %rc, align 4
  %call44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %32)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end28
  %33 = load i32, i32* %rc, align 4
  store i32 %33, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end45, %if.end12
  %34 = load i32, i32* %retval, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_fread(i8* %buf, i32 %size, i32 %num, i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %num, i32* %num.addr, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %size.addr, align 4
  %3 = load i32, i32* %num.addr, align 4
  %4 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.180, i64 0, i64 0), i8* %1, i32 %2, i32 %3, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %5, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13.181, i64 0, i64 0), i32 %7)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %9 = load i32, i32* %pos, align 8
  %10 = load i32, i32* %fd.addr, align 4
  %idxprom5 = sext i32 %10 to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %11 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %9, %11
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %12 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %12
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.178, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  store i32 -1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end4
  %13 = load i32, i32* %fd.addr, align 4
  %idxprom14 = sext i32 %13 to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %14 = load i32, i32* %pos16, align 8
  %15 = load i32, i32* %size.addr, align 4
  %16 = load i32, i32* %num.addr, align 4
  %mul = mul nsw i32 %15, %16
  %add = add nsw i32 %14, %mul
  %17 = load i32, i32* %fd.addr, align 4
  %idxprom17 = sext i32 %17 to i64
  %arrayidx18 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom17
  %len19 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx18, i32 0, i32 1
  %18 = load i32, i32* %len19, align 4
  %cmp20 = icmp sge i32 %add, %18
  br i1 %cmp20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end13
  %19 = load i32, i32* %fd.addr, align 4
  %idxprom22 = sext i32 %19 to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %len24 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 1
  %20 = load i32, i32* %len24, align 4
  %21 = load i32, i32* %fd.addr, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom25
  %pos27 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx26, i32 0, i32 2
  %22 = load i32, i32* %pos27, align 8
  %sub = sub nsw i32 %20, %22
  %23 = load i32, i32* %size.addr, align 4
  %div = sdiv i32 %sub, %23
  store i32 %div, i32* %rc, align 4
  br label %if.end28

if.else:                                          ; preds = %if.end13
  %24 = load i32, i32* %num.addr, align 4
  store i32 %24, i32* %rc, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %25 = load i8*, i8** %buf.addr, align 8
  %26 = load i32, i32* %fd.addr, align 4
  %idxprom29 = sext i32 %26 to i64
  %arrayidx30 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom29
  %buf31 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx30, i32 0, i32 3
  %27 = load i8*, i8** %buf31, align 8
  %28 = load i32, i32* %fd.addr, align 4
  %idxprom32 = sext i32 %28 to i64
  %arrayidx33 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom32
  %pos34 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx33, i32 0, i32 2
  %29 = load i32, i32* %pos34, align 8
  %idxprom35 = sext i32 %29 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %27, i64 %idxprom35
  %30 = load i32, i32* %rc, align 4
  %conv = sext i32 %30 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %arrayidx36, i64 %conv, i1 false)
  %31 = load i32, i32* %rc, align 4
  %32 = load i32, i32* %size.addr, align 4
  %mul37 = mul nsw i32 %31, %32
  %33 = load i32, i32* %fd.addr, align 4
  %idxprom38 = sext i32 %33 to i64
  %arrayidx39 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom38
  %pos40 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx39, i32 0, i32 2
  %34 = load i32, i32* %pos40, align 8
  %add41 = add nsw i32 %34, %mul37
  store i32 %add41, i32* %pos40, align 8
  %35 = load i32, i32* @dbglvl, align 4
  %cmp42 = icmp slt i32 4, %35
  br i1 %cmp42, label %if.then44, label %if.end47

if.then44:                                        ; preds = %if.end28
  %36 = load i32, i32* %rc, align 4
  %37 = load i32, i32* %size.addr, align 4
  %mul45 = mul nsw i32 %36, %37
  %call46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %mul45)
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %if.end28
  %38 = load i32, i32* %rc, align 4
  store i32 %38, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end47, %if.end12
  %39 = load i32, i32* %retval, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_getc(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.182, i64 0, i64 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %2, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.177, i64 0, i64 0), i32 %4)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %5 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %6 = load i32, i32* %pos, align 8
  %7 = load i32, i32* %fd.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %8 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %6, %8
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %9 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %9
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.178, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  store i32 -1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end4
  %10 = load i32, i32* %fd.addr, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 3
  %11 = load i8*, i8** %buf, align 8
  %12 = load i32, i32* %fd.addr, align 4
  %idxprom16 = sext i32 %12 to i64
  %arrayidx17 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom16
  %pos18 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx17, i32 0, i32 2
  %13 = load i32, i32* %pos18, align 8
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %pos18, align 8
  %idxprom19 = sext i32 %13 to i64
  %arrayidx20 = getelementptr inbounds i8, i8* %11, i64 %idxprom19
  %14 = load i8, i8* %arrayidx20, align 1
  %conv = zext i8 %14 to i32
  store i32 %conv, i32* %rc, align 4
  %15 = load i32, i32* @dbglvl, align 4
  %cmp21 = icmp slt i32 4, %15
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end13
  %16 = load i32, i32* %rc, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %16)
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end13
  %17 = load i32, i32* %rc, align 4
  store i32 %17, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end25, %if.end12
  %18 = load i32, i32* %retval, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_ungetc(i8 zeroext %ch, i32 %fd) #0 {
entry:
  %ch.addr = alloca i8, align 1
  %fd.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i8 %ch, i8* %ch.addr, align 1
  store i32 %fd, i32* %fd.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.183, i64 0, i64 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %2, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.177, i64 0, i64 0), i32 %4)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %5 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %6 = load i32, i32* %pos, align 8
  %cmp5 = icmp sle i32 %6, 0
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.end4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = load i32, i32* %fd.addr, align 4
  %idxprom7 = sext i32 %8 to i64
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom7
  %pos9 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 2
  %9 = load i32, i32* %pos9, align 8
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.184, i64 0, i64 0), i32 %9)
  call void @exit(i32 0) #11
  unreachable

if.end11:                                         ; preds = %if.end4
  %10 = load i32, i32* %fd.addr, align 4
  %idxprom12 = sext i32 %10 to i64
  %arrayidx13 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom12
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx13, i32 0, i32 3
  %11 = load i8*, i8** %buf, align 8
  %12 = load i32, i32* %fd.addr, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %13 = load i32, i32* %pos16, align 8
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %pos16, align 8
  %idxprom17 = sext i32 %dec to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %11, i64 %idxprom17
  %14 = load i8, i8* %arrayidx18, align 1
  %conv = zext i8 %14 to i32
  %15 = load i8, i8* %ch.addr, align 1
  %conv19 = zext i8 %15 to i32
  %cmp20 = icmp ne i32 %conv, %conv19
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end11
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.17.185, i64 0, i64 0))
  call void @exit(i32 0) #11
  unreachable

if.end24:                                         ; preds = %if.end11
  %17 = load i32, i32* @dbglvl, align 4
  %cmp25 = icmp slt i32 4, %17
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end24
  %18 = load i32, i32* %rc, align 4
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %18)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end24
  %19 = load i8, i8* %ch.addr, align 1
  %conv30 = zext i8 %19 to i32
  ret i32 %conv30
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_rewind(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_reset(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %1 = load i8*, i8** %buf, align 8
  %2 = load i32, i32* %fd.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom1
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx2, i32 0, i32 1
  %3 = load i32, i32* %len, align 4
  %conv = sext i32 %3 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 %conv, i1 false)
  %4 = load i32, i32* %fd.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom3
  %len5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx4, i32 0, i32 1
  store i32 0, i32* %len5, align 4
  %5 = load i32, i32* %fd.addr, align 4
  %idxprom6 = sext i32 %5 to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_write(i32 %fd, i8* %buf, i32 %size) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %2 = load i8*, i8** %buf.addr, align 8
  %3 = load i32, i32* %size.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18.186, i64 0, i64 0), i32 %1, i8* %2, i32 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %4, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.187, i64 0, i64 0), i32 %6)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %8 = load i8*, i8** %buf5, align 8
  %9 = load i32, i32* %fd.addr, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %10 = load i32, i32* %pos, align 8
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %8, i64 %idxprom8
  %11 = load i8*, i8** %buf.addr, align 8
  %12 = load i32, i32* %size.addr, align 4
  %conv = sext i32 %12 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx9, i8* align 1 %11, i64 %conv, i1 false)
  %13 = load i32, i32* %size.addr, align 4
  %14 = load i32, i32* %fd.addr, align 4
  %idxprom10 = sext i32 %14 to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom10
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11, i32 0, i32 1
  %15 = load i32, i32* %len, align 4
  %add = add nsw i32 %15, %13
  store i32 %add, i32* %len, align 4
  %16 = load i32, i32* %size.addr, align 4
  %17 = load i32, i32* %fd.addr, align 4
  %idxprom12 = sext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom12
  %pos14 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx13, i32 0, i32 2
  %18 = load i32, i32* %pos14, align 8
  %add15 = add nsw i32 %18, %16
  store i32 %add15, i32* %pos14, align 8
  %19 = load i32, i32* @dbglvl, align 4
  %cmp16 = icmp slt i32 4, %19
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end4
  %20 = load i32, i32* %size.addr, align 4
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %20)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end4
  %21 = load i32, i32* %size.addr, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_fwrite(i8* %buf, i32 %size, i32 %num, i32 %fd) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %num, i32* %num.addr, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %size.addr, align 4
  %3 = load i32, i32* %num.addr, align 4
  %4 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20.188, i64 0, i64 0), i8* %1, i32 %2, i32 %3, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %5, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i32, i32* %fd.addr, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.189, i64 0, i64 0), i32 %7)
  call void @exit(i32 0) #11
  unreachable

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %9 = load i8*, i8** %buf5, align 8
  %10 = load i32, i32* %fd.addr, align 4
  %idxprom6 = sext i32 %10 to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %11 = load i32, i32* %pos, align 8
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 %idxprom8
  %12 = load i8*, i8** %buf.addr, align 8
  %13 = load i32, i32* %size.addr, align 4
  %14 = load i32, i32* %num.addr, align 4
  %mul = mul nsw i32 %13, %14
  %conv = sext i32 %mul to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx9, i8* align 1 %12, i64 %conv, i1 false)
  %15 = load i32, i32* %size.addr, align 4
  %16 = load i32, i32* %num.addr, align 4
  %mul10 = mul nsw i32 %15, %16
  %17 = load i32, i32* %fd.addr, align 4
  %idxprom11 = sext i32 %17 to i64
  %arrayidx12 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom11
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx12, i32 0, i32 1
  %18 = load i32, i32* %len, align 4
  %add = add nsw i32 %18, %mul10
  store i32 %add, i32* %len, align 4
  %19 = load i32, i32* %size.addr, align 4
  %20 = load i32, i32* %num.addr, align 4
  %mul13 = mul nsw i32 %19, %20
  %21 = load i32, i32* %fd.addr, align 4
  %idxprom14 = sext i32 %21 to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %22 = load i32, i32* %pos16, align 8
  %add17 = add nsw i32 %22, %mul13
  store i32 %add17, i32* %pos16, align 8
  %23 = load i32, i32* @dbglvl, align 4
  %cmp18 = icmp slt i32 4, %23
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end4
  %24 = load i32, i32* %num.addr, align 4
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.179, i64 0, i64 0), i32 %24)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end4
  %25 = load i32, i32* %num.addr, align 4
  ret i32 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @spec_putc(i8 zeroext %ch, i32 %fd) #0 {
entry:
  %ch.addr = alloca i8, align 1
  %fd.addr = alloca i32, align 4
  store i8 %ch, i8* %ch.addr, align 1
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %ch.addr, align 1
  %conv = zext i8 %1 to i32
  %2 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.190, i64 0, i64 0), i32 %conv, i32 %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %3, 3
  br i1 %cmp1, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load i32, i32* %fd.addr, align 4
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.187, i64 0, i64 0), i32 %5)
  call void @exit(i32 0) #11
  unreachable

if.end5:                                          ; preds = %if.end
  %6 = load i8, i8* %ch.addr, align 1
  %7 = load i32, i32* %fd.addr, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %8 = load i8*, i8** %buf, align 8
  %9 = load i32, i32* %fd.addr, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %10 = load i32, i32* %pos, align 8
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %pos, align 8
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %8, i64 %idxprom8
  store i8 %6, i8* %arrayidx9, align 1
  %11 = load i32, i32* %fd.addr, align 4
  %idxprom10 = sext i32 %11 to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom10
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11, i32 0, i32 1
  %12 = load i32, i32* %len, align 4
  %inc12 = add nsw i32 %12, 1
  store i32 %inc12, i32* %len, align 4
  %13 = load i8, i8* %ch.addr, align 1
  %conv13 = zext i8 %13 to i32
  ret i32 %conv13
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { argmemonly nounwind willreturn writeonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 11.0.0"}
!1 = !{i32 1, !"wchar_size", i32 4}
