digraph "CFG for 'dm_sample_cond_3' function" {
	label="CFG for 'dm_sample_cond_3' function";

	Node0x55ed6d21ac60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry.dup0:\l  %cmp.dup0 = icmp sgt i32 %condition1, 20\l  br i1 %cmp.dup0, label %if.then.dup0, label %if.else.dup0\l|{<s0>T|<s1>F}}"];
	Node0x55ed6d21ac60:s0 -> Node0x55ed6d21b380;
	Node0x55ed6d21ac60:s1 -> Node0x55ed6d21b400;
	Node0x55ed6d21b400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.else.dup0:                                     \l  br label %if.end.dup2\l}"];
	Node0x55ed6d21b400 -> Node0x55ed6d21b590;
	Node0x55ed6d21b590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end.dup2:                                      \l  %cmp1.dup2 = icmp sgt i32 %condition2, 20\l  br i1 %cmp1.dup2, label %if.then2.dup2, label %if.else3.dup2\l|{<s0>T|<s1>F}}"];
	Node0x55ed6d21b590:s0 -> Node0x55ed6d21b740;
	Node0x55ed6d21b590:s1 -> Node0x55ed6d21b7c0;
	Node0x55ed6d21b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else3.dup2:                                    \l  br label %if.end4.dup2\l}"];
	Node0x55ed6d21b7c0 -> Node0x55ed6d21b950;
	Node0x55ed6d21b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end4.dup2:                                     \l  %y.0.dup2 = phi i32 [ 10, %if.else3.dup2 ], [ 30, %if.then2.dup2 ]\l  %cmp5.dup2 = icmp sgt i32 %condition3, 20\l  br i1 %cmp5.dup2, label %if.then6.dup2, label %if.else8.dup2\l|{<s0>T|<s1>F}}"];
	Node0x55ed6d21b950:s0 -> Node0x55ed6d21bd80;
	Node0x55ed6d21b950:s1 -> Node0x55ed6d21be60;
	Node0x55ed6d21b740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then2.dup2:                                    \l  br label %if.end4.dup2\l}"];
	Node0x55ed6d21b740 -> Node0x55ed6d21b950;
	Node0x55ed6d21be60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else8.dup2:                                    \l  %y.0.dup215 = phi i32 [ %y.0.dup2, %if.end4.dup2 ]\l  br label %if.end10.dup2\l}"];
	Node0x55ed6d21be60 -> Node0x55ed6d21c110;
	Node0x55ed6d21c110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end10.dup2:                                    \l  %m.0.dup2 = phi i32 [ -25, %if.else8.dup2 ], [ 35, %if.then6.dup2 ]\l  %y.0.dup220 = phi i32 [ %y.0.dup213, %if.then6.dup2 ], [ %y.0.dup215,\l... %if.else8.dup2 ]\l  %add13.dup2 = add nsw i32 15, %y.0.dup220\l  %add14.dup2 = add nsw i32 %add13.dup2, %m.0.dup2\l  %call.dup2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str, i64 0, i64 0), i32 %add14.dup2)\l  ret i32 %add14.dup2\l}"];
	Node0x55ed6d21bd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then6.dup2:                                    \l  %y.0.dup213 = phi i32 [ %y.0.dup2, %if.end4.dup2 ]\l  br label %if.end10.dup2\l}"];
	Node0x55ed6d21bd80 -> Node0x55ed6d21c110;
	Node0x55ed6d21b380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.then.dup0:                                     \l  br label %if.end.dup1\l}"];
	Node0x55ed6d21b380 -> Node0x55ed6d234b90;
	Node0x55ed6d234b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end.dup1:                                      \l  %cmp1.dup1 = icmp sgt i32 %condition2, 20\l  br i1 %cmp1.dup1, label %if.then2.dup1, label %if.else3.dup1\l|{<s0>T|<s1>F}}"];
	Node0x55ed6d234b90:s0 -> Node0x55ed6d235030;
	Node0x55ed6d234b90:s1 -> Node0x55ed6d2350b0;
	Node0x55ed6d2350b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else3.dup1:                                    \l  br label %if.end4.dup1\l}"];
	Node0x55ed6d2350b0 -> Node0x55ed6d2351e0;
	Node0x55ed6d2351e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end4.dup1:                                     \l  %y.0.dup1 = phi i32 [ 30, %if.then2.dup1 ], [ 10, %if.else3.dup1 ]\l  %cmp5.dup1 = icmp sgt i32 %condition3, 20\l  br i1 %cmp5.dup1, label %if.then6.dup1, label %if.else8.dup1\l|{<s0>T|<s1>F}}"];
	Node0x55ed6d2351e0:s0 -> Node0x55ed6d235410;
	Node0x55ed6d2351e0:s1 -> Node0x55ed6d235490;
	Node0x55ed6d235030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then2.dup1:                                    \l  br label %if.end4.dup1\l}"];
	Node0x55ed6d235030 -> Node0x55ed6d2351e0;
	Node0x55ed6d235490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else8.dup1:                                    \l  %y.0.dup12 = phi i32 [ %y.0.dup1, %if.end4.dup1 ]\l  br label %if.end10.dup1\l}"];
	Node0x55ed6d235490 -> Node0x55ed6d235740;
	Node0x55ed6d235740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end10.dup1:                                    \l  %m.0.dup1 = phi i32 [ 45, %if.then6.dup1 ], [ -15, %if.else8.dup1 ]\l  %y.0.dup19 = phi i32 [ %y.0.dup12, %if.else8.dup1 ], [ %y.0.dup16,\l... %if.then6.dup1 ]\l  %add13.dup1 = add nsw i32 25, %y.0.dup19\l  %add14.dup1 = add nsw i32 %add13.dup1, %m.0.dup1\l  %call.dup1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str, i64 0, i64 0), i32 %add14.dup1)\l  ret i32 %add14.dup1\l}"];
	Node0x55ed6d235410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then6.dup1:                                    \l  %y.0.dup16 = phi i32 [ %y.0.dup1, %if.end4.dup1 ]\l  br label %if.end10.dup1\l}"];
	Node0x55ed6d235410 -> Node0x55ed6d235740;
}
